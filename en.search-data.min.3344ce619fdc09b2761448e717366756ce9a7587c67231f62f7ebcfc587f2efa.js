'use strict';(function(){const indexCfg={cache:true};indexCfg.doc={id:'id',field:['title','content'],store:['title','href','section'],};const index=FlexSearch.create('balance',indexCfg);window.bookSearchIndex=index;index.add({'id':0,'href':'/posts/thewayweinteractwithcomputerssucks/','title':"The Way We Interact With Computers Sucks.",'section':"Blog",'content':"You are on a page that is a heavy work in progress. I don\u0026rsquo;t necessarily stand by anything I\u0026rsquo;ve written here and this page should effectively be considered not yet published. I have decided to put it up while it is in development to encourage contributions What do you see when you sit down to work? My guess is a desk pressed against a wall, maybe a few shelves, one, maybe two monitors in front of you, and a keyboard and mouse dominating the work area of your desk. How do you access information? Do you simply Google something and if it\u0026rsquo;s not on the first page give up? How do you get reliable information when you have a question? How do you interpret results that you find? How do you store information you\u0026rsquo;ve collected? How do you filter information to get exactly what you\u0026rsquo;re looking for?\nIf you\u0026rsquo;re reading this, I\u0026rsquo;d wager that you\u0026rsquo;ve at least thought about this a little. Maybe you\u0026rsquo;re a Linux user, deep into the tiling window manager rabbit hole. Maybe you already have a fancy keyboard, monitors surrounding you on all sides. But I\u0026rsquo;m here to tell you that no matter how hard you\u0026rsquo;ve tried, what you\u0026rsquo;re using still probably sucks.\nI think we, as individuals and as business, need to invest more in our work spaces, probably well beyond what most people would even consider. I\u0026rsquo;m not talking about adding a third monitor or giving everyone an artistic environment. I\u0026rsquo;m talking about setting up a work environment that\u0026rsquo;s conducive to productivity as instead of merely being the medium on which it takes place, the work environment should actively contribute to finding, accessing, retrieving/storing, consuming, and creating. - where data can be anything: art, documentation, code, whatever.\nHCI? #  Human Computer Interaction or HCI is an interesting topic to me. So many people spend a crazy amount of time in front of a screen , you\u0026rsquo;d think we\u0026rsquo;d have some damn good hardware and software to use while we further deepen the permanent butt-shaped indentation into our seats, but alas, instead most people use À¢ ∞·µò·µà·µà·µâ ≥ Windows.\nBack in late 2018 I wrote the first version of this post and basically everything in there has been restated here but better. Since then I\u0026rsquo;ve talked to many others about this, read many other blog posts, and just generally done a lot of new things with computers and learned a lot, so here\u0026rsquo;s HCI2: Electric Boogaloo.\nChapter 1: The Physical #  Computers aren\u0026rsquo;t just about software, websites, and programs. As the most powerful tool that most people have access to and often one that we spend many hours a day looking at, it makes sense that we make working with that tool comfortable, straight forward, and healthy. In general, we\u0026rsquo;ve mostly sucked at this, and while some things are getting better (monitor resolution) some things have gotten significantly worse (keyboards). Furthermore, the desks we sit at and the air we breathe while working is in need of attention too.\nOur Input Methods Suck. #  What the fuck is this shit?\nWell, this shit is membrane keys. They use a lil' membrane of flexible plastic to make a button that when you press completes a circuit. They feel like mush and generally suck to type on. We can do much, much better:\nOkay, cool, a mechanical keyboard. Now at least each switch is, well, mechanical. There\u0026rsquo;s a spring and actual feedback to your fingers and ears when you hit a key. But the keys are still arranged horrendously and it\u0026rsquo;s not at all fitting for human hands. So\u0026hellip; What next?\nAlright, so this is what I use. For me, this is great. It\u0026rsquo;s still attainable and usable by meme mortals without infinitely deep wallets(1) and using software as it exists today, but I think that\u0026rsquo;s largely still because it\u0026rsquo;s the furthest edge you can go from normal before things start being a royal pain in the ass, and don\u0026rsquo;t get me wrong. It\u0026rsquo;s not that there\u0026rsquo;s not some PITA incurred from using this weird of a keyboard. Switching to a traditional keyboard will always feel weird, other people can\u0026rsquo;t easily use your computer (not sure this is reallllly a downside\u0026hellip;), configuration still basically requires you understand the basics of C programming, and some things that expect keys to be in certain places (games) will often be awkward.\nBut, that\u0026rsquo;s not where I want to go with this blog post. There\u0026rsquo;s plenty of people that have gone on for like 20 pages about how amazing QMK and the Ergodox are, I want to go deeper.\nLet me start by lubing your brain up a little.\nThis is Dasher, a software keyboard using predictive text that should sort of blow your mind. Cool init'? Now, your thoughts probably went something like this\n What the fuck am I looking at? Oh damn that\u0026rsquo;s really cool, I want to try it. Oh, hmm, but honestly even with tons of practice I can still probably type faster on a normal keyboard\u0026hellip;  And Yep, that\u0026rsquo;s about the right conclusion. End of story, let\u0026rsquo;s all go home, blog post over.\nBut wait?\nWhat if \u0026ndash;\u0026gt;insert your preferred mechanical keyboard here\u0026lt;\u0026ndash; wasn\u0026rsquo;t the best possible typing experience? What would something better look like?\nHere is where our story really begins. You have to start asking some questions that sound like you just smoked a bowl, please feel free to read all of the following with the mental voice of a stoned dude saying \u0026ldquo;Like, man, \u0026quot; before each point:\n Why do we even need to type? What is it we want to input in the first place? What makes something good as an input device?  Effectively, Just keep asking Why\u0026rsquo;s and What\u0026rsquo;s until we\u0026rsquo;re at the core of the question.\nSo, let\u0026rsquo;s start at the top:\nQ: Why do we even need to type?\nA: We don\u0026rsquo;t. We can draw, dictate, or use any of a number of other methods. Typing is convenient because it can be kept semi-private, is tactile (assuming you\u0026rsquo;re keeb isn\u0026rsquo;t a üí©), and generally fast enough to keep up with the speed of thought if you know how to touch type.\nQ: What do we want to input in the first place?\nA: Text (in multiple languages), Links, Images, Diagrams, Code, Commands? Dates? Our wandering thoughts? Spur of the moment ideas? Everything. Keyboards happen to be a decent input device for some of these things, and tend to pretty much suck for others. (Come on, make art by typing in RGB values for every pixel. ùêº ùíπùí∂ùìáùëí ùìéùëúùìä)\nQ: What makes something good as an input device?\nA: Now I\u0026rsquo;m asking myself a hard question. It\u0026rsquo;s easy to list off good qualities of the familiar: Tactile, Responsive (low latency), Customizable, No Œ±…Ø∆ô…ØŒ±…æ‘É movements, keeps the users *hands and arms (hmmmm\u0026hellip;) in a natural position, characters laid out well for the users language (and able to be switched live). But how do you get down to the core of this question without just listing traits of \u0026lsquo;goodness\u0026rsquo; in existing things, what actual goals should we strive for. Should it be one unified device? (Hint: Touchscreens are great, but no.) What goals out weigh others? Is ergonomics more important than tactility? Can there even be a defined list that makes an input deice good?\nNo.\nThat\u0026rsquo;s why this topic is so interesting. My hands are not your hands. I play music, make art, write stories (and blog posts) and code. Part of the reason I got an Ergodone keyboard in the first place is because I was starting to experience some nasty hand cramps that were particularly bad if I was switching between guitar and typing a lot. I was willing to try just about anything, which I did. I switched to Dvorak(2), an alternative keyboard layout. That didn\u0026rsquo;t do the trick so I tried the ergodone (still using Dvorak, my layout is here) and haven\u0026rsquo;t looked back. But that\u0026rsquo;s left a few interesting points, ignoring the obvious reason of price, why are people still using something seems to be obviously worse - in a word: Familiarity.\nFrankly, fuck that.\nWe can do so much better. Our phones have auto correct and limited text expansion, why do our beefier systems not do something a thousand times better with their superior on board resources? We could at least make it easier to grab text out of screenshots- But why are we not doing natural language processing so that I can verbally or textually describe to you a graph or math equation without needing to have committed to memory some archaic set of   \\( \\LaTeX \\)  symbol names (3)? Why are so many fields limited to ASCII, or maybe UTF-8, giving us those sweet, sweet emoji üî•üî•üî•üíØüíØüíØüíØ when we could have something that allows text, diagrams, pictures, videos, etc.\nMore than Just the Keyboard: #  Mice and Touch pads and track balls #  Take your hand off your phone screen or mouse for a second and hold your hand in front of your face. Wiggle you fingers, move your wrists. With that last instruction what did you do? Did you rotate your hand, move it up and down, or twist it? Now, consider how each of your fingers possess such fine motor controls. Is a mouse really made to take advantage of this?\nWhat would be better? Clearly pointing with a mouse is actually already pretty good. If you just need more functions a gaming mouse with a plethora of buttons goes a long way, but I think that\u0026rsquo;s more of a stop-gap. What could we do better?\nWell, There\u0026rsquo;s already the Leap Motion\nThe leap motion hardware is basically just two cameras without an infrared filter and some infrared leds.\n The Leap Motion software does an actually really good job of using this information to reconstruct the finger positions in software.\n  and the Lexip 3D mouse - https://www.lexip.co\nNote, This mouse, the Lexip pu94, is a complete disaster and the result of what is effectively a failed kickstarter. The windows drivers are broken, I\u0026rsquo;m currently working on a custom Linux driver for it but like, yeah. Don\u0026rsquo;t buy one.  However, using the Leap for everything would require you hold your hands out to point - something that anybody who ever owned a wii can tell you gets very tiring very quickly - and the Lexip PU94 would be far to awkward to use daily.\nSo, I honestly don\u0026rsquo;t know what the pointing device of the future looks like. Maybe it involves a mix of a mouse, finger tracking, eye control, and joysticks. The use of WiiMotes for projection mapping shows that there is room for using different devices for different kinds of input though.\nAs for issues with current tech, mouse acceleration and touch pad responsiveness, and touch pad dead zone are all big problems and, like, I don\u0026rsquo;t understand how that\u0026rsquo;s a problem in 2020?\nTo give credit where credit is due, there have been minor changes that are trending positive, such as Logitech\u0026rsquo;s MX Master Line with the infinite scroll wheels, and a general trend for reducing latency and increasing customization options of higher-end mice.\nUnfortunately, the drivers for configuring these options are still largely proprietary and anything but standardized, meaning making integration between brands and OS built-in support all but impossible. Of everything listed up to this point, I actually think this is the biggest problem. Without a consistent, extendable interface about the best that can be exposed is awkward hacks where joysticks are mapped as if they\u0026rsquo;re on a full game controller or keys just mapped to a macro of keyboard keys or existing but unused keys like the F13 though F24 keys or scroll lock. This is a massive problem.\nFoot Controllers #  MorningStar MC6, a MIDI foot pedal that\u0026rsquo;s highly customizable and has inputs for connecting analog expression pedals (the green thing on the left). 10/10 recommended\n Stinky Footboard - it\u0026rsquo;s effectively a 4-key mechanical keyboard for your feet. The driver for this product sucks, so I swapped the controller out for a promicro running QMK.\n  And, don\u0026rsquo;t get me wrong, both are great. Being able to use my feet to control my system really allows for a lot of flexibility; however, your feet can only do so fine-grained of control. Unlike keyboards where our fingers are great at hitting a bunch of individual keys, we\u0026rsquo;re better at hitting smaller buttons or controlling pedals (think pressure sensitive like a gas pedal) with our feet. So, with that in mind, you only get a limited number of inputs you can practically control, so those inputs really need to count. That\u0026rsquo;s the problem. They really don\u0026rsquo;t.\nEven with all the power that using QMK gives and all the configuration options exposed in the MC6\u0026rsquo;s config editor, they lack one big thing: Context sensitivity.\nEssentially, if my inputs are limited, there\u0026rsquo;s a limited number of solutions. The MC6 does offer multiple pages of inputs by stepping on two buttons at once to either page up or page down, but that\u0026rsquo;s not as good as just sending messages to the device to let it know that I\u0026rsquo;ve switched what I\u0026rsquo;m doing and that it should switch it\u0026rsquo;s active page/profile/whatever accordingly, the problem there is that has to be set up manually. With context sensitivity in theory devices could change the way they behave to be optimal for what you\u0026rsquo;re working on. Right now I have the Stinky Footboard set to control media playback (‚èØÔ∏è, ‚è≠Ô∏è, ‚èÆÔ∏è, üîá) but that\u0026rsquo;s currently all it is set to, and that seem like a bit of a waste. Sure, I could set up multiple profiles, but without them being context aware that\u0026rsquo;s a bit of a moot point. And, alright, I think the original driver software for it as well as the software for most of my \u0026lsquo;gaming\u0026rsquo; peripherals supports checking what the running program is, but that seems like a really bad solution and instead should be something the OS handles by letting the devices send generic button up/down events and doing ALL of the mapping in software.\nThe other relevant point would be the ability for inter-peripheral communication - basically, your mouse should be able to \u0026lsquo;talk\u0026rsquo; to your keyboard and vis-versa. This becomes a bit redundant if as mentioned above all the mapping and meaning of buttons is defined in software, but the point would be that a key-combo could change your mouse\u0026rsquo;s DPI, or holding a button on your mouse could put your keyboard into a one-handed mode.\nPen Tablets #  Honestly, most pen tablets are reasonably good. Not all of them have great latency, map super well between the pen\u0026rsquo;s nibb and the actual pointer on the screen, and the majority don\u0026rsquo;t support touch, which probably isn\u0026rsquo;t ideal, but in general they do the job well enough, or, would, if you only counted teh hardware.\nWarning, the following is a rant about drivers on Windows: This is interesting as the hardware is actually reasonably competent, while the software is largely so incredibly god awful that it is somehow impressive. While I realize this is totally anecdotal, one pen tablet I\u0026rsquo;ve used on Windows the driver software is so bad that it actually randomly takes over as the focused application about once every 15 minutes, meaning whatever line you were in the middle of drawing just stops and you have to click on the program again to keep going. But, like, even with more competent driver stacks there\u0026rsquo;s like a 6 different options for pen pressure: Wintab, Windows Ink, the option to \u0026lsquo;Use the device as a mouse pointer\u0026rsquo; \u0026hellip; It\u0026rsquo;s so incredibly confusing and the required options per application vary wildly. To make matters worse, most of the drivers completely shit themselves if one display is scaled for HiDPI and another isn\u0026rsquo;t. On Linux, ironically, I\u0026rsquo;ve actually had very good luck with pen tablets.\nBut even then most don\u0026rsquo;t handle pressure in a way that\u0026rsquo;s customization in a good way, instead relying on software to do pressure-mapping, which just isn\u0026rsquo;t great. It\u0026rsquo;s often a serious pain in the ass to get it set ùò´ùò∂ùò¥ùòµ ùò≥ùò™ùò®ùò©ùòµ so that you don\u0026rsquo;t get crazy pressure jumps and even if the driver has in-driver calibration, you still usually have to tweak it more in the specific art/drawing/art application so now you have TWO pressure maps and it begins to feel like trying to balance a double pendulum.\nI do still think there\u0026rsquo;s more room for improvement in the hardware too. I think Microsoft\u0026rsquo;s Surface Studio 2 actually had some really interesting and innovative ideas albeit it\u0026rsquo;s a weee bit on the expensive side at 3,500 USD. I also think the HP Sprout did some really neat things too. Unfortunately, I highly suspect both will suffer from poor long term support.\nI also think there\u0026rsquo;s room to allow for workflows that rely more on the physical, possibly something like Dynamic Land or even just the iskn Slate or Repaper (Note, I tried the slate and it really, really sucked. But the idea was interesting.)\nAudio And Video #  Your webcam is shit. You know how I know? Because it\u0026rsquo;s a webcam. Even the everybody\u0026rsquo;s go-to, the Logitcech C920, is shit(8). You know what else is shit? Your microphone. When you type on a laptop it sounds like damn earthquake, and if you get comfortable and lean back in your chair you suddenly get quiet. But more than anything it sounds like I\u0026rsquo;m carry a call over cans on a string. Maybe you have a gamer headset. Cool, the boom mic sounds about as good somebody screaming through a cardboard tube.\nBut, better cameras do exist, and if you are willing to shell out the cash you can get a decent mic, but either way they have a problem.\nThe default settings are still shit.\nOn webcams you have auto-white balance, auto-focus, auto-gain, etc. and everything it tries to do is awful. On a laptop where it will legitimately be in a different setting regularly, that\u0026rsquo;s some-what forgivable, but on a desktop webcam? Like, the only variable here is if there\u0026rsquo;s a window letting light in. Make calibration easy and give me a white-balance slider. Please. Or just make better cameras and let the open source community make better drivers. I assure you there are plenty of rage-filled nerds willing to make your product not suck so hard.\nYour mic is also shit for the same reason. When doing audio mixing for a video or podcast there\u0026rsquo;s some basic things that will almost always be in the mix chain: A noise supressor, A De-Esser, A Compressor (or multiple), and an Equalizer. For the most part, the settings on these things can be determined pretty algorithmically, or, better, a database of settings for hardware can be created and maintained - You\u0026rsquo;d still need to adjust for your voice (particularly for if you have a low or high pitch voice) but it could massively help.\nIf you have gone out and gotten an expensive mic or audio interface to plug you mic into, you may have decided to get one that connects to the computer and is powered by USB. This is really, really dumb. I think every audio device I\u0026rsquo;ve ever used that connects via USB has had some sort of noise issues because of the USB power. Stop it. Isolate the power and use a real power supply and some real filtering. Please.\nThough, probably the most obnoxious thing that results from this is the inability to route audio in any reasonable way. Linux and Mac it seems have this done semi-well, Mac with Core Audio and Linux with Jack, but on Windows if you want to use a nice mic to talk on VOIP you better hook up your mic on the the first input on the audio interface or you\u0026rsquo;re shit outta' luck my friend.\nI\u0026rsquo;ll expand on this thought later, down in the Your Audio Sucks Section.\nFinally, nobody has ever wanted their notifications to show up when sharing their screen. Why are notifications not deemed as a sort of \u0026lsquo;draw over\u0026rsquo; element by default?\nApplication Specific Controllers (MIDI Controllers, Video Editing, etc) #  First of all, this is done in a stupid way in most circumstances(9). There is no reason you should have single use hardware that sends specific commands that are not programmable by the user. Like I said above, let\u0026rsquo;s do all the mapping in software. This lets features be added later and users make better use of their controllers.\nBut, let\u0026rsquo;s look at some of what exists, and why I\u0026rsquo;m saying this. While other devices exist to pick on, I\u0026rsquo;m gong to focus on MIDI controllers as they\u0026rsquo;re what I know.\nFirst though, for those unfamiliar, what is a MIDI controller? MIDI, or Musical Instrument Digital Interface is a bloody ancient standard that\u0026rsquo;s still (mostly) 7-bit and let\u0026rsquo;s you send control messages about actions on a controller made for music, often a piano keyboard, so, something like Key C4 Down, Velocity 8 or twisting a knob may be on a MIDI Control Channel (CC) and will be like CC43 changed to 127. Obviously in 2020 having a 7 bit standard is a bit archaic, and it\u0026rsquo;s a rather stupid that it\u0026rsquo;s taken until earlier this year for the improved MIDI 2.0 standard to even be ratified, but I digress.\nMIDI controllers come in all shapes and sizes, from a grid of RGB buttons to traditional keyboards to just a large array of knobs, so, naturally people took notice, and MIDI can therefore be used to control things it was never, ever meant for. People often try to use it to control video editors, 3D modeling software, and generally anything that Adobe(10) makes.\n Pictured here are the Novation Launch Key MkII (The big keyboard), Launhpad MkII (the 8x8 grid), the Roli Seaboard Block, and two Roli Lightpad Blocks. (11) The Roli equipment uses MPE, a \u0026lsquo;standard\u0026rsquo; that abuses the hell out of midi and does things with it that were never intended.\n So now we have a crazy amount of controllers using a shitty standard instead of something that actually exposes more data and allows for finer control being used in ways that abuse the protocol instead of just exposing raw button down/up events and knob twists to the OS.\nNote, I\u0026rsquo;m being careful to say button up and down events instead of button press. This is because it makes a lot more sense to exrpess the events as raw as possible so the OS can do things like detect a double-press, long-hold, etc.\nVoice Control #  The first thing I want to point out is how incredibly English centric voice control is. I only speak English so I lack any more to say on the subject, but come on.\nNext, why can my phone do voice control but my computer either can\u0026rsquo;t or just really sucks at it. I know you can use OkGoogle from Chome, That Cortanna is a thing, and that there\u0026rsquo;s multiple open source projects that implement voice control. But, they all sorta suck. None of them can do much beyond just setting a timer or working with a limited set of supported applications in a way that fails more often than not.\nIf anything, I think Alexa is a bit ahead of the curve on this making it semi-easy to add custom actions, but does anybody actually have Alexa For PCs installed on Windows?\nI want voice control that can actually -do- something. Not 15 competing standards. It\u0026rsquo;s okay if they all implement the same standard protocol, but unless there\u0026rsquo;s a standard that all programs can start tieing into and it\u0026rsquo;s given real, time saving capabilities nobody will use it. This mostly comes down to needing much, much better natural language processing - something that GTP-3 has shown is possible - and having a way for applications to define accessible inputs and outputs. Think the Unix Philosophy where things can be piped and IO redirected but applied to larger applications and controlled via voice or text entry.\nObject Tracking #  What if everything you did was an actionable input? What if you could finger-drum on your desk and get real drum sounds, have your computer pause a video if you get out of you chair, or give the user a warning if they\u0026rsquo;ve been sitting with a bad posture for a long time? Between the Kinect, Leap Motion, and Tobii Eye Tracking we\u0026rsquo;re staring to get close to this.\nI think https://dynamicland.org has a lot of interesting thoughts on this idea and if this vision of the future interests you, you should check it out. ReacTable is another interesting concept in the relm of pyhsical computing too.\nI do think in the future we\u0026rsquo;ll stop using the basic screen + keyboard + mouse combo and see more \u0026lsquo;smarts\u0026rsquo; integrated into everyday things and our work flows. I really like the idea of having a desk with a camera and projector above it to highlight objects and interact with what it can see- scanning documents, giving feedback on technique with crafts, whatever.\nGame Controllers #  Re everything above. Something something make sure they\u0026rsquo;re rechargeable, ergonomic, and simply fun to use. My award for Not Sucking‚Ñ¢ goes to the Steam Controller and my award for Best For People With Three Hands‚Ñ¢ goes to the N64 Controller.\nRFID Tags #  I have RFID tags from Dangerous Things in each hand, I have an RFID based access card for my University, and my parking lot uses RFID tags for entry. Ignoring the obvious security problems with RFID authentication, It\u0026rsquo;s also just not great to have people carry around a card when their phones can already act as an RFID device anyway, it just makes for a very mis-placeable access token which seems rather stupid. I\u0026rsquo;ll talk authentication more in a bit.\nDocument Scanners #  I will not take this opportunity to rant about printers, no matter how much I want to.\nTo keep this short: Higher default DPI, options to output via OCR (Optical Character Recognition) directly to the document so you don\u0026rsquo;t have to even store the original document, built in de-noising (remove the dust specs), live scanning of paper via camera for things like helping with math.\nWhat\u0026rsquo;s worse is half this shit already exists, and it is shit. #  Want to look up  \\( \\LaTeX \\)  Symbols? Done. Want to have Optical Character Recognition on your screenshots? Textshot has that covered. But while I could go on with this list, the big problem is of integration While having an OS like Linux that is tweakabe to the nth degree is unmistakably fucking incredible. I also shouldn\u0026rsquo;t have to. I should be able to use any computer and trust the OS to have built in methods for getting text from a picture, to trust the OS will let me remap keys so that tapping the shift keys types perentheses or that I can bind the keys to type arbitrary Unicode. The OS should have a local - don\u0026rsquo;t you fucking dare collect all of this data - store of everything I\u0026rsquo;ve looked at so I can go back and search for \u0026ldquo;mostly purple images\u0026rdquo; or \u0026ldquo;links clicked on October 12th\u0026rdquo;. And like, there\u0026rsquo;s about a dozen different chrome extensions that try to do this under the very stupid assumption that essentially all of that interaction will be in browser.\nOur Physical Environments Suck #  Your Chair Sucks #  Did you get a gaming, racing chair that cost about $100 off of ebay? Yeah, you\u0026rsquo;ll regret that one soon enough.\nEven if you got a normal office chair, if it wasn\u0026rsquo;t exorbitantly expensive it probably sucks. I did like two weeks of stressing about finding something good and thankfully finally got a good recommendation from a friend, but otherwise it\u0026rsquo;s like $500 SteelCase chair or having a bolt poke though the butt-foam until it\u0026rsquo;s leaving a permanent indentation into your butt.\nIt\u0026rsquo;s not like we even need innovation here, (as proven by the influx of hot garbage \u0026lsquo;gaming\u0026rsquo; chairs) we just need something affordable that\u0026rsquo;s not garbage or plagued by fake reviews or reviews from another product attached to the new listing (Fix your shit amazon.)\n The chair on the right is the one my friend recommended, here\u0026rsquo;s a link to it on Amazon\n    But, I\u0026rsquo;m here to talk about the future, so what do I think can be better than anything I\u0026rsquo;ve even seen? Well, a good start would be threshold latches. Nicer office chairs often have a lock for allowing leaning back or not, but it\u0026rsquo;d be great if it was \u0026lsquo;locked\u0026rsquo; until a pressure threshold so you can lean back and stretch without un-locking and necessitating re-adjusting the chair, a sort of temporary unlock done by just leaning back harder.\nBut the biggest reason your chair sucks? It\u0026rsquo;s a chair. I\u0026rsquo;m not advocating for a treadmill desk, or sitting on one of those big ball things, I\u0026rsquo;m simply saying having the only reasonable way of interacting with our second-brains being in a seated, unmoving position does nasty things to our bodies. While it would make more sense to adapt our peripherals and input methods, it\u0026rsquo;s worth considering how we may re-shape our seats to work with us. A little while ago \u0026ldquo;I built a lay down desk\u0026rdquo; was trending on Hacker News, and it\u0026rsquo;s something I\u0026rsquo;d considered before too, but I want to think bigger: What if our desk and chair acted as one piece of furniture, one that was flexible between sitting, laying, and standing positions, and the chair bent to an appropiate shape to match the position of the desk? Design doesn\u0026rsquo;t have to be static.\nYour Desk Sucks #  or \u0026lsquo;why the fuck is it so hard to find a deep desk with a keyboard tray\u0026rsquo;\nI\u0026rsquo;ve gone though wayyyy to many desks. What I\u0026rsquo;m currently using is a nice big un' with a surface that is 5' x 2'4\u0026rdquo; and it\u0026rsquo;s still. not. big. enough. (for reference, a \u0026lsquo;normal\u0026rsquo; cheap desk seems to be ~3' x 1'8\u0026quot;). So I\u0026rsquo;ve had to put two desks in an L-shape.\nI know that I can pick from pleanty of L or U shaped desks on amazon, but most will be seriously lacking in depth and be less than study, so my 2-desk concoction is the best I can do without making one- which I do intend to do at some point.\nAnd, alright, I admit, I\u0026rsquo;m not a typical computer user. I have enough devices hooked up that lsusb gives me 28 lines of output, I have 3 monitors + a pen display, and my desk is also home to a whole host of lab equipment, a eurorack setup, and other various things.\nSure, It does actually have a decent sized keyboard tray unlike most where they just expect you to put the keyboard and mouse on top of the desk like some sort of monster, but that tray is still on the small side if I were to use a normal full size keyboard (with numberpad). Worse, if I use a normal keyboard my hands tend to hit the sides of the keyboard tray (where the slides attach). I\u0026rsquo;ve seen a ton of wooden desks with this issue. Just move the rails back like 2 inches and angle it. Please. A lot of desks also skimp on the height of keyboard that can fit in the tray. This is a fair trade off, as the better this is the closer it is to your legs when sitting, but still, I\u0026rsquo;ve seen multiple where the feet on the keyboard can\u0026rsquo;t be raised to make typing more comfortable otherwise the keyboard tray can\u0026rsquo;t be closed. My desk actually sits in a pretty good sweet spot on this, but\u0026hellip;\nI still think my desk sorta sucks.\nHear me out. First of all, I have a bad knee. Not like I\u0026rsquo;m walking around with a cane bad, but more like if I sit in one position for more than ~20 minutes and then move it I get a sharp pain like someone just drove a hot knife directly into it, but it only lasts a second. Yunno' what would be a major help with that? A sit / stand desk (height adjustable) desk.\nBut that won\u0026rsquo;t work for me, and probably a lot of other nerds reading this for one big reason. Wire. Hell. Like, maybe you\u0026rsquo;re thinking \u0026ldquo;Pssh, what, so you have like a dozen cables down there, power, display, USB mouse/keeb, and audio\u0026rdquo;\nHa. No.\nI won\u0026rsquo;t try to list it out, but Oh. My. God. A sit stand desk wouldn\u0026rsquo;t be possible because that wire hell is truly untameable in it\u0026rsquo;s current state, so, we\u0026rsquo;re gonna take a brief detour from the desk stuff:\nYou Are Now Entering: The Cable Abyss.\nI could rant to you about how USB-C with it\u0026rsquo;s 42 different standards is a god damn nightmare, and that\u0026rsquo;d even be pretty relevant here. But that\u0026rsquo;s not the rabbit hole I want to fall down right now, instead I want to introduce you to my friend, MIDI.\nMIDI Is a fucking shit of a standard. It\u0026rsquo;s 7 bit, ancient, and the \u0026lsquo;standard\u0026rsquo; (4) cable for it has (·µà·µâ·µñ·µâ‚Åø·µà·∂¶‚Åø·µç ·µí‚Åø  ∞·µí ∑  ∏·µí·µò À°·µí·µí·µè ·µÉ·µó ·∂¶·µó) 3 more pins than it even uses. By all metrics it fucking sucks. However, They did do one thing right.\nThis beautiful port:\nImage ¬© Shira Wolven 2020, used with permission This, is a midi through. On most gear, it\u0026rsquo;s accompanied by (at least) a MIDI IN, so, you can take your MIDI info in, and then, because a single midi cable carries 16 channels, chain other gear on.\nFrom this, To This. +--------+ +------\u0026gt;Device 1| | +--------+ | +----------+ +--------+ +----------+ +--------+ +--------+ +--------+ |Controller+----\u0026gt;Device 2| +-----\u0026gt; |Controller+---\u0026gt;Device 1+---\u0026gt;Device 2+---\u0026gt;Device 3| +----------+ +--------+ +----------+ +--------+ +--------+ +--------+ | | +--------+ +------\u0026gt;Device 3| +--------+ And, okay, so what? Well, I\u0026rsquo;ll tell you what. This is rad as hell. I currently have 3 6' Display Port cables running from my desktop on the floor up to my displays on my desk. The monitors are 4k and get pissy if I go over a 6' cable, so with my tower on my right, the left-most monitor has to have this perfectly 45' cable making the connection, so I can\u0026rsquo;t even organize the cables in the first place. But what if I could just route all of that to one monitor then piggy-back each one going forward?\nI\u0026rsquo;m not going act like this doesn\u0026rsquo;t have issues. I get it. There\u0026rsquo;s questions of signal integrity, making sure everyone follows the same standard (obviously can\u0026rsquo;t do that\u0026hellip;), and realistically it would probably mean adding more conductors and increasing cost. I get it. But I also see a ton of other benefits, especially if we made that same monstrosity of a cable capable of a fair amount of power. The same 12V ATX PSU in the desktop could justifiably power the monitors, giving us the efficiency gain inherit in using 1 PSU over the god only knows how many fire hazards that are currently on chained power strips down there.\nDeparting Cable Abyss Hell, Back to your Regularly Scheduled Ranting\nWhere was I? Ah, right. Desks.\nNext is adequate space for interruptions. While I\u0026rsquo;m a strong proponent of separating a space\u0026rsquo;s responsibilities (not eating where you work, not working where you consume media, not consuming media where you sleep, etc.) I understand that sometimes it\u0026rsquo;s necessary, and there\u0026rsquo;s nothing worse than not having a flat surface to put your bowl of soup on.\nSo, why are desks with pull outs (as pictured on the right) not more common?\nMore practically though, as mentioned before, it\u0026rsquo;s ideal if the mouse and keyboard aren\u0026rsquo;t in the way of desk space that would otherwise be used for physical craft, note taking, art, etc. So I think three spaces total are ideal: one for primary input devices- today that\u0026rsquo;s a mouse and keyboard; a second for papers, a main project, etc; and a third that is easily accessible added for the interruptions and side projects in life.\n   In summary\n Desks need a lot more surface area  L or U shaped desks seriously help with this   We need keyboard trays that are longer, and often taller Sit/Stand needs to come down in cost, be available in L and U shapes Desks need built in wire management Desks need to have pull outs  As a final note, I realize not everyone has space for a massive desk, but in that case, I think things like this folding desk (YouTube, DIY Persk) should be more common.\nFurther reading:\nThe Complexity of Building a Lie Down Workstation (altwork)\nYour Audio Sucks #  There\u0026rsquo;s a huge range of audio systems. You might not be able to have speakers at all and have to use headphones, maybe you have an awesome setup running Dolby Atmos like Deadmau5\u0026rsquo;s where the room and speakers have been engineered he can virtually drop an instrument on the sound stage wherever he wants.\nBut nothing like that is even needed in order to make things suck less.\nHow many times have you watched a YouTube video where the speakers voice had far too much bass or masked by a high pitch whine? How many streams have you heard where there\u0026rsquo;s some hum or annoying background noise? I\u0026rsquo;m sure you\u0026rsquo;ve turned up your audio because something is quiet only to have your ears ravaged as soon as the audio is fixed in the stream.\nAll of these things are totally fixable using a mix of hardware and software.\nBefore I get into all the following, I\u0026rsquo;m not saying all of these things should always be in use. For example when somebody is making music all of this obviously needs to be able to bypassed.  Why the fuck do we not have a system-wide limiter? #  And not just a dumb decibel limiter, but a loudness (Wikipedia) limiter. There\u0026rsquo;s no reason there shouldn\u0026rsquo;t be a toggle-able limiter to protect your ears\nWhy the fuck do we not have per-stream audio compression? #  Not file-compression but volume-compression. the \u0026lsquo;make loud sounds quieter and quieter sounds louder\u0026rsquo; kind. Generally this is something the music industry over-uses and it doesn\u0026rsquo;t sound great on music, but for voice it can make a huge difference for keeping things understandable and not distracting. Ideally this would be done before the content is ever published or sent though the network, but that won\u0026rsquo;t always be the case. So, you should be able to easily take any audio stream (say, a YouTube video playing in a tab) and apply a compressor to it.\nWhy do we not have live Speech to Text? #  Not all systems will be able to do this live without completely shitting the bed because of lack of processing power, but as our graphics cards are now including specific hardware for doing AI/ML based computation, there\u0026rsquo;s no reason we sholudn\u0026rsquo;t be using in the OS for the sake of grabbing the text out of all audio that goes in or out of the system. (of course, storing it securely and locally, nobody wants to wiretap themselves)\nWhy is Audio and Video Not Routable? #  Alright, so this is mostly a dig at Windows, where everything is Garbage. Mac has CoreAudio which is pretty cool, and Linux can mostly do this for audio via Jack Audio and work is being done to make something for both audio and video with Pipewire.\n This is a screenshot of \u0026lsquo;Catia\u0026rsquo; - a graphical program for audio routing with Jack Audio. Here I just have pulseaudio set to use my first two outputs as my speaker outputs (Sink -\u0026gt; System) , and the first input (my microphone, which is mono) set to be the input to the stereo \u0026lsquo;virtual microphone\u0026rsquo; that pulse audio provides to applications (System-\u0026gt;Source). All the orange and green stuff is for MIDI devices, which catia can also route.\n The reason this is necessary is with routable audio and video you can do things like route your webcam\u0026rsquo;s video first though software that does some video effects, then to a recording program and to a streaming program easily. Sure, this can be done anyway right now, but it often means creating a \u0026lsquo;virtual\u0026rsquo; webcam in the middle, and this scenario was already a fairly basic one. If you add in the aforementioned limiting and compressing as options you can see where this starts to matter.\nWhy are we not calibrating our audio devices? #  While it may seem like it at times- with big fancy tube amps, planar magnetic headphones, and silver cables for that hi-fi sound- audio is not black magic. It\u0026rsquo;s math. More over, while everybody\u0026rsquo;s ears are a bit different, the frequency response that most people want from their devices is more or less known. No device can perfectly meet this, at least not at a cost a mere mortal can afford. As that linked article details, this isn\u0026rsquo;t super straight forward anyway, as your head and ear size, room acoustics, etc. all mater. But here\u0026rsquo;s the thing:\nComputers are really stupidly powerful. We can make our audio quality better, even on sub-optimal equipment. I\u0026rsquo;m going to gloss over most of the math, but the gist is by putting a special microphone with know frequency response at the desired listening point and doing a frequency sweep from each speaker (or headphone) and all the speakers at once we can math out each speaker\u0026rsquo;s (or headphone\u0026rsquo;s) frequency response and phase cancellation characteristics, then, being careful not to cause resonant peaks or really obnoxious phase shifting effects, use a parametric EQ to get the speakers (or headphones) as close to ideal as possible.\nOf course, the better the starting point the better this correction will work. You won\u0026rsquo;t make some cheap iFrogs sound like Senheisers, but you might make them better.\nThere is software that does some of this, but I really think it needs hardware acceleration (hell, maybe an FPAA) and to be more common.\nYour Displays Suck #  I\u0026rsquo;m going to assume that if you\u0026rsquo;re reading this you\u0026rsquo;re probably using at minimum a 1080p, 60hz monitor. And like, yeah 2073600 is a ton of pixels. If you assume the normal 8-bit per R-G-B (24bit color) then you get ~2.98Gbit/s which is already pretty impressive if you think about it, but then consider that even cheap single board computers are starting to be capable of 4k, 3840x2160 which at 60hz is ~11.94Gbit/s and, alright, that\u0026rsquo;s already undeniably really cool. But, unfortunately, super not enough and already causing problems.\nIf you\u0026rsquo;re like me and running 4k @ 60hz, you\u0026rsquo;ve likely had at least some issues as a result of this. Lower quality Display Port (6) cables can cause occasional flickering, you\u0026rsquo;re probably limited to 6' DP cables. The reason I bring all of this up at the start is because I want to fully acknowledge that every extra bit we try to push down that pipe is pushing that even further and making it even more expensive.\nBut, let\u0026rsquo;s go to more day-to-day concerns, the things that suck even assuming everything is working fine.\nThe first thing is obviously resolution.\n4k is far from normal still. 1080p just is not enough. It\u0026rsquo;s super easy to see the individual pixels from even a comfortable distance and text is pretty unclear unless sub-pixel rendering(5) is used, but that makes things even worse because not all displays use the same sub-pixel layout.\nAnother problem with resolution is that ohmygod does scaling suck. A ton of applications, especially older ones, were made with the assumption that you\u0026rsquo;d be viewing everything on a 1080p or lower resolution. In general the move to 1080p actually wasn\u0026rsquo;t felt as much because the size of our displays increased with their resolution, increasing work area but keep the application size roughly the same. The problem is with the move to 4k we\u0026rsquo;re dramatically increasing pixel density at often the same screen size, so everything is ·µó·∂¶‚Åø ∏. Software scaling in the OS is pretty universally garbage, with some applications scaling in a way that looks super blurry, some being double scaled as both the OS and the application try to compensate, and some applications just not scaling at all. Because this is inherently a complaint about legacy support there\u0026rsquo;s no easy solutions here. Using 4k instead of other higher-than-1080p resolutions helps, as integer scaling (scaling exactly 2x) is an option as 4k is exactly equivalent to four 1080p screens stitched together, so you can just map 4-pixels in hardware to 1-pixel of what\u0026rsquo;s trying to render\u0026hellip; or you could, if we hadn\u0026rsquo;t already tried to use aforementioned sub-pixel rendering.\nI\u0026rsquo;m not sure that there\u0026rsquo;s really much need to go beyond 4k. While I haven\u0026rsquo;t even personally seen anything higher, I also can only pick out individual pixels when there\u0026rsquo;s like, one lit pixel on a dark background, and I don\u0026rsquo;t know that more innovation in resolution will really matter. Instead, there\u0026rsquo;s a pile of other outstanding issues.\n Little aside first. Some jackasses decided even on digital displays interlacing should be a thing. I don\u0026rsquo;t want to lose focus here, but I want to at least mention this, which you\u0026rsquo;ll often see listed as 1080i or 720i, is shit.\n Refresh Rate #  Do a little experiment for me real quick: try changing your display to 30Hz. Most displays will support it.\nNow move your mouse around in circles, try doing something where you need things to respond quickly, like playing games.\nYou\u0026rsquo;ll probably notice it directly, but if not, you will likely at the very least feel a bit motion sick.\nNow, realize that the vast, vast majority of displays are only 60hz. Double that, sure, but I think you could easily see how more would be great. This is exactly why most displays sold for gaming advertise being higher refresh rate, often 144hz or more. This is where my above commentary on throughput of DisplayPort and reliability at high rates. If you look at the Display Port (Wikipedia) you can see this problem has been mostly addressed, but that only means so much if cables are shit and monitors that are both high res and high refresh rate cost both arms and a leg. Obviously this should get better with time, but it\u0026rsquo;s still a problem.\nSome displays may support Freesync or Gsync (7), and both of these technologies require a supported graphics card in the system as well. These allow the display and computer to adaptively change the refresh rate so the monitor and computer both send and display frames in sync, which can make even a low refresh rate \u0026lsquo;feel\u0026rsquo; much higher. This is a feature typically marketed to gamers and only supported in video games, but this has been changing a tiny bit. The big thing to note here is that it\u0026rsquo;s dependent on the frame rate of the application that the user cares about, you could, I guess, sync to your your compositor\u0026rsquo;s (the thing that draws multiple windows onto the desktop simultaneously) frame rate, but I don\u0026rsquo;t think there could even be any benefit there. So, really, this is mostly applicable to games as there\u0026rsquo;s a few other applications you\u0026rsquo;d even want to run in full screen where this latency and responsiveness improvement would matter.\nrelated to refresh rate is latency. In general this can actually mean two things, one is how long it takes for an image sent to the screen to actually be displayed. The lower this time the better, with good screens being sub 10 millisecond. Unfortunately, there\u0026rsquo;s no standard among the industry to measure this and many get it wrong.\nAlso with latency there\u0026rsquo;s grey to grey times, this is a measure of how long it takes a pixel to go from one shade to another. The lower this is the less motion blur the screen will exhibit.\nThis, to me, is a big deal. Latency is something you can feel. If there\u0026rsquo;s a long total input lag between the time you click something and that action taking place, that\u0026rsquo;s a big fucking problem- and long here doesn\u0026rsquo;t even mean all that much time:\n Testing has found that overall \u0026ldquo;input lag\u0026rdquo; (from controller input to display response) times of approximately 200 ms are distracting to the user.[6] (Wikipedia Article on Input Lag)\n So, the time it actually takes for your display to update once it\u0026rsquo;s gotten a frame is not irreverent.\nDimming #  Unless you\u0026rsquo;re a fan of melting your eyes out of their sockets, you likely do not have your display set to maximum brightness. Unfortunately, dimming on most displays is absolute garbage.\nInstead of doing DC dimming, that is just lowering the voltage of the back light so it is dimmer, the majority of displays do PWM, Pulse Width Modulation, Dimming.\nPWM image by Thewrightstuff CC BY-SA 4.0 So instead of just lowering the level directly, the back light is turned on and off rapidly, for a varying amount of time. This might be done really fast, sometimes it\u0026rsquo;s fast enough that it really does not matter or there\u0026rsquo;s a reasonable amount of capacitance to smooth this out, effectively making it look like just a DC signal again, good enough. Sometimes, the manufacture sucks and uses shitty, low frequency PWM dimming and even if you can\u0026rsquo;t consciously see it, it will cause headaches and generally suck over long periods.\nYour browser does not support the video tag.\n This is PWM dimming on a fourteen-segment display captured with the \u0026lsquo;slow-mo\u0026rsquo; camera on my phone.\n In this video, because it is so incredibly slowed down, you can see the led\u0026rsquo;s flash easily, but at that middle setting I can easily see it in real-time too and it is headache inducing. At the lowest or highest settings it isn\u0026rsquo;t noticeable. Persistence of vision is why this even works in the first place, but obviously that has limits and crappy PWM dimming on an otherwise nice display can really, really suck.\nThis has put me in the crappy situation before of having to set the display to max brightness to avoid the headache from the strobing effect (Pulse width at 100% means constantly on so just DC), but dealing with being blinded by any application with a white background.\nColor and Dynamic Range #  If you have multiple displays that aren\u0026rsquo;t exactly the same you know just how annoying un-matched color can be. This is a harder problem to solve than some of the others. Color calibration definitely helps, but that only means so much when the actual display technology may be different. an LCD will look different than an LED will look different than an OLED even if they\u0026rsquo;re color calibrated to match. This, I think, is actually reasonable. What is totally unreasonable is how digital color looks in the first place. Let me start by linking a video:\n This sucks. Like, why have we accepted this? Sure, things like High Dynamic Range (Wikipedia) or HDR - which allows the panel to selective change the brightness in an area of the screen, giving much better dynamic range in supported applications - have helped with this problem indirectly, but it\u0026rsquo;s still not great.\nWhat we really need is to finally step up from 24bit color to something better, and in fairness, this has been happening. A lot of newer monitors do support 10bit per channel (30bit color (Wikipedia)) and some do 12-bit. Unfortunately, at higher resolutions this sometimes requires trading refresh rate for color depth (want 30bit color? You\u0026rsquo;ll have to run at 30hz.)\nYou\u0026rsquo;re also likely to notice the color gamut or what range of colors the display is actually capable of displaying.\nFor example, two displays may both be capable of displaying 255 levels of red, but if one display\u0026rsquo;s range is only from a dingy red to a dark-ish red, while the other is from a brilliant red to a deep dark red, there\u0026rsquo;s a massive difference in color availability. If this is important to you, notably as a creative professionally in photo or video, you may want to read more on the Wikipedia page for Color Gamut. In general, displays particularly suck at displaying a wide range of green.\nNext up is dynamic range, or how deep the blacks are and how vivid the whites are. Here, OLED is probably the best as it can display true black by actually turning the source of the light off, but unfortunately these are quite susceptible to burn in and image persistence, plus moving the image quickly can result in a \u0026lsquo;purple smear\u0026rsquo; - something you may have noticed when scrolling though images on your phone.\n Note, OLED isn\u0026rsquo;t really ready to be used for normal desktop or laptop monitors yet, as it can suffer from really bad burn in or image persistence. Looks great for movies, but when you have un-changing elements on screen for hours at a time it\u0026rsquo;s not ideal.\n Non pixel displays #  You know what would really help with the search for the perfect display though? Needing it for less things.\nAs time has moved on computers have taken over the role of more and more tools on our desk, but that also means the screen has had more responsibilities - I doubt you have a physical clock on your desk.\nI love analog meters. They can be backlit like old VU meters in stereo equipment, or they can totally illuminated by the environment. Regardless, they\u0026rsquo;re quick and easy to read. Needle high, needle low. On the right I have a picture from my (horribly implemented) CPU meter project that just shows my CPU usage on the radiation meter and ram usage on the RGB led.\nOf course, other forms of more passive indication are great too: Little e-ink or oled display, not-too-bright leds (or VFDs or Nixie tubes if you\u0026rsquo;re feeling adventurous) - not everything needs to be on your screen. Let your eyes look away to a dedicated device now and then.\n On the right, for example, is the Quirky Nimbus, which I think it shows this idea rather well.\nNote, the nimbus had issues when it did work, but is now a victim of IOT evolution as it\u0026rsquo;s servers have long since been shut down and it\u0026rsquo;s very difficult to hack (I own one and tried). So, uhh, don\u0026rsquo;t go out and buy one.\n   Your Space Sucks #  Noise #  Just looking at the Wikipedia Article on Noise Polution, it\u0026rsquo;s pretty obvious that humans like to be somewhere where noise is kept to a minimum. There are of course questions about what you want to consider noise. Like, clearly above I made it clear I prefer mechanical keyboards which, as anyone that has been on a discord call can tell you, are rather loud. The difference is in it being noise you\u0026rsquo;re causing, or background noise that you can\u0026rsquo;t control. Fan noise from your computer, music from another room that you can\u0026rsquo;t quite make out, a rattle from the HVAC system, that\u0026rsquo;s noise. Somehow we\u0026rsquo;ve all gotten rather used to rather noisy environments.\nDon\u0026rsquo;t get me wrong, improvements have been made. A lot of computers don\u0026rsquo;t even run the fans when they\u0026rsquo;re idle or you\u0026rsquo;re just web browsing (plus the fans have gotten bigger, which means lower pitch, which is way less annoying), LED bulbs don\u0026rsquo;t have the ballasts that were required of old fluorescent bulbs that always found a way to whine, we no longer used CRT (Cathode Ray Tube) screens that had flyback transformers whining at the edge of human hearing either. But it\u0026rsquo;s still not great. Even if none of the electronics in a room have fans or speakers or the other things you expect to make noise, you can still notice when a room has been shut off. If you spend a lot of time surrounded by electronics like I do, not having the hum around is a mix of eerie and relaxing. But, still a lot of electronics do have fans, and they\u0026rsquo;re often crap. Even the high end ones that PC building enthusiasts idolize like those from Noctua are far from amazing.\nBut, come on. Why are we not integrating at least some sound control into our architecture? Why is acoustic dampening something only used by streamers? Why are devices that we know get nasty coil whine not being silenced by just adding some wax or glue to the inductors?\nIt\u0026rsquo;s not like most of the solutions for making noise better aren\u0026rsquo;t available and understood, it\u0026rsquo;s just that it takes an extra bit of consideration and maybe a bit more money.\nI\u0026rsquo;m not sure what the solution should be. Maybe products need to have some sort of testing for this and a label applied, like the ubiquitous \u0026lsquo;Energy Star\u0026rsquo; stickers or the 80 Plus ratings on PC power supplies.\nLighting #  If you\u0026rsquo;re in an office right now, I can take a pretty good guess that the lights above you are some of those 4ft long fluorescent tube bulbs, probably in an excruciating 6500k.\nThe problem with that color temperature isn\u0026rsquo;t necessarily that it\u0026rsquo;s too \u0026lsquo;cool\u0026rsquo;, it\u0026rsquo;s that it\u0026rsquo;s fixed at that point. 6500k is about the same as the sun on a clear day\u0026hellip; at about noon. The problem is our bodies expect warmer colored light closer to night or it screws up our sleep cycle. The website for the software f.lux has aggregated some good research on this subject, but I think at this point it\u0026rsquo;s actually pretty common knowledge as even Samsung phones ship with the ability to turn a blue light filter on.  Image from Bhutajata on this Wikipedia article    Brief aside, if you use Linux, Redshift is a good alternative to f.lux\n Right now we\u0026rsquo;re still in the annoying stages of this sort of system, most RGB or color temperature variable bulbs have rather crappy Color Rendering Index (CRI), so even if the temperature is variable the quality still sucks.\n This is purely anecdotal, and it seems the Phillips Hue bulbs at least have a decently high CRI, but like, they\u0026rsquo;re also a tad bit on the expensive and privacy invade-y side of things sooo ¬Ø\\(„ÉÑ)/¬Ø\n But worse, the software to keep these bulbs in sync is pretty gross, and some bulbs will just end up snapping from one color to another every 15 minutes or so, which is more distracting than it\u0026rsquo;s worth.\nThe next worst offender with lighting is all way to bright (often blue) leds on E V E R Y T H I N G . For the love of god guys, the lights are supposed to be indicators, not light the entire room. There shouldn\u0026rsquo;t be a product with over a thousand reviews on Amazon with the sole purpose of dimming obnoxious LEDs. Like, leds aren\u0026rsquo;t even the best thing for the job anyway most of the time. I\u0026rsquo;d think an e-ink screen, like on the pwnagotchi below, would be sooo much better for most applications that need multiple indicators. For a power on indicator, an led is fine, but please just make it like 20x dimmer or put it near the power input instead of somewhere normally visible.\nLike, my center display has a blue led that is on when the monitor is on instead of the more normal standby indicator that goes off when the display is on found on TVs. It\u0026rsquo;s immensely distracting. Sure it can be fixed with a tiny piece of electrical tape, but whyyyy?\nFurther Reading: 1 (Tedium.co) 2 (Hackaday)\n my \u0026lsquo;Powonagotchi\u0026rsquo; üñ§\n   An offending LED indicator on the Mackie CR4 speakers. It\u0026rsquo;s meant to illuminate the volume knob in the dark but it mostly fails at that, especially since the all-black knob relies on a bump for indication rather than a white stripe.\n   On a far less useful but neat note- I think \u0026lsquo;ambilight\u0026rsquo; systems need to be more common, obviously user choice weather or not to use it, but yeah. 10/10 need more ambilight in my life.\nBasically ambilight is just a system for letting the colors from the pixels near the edge of the screen be mirrored onto some RGB leds so that the color spills onto the wall behind. It\u0026rsquo;s a really neat effect for games or movies.\n Ambilight image from Wikipeda user Stephan Legachev, resized for this blog.   CO2 #   Alright, so after seeing this I went out and got a CO2 meter. I watched it get above 2000ppm regularly. I took steps to lower it and now, honestly, I do feel better.\nThis requires two things to fix:\n Better indoor ventilation A Carbon tax and other restrictions that scientists and economists have been telling governments for decades that they need to be doing before we lose entire ecosystems, our entire world becomes inhospitable to life as we know it, more cities have air that is literally toxic, and things just generally go to shit.  Coming back around to \u0026lsquo;How is this relevant to how we interact with computers\u0026rsquo;?\nWell, I imagine you like to breathe while at your desk, and I also assume that you\u0026rsquo;re using a device that uses electricity to read this, and that device is very likely not powered by renewable energy.\nA Good Environment for Thought #  It\u0026rsquo;s also worth considering what is in your space to keep visually appealing. Wires dangling over things, pealing paint, unorganized shelves, etc. are obviously off-putting, but I\u0026rsquo;d go the step further to say they actively interrupt productivity as they stick out and beg to be fixed. It\u0026rsquo;s the standard scenario of not wanting to do homework until the room is clean. On the other hand, adding a bit of tactile flair can go a long way. It is tough to strike a good balance. I personally don\u0026rsquo;t want art or static words (paintings with text, motivational posters etc.) in front of me in my work space as I find that distracting. Instead, a bit of sound dampening foam on the wall can go a long way, both for sound in a room and adding visual interest to the wall, and it\u0026rsquo;s pretty cheap too.\nTo keep your desk tidy a good start is just getting rid of your monitor\u0026rsquo;s base and using a VESA mount to the wall or back of desk. the flexibility in position and extra available desk space goes a long way, and it\u0026rsquo;s much, much more visually appealing.\nRather paradoxically, I do see value in motion in the work space too. For example, MIT\u0026rsquo;s reactive table or those fancy marble in sand tables can add much needed visual motion to prevent a space from becoming stale. Hell, even a simple fish tank or plant that adds a bit of change with time make\u0026rsquo;s a huge difference.\nIf you do think \u0026ldquo;huh, I could go for a fish tank\u0026rdquo;, I will warn you most produce a fair amount of noise with running water and motors for the air pump and filtration. There are some tanks that avoid both though, so don\u0026rsquo;t immediately rule it out, just do your research.   Chapter 2: The Digital  Chapter 2: The Digital #   Alright, now onto the fun stuff, I think I\u0026rsquo;ve established that the physical side of how we use a computer is sub optimal, but what about how we actually do the things we do day to day? I think, for the most part, these things can be put into a few categories:\n Finding and Accessing shit Looking at shit Storing Shit Transferring Shit Making Shit  I\u0026rsquo;m not the first to think on this subject by any means, Programs are a prison: Rethinking the fundamental building blocks of computing interfaces by Robert Lechte put a lot of ideas I\u0026rsquo;d thought before into words much more elegantly than I can, please give it a read then come back here, keeping in mind how the ideas presented there could work with what I\u0026rsquo;m saying here.\nFinding and Accessing Information Sucks #  Search sucks #  If you\u0026rsquo;re like most people, you probably use Google Search, but also don\u0026rsquo;t like Google Search. Google\u0026rsquo;s search makes the entire top of the page ads, tracks you, and is just generally a bit invasive, but, you still probably use it instead of DuckDuckGo because the results often get you to what you\u0026rsquo;re looking for faster.\nTo some extent things have gotten better as it is gotten easier to search directly from the search bar, with more browsers supporting setting the search engine by a prefix in the url bar, so if, for example, I want to search wikipedia and directly go to an article, I can just put a \u0026lsquo;w\u0026rsquo; before what I search:\nAnd this definitely helps, but it\u0026rsquo;s also not enough.\nSearch now regularly returns a number of results that is completely unprocessable by the human brain\nSo, what can be done about this? Well, there\u0026rsquo;s already a fair amount of advanced search options:\n   But I honestly think these more or less miss the point of how people want to search, not to mention they\u0026rsquo;re not super easy to remember. Being able to take things out in large swaths is often rather helpful, so why are there not options like NO_SOCIAL to get rid of all social media results.\nOn a similar note, Ask HN: Is there a search engine which excludes the world\u0026rsquo;s biggest websites? was posted a while back, and I agree with idea: often I can find better information on smaller sites, so I think there should be an option to just say NO_10K to drop the top 10 thousand most popular sites from the search results. I don\u0026rsquo;t know if this is really the right way to do this though. Fortunately, I do think the resurgence of Webrings is improving that a bit.\nFinding something when you don\u0026rsquo;t know the word for it exactly can be challenging too, especially if the correct term is also shared with something else (like looking for skateboard trucks but only searching the word \u0026lsquo;Trucks\u0026rsquo;). This wouldn\u0026rsquo;t be so bad, but sometimes trying to filter out the incorrect results doesn\u0026rsquo;t work either, because of unforeseen overlaps. Unfortunately I don\u0026rsquo;t know of a solution to this problem, as it\u0026rsquo;s one of conveying intent.\nOften, I find what I\u0026rsquo;m looking for faster by just going to as close of a topic as I can think of on Wikipedia and poking around links than I can by directly searching.\nIt\u0026rsquo;d also be nice to have the ability to just set a list of bad sites. Like, please never ever show me any results from Pintrest.\nThinking more into the future, I would very much like to see a world where data searching is context aware. For example, say I\u0026rsquo;m searching for a data sheet for an old vacuum tube and I have a schematic of an old amplifier open in another tab, I would love if the browser saw the context and changed the label in the schematic into a link to this datasheet. Furthermore, it would be great if it crawled the web and finished finding datasheets and linking them, possibly well before I even even got to that page in the first place. I know we don\u0026rsquo;t have the tech to do this yet, especially not as a general purpose tool, but I like to think about the future. ¬Ø\\(„ÉÑ)/¬Ø\nAnother point is the summery of information and omission of the irrelevant info. Say I were to look up bits in a byte, I don\u0026rsquo;t necessarily need the historical context as to why bits are named bits and bytes, bytes, though even though I didn\u0026rsquo;t search it, presenting that a nybble is 4 bits, and how to tell endinan-ness is more relevant, unless I had recently searched historical information or stated I wanted that explicitly. In my opinion we should be less concerned with finding relevant results and more concerned with discarding the irrelevant, though making the verbose available.\nI also think that bringing people together, potentially anonymously, based on search and knowledge could be extraordinary valuable. If as I\u0026rsquo;m looking up \u0026lsquo;How to do X\u0026rsquo; and somebody else is looking up \u0026lsquo;How to Do Y, an advanced topic from X\u0026rsquo; it would be fantastic if we could talk, albeit unobtrusively to the person being requested. It seems to me that searching is desperately lacking a social element and ranking system. How great would a simple Reddit like upvote system on any given search be? What if browsers added a comment system that was hosted though some sort of distributed network and tied to each page so people could leave comments on any site regardless of if the site has comment functionality built in? (Yes, I know this is ripe for spam and abuse, but let me dream\u0026hellip;)\nGoogle also needs to quit their shit with information cards:\npic.twitter.com/FPQnLW60Vt\n‚Äî Randall Munroe (@xkcd) December 1, 2020  Pay-Walls suck #  Look, it\u0026rsquo;s not that I don\u0026rsquo;t think journalists shouldn\u0026rsquo;t be paid. They should be. It\u0026rsquo;s just that having everything behind a paywall blows. There\u0026rsquo;s not any fun solution to this. Ads suck too. Nobody wants a web full of micro-transactions, and the idea of news sites mining crypto while I read bothers me too. So, let\u0026rsquo;s just ignore the news sites for a second, and instead, focus on the much more offensive situation: academia and scholarly articles (not that they\u0026rsquo;re all good to begin with (YouTube, DefCon 26))\nIt\u0026rsquo;s no secret that access to academic articles is fucking expensive. JSTOR alone is $200 a year for only 85% of the content, some individual articles are well above $20 to read despite a huge portion of it being publicly funded in the first place, yet somehow these sites wonder why so many sites are turning to Sci-Hub.\nYou Pay to Read Research You Fund. That\u0026rsquo;s Ludicrous (WIRED)\nBut it\u0026rsquo;s so much worse than that. Tons of information services are subscription based. So, the costs add up way worse. While it may seem like a bit of a stretch, I think it\u0026rsquo;s pretty reasonable to call Netflix, Hulu, etc. all information sources as they often host documentaries, if we look at The Cost of Every Streaming Service Per Month (TheStreet), and assume just the most popular ones, so Netflix, Prime Video, and Hulu, it\u0026rsquo;s already at $418 a year. Is it really any wonder why people are piracy again? Even if you subscribe to the theory that Piracy is a distribution problem and not a price problem, the pay walls are still the problem, as each service has it\u0026rsquo;s own incentive to hoard as much exclusive content as possible and make their platform better than others for the price. This means that each platform runs on it\u0026rsquo;s own standards and cross-compatibility is a real PITA. There are now websites and apps that specialize in just telling you which streaming service has what. Like what in the fresh fuck.\nAuthentication and Authorization Suck #   Authentication is the sign in\nAuthorization is what the user and service can do, or what \u0026lsquo;permissions\u0026rsquo; you grant the service and what you\u0026rsquo;re allowed to do on the service.\n Authentication: #  I\u0026rsquo;ll bet cold, hard fictional cash that you\u0026rsquo;ve put off turning on two factor for a service you don\u0026rsquo;t give two shits about.\nI\u0026rsquo;ll double my fictional money to bet that you have a junk password you use by default everywhere you don\u0026rsquo;t give a shit.\nHell, I\u0026rsquo;ll go all in betting on saying you\u0026rsquo;ve authenticated with quite a few services by just using the\nLOGIN WITH SOCIAL MEDIA\n button, though possibly only because it was the only way to login to that service at all. Unfortunately, all of the above are probably not the best decisions.\nThe top two points combined mean someone can find your password in previous security breaches (haveibeenpwned), and then just login in, easy as that.\nUsing a social media login means that if you ever lose access to that account, either because Facebook or Google or Twitter or whatever decide to ban you or because you manage to forget you \u0026lsquo;master\u0026rsquo; password and lock yourself out, you\u0026rsquo;ll be locked out of everything you logged into those services with. Not to mention if someone manages to break into your Facebook or Goggle or Twitter or whatever they\u0026rsquo;ll be able to login to any of those services too.\nAnd look, I\u0026rsquo;m guilty of all of the above too. Sure, a password manager helps with this, but that\u0026rsquo;s still annoying too as sometimes you just need to quickly sign in on a device for a few minutes. As of right now there\u0026rsquo;s just no good solutions that are secure, easy to use everywhere, and fine gained enough to let the user give permissions as they want, and not give extra permissions they don\u0026rsquo;t want to.\nAlright, so just follow the normal advice and use long passwords?\nxkcd #936 Yeah. No. Well sorta. Okay, let me explain. Yes, you should use long passwords for exactly the reason this comic explains. But really, we need to stop using passwords outright. They just sorta suck.\nInstead, we should go to Single Sign-On, like the above \u0026ldquo;Login with Social Media\u0026rdquo; example, but the user should be able to trust and change the identity provider with ease, to avoid the \u0026lsquo;Facebook banned me\u0026rsquo; issue.\nThe real shitty part is a lot of services already support something like this, letting you setup sign in with Single Sign-On via your own identity server, but it\u0026rsquo;s usually limited to enterprise users.\nThat said, you can self host Single Sign-On (like the way \u0026lsquo;Sign in With Google\u0026rsquo; works), keycloak, Dex, Gluu are options for doing this. It\u0026rsquo;s just that basically no online services will let you use your self hosted service without an enterprise account.\nSo, for now, users get fucked. There\u0026rsquo;s really not any good options.\nThat said, some things have gotten better, Webauthn provides a much better way to authenticate with many services, including some that can provide Single Sign-On identities, often via those little USB keys which are hugely better than the typical user name and password paradigm.\nNote, those USB security keys have updated in standard. The newer ones which support WebAuthn are a bit more expensive and less common. The standards are confusing to understand, but the TLDR is you want something that supports WebAuthn/FIDO2.The older standard, U2F, is a two factor system while the FIDO2/Webauth keys can outright replace passwords on the service Authorization: #  Put simply, we need easier to use, fine grain authorization settings that can\u0026rsquo;t be bypassed. I should be able to tell a program, website, or app that I don\u0026rsquo;t want to give it my location, and then, if it asks anyway it should be fed garbage. Refusal should also not stop access to that service. Similarly for storage, microphone, contact, etc.\nNewer versions of Android actually do this really well, including the ability to only grant those permissions for that session. This is amazing. It\u0026rsquo;s not perfect, far from it. Like, Bluetooth requires location permissions and, unless you\u0026rsquo;re on a rooted phone, there are some permissions the user can\u0026rsquo;t even give. That\u0026rsquo;s a load of shit, but I\u0026rsquo;ll come back to that.\nContent Linkage sorta sucks #  Screenshot from the homepage of Obsidian.md The digital world doesn\u0026rsquo;t have to be lonely pages indexed like a book, why are we treating it as such? Today each page can point to any other page in a beautiful web of interconnected information, where each topic has lines of association spanning such that no two pages are unconnected. Wikipedia sort of has the simplest form of this, but what if we had systems so capable of automatic understanding - not just tagging - of information that any new info could propagate though that web naturally. Social linkage to people in the same graph, even if anonymous, could help connect people that together, due to their very specific knowledge, drive man kind further. I should clarify to, I literally mean a web/graph, possibly in 3D, relating and indexing information, possibly like these 3D views of Wikipedia: (though the data should probably be served \u0026lsquo;raw\u0026rsquo; so that other presentation methods can be developed, as this definitely wouldn\u0026rsquo;t be ideal for actually reading the content)\nWikiGalaxy: Explore Wikipedia in 3D (wikiverse.io is very similar and worth checking out too) Obviously this overly linked system is something that people would need to get used to. Until the advent of the WWW we\u0026rsquo;ve read information linearly, page by page. The web has allowed this tree traversal style of navigation so that any missed topic can be reviewed, but generally this is a system where the tree only builds down, to simpler information, from the current node. It seems weird to think about an algebra book where it suddenly references multidimensional calculus, but this is exactly what I\u0026rsquo;m implying. In my education there was uncountable times I had to learn something because \u0026lsquo;it will be used later\u0026rsquo; with no explanation as to how or why. Linking back up the tree allows for information traversal in both directions, eliminating this problem.\nPresentation of Information Sucks #  I\u0026rsquo;ll be the first to admit this website isn\u0026rsquo;t the best on this. I put the list of generative design tools in a MarkDown Table for fucks sake. I know. But, We\u0026rsquo;ll get to that in a bit, in the Creating New Information Sucks section below, and I hope to convince you that isn\u0026rsquo;t necessarily my fault. This section is about how we view information, the presentation of words on a page, graphs, and information in general. To start, I want to look at something a little bit different.\nThis is the home page for a project called Gemini, which is a sort of alternative internet, but, wait, hang on\u0026hellip;\n   These are both that same page, loaded in different browsers. Why do they look different?\nWell, Gemini does something you may thing strange: It let\u0026rsquo;s the browser (client) handle the look of the page. It only serves the raw text. That\u0026rsquo;s it. That\u0026rsquo;s all you get.\nNow, I do not think this is a good idea for the general web. But, I do think as an idea, it can give us some valuable insights.\nPut a pin in it for now though, let me jump ahead into Dark Patterns:\n\u0026lsquo;Dark Patterns\u0026rsquo; #   A dark pattern is \u0026ldquo;a user interface that has been carefully crafted to trick users into doing things, such as buying overpriced insurance with their purchase or signing up for recurring bills\u0026rdquo;\n That\u0026rsquo;s the definition from from Wikipedia anyway. I think it\u0026rsquo;s a bit better put as \u0026ldquo;Dark Patterns are what happens when UI designed are a bag of dicks\u0026rdquo;\nThis Site has a lot of really good info on Dark Patters, and I recommend heading over there and then coming back over here.\nOh, cool, you\u0026rsquo;re back.\nThe biggest dark pattern that drives me nuts is a bit of what that site calls \u0026lsquo;Confirm Shaming\u0026rsquo; and a bit of \u0026lsquo;Misdirection\u0026rsquo;, I\u0026rsquo;m talking about sites that do this\nDO THE THING HERE\n or don't and watch the world burn\n where the design is actively pursing an agenda. But it's not just those. Even ones that look semi reasonable can still be annoying if they don't include the action directly. The affirmative action should be stated on the button that triggers it and both actions given equal weight to the user.\nDon't Do Action Do Action  for example\nLeave Items in Place Delete Items  Note here by Action I literally mean to include the verb. Delete. Replace. Print. Etc. Yes or No is not good enough.\nWith destructive or irreversible actions, such as deletion (not recycling), given a confirmation dialogue, and if particularly important, a dialogue that require meaningful user input, like this prompt when deleting a repo on GitHub\nAlright, so back to Gemini: Making more things like it wouldn\u0026rsquo;t totally solve this problem, designers could still totally chose to make the text confirm shame, but by letting more elements be controlled by the user (or their browser), we could at least do a little bit better by letting that ensure options to confirm or deny are given equal weight and that they are colored appropriately.\nIt\u0026rsquo;s not like this system couldn\u0026rsquo;t be abused still of course, and there will always be a balance between the user trusting the service and it\u0026rsquo;s UI and the beauty of that UI, but I think we could stand to go a bit in the direction of Gemini.\nMisleading Information #   \u0026ldquo;Global warming relies on the theory that we are destroying ecosystems. There is no evidence that we could destroy ecosystems.\u0026rdquo;\n Rush Limbaugh, recipient of the Medal Of Freedom. Yes. Misinformation online is a royal fucking shit show. There\u0026rsquo;s no way to possibly preserve total free speech, not that we should, and also have a system that doesn\u0026rsquo;t spread misinformation to the extent that people stop vaccinating their kids or thinking that COVID is a hoax. I\u0026rsquo;m not trying to address that problem. If I could, I would. But I honestly think that\u0026rsquo;s a genie we can\u0026rsquo;t really put back in the bottle now.\nInstead, I think we could do some things to make it a bit harder to spread stupid, false information by making it a bit harder to present data in misleading ways. Sure, the data itself may still be bad, but, we can make an attempt to increase transparency and display data accurately. How? Well, first, go have a look at some comically bad graphs (Statistics How To).\nA lot of these come down to graphs that purposefully play with axis or do other bullshit with the express intent of tricking you.\nSo, fuck their formatting. We should do it the Gemini way: Let the client handle the data display, and make the graphs interactive. If it\u0026rsquo;s a two bar chart with one bar at 54.5% and one bar at 55.0%, that should be what the user sees first and only then can zoom in.\n This is already easy enough to do with something like https://d3js.org/, but it would need to be on the client side, and the server would just have to send the raw data + a preferred way to render it (bar chart or whatever), otherwise the problem is still there. Over time standards could grow to support more display formats. This would have the side effect of making it easier to author data and make web pages in the first place.\n This also makes it easier to compare data sets, as now the client actually has access to the source data, or at least the data that drew the graph.\nThis practice could be incentivized too, as news, shopping, and review sites that use it could do so as a way to build trust with their users, and, probably more importantly for adoption, shit on their competitors that don\u0026rsquo;t do the same.\nFor those that still don\u0026rsquo;t, it might be possible to spin up a system with some machine learning to extract data from graphs in static images, and then re-display them as dynamic content.\nThis may not ensure the data is good, but at least it makes progress in increasing how we can trust data to some extent.\nThis could have extra uses too. Having something that could take two 2D graphs with a common axis and turn it into one 3d graph would be incredible, particularly if that data could come from multiple sources across multiple domains. Combine this with the ability to change the type of graph and this could help expose otherwise non obvious trends.\nBeyond that, content moderation needs improvements too - I don\u0026rsquo;t even mean fake news or porn here (Though we could stand to have better nsfw tagging on most social media). I mean the bullshit reviews on Amazon or the fake products when shopping online (mostly fake electronics). If those services are going to be allowed to make stupid amounts of money, they should be required to do at least a tiny bit of consumer protection.\nInformation Overload #   ∏·µâÀ¢ ·¥µ À¢·µâ·µâ ·µó ∞·µâ ·∂¶ ≥·µí‚Åø ∏ ·∂¶‚Åø ·µÉ ·µñ·µíÀ¢·µó ·µó ∞·∂¶À¢ À°·µí‚Åø·µç\nBobby Mikul, Times Square :CC0 \u0026ndash; Source Information overload is increasingly becoming a problem. As more and more information is accessible at our fingertips and more advertisements have the opportunity to be beamed via any one of a number of surrounding screens directly into our retinas we need a way to filter it down to levels the human brain can cope with and digest.\nThis is a complicated subject, on one hand, it\u0026rsquo;s amazing to have an infinite wealth of information. On the other, an ever growing amount of that information is shit and irreverent, and eats away at our very limited mental processing time for the day, we can only ingest and actively pay attention to or throw out so much information, and when much of the information we seek to avoid (ads) are actively doing everything in their power to demand attention from our brains, be it with sex appeal, bright colors, or even humor, it\u0026rsquo;s an uphill battle. So what can we do? Well, a good start would be to legally limit advertising to be less distracting from normal content and make the advertising more easily distinguishable from the real content. But I don\u0026rsquo;t think that\u0026rsquo;s enough. I think if we\u0026rsquo;re going to make systems that have machine learning to get better and better at sucking our time we need to put in just as much effort to making design that promotes health and consumption in moderation.\nAn example of this is Netflix\u0026rsquo;s \u0026lsquo;Are you still watching?\u0026rsquo; while this was implemented on their end to prevent unnecessary usage of data, it has the side effect of letting a user know they\u0026rsquo;ve been on the couch longer than should probably be advised. I\u0026rsquo;m not advocating for interruptions at every corner, just affirmative action by the user before bombardment with data. I do think as much data as possible should be linked to or aggregated, but force me to see more than what I request plus some surface level information. For something like YouTube this might mean playing a playlist is fine, but don\u0026rsquo;t start playing another \u0026lsquo;related\u0026rsquo; video when that list is over.\nBeyond that, keeping the design minimal but powerful. I think markdown is a great example of this. Users aren\u0026rsquo;t as dumb as people seem to think, we can, and do, learn the ways to make interaction with the things we use daily faster, so make the \u0026lsquo;speed limit\u0026rsquo; as fast as it can be while lowering the need for menu diving and learning to do complex actions. Putting a frequently used option into a menu that needs to be clicked at all is much slower than assigning it a keyboard shortcut.\nBut, okay, back to information overload: The biggest problem is still that there\u0026rsquo;s just too much. I don\u0026rsquo;t really think there is a solution, maybe Banning Outdoor Ads like Brazil\u0026rsquo;s Largest City Did, would be a start. Maybe requiring that the Terms of Service for any service a user signs up to be a limited length and actually commendable would help. But I just don\u0026rsquo;t know. I think the world has just simply progressed to a point where FOMO has gone from a fear of missing out has gotten to a point where missing out is just a fact of life as 500 hours of content are uploaded to YouTube every minute.\nWhat I do know is that trusting the YouTube or Facebook or Twitter algorithm to decide the content I see is incredibly dangerous, but that the alternative is overwhelming.\nMeanwhile, legislation that has been passed to try to fix some of this often results in other issues, like all the \u0026lsquo;Can we give you cookies?\u0026rsquo; prompts on websites: Why The Web Is Such A Mess (Youtube - Tom Scott)\nUpdates after Initial Draw #  Fuck your shit. Compute first, then display.\nThis may be the most irritating thing I encounter with modern computers. Our brains and bodies, as much as we may wish them to, don\u0026rsquo;t respond to stimuli right away. So, when I search for something, go to click something, and then while I\u0026rsquo;m moving the mouse to click the screen updates and a different link or icon is now in the spot I meant to click it\u0026rsquo;s really fucking annoying.\nWindow\u0026rsquo;s built in search, especially with web results on, is a huge offender on this but Google and other search engines do it too.\nIt\u0026rsquo;s not just search either, I\u0026rsquo;m sure everyone has encountered this in various places.\nAll you have to do is not change shit until you\u0026rsquo;re done computing the answer, and then only change it once. This is about as simple as it gets and it avoids magical re-arranging menus that make everyone lose their shit.\nEverything needs to be more damn responsive #  Fuck your ùíªùí∂ùìÉùí∏ùìé animations. I love eye candy, and a little bit is fine, but I shouldn\u0026rsquo;t have to wait as a menu slowly drops down with some pretty animation. If I\u0026rsquo;ve used that menu before I probably already know where I want to click, and now because I expect to be able to do so instantly I just clicked whatever is behind it. Fuck that. If the animation is masking some load time, sure, but as soon as it is loaded, quit it, and show the damn content. If the animation is necessary to avoid suddenly flipping from black to white and blinding users, again, I get it. But it doesn\u0026rsquo;t need to take more than 100ms.\nAdvertising #  If I have to spend more than a fraction of a second to process what is being shown to me is an ad, it should be fucking illegal. If you want to put ads mixed into the content, then it should be required to be a lot of a lot more visually obvious.\nOriginal:\n Edited:\n  Here the original at least has some color differentiation (Using the Boost app to view Reddit) but on the official Twitter client I actually have to stop and look to avoid accidentally clicking an ad link. That\u0026rsquo;s some bull shit.\nYunno what else is bullshit? The fact that all of these ads are \u0026lsquo;personalized\u0026rsquo; to the point that collecting crazy amounts of information on individuals is expected and almost inevitable online, even with a pile of tracking blocking extensions and a DNS blackhole like pi-hole. This could, and should, be a rant of it\u0026rsquo;s own. Being spied on by our own devices is 100% not okay and it\u0026rsquo;s one of the biggest reasons that they way we interact with computers sucks.\nStoring Information Sucks #  Storing your data blows. Users have to contend with backups, backups for you backups, bitrot, file size vs compression, what file system to use, how to make backups actually convenient, mirroring information between systems with limited bandwidth, etc. But to start somewhere let\u0026rsquo;s just look at archival:\nArchival #  Digital archival on \u0026lsquo;cold storage\u0026rsquo; sucks. For one, that cold storage is often either a PITA to attach in the first place, Usually using either using a slow USB interface, an expensive and far-from-universal thunderbolt one, or, if you want to go very bulk storage, requiring a specialized PCIe card which is meant for servers which brings along it\u0026rsquo;s own pile of issues.\nBut even once you have everything attached, most of the time backups are pain to run. You can always do the lazy copy-and-replace-existing method, but that\u0026rsquo;s painfully slow as it has to check all the current files instead of just doing the logical thing and comparing two indexes, but, of course, most file systems don\u0026rsquo;t support this index based method. Sure, there\u0026rsquo;s software to add it, like Bvckup, but most that I can find is paid or not something I would trust.\nUsing Git (or GitAnnex) is of course an option, but that has a higher barrier to entry to learn than seems reasonable. At the same time having actual file versioning needs to be a thing, something better than having untitled.docx, untitled.docx,untitled3final.docx, and untitled3.5.finaler.docx, even if it is still storing the file in full (though hopefully compressed) behind the scenes.\nBut, on the note of indexes, why are tools to provide a disk-offline index not better. From what I can find, catcli and Virtual Volumes View are the main two options, and both are bit out of the way to use, compared to just having it be natively in the file browser.\n[TODO]\nhttps://lbry.io/\nhttps://datproject.org/\nhttps://ipfs.io/\nPhone ‚Üî PC is the fucking worst. #  MTP needs to die a very painful death. USB Mass Storage, that is, devices that show up the same way a flash drive does, are infinitely easier to work with. On Android, with large folders, I\u0026rsquo;ve found adbfs, a tool that lets you do file transfer over Android Debugging Bridge, to be much better than MTP, but, really? No \u0026lsquo;normal\u0026rsquo; user should be expected to use that. Hell, a lot of people are just uploading files to the cloud and then downloading them on the target device because it\u0026rsquo;s easier. There\u0026rsquo;s also a growing number of apps that let users to transfers over wifi by hosting an Samba server on the phone, but why would something wireless be better? It\u0026rsquo;s absolutely crazy that things have gotten this bad.\nWe\u0026rsquo;re using ancient formats #  Look, jpeg and png are perfectly fine formats. For 2000. It\u0026rsquo;s 2020. HEIF (or BPG) really should be standard. Instead, it\u0026rsquo;s a motherfucker because M$ is too damn cheap to include the HEVC extensions which it relies on it without either having the user pay $0.99 (or claiming to be the OEM) because a collection of jackasses have it patented so hard and require licensing fees such that it may as well not exist. HEIF/HEIC or BPG I think have a good chance because of the preexisting hardware acceleration, but other formats like hific, which uses GANs to do compression, look promising too.\n As a note about why I wrote about HEIF/C in particular, most phones are capable of storing images in this format now, and IPhones do by default, which is a real PITA if an apple user emails these pictures to a Windows user.\n Of course the same applies in other formats. .flac is replacing .wav for high end audio, but why not Direct Stream Digital (DSD)?\n All the best formats are a pain in the ass  format shifting sucks, opening them sucks, patents suck   People use some really, really shit formats A lot of formats are needlessly complicated and not human or computer readable to anyone but the software vendor  Bit rot? #    Data get\u0026rsquo;s compressed, saved, and recompressed (ref xkcd)\n Using Waifu-2x to unfuck images still blows    sorting through data blows\n  no \u0026lsquo;transaction history\u0026rsquo; or global text search\n  Hard drives and File systems suck. #   why the fuck are we still using NTFS and EXT4 and not ZFS and LVM Hard drive vendors are a bag of dicks  RPM != RPM Western Digital redefines \u0026lsquo;RPM\u0026rsquo; SMR Western Digital uses SMR on NAS drives DRAMless SSDs   Hard drives are just, bad  Screaming at them makes them run worse Shouting In The Datacenter  I have a subwoffer right next to mine   Feeling the inertia in a laptop    Cloud Storage is a terrible idea #  I\u0026rsquo;d also like to mention the idea of distributed computation here as well, as I think it\u0026rsquo;s relevant both for the sake of compression and encryption of the data. I think that having a distributed system like \u0026lsquo;this\u0026rsquo; - I\u0026rsquo;m referring to all the ideas up until now- in place should ask for contribution from users in turn for it\u0026rsquo;s use, the obvious ask is to get it to be self sufficient. So if the distributed computational power of all these systems were used for everything I\u0026rsquo;ve described until now that should be more than plenty to allow it to function. This brings up the idea of balanced usage to contribution, I think the easiest solution is to simply use a system of computational debt tied to each user account. If the user is creating more computational debt than the average debt the system can sustain then that user should be handicapped in bandwidth accordingly. This does sort of bring us full circle in \u0026lsquo;can I just trade debt with someone, or sell them my computational time\u0026rsquo; such that we\u0026rsquo;re back to crypto based services again though, and I really don\u0026rsquo;t like this idea for two reasons:\n This system needs real time computation and bandwidth, and these vary in value just like how electricity peak hours cost more. This incentives simply paying for compute time instead of actually contributing computational power to the network like it actually needs, which in turns creates an incentive for people to do this at scale annnndd look at that we\u0026rsquo;re back to centralization.  The biggest problem with of course, is that currently home Internet users very rarely have symmetric connections, so would probably be very pissed if their download speed were suddenly tied to their upload speed. This could be offset by building up credit, as previously mentioned, but that has the issues, as previously mentioned. I suppose there could simply be a credit cap, but setting that would be exceedingly awkward as a logical number to use would vary by user and how they use the system.\nXKCD #1683 Transferring Information Sucks #  [TODO]\nNetworking Sucks #  [TODO]\n Everything is centralized ipv4 is broken  ipv6 is worse   ISPs are evil nothing is secure nothing is persistent (saved local copies)  Nat Slipstream\nTransferring Your Profile Sucks #  AnIdiotOnTheNet\u0026rsquo;s Comment on This Hacker New\u0026rsquo;s Submission - \u0026lsquo;Re-Thinking the Desktop OS\u0026rsquo;\n [\u0026hellip;]\nSwitchable \u0026ldquo;user profiles\u0026rdquo; instead of \u0026ldquo;user accounts\u0026rdquo;, which are an artifact of giant shared computer systems. User profile just contains personalized settings and can be located anywhere, including removable media so you can take yours to other computers. If you want to keep things safe from others, encrypt them. Otherwise there are no permissions except those applied to applications themselves.   Local Backups By Default #  [TODO]\nPhysical Interaction #  [TODO]\nI also think the boundaries of physical and digital should be more blurred. I\u0026rsquo;d love if I could set a book on my desk and search though it for an idea or concept by mere image recognition of the cover, or if it\u0026rsquo;s an unknown book at least being able to digest any pages shown to it explicitly. Say a section was highlighted? It would be great if that were automatically added to a personal journal file of sorts for future reference, especially if related data were automatically associated with online sources, or links made to people who are interested in similar subjects.\nCreating New Information Sucks #  Or, People Will Only Make Stuff That Is As Good As The Tools They Have\nNote the Will and not Can. A very talented musician can make a shovel sound good, a talented photographer doesn\u0026rsquo;t need a good camera. But in general that\u0026rsquo;s setting the required bar of talent - and therefore time - higher. The better and more efficient our tools are, the better content people can make without putting in more time than they\u0026rsquo;re willing to.\nA better camera won\u0026rsquo;t make you a photographer, but it might be the difference between unusable pictures and a saved memory\n I think I\u0026rsquo;ve generally made the case that our tools suck so far, but here\u0026rsquo;s where I think things can get really interesting.\n[TODO]\n Faster input  WYSIWYG sucks Needing to compile your views also sucks   Tools need to scale in complexity with the user  Start by showing an intro UI, let the user add more features to the UI as needed Great in application documentation Included examples on UI help and highlighting   Program data type interopability  Common in-progress formats for video editors, image editing, sound editing, etc.   Variety of formats, hard to shift between  mp4 or .gif?   Copyright is a real pain  As far as how all of these tools should work and interact, well, I think they should all use standardized file formats, even if they have to abuse them a little to do so and that they should all have a common Application Programming Interface (API) for interaction. This would hopefully mean that any extension written for one program would work for another, and any program could talk to another. For example, currently the realm of music software has a little bit of this with VSTs and MIDI. but it still leaves a lot to be desired. I\u0026rsquo;d actually like to take it a step further though and ask that all data of any kind use a common enough format that it can be processed with any extension/program written with this API in mind. Imagine if you could use a synthesizer as a static generator for image manipulation, or color management controls as an EQ. Both would and should behave in strange way, and it\u0026rsquo;s this very lack of defined behavior that could lead to interesting art forms. I\u0026rsquo;d love to see a \u0026lsquo;Master\u0026rsquo; API that works across all formats and ideas with a common data type that allows for program‚ü∫program, program‚ü∫extension, program‚ü∫hardware, etc. communication even in long, complicated chains. After all, if you\u0026rsquo;ve taken a signals and systems course you know that basically any data can be treated as a signal.\nThis could be done with some sort of node based programming system. While I don\u0026rsquo;t actually know how to use it, I think Luna demonstrates this concept fairly well:\nthough there are plenty of other examples, like the node editors used for making shaders or programming in Unreal Engine\nPotentially this could also plug into the entire OS as well, making it so an image manipulation program\u0026rsquo;s extension could for example modify anything output to the screen in real time, or an audio program could effect the output of anything. For developer\u0026rsquo;s this may even offer more power, making possible things such as inter-process communication (think pipes, like $ls -la | grep png) a matter of connecting two nodes, or reading disk information such as activity, space, or even writeback and inode information, this would literally allow any one piece of information to be accessible to any other. This does have obvious permission issues, but unix permissions should already have this under control. If something like this could also be tied into the previously mentioned internet search and socialization \u0026lsquo;web\u0026rsquo; without massive security concerns the potential use cases are as simple as getting color information from an image hosted online to as complicated as remote access or distributed computing.\nOh, and our systems are fucking racist and suck for anyone with special needs. #  Racist, how can a computer be racist? #  AI systems, naming conventions (both human names and terms like master/slave, whitelist/blacklist)\n[TODO]\nWe basically don\u0026rsquo;t even own our computers anymore #  [TODO] Licensed everything, no root access, etc.\nChapter 3: What\u0026rsquo;s Else Is Needed? #  [TODO]\nScript all the things! But Not Like That‚Ñ¢ #  [TODO]\nVisual Programming but still supporting text based programming, natural language scripting\neverything is a file/folder (inc. full programs)\nOptional Security #  [TODO]\nTemple OS philosophy\nBackwards Compatibility via Compatibility Layers #  [TODO]\nAnIdiotOnTheNet\u0026rsquo;s Comment on This Hacker New\u0026rsquo;s Submission - \u0026lsquo;Re-Thinking the Desktop OS\u0026rsquo;\n [\u0026hellip;]\nBackwards compatibility should be a high priority, but accomplished via shim layers and/or emulation and/or vms when clean breaks are necessary. A wide array of such should be included with the OS from the beginning. In 2020, there is no excuse for not being able to run old software.\u0026quot;   Excel date bug\nNo reason we shouldn\u0026rsquo;t be able to run very old shit, but also no reason to use that as an excuse against moving forward.\nHardware compatibility via FPGA modules\nHardware Modularity, Repairability, and Customization #  [TODO]\nNetwork Transparency #  [TODO]\nThe Ability to go Back In Time #  [TODO]\nupdates, file changes, or just scrolling on a screen - a refresh sholud let you return to the previous state, past notifications should be accessible\nOpen Sensors and Generators #  [TODO]\nSDRs, new IO options (something shittier than USB, cheap, and extendable), open IOT\nSoftware that breaks the mold #  [TODO]\nMasterPlan by SolarLune\nHabitica?\nhttps://www.craft.do\nhttp://audulus.com\nHardware for Open Experimentation #  [TODO]\nMicrofluid computers, diode logic, GPIO\nBackwards compatibility should be a high priority, but accomplished via shim layers and/or emulation and/or vms when clean breaks are necessary. A wide array of such should be included with the OS from the beginning. In 2020, there is no excuse for not being able to run old software.\u0026quot;  Why can‚Äôt you easily search all of the text you read on any screen (desktop + mobile) over the past day?\nIt‚Äôs strange how much obvious, low-hanging fruit of this form still exists.\n‚Äî Patrick Collison (@patrickc) January 15, 2018  Chapter 4: What points contradict? #   Having Low Level Access and High Level Usability.  Yeah, this is always a problem. It\u0026rsquo;s always been the dream to be able to describe in \u0026lsquo;natural language\u0026rsquo; what you want and to have the computer parse what you want, inferring intent, and do whatever you want for you, but naturally, this will never be totally possible. This point is only conflicting in the sense that it can be overwhelming- if a user has access to work in something as high as natural language and can manipulate those instructions all the way down an the assembly level, that\u0026rsquo;s a lot of open space. Ideally, each layer of the abstraction would be open to tinker and modify for the sake of getting the solution to work correctly, to pipe data around at any level, or to add functionality in it\u0026rsquo;s most natural language: Some tasks are better suited to describing what\u0026rsquo;s needed in English, some are easier to do down in the dirt.\nMaking everything open this way may sound complicated, but if the UI were presented right it could just be a stack of abstraction that propagates up and down. Changing the assembly could change the source could change the natural language description. Better, the cost of this could be lowered if each layer is only shown and edit-able at request, and that layer just bypassed until needed. Of course, this would mean being able to to make a set of languages that can be can go from higher level to lower level yet have a middle language introduced mid-stack without changing the meaning. This is complicated. It\u0026rsquo;s like asking for a fast python interpreter that can be ran directly or spit out C, then have that C code be editable with it\u0026rsquo;s changes reflected back into the python code. I\u0026rsquo;m aware of how complicated of a problem that is. Add a natural language description above the python level in the above and it just got much, much more complicated. Still, I think this is something we should aim for.\n Latency/Speed vs Things That Are Inherently Heavy  I\u0026rsquo;m asking for a lot of inclusion of AI/ML tech into the OS and day-to-day use, yet also asking for much, much faster response times in general. To some extent, hardware with dedicated silicon for AI/ML will make this better, but regardless, there\u0026rsquo;s no way around how much this conflicts. I think the only way to fix this is to recognize what latency is and isn\u0026rsquo;t acceptable.\nAs mentioned above in Presentation of Information -\u0026gt; Updates after Initial Draw, there are some things that are particularly egregious to the user from a UI timing perspective. Waiting on the computer sucks, sure, but having to babysit the computer while you wait on a prompt that could easily be given preemptively or make sure a task doesn\u0026rsquo;t time out is completely unacceptable.\nBut even just directly looking at speed and latency, there\u0026rsquo;s still a ton of room for improvement. Why does the root file system not retain at least an index of other file systems to let you browse while a HDD spins up or a network connection is established? Why do so many damn things have s u c h l o n g animations that have to complete before the user can continue? But most of all can we please stop building programs with electron or other things that are just full browsers for one program? Use literally anything else. The best way to lower latency is to use as little code as possible, good data structures, good libraries, and good tools. I said it contradicts to keep latency down when doing things that are heavy, but a lot can be done to make so much of what we use day to day substantially lighter to begin with with no loss in functionality. I understand why projects use Electron, but if you must please just use Flutter or Neutralino or Sciter or Ultralight even a game engine. Just, not something so heavy unless you need it? Please?\n Customizeability vs Default Inclusion  [TODO] Microsoft browser choice windows\nEverything is in the browser now anyway? #  Above I said that all of this should be in the OS and not just browser extensions as people still use a lot of non-browser tools, and I think saying that was rather dismissive. It is definitely true that when using a computer today the vast majority of your use will probably be in-browser. The problem lies in that \u0026lsquo;vast majority part\u0026rsquo; - that\u0026rsquo;s likely because in general people spend a lot more time consuming than creating, and the browser is built for media consumption.\nOn the other hand, most creative software - be it for writing, art, video, music, etc. - is not browser based because, well, it sucks for that. Maybe that will change as WebAssembly makes things faster, but I don\u0026rsquo;t see it happening, so I think we still need full OS integration for it to really matter.\nThe other point to make here is the browser probbbbabbllyy isn\u0026rsquo;t the best place to implement a lot of what I\u0026rsquo;ve mentioned so far given a lot of it is performance sensitive, works with private information, and relies on deeper tie in to the OS - something which for security sake the browser shouldn\u0026rsquo;t really be capable of.\nOn the other hand, one of the things I mentioned repeatedly was portability. Browsers actually have this working pretty damn well at this point, syncing beautifully between devices compared to how things are on Windows or Linux (I wouldn\u0026rsquo;t know about mac ¬Ø\\(„ÉÑ)/¬Ø)\nUnification vs Diversity #  Or why \u0026ldquo;I wish everybody used Linux!\u0026quot; is probably not the wisest thing to say.\n[TODO]\nWhat else is holding us back? #  Wheel reinvention #  Microsoft has been spending a lot of time changing to the new UI, and their calculator has been updated like a dozen times for UI now but still SpeedCrunch remains 1000x more usable and tools like WolframAlpha remain superior yet. Stop spending time on shit literally nobody gives a shit about.\n[TODO]\nChapter 5: What Might Radically Change Things? #  Body Modification and Bio-Engineering #  Another point is the idea of biohacking and body augmentation. Examples include implanted RFID tags (which I actually have) and magnets for sensing electromagnetic fields, though I think a lot of biohackers are missing the point. This is the future I see in store.\n[TODO]\nBrain Computer Interfaces #  Implant-less BCI\n[TODO]\nWrapping up #  In all honestly I\u0026rsquo;m not exactly sure what everything I just wrote is about. Mostly it\u0026rsquo;s just a lot of ranting, but hopefully it has been interesting. To round things off with a bit of a closing note though, I don\u0026rsquo;t actually foresee many of the things I mentioned becoming common place or many even being possible, if not simply because they\u0026rsquo;re require so many people to agree on standards, but there is one glimmer of hope, and it\u0026rsquo;s one of proof of uniformity. The terminal. Yes. This terminal:\nThe terminal emulator above is still compatible with the VT220 from 1983 (as are most terminal emulators) yet from it, with a good shell (like ZSH) I can do everything I can really think of: browse the web, chat with friends,listen to music, basically anything. I\u0026rsquo;m not saying we should all stop using chrome, but I think part of the reason so many neck beards and sysadmins still use the terminal is you can do so much with it, everything that uses it as a common interface, and it has programming capabilities. You can automate or string together just about anything, exactly as I described above.\nFinally, I\u0026rsquo;d like to say I understand we don\u0026rsquo;t all get the choice, be it by monetary, physical, or other restrictions, to have a \u0026lsquo;perfect\u0026rsquo; work environment. If you live in the city there will be noise, If you live in the country, you may be limited by your internet connection, I get that. Obviously I don\u0026rsquo;t expect everyone to go out and make their own versions of some of the high tech, borderline art installations that I linked either. I also don\u0026rsquo;t think everyone\u0026rsquo;s down to go get an RFID tag in their hand. I just wanted to present what I see as \u0026lsquo;the future\u0026rsquo;. It probably won\u0026rsquo;t come in 2021 or even 20021. I do, however, hope this has inspired you to look at the way you work, the environment you work in, and how you can improve it.\nOther hardware and software pushing things forward #  [TODO]\nhttps://hookproductivity.com \u0026ndash; Link all the things\nAtlas Informatics (TechCrunch Article) - search all the things\nhttps://apse.io \u0026ndash; a photographic memory of all the text that goes across your screen\nhttps://desktopneo.com \u0026ndash; a UI mockup for a better system\nhttp://screenl.es/why.html \u0026ndash; the Screenless Office\nhttps://dynamicland.org \u0026ndash; computing that works with the environment\nhttps://arcan-fe.com/2020/02/10/leveraging-the-display-server-to-improve-debugging/ - it\u0026rsquo;s in the URL\nOther people that have ranted about similar things, but usually a bit more politely #  [TODO]\nhttps://mmcthrow-musings.blogspot.com/2020/04/a-proposal-for-flexible-composable.html\nWhat do I care the open web is dying? (Abhinav Sharma, Cofounder Insight. ex Mozilla \u0026amp; Facebook)\nalright, so, yes they're still expensive as all hell, but like if you go DIY then I think they're mostly attainable to most people. I'm sure there's a bit of privlidge talking there, but ‚ïÆ(‚îÄ‚ñΩ‚îÄ)‚ï≠ Programmer's Dvorak is a thing and honestly I want to know if anybody actually uses it? Having the numbers like that hurts my brain. Seriously, check these out. You won't believe some of what's in here. MIDI is currently in a transition period from MIDI on a 5-pin Din to over TRS exactly because of this reason. Unfortunately, there's now two competing versions of MIDI over TRS called TRS-A and TRS-B where the signals on each pin are mixed around. Making it even worse, there's even a version that runs on 'mono' TS cables. It's a mess. Sub-Pixel Rendering is effectively abusing the fact that monitors will have a sort of trippled horizonal resolution, where each individual R, G, and B sub pixel is treated like an individual pixel that can be rendered to. This can make text look substantially sharper, but is why when you take a screenshot and blow it up you might see weird colors around the text. It's a hacky work around. The interface on your display matters greatly as well, the most common at the are HDMI, Display Port, DVI, and VGA\nVGA is the worst option here, as it's an analog signal. This means the signal can do strange things, getting corrupted between your computer and the monitor. Typically this is a blue, screw in connection with many pins DVI is still pretty common and looks like an even larger VGA connection, with a typically white, screw in connector. This signal is normally digital, though there is a variant of DVI that can be adapted into VGA. Of note, DVI can also be adapted to HDMI though you will not have audio, as DVI does not carry sound\nHDMI, probably the most well known connector, has multiple revisions, the revision determines many things such as the maximum resolution, refresh rate, and weather or not more obscure things such as HDR are supported. HDMI is usually considered the best of these three options\nTaking the crown however, is Display Port (DP). Like HDMI display port does have multiple revisions which do differentiate similar things; however, Display Port will generally support high resolutions and more features at any given point. Assuming you're running a bog-standard 60hz 1080p display however, you'll find no difference between DVI, HDMI, and DP - unless you need sound, in which case you'll want to use HDMI. FreeSync is the open standard made by AMD, and, even most FreeSync monitors will work fine on Nvidia card. GSync is Nvidia only and is more expensive to impliment - in part because it uses a full damn FPGA shoved into the back of the monitor - but does offer more features except when it doesn't and it's just rebranded FreeSync with a lil' Nvidia Approved sticker. It's complicated and a mess to understand. As of the time of writing both Freesync and GSync are supported on Linux, but quite rough around the edges. I will concede the C920 can be made significantly less shit by just turning off most of the 'auto' settings and setting everything by hand. This can be done on Linux with GuvcView, but on Windows I've found all the recent drivers make it impossible, so, I stand by it still being shit. In the case of things that can be used standalone, not connected to a computer, like my afforementioned MorningStar MC6 midi controller, it makes some sense.  Fuck Adobe. The Launchkey MK2 has an almost impressively bad keybed. Roli, the company behind the Seaboard Block and Lighpad Blocks is a bit controversial. Not like, Behringer levels of controversial, but still. ‚ïÆ(‚îÄ‚ñΩ‚îÄ)‚ï≠  "});index.add({'id':1,'href':'/interviews/soatok/','title':"Soatok",'section':"INTERVIEWS",'content':"An Interview With Soatok Dreamseeker #  12/3/2020\nThank you for taking the time for this interview Soatok. Your blog at https://soatok.blog shows that you\u0026rsquo;re a furry crypto nerd, but I\u0026rsquo;d like to hear how you\u0026rsquo;d put it, so, to get started, can you describe yourself?\nWhenever I\u0026rsquo;m asked, I usually say something to the effect of, \u0026ldquo;I\u0026rsquo;m a security engineer with a dhole fursona that sometimes writes about cryptography on my furry blog.\u0026rdquo;\nThere\u0026rsquo;s actually a lot more to the story than that, but comical understatement is somewhat an unspoken tradition among my technical friends. (I can\u0026rsquo;t tell if it\u0026rsquo;s humility or impostor syndrome with them.)\nOutside my fandom persona, I\u0026rsquo;ve written the code that helps to secure a double digit percentage of the websites on the Internet. I work on a cryptography team at an unspecified technology company. I\u0026rsquo;m very deeply immersed in this stuff, for the good of the Internet, and even if I didn\u0026rsquo;t set out to talk about cryptography topics, it would leak out (as it often does with my dumb Twitter jokes).\nWhat are some your favorite projects you\u0026rsquo;ve worked on?\nMy favorite project is usually whatever I\u0026rsquo;m working on at a given moment.\nIn the past, I\u0026rsquo;ve implemented a full suite of constant-time JavaScript algorithms, only to discover Thomas Pornin already did something similar for C.\nMy current project involves creating a series of open source libraries to make it easier for JavaScript developers to implement end-to-end encryption in their own applications.\nWhy Javascript?\nCryptographers have an orthodoxy that loosely follows the same battle lines as infosec opinions on programming languages: PHP bad, JavaScript harmful.\nI think the intent is, if they neglect these languages, they can exert some sort of bastard lovechild of market pressure and darwinism to coerce developers onto programming languages that are more suitable to secure cryptography than the ones they\u0026rsquo;re already using.\nIn practice, this just means that the programming languages that most of us use are less safe than they could be, and the ivory tower academics and infosec thought leaders just hold their nose up to the thought of meeting them halfway. This makes the Internet less secure for us all.\nIt\u0026rsquo;s interesting to me that you\u0026rsquo;re so openly furry and mix that in with all of your more technical posts about cryptography, much like I have here on OpGuides. Why did you make the decision to do both under one unified identity and what has the reaction to that been like?\nI love the furry fandom and I\u0026rsquo;m deeply fascinated by security topics, so it\u0026rsquo;s an obvious cross-over for me. But there is more to it than just that!\nI mentored a few folks over the years, and tried to nudge many more towards supportive, accepting, and uplifting venues. Almost everyone involved in that was deathly terrified of, for example, hiring managers finding out about their fandom participation.\nWe both know this, but a lot of business people do not: The furry fandom is widely regarded as a LGBT subculture. Discriminating against people who participate in our community is a good way to undermine your own diversity and inclusion initiatives.\nBeing openly and shamelessly my furry self is an easy opportunity for me to normalize our community to companies that hire security analysts, programmers, or cryptographers. This has a few effects:\n Hiring managers are more exposed to furries in tech, which makes them less likely to react badly if someone discloses their hobbies during an interview (whether or not they intended to). Neophytes get to see someone with a lot of experience in the industry be openly weird, so they will be a little more comfortable in their own fur. Queerphobes that use anti-furry hate as a dog-whistle out themselves on social media in droves, which helps identify which companies should be avoided. The rarest consequence, but has happened to me about a half-dozen times in my career: More tech people that were incidentally furry become open about it when they see no significant ill befall me.  I hope it\u0026rsquo;s clear that the end result is a net positive, even if the prospect of doing what I do is a little scary to a lot of people.\nIf you could go back and make the decision to post under two different personas, would you? at least in part?\nNope! Game Theory says it\u0026rsquo;s the optimal strategy.\nCryptography is under constant attack from the US government. Do you think there are things the US government should do related to crypto?\nThe US government should really stop trying to give the Department of Justice a backdoor.\nLike, I get it: Their bottoms still need a regular powdering after Edward Snowden revealed the NSA was literally spying on everyone. They wanted to keep abusing their power with impunity and secrecy, and now they can\u0026rsquo;t. Boo hoo.\nBut if they\u0026rsquo;re really as interested in \u0026ldquo;protecting the children\u0026rdquo; as they like to claim, they\u0026rsquo;d invest more in end-to-end encryption and tougher privacy protections; especially but not exclusively for kids!\nWhat are your thoughts on cryptocurrency? Are you concerned about the environmental cost from the electricity mining uses?\nCryptocurrency is a mixed bag, and it\u0026rsquo;s hard to give a succinct answer.\nOn one paw, it\u0026rsquo;s one of the most reliable revenue sources for advancements in cryptography. A lot of the work on practical zero-knowledge proofs happening today is the result of Zcash and Ethereum developers trading recipes and not being preoccupied with Line of Business development work at their dayjob.\nOn the other, it\u0026rsquo;s a magnet for unscrupulous hacks and ancap tech bros. You know the type: They hate the state and want governments to get off their back, but they love the hierarchies of capitalism and the privileges of private property and systemic state violence that serves the interests of the wealthy? If you see \u0026ldquo;Bitcoin maximalist\u0026rdquo; in someone\u0026rsquo;s Twitter bio, 99 times out of 100, you\u0026rsquo;re dealing with that beast.\nWhat changes do you think should be made to social media platforms to give users the best combination of privacy, ease of use, and security?\nPublic messages (e.g. tweets) should have slightly more granular access controls than the current all-or-nothing approach (Is your account public or private?).\nPublic messages should be editable (with a public changelog). Replies should be clearly marked if they were directed at a previous version, and the option to view them in context should be available.\nPrivate messages should be end-to-end encrypted, using keys that the platforms cannot access.\nIf you could go back and redesign any part of how the internet works, what would you change?\nI would have encrypted every packet from day one, rather than slowly bolting it on years later. For example: Email encryption is still opportunistic in 2020. We\u0026rsquo;ve only started addressing DNS privacy. (Note: DNS privacy is a good problem to solve; DNSSEC is stupid.)\nLast week the CEO\u0026rsquo;s of Facebook and Twitter just went to a congressional hearing about ¬ß230 of the CDA, where many senators expressed concern about biases in how tweets and posts are flagged for misinformation and how accounts are suspended for Terms Of Service violations. How do you think this problem should be addressed moving forwards?\nAssuming they\u0026rsquo;re being even mildly honest about anything (which I don\u0026rsquo;t really believe), Silicon Valley needs to get over their fear of the perception of having anti-conservative bias. This fear leads to them tolerating hate speech and rallying cries for racist and transphobic violence.\nFacebook is unsalvageable.\nI previously touched on defeating coordinated inauthentic behavior at scale in my Medium writing days.\n(My Medium writing days ended because I got tired of their constant pressure to monetize my writing. I\u0026rsquo;m happy to pay for the privilege of publishing my ideas, ad-free, without a paywall.)\nHaving just gone though the 2020 election, with what seem to be mass unfounded allegations of voter fraud, do you think electronic voting, potentially over the internet, should have been used?\nNo.\nWhat\u0026rsquo;s the failure mode for a hacked election? You can\u0026rsquo;t just roll back a political career advancement.\nThe threat model for elections is incompatible with the BYOB mental model of consumer electronics (which is what people imply when they talk about electronic voting).\nPaper ballots. You need an audit trail that technology cannot tamper with.\nThe repository for YouTubeDL, a popular tool for downloading videos off of many more sites than just YouTube, was taken down from GitHub recently as a result of a DMCA take down notice from the RIAA, in part because they were using copyrighted videos in their test cases to ensure their method of bypassing YouTubes \u0026lsquo;Rolling Cipher\u0026rsquo; code worked. What do you think about this?\nThe RIAA is a blight upon the Internet and needs to be dismantled, but only after we tear down JSTOR and Elsevier. Remember Aaron Swartz.\nThe EFF does a lot of good work to oppose tyrants like the RIAA.\nWhat are your thoughts about bypassing Digital Rights Management (DRM) in general?\nDRM is diametrically opposed to endpoint security, transparency, and trustworthy computing. Only corporate shills that sold their soul to the intellectual property machine ever think DRM is a good idea for consumer devices.\nThat being said, the notion of using DRM to run code in \u0026ldquo;the cloud\u0026rdquo; that the cloud service providers cannot understand or tamper with is very attractive. But that\u0026rsquo;s an inversion of the normal power dynamic.\nDo you think society has been negatively or positively impacted by the way the Internet and social media has changed how people interact?\nI think it\u0026rsquo;s mildly positive. It\u0026rsquo;d be significantly more positive if tech companies took coordinated inauthentic behavior, misinformation, and propaganda more seriously 10 years ago.\nThere\u0026rsquo;s a lot to hate. But I wouldn\u0026rsquo;t have known about the furry fandom\u0026ndash;let alone ever participated in it\u0026ndash;if it weren\u0026rsquo;t for the Internet and social media.\nAs time moves on there is at least some growing public understanding of cryptographic security, like HTTPs and why someone may want their phone to be encrypted, etc. - Do you think it\u0026rsquo;s necessary that the public have an even better understanding than what is currently normal? What things do you think most people miss that could be easily taught?\nPeople don\u0026rsquo;t need a graduate course in number theory and CS101 descriptions of RSA, which is what the cryptography orthodoxy pawned off on the public.\nI wrote a guide to learning cryptography as a programmer earlier this year.\nWe as an industry need to spend some time talking to the UX experts, technical writers, and science communicators of the world and devise a concise and coherent public education strategy. Until that happens, we\u0026rsquo;ll continue to flounder around in the dark but some of us will make better and easier-to-use tools, so things won\u0026rsquo;t be so bad.\nIs there any skill you wish you had developed in a formal education that you didn\u0026rsquo;t?\nThere\u0026rsquo;s a lot of academic formality that I missed out on, including:\n How to write a whitepaper for a scientific journal. In   \\( \\LaTeX \\)  . Familiarity with the mathematician jargon (especially lambda calculus) that obfuscates intuition. How to not be a filthy degenerate (or so my detractors say).  When doing crypto stuff, what does your work environment look like?\nIt depends what I\u0026rsquo;m doing.\nMost of my open source security work over the years involved a web browser with Github.com on one monitor, and Notepad++ in the other. Nothing too fancy.\nIf I\u0026rsquo;m reverse engineering (e.g. Android apps), I\u0026rsquo;ll boot up a Virtualbox machine and fullscreen it on one of the monitors.\nI do find good background music indespensible to deep analytic work. Time I by Wintersun and Malcom Robinson\u0026rsquo;s Chrono Trigger Orchestral Selections are two playlists you\u0026rsquo;ll hear emit from my bedroom all day long.\nI\u0026rsquo;ve worked from home for most of my career, and for the entire past 6 years, so my home computer setup is pretty sweet.\nIs there any skill that you spent too much time developing that you wish you hadn\u0026rsquo;t?\nNot particularly. There‚Äôs no such thing as useless knowledge; only stuff you don‚Äôt want to use, or don‚Äôt know how.\nWhat\u0026rsquo;s the most important skill that you\u0026rsquo;ve taught yourself?\nActive listening. Hands down.\nThe most stressful problems you will ever encounter in almost any profession is either, at its core, a communication problem, or the consequence of one.\nThat being said, I didn\u0026rsquo;t entirely teach it to myself. My close friends (a.k.a. chosen family) were all deeply involved in those lessons. :3\nWhat do you do for fun? Any books, movies, TV shows, etc. that you\u0026rsquo;d recommend?\nI frequently play co-op video games with my chosen family. We\u0026rsquo;re currently experiencing Final Fantaxy XIV together, and looking forward to Corepunk when it comes out.\n(Sometimes we even stream our gameplay, but usually on this channel.)\nWhat\u0026rsquo;s the biggest \u0026lsquo;Oh Shit\u0026rsquo; moment you\u0026rsquo;ve ever had, be it one you caught in time or not?\nOne time I was migrating a PostgreSQL cluster at night, and I accidentally typed the rm command into the wrong terminal.\nI called my boss and then we discovered the backup software had been failing for nearly a month. (I did have a manual snapshot from a week ago, but that was a week of data lost.)\nNot a fun year.\nWho are your biggest inspirations? What creators do you think are way to underrated and deserve a shout out?\nThere are too many people to list. I feel like I\u0026rsquo;d do everyone a disservice if I tried. Too many artists, too many musicians, too many videographers, too many photographers, too many dangers.\nMaybe if I could Ctrl+A, Ctrl+C the furry fandom (sans the alt-right), that\u0026rsquo;d be closer to the comprehensive list.\nOutside of the fandom, my best friend of 12+ years recently made a fursona.\nI\u0026rsquo;m very fortunate to count @SwiftOnSecurity among my friends too.\nWhat\u0026rsquo;s the best advice you\u0026rsquo;ve ever received? Worst?\nBest (all from my best friend over the years):\n Just because you can doesn\u0026rsquo;t mean you should. The truest measure of a person is what they do when they think no one is watchng. Power is temporary; what you do with it when you have it is what counts.  Worst:\n You need to find God \u0026ndash; annoying person in my high school  How do you stay motivated to keep doing cool things?\nAt this point, it\u0026rsquo;s a habit for me. But early on, I was motivated largely by spite.\nI got my start in tech by playing with a program called RPG Maker, and I decided to make a website for my personal projects. The indie game community back then was super toxic, so people in the community kept hacking my website. (My early PHP wasn\u0026rsquo;t very good.) I got angry and decided I would learn about web application security to stop them from breaking in.\nYears later, one of the perpetrators admitted to me what they were doing. By then, I was long over it.\nWhat hobby do you want to get into but haven\u0026rsquo;t had a chance to dive into yet?\nI have absolutely no musical talent. I\u0026rsquo;m getting a fursuit soon. Therefore, I figured learning to dance would be pretty cool :3\n"});index.add({'id':2,'href':'/posts/xx80/','title':"xx80",'section':"Blog",'content':"The year is 198x. #  I stare at my amber terminal. Hexadecimal fills my screen and my mind has become lost in the flow of 6502 assembly, as I hand optimize the code flow.\nI\u0026rsquo;m interupted when I recieve a message from my friend, _Maverik, he\u0026rsquo;s excited about the ground breaking CGI in Tron.\n Nostalgia is a weird feeling. We can forget when things happened, and misttribute things to entirely different decades. But, I think there\u0026rsquo;s something even more interesting going on with the now-sorta-fading nostalgia for the 80\u0026rsquo;s that could be seen when 2014\u0026rsquo;s Guardian\u0026rsquo;s of the Galaxy (or Vol. 2 in 2017) or 2011\u0026rsquo;s Ready Player One book (and 2018 movie) were a huge deal. These movies aren\u0026rsquo;t just appealing to a generation of Millennials that are pissed off that the world is going to shit because of the mistakes of their parents and grandparents- they\u0026rsquo;re appealing to a generation of people that has only ever known that mess. The kids, like me, that are in the awkward spot of being told just how awful it was to watch the news on September 11th, 2001 but not actually directly rembering it.\nSo, why would we be nostalgic for a time that we were never alive for? I think it\u0026rsquo;s because we\u0026rsquo;re hopeful.\nThe 1980\u0026rsquo;s were not a better time really. The Cold War was still a thing, being publically LGBT was crazy, Chernobyl happened, Computers were still mostly 8-bit, Asbestos was still being used, and, despite the numbers declining already, cigaretts were still way more common.\nAll that aside, the was something the 80\u0026rsquo;s had that we don\u0026rsquo;t have now. I\u0026rsquo;m hesitent to call it \u0026lsquo;hope\u0026rsquo; or \u0026lsquo;vision\u0026rsquo;, and honestly, I\u0026rsquo;m not sure there even is a good word for it. Regardless, I wasn\u0026rsquo;t even around to experiance it first hand given I wasn\u0026rsquo;t born until 1998. But, from what I\u0026rsquo;ve seen of the remnants, the parts that people try to remember- the good stuff that people drink as heavily sweetend, carbonanted nostalgia - there was an atmosphere of possibility. The Demo Scene was in full swing, as people pushed the 8-bit hardware of the time to it\u0026rsquo;s absolute limits. Computers were progressively being used to do more, impressive things. Culture from that era is portrayed in a way that gives you a mental image of crackin' a cold one and just enjoying life. Movies from the era- Back to The Future, Footloose, Weird Science - all told stories that were hopeful and fun and made a point of how the future is going to be better.\nIt took me a while to realize all of this, but I\u0026rsquo;m not nostalgic for the 1980\u0026rsquo;s. I\u0026rsquo;m nostalgic for the xx80\u0026rsquo;s. A time that only exists in the minds of people like me, nostalgic for something they never experienced. The next cultural revolution where we can band together under a banner of making things better. Where technological advancements have postivie cultural impact instead of negitive. Where the talk of the year isn\u0026rsquo;t about how damn partisan we are but is about the power of humanity to do amazing things. It just happens that having some sort of outlet to map that nostalgia to is helpful, and that the 1980\u0026rsquo;s that kids from that era remember is the best analogy that people of my generation have. So when I wear a shirt with Rocket Raccon or put up art of the Comodore 64, I\u0026rsquo;m not showing my admiration for those things themselves. I know the real 1980\u0026rsquo;s weren\u0026rsquo;t that. Instead I\u0026rsquo;m giving myself physical reminders of a place and time that only exists in my own mind and making that much more concrete my dreams for a better future.\nInstead, for now, I\u0026rsquo;m stuck in real world. I\u0026rsquo;m in 2020 where my student loan debt is piling up, there\u0026rsquo;s a raging pandemic, and I fear that I\u0026rsquo;m watching the not-so-perfect union around me crumble. But, then I look around my room, and I see the \u0026lsquo;retro\u0026rsquo; tech and art, and for a little while I feel like it might be possible that we\u0026rsquo;ll do better, that maybe I\u0026rsquo;ll live to see the xx80\u0026rsquo;s come.\nSo for those that are older than me, please don\u0026rsquo;t mistake our hope for blind romanticism or a warped-sense of nostalgia. We know. I don\u0026rsquo;t think I was born in the worng generation because I didn\u0026rsquo;t experiance the 1980\u0026rsquo;s. I\u0026rsquo;m pissed that the time I did get to experiance as a kid and that I\u0026rsquo;m living in now has been ruined by giant media conglomerates, corrupt politicians, broken social values, and people that have resigened themsevles to an attidude of \u0026ldquo;it\u0026rsquo;s going to hell anyway, so why bother?\u0026rdquo;. You got IRC, I get spyed on and manipulated by Facebook. You got real movies, I got sequels. I\u0026rsquo;m not going to pretend my generation is unique in dealing with the mistakes of the last, but instead of having hope we have record rates of suicide and depression. It\u0026rsquo;s just that it\u0026rsquo;s easier to have physical attachment and hope mentally assigned to something that\u0026rsquo;s already happened than it is to have blind faith in the future.\n The following response is from Nicole Replogle, born in 1984.\n The 80s represented a time when the future had limitless potential. When everyone was excited to see what the next decade held in store. The boomers had the opportunity to realize that future, and instead of making something good and beautiful and exciting, they made sure they had the distinction of being the first \u0026ndash;and last\u0026ndash; generation to ever have that kind of opportunity. There\u0026rsquo;s so much 80s stuff right now\u0026hellip; thinking about Stranger Things, and then stuff like I Am Not Okay With This which is like, present time with the serial numbers filed off in an \u0026ldquo;80s but make it gayer\u0026rdquo; kind of way\u0026hellip; Even a lot of the \u0026ldquo;present day but with the numbers filed off\u0026rdquo; stuff feels like \u0026ldquo;present day but the future is open and maybe isn\u0026rsquo;t full of possibilities, but it\u0026rsquo;s not empty of it and that\u0026rsquo;s the best we can imagine\u0026rdquo;.\nGod, the future was so fucking BRIGHT in the 80s and I think a big part of why millennials are harder to fire up than gen Z is that we knew what life was like before and nobody knows how to process the loss of countless futures that they witnessed as children and young adults. We\u0026rsquo;re living with grief we can\u0026rsquo;t even begin to communicate and we\u0026rsquo;re going to live with it until we die.\nLike, you know what\u0026rsquo;s had me fucked up for a couple weeks? I work so hard trying to live inflicting as little harm as possible on people and the environment, knowing it\u0026rsquo;s a losing battle, and come to find out that the whole plastic recycling movement was a giant fraud, that it only existed as an anaesthetic to the guilt of our parents so they\u0026rsquo;d fuel the rise of single use plastics. And because millennials on down are recycling their waste at high levels, it\u0026rsquo;s easier to drop the act rather than put in the work because society would grind to a halt without single use plastics now.\n The following response is from Krista Carlson, born in 1980.\n Actually, the 80\u0026rsquo;s themselves were more hopeful. We had some problems with depression and suicide, but not like today, and the enxiety almost everyone feels today was very rare. There was still poverty, but less pressure. There was less crime, and more freedom. Kids could be kids, and overall, there was a feeling of innocence about the 1980\u0026rsquo;s. The early 1990\u0026rsquo;s was when we as a nation became teenagers. We had boomboxes and were rebelious. We were loud and colorful. Then came the sobering reality of watching the twin towers crumble in 2001, and I think that, more than anything else, changed American culture. We lost our security and innocence and faced a whole new era of sobering reality. Now, we know the politicians are all corrupt. Now, we know we live in a society that is crumbling. Kids deal with adult problems. I\u0026rsquo;m not sure you can put the genie back in the bottle, but I suppose it is nice to keep the bottle around to remember the days when there was still magic in the world.\n"});index.add({'id':3,'href':'/posts/anti-consumer/','title':"Anti Consumer",'section':"Blog",'content':"As I walked to my car after class I could smell the ashes of a cigarette and hear the echos of a train scraping on its tracks. The cool foggy air held still beams of light. It looked like a scene from Blade runner, but I couldn\u0026rsquo;t help but feel like the Android\u0026rsquo;s of it\u0026rsquo;s inspiration, lusting after something to make me feel alive.\nThe drive home was mentally taxing. The fog so dense that cars ahead seemed to be balls of light floating in the distance and keeping sight of the lines to stay in my lane took a constant effort. After a little over half an hour of focus and 80\u0026rsquo;s synthwave music I pulled into my driveway.\nMy day had been long, and I hadn\u0026rsquo;t had a hood meal to speak of so I heated up some leftovers and talked with my parents as I ate. My mom was distracted by writing her next book and my dad was lost in a sea of Facebook memes, which he was showing us between intermittent laughter. I wasn\u0026rsquo;t really amused, in fact I was irritated.\nI ranted to him about something I know he\u0026rsquo;s heard from me before, the spheel of how Facebook is evil. How computers deprive us of our privacy and we willingly feed a machine that is well documented in its atrocities, and as usual he failed to see the point.\nHe used the same defense everyone does \u0026ldquo;All of my friends are on Facebook\u0026rdquo;\nHow many of those \u0026lsquo;friends\u0026rsquo; do you really talk to? How many of them just repost meaningless memes and jokes, while providing no insight, let alone basic updates on their life.\nSome of my absolute best friends are people I\u0026rsquo;ve met online or only know online, but none of them are people I stay in contact with though Facebook.\nThis isn\u0026rsquo;t a Facebook rant though, its a personal connection rant. So many of my friends and family consume social media to the point they don\u0026rsquo;t want to admit it but don\u0026rsquo;t even take the time to maintain the relationships they do care about. That stereotype about calling your mother? Yeah, there\u0026rsquo;s a point of reality in it. I dont know what it was like before Facebook, honestly, I really don\u0026rsquo;t. But I think we valued the connections we did have a lot more. Our friends may have been those from high school sure, but I know there used to be more tight night local communities that shared interests, but now the convince of social media has devalued the local meeting of friends. Which is ironic in a way. I\u0026rsquo;ve been in communites which would have never stood a chance of existing without social media to bring together the band of misfits but Ive also seen social media start massive amounts of drama that spiral out of control and destroy the local community.\nWorst of all though, I\u0026rsquo;ve seen social media devalue the importance of what people do. I figure maybe one or two people will read to this point, having lost interest long before now, and the same goes for much of the honestly great long form reporting I find online, or the longer stories people post for free for our entertainment. Creativity is becoming devalued as memes and short \u0026lt; 100 word posts become our new limits. Works of art that take time to digest and see meaning it get overlooked, poetry is dead, and heaven forbid you want to discuss politics in a civil matter. Hell, for many even the idea of playing a videogame or watching a movie is second to the instant gratification of short form content like Youtube, Reddit, or Facebook.\nIm not innocent in this, not by a long shot but I have two rules for myself which have helped:\n  For every two hours consuming content, I should spend at least an hour making something\n  At least 1/2 of my time consuming should be longer form content: be it full stories, books, movies, etc. Not YouTube, Reddit, Facebook, etc.\n  But when much of what I make, be it writing, music, or whatever is ignored because it\u0026rsquo;s not a viral meme or it\u0026rsquo;s too long to hold someone\u0026rsquo;s attention it seriously hampers my motvation, and I find it easier and easier to break my two rules. I\u0026rsquo;ve been doing a decent job, and as with any addiction it takes time to get out of and falling back is easy, but the reward of creating and consuming more filling content is much like having a nice home cooked meal instead of a super sugary diet.\nI just wish more people would appreciate each other\u0026rsquo;s cooking instead of eating candy all day. I want to work with people on these things, but if everyone else just stays addicted it\u0026rsquo;s hard to keep going. We\u0026rsquo;re inevitably social creatures and we do what our friends do, and doing things with friends is always better. Being on Facebook or Reddit, watching YouTube videos- these may trick your brain into thinking you have what you want, but being on the other side I really wish some of you would join me.\nI\u0026rsquo;m always down to hang out, to wonk together on making something cool, or talk about life, you just have to reach out not wait for me to post a funny meme for you to comment on. Lets talk about your hobbies and projects and what you care about and stop posting memes and Tumblr screenshots.\n"});index.add({'id':4,'href':'/interviews/loial/','title':"Loial",'section':"INTERVIEWS",'content':"An Interview With Loial Otter #  9/23/2018\nIntroduction:\nI\u0026rsquo;m Matthew or LoialOtter, a crazy person up in western Canada who likes to make stuff. I work at Kron Technology as an engineer mainly in FPGA, electronics design and hardware design.\nI don\u0026rsquo;t have any credentials except a certificate in baking and pastry arts. I\u0026rsquo;m self-taught mostly due to not being ever able to afford going to school. I suggest others do when the have the opportunity but it isn\u0026rsquo;t absolutely required.\nObviously working at Krontech has been a super cool experience of yours that has probably dominated the majority of your recent work, but what projects that you\u0026rsquo;ve done outside of Krontech did you have the most fun working on or do you find the most interesting?\nMy passions all lie around the crossover between digital and physical worlds. I love motion control and am absolutely thrilled when I can make some code move something or control something in the real world.\nA few years ago I attempted to make my own 3d printer company and designed a motion platform that was rigid and quite a bit larger than what was available at the time. It was also very high speed to handle the greater build areas. Unfortunately the business ran out of money before I was able to get the unit to market; a mistake on my part. The excitement, though, of getting a machine partly built and get it working through it\u0026rsquo;s own control loops is just\u0026hellip; amazing.\nI\u0026rsquo;ve done many other things both through work and out on my own; I\u0026rsquo;ve made PLCs cycle engines in cold weather to keep heavy equipment ready to run and operating in extreme conditions. I\u0026rsquo;ve hacked cars and reverse engineered the protocols in use to adjust the handling of all-wheel-drive systems. I\u0026rsquo;ve done heavy adjustments to my laser cutter, the small mill we have at my house and stuff like that as well.\nThe mill is another great example. The first thing I cut on it was the mounting brackets for it\u0026rsquo;s own steppers to CNC it. I had the thing partly CNC\u0026rsquo;d within a week of getting the mill installed and fully working within three weeks (Z-axis was a little more tricky). I continued on to add a fourth axis and then rebuild the fourth axis using another way when the first one proved too weak.\nThe most interesting part of any project is getting through all the tough design challanges and getting the hardware proven. The least-liked, for me, is software. I dislike it enough that I\u0026rsquo;ve always been searching for a way to write scripts that do the tieing together of the internal parts and have finally found something that nearly covers what I want: micropython. I\u0026rsquo;ve been working on a software replacement for the Lerdge-X 3d printer control board, a cheap board from china that\u0026rsquo;s surprisingly well built. It\u0026rsquo;s running micropython but behind the scenes I want an interrupt driven lowlevel control system that\u0026rsquo;ll manage the actual movement and thermal loops. This will allow me to quickly hack the board into what ever type of robot I want, use what ever control language I want and yet still have a reliable control loop that\u0026rsquo;ll properly handle being starved for motion updates. You can follow that at https://github.com/LoialOtter/micropython and https://github.com/LoialOtter/Open-Lerdge-X\nWhat part of what specific project has been the most difficult and/or most rewarding thing you\u0026rsquo;ve ever worked on?\nHard to say the most difficult and/or rewarding. There was a very good one when working on the all-wheel-drive system where due to a very small detail in the readout protection on STM32 devices we weren\u0026rsquo;t able to replace the boot code on devices that were already shipped. It was a very troubling issue as the bootloader I had built was causing check-engine lights on very select vehicles (ones that I didn\u0026rsquo;t test on). The issue was that the bootloader wasn\u0026rsquo;t passing CAN traffic within the window given for connection before the final software started. The fix, of course, was to patch the new bootloader but due to the first 4KB being locked down and non-erasable without bricking the device, it wasn\u0026rsquo;t possible to make a payload image that\u0026rsquo;d just reflash the CPU.\nThe solution was a little unusual but worked well enough. When stepping through the original bootloader I noticed that a function used to clear ram on the device was located outside the 4KB block over at about 7.6KB. I wrote a special C function that had inline assembly which reset the CPU manually to a known state, set up the interrupt table so it was at a different location and then fiddled the stack both so the return from the function would call reset and it would unwind the stack to zero when doing so.\nIt took about a month to find a solution, develop the return function and get through all the nitty gritty bits and testing. The result was updating the bootloader on all the devices in the field, fixing the issue as well as making the system a little more resiliant to similar problems.\nWhat in general as you work on something causes you the most issues- that is what reoccurring problems do you / have you had? This could be related to your field or how you work.\nGetting going on software. I have way too many projects that are sitting around with full hardware almost working but the inertia of getting going on the software is easily the most difficult hurdle even though it\u0026rsquo;s often one of the simplest. The issue is sorta a form of analysis paralysis; deciding how software is to be laid out is one of those things that changes how software works for the entirety of it\u0026rsquo;s life. The first few lines of code usually defines the rest of the whole thing and I\u0026rsquo;ve written the wrong first few lines so many times that it scares the crap out of me.\nWhat is your favorite \u0026lsquo;hidden gem\u0026rsquo; tool, this could be software or hardware (or say both)\nMicroPython (not Circuitpython, sorry). It\u0026rsquo;s totally OP in getting past that initial difficulty as long as you don\u0026rsquo;t have to write underlying systems for it. On STM32 devices, especially, it\u0026rsquo;s amazing as you have a USB interface that offers a filesystem as well as the REPL, a command line interpreter for python. The filesystem is where your code will end up once it\u0026rsquo;s working. It\u0026rsquo;s saved in source form and compiled on load to bytecode or machine code depending. The overall speed of it is amazing; the bytecode is fast and works with nearly everything within Python 3.4 while the machine code types are way faster but lack the ability to allocate new memory and such (so ints are a little weird - don\u0026rsquo;t go past 28bits in machine code).\nREPL is utterly amazing. It allows you to simply open up a console and start poking at the CPU. As there\u0026rsquo;s a memory mapping system (machine.mem32/mem16/mem8) you\u0026rsquo;re able to write drivers for hardware in python and just get the whole system up and running very quickly.\nI\u0026rsquo;ve made a watch that\u0026rsquo;s been shown some around including part of the interview on the Amp Hour a few months back. That watch runs micropython even to the point where the display is being driven by DMAs and PWMs both fully set up in python. The watch took a day to get all the software up and running on including making the drivers for the DMA, timers, the accelerometer on the unit and i2c parallel expander as well. By the end of the day I had the buttons all working, it showing the time when you tilted it to the right angles, even was doing the whole charge regulation and such.\nWhat is the most valuable lesson you\u0026rsquo;ve learned \u0026lsquo;the hard way\u0026rsquo; when it comes to engineering\nWhen something\u0026rsquo;s too complex to work on directly, you need to step back and decide if you should start from scratch. Often rewriting software or redesigning a board from scratch takes a tenth the time as you already know what the requirements are. You also know to a greater degree how it\u0026rsquo;s supposed to work which you often don\u0026rsquo;t know when you start a project. Sometimes there\u0026rsquo;s a large loss of time due to it as you already spent so much time working on the thing but that\u0026rsquo;s often similar to the gamblers fallacy; If you keep going at it long enough it\u0026rsquo;ll get better and work better.\nIt needs to be assessed though because sometimes rewriting it will be far harder than just fixing it - this is a very difficult decision and always will be. With experience you\u0026rsquo;ll get a better handle on how much effort will be needed for both rewriting and fixing.\nEvery engineer faces the problem of feature creep in any project, how do you deal with this on things you work on?\nFirst off, make sure you start with a modular design. This is why the above comment that the first few lines are often the most important. If you make everything monolithic and all the parts talk to each other and are woven together, you will have a hell of a time designing for every possible addition later. The other benefit is that given a modular design you can look at all the shiny features you want and realize that you can implement them later - they aren\u0026rsquo;t important now. You can keep features from entering the design docs because the design docs should be the base parts to get the system going.\nYou can extend the design with all the cool features you want by documenting those features seperately and working on them as you need/want rather than throughout the whole process. If you need a break from the core of the project, you can take on one of those features that normally would be considered feature creep and work on them to keep you from going mad doing just the core (I have ADHD; this is one of my coping mechanisms).\nIs there any major skill you wish you had developed in formal education that you didn\u0026rsquo;t?\nAs I don\u0026rsquo;t have formal education outside an unrelated field (ask me some time about how related it is to electronics though); I don\u0026rsquo;t have a direct answer. I really feel that my project management and time management abilities would be far greater had I gone through formal education. I feel that engineering university, though great at giving you a good core of general knowledge that skims over most parts of engineering, isn\u0026rsquo;t really there to teach you that. It\u0026rsquo;s there to teach you time management and how to deal with crisis and priorities. The skills of being able to assess what\u0026rsquo;s absolutely critical right now to work on because you only have time to finish the work for one out of three classes and you have a final coming\u0026hellip; that\u0026rsquo;s amazing skills for when you\u0026rsquo;re getting near release and you\u0026rsquo;ve got a product almost working with four or five parts that are critical but you don\u0026rsquo;t have time to complete them all. What is going to make the user-base the most happy and do the best job fulfilling the requirements of the product. Are there parts that you can postpone and fulfill later?\nUnlike at university, real life has fuzzier time limits on things. Understanding that you can also trade off getting things done with how late you\u0026rsquo;ll be on development is also key; this is something I entirely didn\u0026rsquo;t know or understand when I was working on the 3d printer business. If you delay too long and have taken pre-payment, you may have to pay some people back and have extremely negative press from those people - getting a product out that does 90% of what they need and offer to get the last 10% done over the next period may be way better than delaying four or six more months. Also be prepared to check over everything, the other edge of such a move is that you didn\u0026rsquo;t fully vet the design out and may either have to break a promis to include a feature or to recall the product, a nightmare nobody wants to do.\nMost of those skills are in assessing situations and making critical decisions of what\u0026rsquo;s important and what\u0026rsquo;s not. School teaches these as a side-effect of their format. Even the point of money for schooling is often an eye opener: you may be able to cook everything for yourself, but how much are you loosing for time to do your work\u0026hellip; is that important enough to be a reasonable trade off? How can you manage your finances so when those crunch times come you\u0026rsquo;ll be ready for needing more lunch money to stay afloat.\nIs there any skill that comes to mind you spent to much time developing that you wish you hadn\u0026rsquo;t?\nFar too many things to count. As I think I mentioned I\u0026rsquo;m poor at time management. A number of times I\u0026rsquo;ve become too engrossed in things and don\u0026rsquo;t realize that I\u0026rsquo;ve led myself into a dead end in development. There are plenty of times I\u0026rsquo;ve had to step back and realize that I could have spent that time much better going through and defining the problem. My 3d printers are a great example of it took too long to develop and I screwed myself over on it because of that.\nAnother major trap of getting too deep like that is you\u0026rsquo;ll sometimes find yourself partway, looking like you got the hardest part done then figure out what you did, though tough, was just a fraction of what was needed for the next part. I have an FPGA debugger block that fits this; I have the verilog all written and overall it looks good but as soon as I went to start testing it I hit a major problem; I have to get the software working that\u0026rsquo;ll read out the data given. The real problem is that I have to write those programs in C/C++ and cross-compile them for the target and due to complexity involved that\u0026rsquo;s going to be a hellish thing. What I really needed was a scripting environment on the target and\u0026hellip; well\u0026hellip; the whole debugging system is on hold until we get the camera upgraded so I can get scripts running on it\u0026hellip;\nGetting away from engineering for a bit, What do you do for fun?\nMore engineering!\nOh wait, other than that\u0026hellip; probably more designing\u0026hellip;\nOkay fine; I like to go camping and on road trips and travelling and such. I love going to conventions. Most of my disposable income seems to be eaten up by personal projects, though, so I tend to just build more stuff on the side.\nAny good books, movies, TV shows, etc. You\u0026rsquo;d recommend?\nI recommend stop watching TV; If you like a series, wait until the whole series is finished then buy/aquire it and watch it all at once - so much easier to get work done when you\u0026rsquo;re not always distracted by what\u0026rsquo;s going to happen next or all the silly ideas that tv/movies/etc. give you\u0026hellip; or at least the ones they give me.\nI use movies as a drug of sorts. I get a rush due to the stimulus response and fanale of them. After a movie I\u0026rsquo;m working off that high for a while so I have to make sure that after movies I can stay up late and get work done. The actual movie isn\u0026rsquo;t very important though stuff like Deadpool is great.\nIf you could meet anyone, living or not, who would it be and why?\nThere are a few people I would love to meet and talk to: Chris Hadfield, Elon Musk, Peter Mansbridge (Moosebridge, heheehe). Top of that list is definitely Chris Hadfield though; his experience, his attitude towards things, he\u0026rsquo;s so nice\u0026hellip; and he\u0026rsquo;s so smart. Runner up would be Peter Mansbridge; he\u0026rsquo;s again extremely smart and has a tun of experience.\nAssuming you can talk about it, what\u0026rsquo;s the biggest \u0026lsquo;Oh Shit\u0026rsquo; moment you\u0026rsquo;ve ever had, be it one you caught on time or not? (I\u0026rsquo;m particallarly interested in the \u0026lsquo;almost did something lethal\u0026rsquo; scenarios)\nFirst one would be the bootloader mess-up earlier.\nAnother great example would be the time I was going and trying to repair a VFD (Variable Frequency Drive) and decided that, since I couldn\u0026rsquo;t see the signal right, attaching the negative side of the scope to the negative rail on the input rails of the VFD was a good idea. I had the thing powered up and was connecting the ground side aligator clip. The next moment I realised there was now a blind spot in the middle of my vision, my hearing was ringing from the bang the \u0026lsquo;gator clip made when it vaporized and my hand was strangely warm. It took a few moments to realize what had happened after pulling what was left of the clip away; I realized my hand was now electroplated with what was the aligator clip. I had shot -280V through the ground side of the probe and was lucky as hell. The end result was that most of my vision returned within a few minutes, a small amount of it took about two days to recover (or my brain to blot out the darkened spot). The probe I was using lost it\u0026rsquo;s dc coupling so I must have vaporized something internal to it; luckily the scope was fine.\nBecause of the engineer anti-social stereotype, I\u0026rsquo;m curious, do you think we as a species have been negatively or positively impacted by the way the Internet and social media has changed how people interact?\nBoth, heavily. Things like twitter and other social media systems as well as the near-anonymous commenting on things like youtube have made it seemingly encouraged to troll and/or abuse people. Without a face attached it\u0026rsquo;s easier for people to do absolutely shitty things to others.\nAt the same time, global communication makes doing high tech stuff possible. I learned electronics mainly through the internet and through communication with people who were hardly ever in my own province or country let alone my own town. I have more friends now than I did at almost any other point in my life with the only other time being when I was helping with conventions and even that was entirely because of the internet.\nYou expressed on your interview with the AmpHour that you developed your VFD pendent as a method to help you with ADHD, how has that been working for you?\nIf I hadn\u0026rsquo;t accidentally vaporized some traces on one of the boards, fantastic. The watch pendant was doing the job of reminding me to pay attention to if I needed to eat or drink and to check what I was working on to make sure it was effective. Since it\u0026rsquo;s no longer working as of a few weeks ago, that has been a really big problem again. I really need to make a new revision and possibly bodge together another test one so I have one again.\nAs I\u0026rsquo;m sure this\u0026rsquo;ll be asked, the watch lasted about 6 months of hell being worn. When moving some boxes I had previously crushed a few of the buttons and had to adjust the code so the damaged buttons weren\u0026rsquo;t either always pressed or draining the battery due to being shorted to ground (changed the pull-up to a pull-down on the input and ignored the input). I had drained the battery to zero volts a few times which had also impacted battery life but not terribly, it still got about 4-6 days off each charge. The thing that did it in was a partial short on the vibration board to GND which caused the battery to empty and worse, the current limit to keep the cell from charging. While trying to resurect the device, a process of using some sharp probes on a multimeter to jump the dropper resistor past the analog switch used for charging so it could get enough initial charge to boot the CPU and get things operating correctly again, I inadvertently shorted to another point and vaporized one of the traces going to the battery (LiFePO4 has an amazing current capability, it can easily vaporize traces if given the oportunity).\nWho are your biggest inspirations?\nMy mom and oldest brother. My mom took a job when I was quite young teaching early childhood education in northern bc. It was a small program and the position didn\u0026rsquo;t pay great but was better than most of the oportunities down on the coast. While growing up I watched her take this tiny little program that was sharing a chemistry lab in the college and grow it to cover most of western canada. She developed distance education systems back when the internet was just starting to reach northern bc. She had so many people telling her that it was impossible to make distance education work and that the program would never ammount to anything and rather than just arguing, she took their issues, studied and understood them and engineered the course system to work around or even embrase some of the issues to flip them on themselves to improve the whole system.\nMy brother taught me algebra or the beginnings of it in kindergarten. He taught me most math functions in advance of school and mentored me in programming. He did things with the early computers such as 3d engines that I didn\u0026rsquo;t even know were difficult until later when I started looking at what was possible.\nThere are, of course, others who were great inspirations though often in odd ways; I love Sherlock Holmes, for instance, because he is intelligent and understanding enough to know that lawfullness is not always the best coarse of action when solving things. I also strive to be like Horratio Hornblower (look up the BBC production, it\u0026rsquo;s amazing\u0026hellip; and i so should\u0026rsquo;ve listed this above)\nWhat creators (youtube, twitters, etc) do you think are way to underrated and deserve a shout out?\n Tesla500; damn, I work for him\u0026hellip; This Old Tony is awesome; absolutely love his humor and what he does is great. Marco Reps; again, great humor. He does tend to sell things a lot but hey, the content is still pretty good.  What\u0026rsquo;s the best advice you\u0026rsquo;ve ever received? Worst?\nBest:\nThose without dirty hands are wrong or at least assume that. Nothing will ever be perfect, aim for it but don\u0026rsquo;t expect to hit it and you\u0026rsquo;ll be great when you get 3/4 of the way there.\nWorst:\nHmm\u0026hellip; that\u0026rsquo;s much more difficult as I tend to forget most advice. Oh, I know, that guy who once told me not to bother making my own stuff because people have made so much better than everything I could make.\nWhat would be your perfect work environment?\nIt\u0026rsquo;d contain a nice kitchen with a gas range. It\u0026rsquo;d have a hammock with some monitor mounts around it so I can still get my multi-monitor setup. It\u0026rsquo;d also have tools for everything from CNC milling through electronics assembly.\nHow do you stay motivated to keep doing cool things?\nDo small cool things even when you don\u0026rsquo;t feel like it; It won\u0026rsquo;t always work but hey, sometimes it does. Watch single-episode tv shows if you\u0026rsquo;re really stuck, or go watch a movie\u0026hellip; use the internal drugs from the movie to motivate. Hug your mate/partner\u0026hellip; eh, totally doesn\u0026rsquo;t help in the short run but they will more than you can imagine. When your stuck, don\u0026rsquo;t just sit there and stare at it, go do something else for a bit (don\u0026rsquo;t invest too much time though, you still want to come back to this one) Sitting around and BSing about stupid ways of doing things is great brainstorming\nAlso don\u0026rsquo;t sweat the days you can\u0026rsquo;t fullfill a 120% like you normally drive for; that\u0026rsquo;s fine. If it goes on too long, do something you can\u0026rsquo;t ignore to remind you to do stuff\u0026hellip; haircut, paint your nails some weird colour, whatever\u0026hellip; what ever will give you that reminder that is hard to ignore. That\u0026rsquo;s what\u0026rsquo;s saved me a few times (Minecraft, I\u0026rsquo;m looking at you!).\n"});index.add({'id':5,'href':'/engineering/1-firstgoal/','title':"1 Firstgoal",'section':"Engineering",'content':"Chapter 1 - The first goal #  Every journey needs a place to start, and while many may like to start slow I think a head first approach is best. So that\u0026rsquo;s exactly what we\u0026rsquo;re gonna do. The very first thing we\u0026rsquo;re going to do is install a new Operating System (OS) on your computer. This is a pretty involved process. It will require you to Repartition your drive, change settings in your BIOS or UEFI, and install a new Bootloader. I know this sounds really hard, but it\u0026rsquo;s not as bad as it sounds and I assure you it\u0026rsquo;s worth it. The OS we\u0026rsquo;ll be installing is called Linux. Linux is actually what powers both Android and ChromeOS, and is a common descendant of the same system as Mac OSX. Linux is the OS that almost all of the servers on the internet use - from massive website like Facebook and Google to small Minecraft servers you can rent online to play with friends. What\u0026rsquo;s cool about Linux is it lets you get much closer to the hardware and see what\u0026rsquo;s going on, and it just generally makes writing code much easier.\nFurthermore, it\u0026rsquo;s super easy to set up an amazing development environment in Linux for getting work done with code or electronics, and at the end of the day you can still watch YouTube, play most games that are on Steam, or open up an office suite, just like Windows or Mac. Unlike Windows and (to a lesser extent) Mac though the system is laid out in way so that all the moving parts are exposed and able to be tinkered with. No setting or configuration is locked in and you have total control over your computer with Linux. It\u0026rsquo;s not just easier to run and use software and tools for doing hardware and programming development on Linux, but it\u0026rsquo;s also easier to find and install the tools in the first place, as you\u0026rsquo;ll see shortly. Finally, Linux has a great track record of stability, as there are many Linux servers that run 24/7/365 to serve web pages, host services like games, and crunch big data in real time. In fact, all of the world\u0026rsquo;s top 500 super computers run Linux.\nBeyond that, there\u0026rsquo;s a degree of respect Linux has for the user that Windows and Mac both lack. In Windows 10 ads are being baked into the preinstalled programs from Minesweeper to the Email client, the OS pesters you to use Edge and Bing while simultaneously spying on everything you do. If you attempt to do even remotely system level things it\u0026rsquo;s increasingly easy to get the Frowny Face Blue Screen of Death (BSOD):\nAdd to this the fact that Microsoft basically laid off their entire testing department, and the nightmare that windows 10 updates have cause, forced online accounts, or well, just read this list. You\u0026rsquo;ll see pretty quickly why most \u0026lsquo;nerds\u0026rsquo; have a pretty deep seeded hatred for Microsoft.\nHonestly, the big one for me is just how much Windows tries to force their tools down my throat.\nI mean, this was a real error message I saw when trying to upgrade my system from 8.1 to 10:\nImage source do you really think Microsoft is at all competent anymore?\n Art by @monoxromatik Operating System: According to Wikipedia, \u0026ldquo;An operating system (OS) is system software that manages computer hardware and software resources and provides common services for computer programs.\u0026rdquo; put simply on your hardware this is probably Windows or Mac OS, and it\u0026rsquo;s what everything else runs on top of  Repartition: To partition a drive means to take all the space on the hard drive and divide it into partitions onto which you can put a file system. Most operating systems like Windows, Mac OsX, or Linux, use multiple partitions for the operating system to function. Usually a filesystem is set up on each of these partitions, in windows this is typically NTFS for Hard Drives and FAT32 for flash drives, these file systems are effectively the index for all the files you\u0026rsquo;ll put on the drive, and as you may have multiple partitions and multiple file systems on one disk each will have an index to match. As complicated as it may seem this means the partition table can be seen as an \u0026lsquo;index of inecies\u0026rsquo; of sorts. Don\u0026rsquo;t worry if that\u0026rsquo;s a lot to understand right now, we\u0026rsquo;ll come back to this topic in depth.\nYou may also need to know how your drive is formatted, this is if it is using MBR (Master Boot Record) or GPT (GUID Partition Table), again, we\u0026rsquo;ll cover this. Don\u0026rsquo;t stress over all the new terms.\n BIOS/UEFI: The Binary Input Output System or Unified Extensible Firmware Interface is the thing you see before you computer loads the operating system, usually prompting to press delete or f2 to change settings. This is the system that is used to change the way all the components around the computer talk to one another and at what speed.  Bootloader: The bootloader sits at a special place on the hard drive selected for boot in the UEFI or BIOS, and is what the computer uses to load the full operating system, most will let you chose what operating system you want to boot if you have multiple installed on you computer at once   Note, for everything on the left, I mostly picked on Microsoft and Windows as that\u0026rsquo;s what most people run. I have just as many, if not more, complaints for Apple and OSX. It\u0026rsquo;s just that I suspect there will be far more Windows users reading this than Apple users.\n   "});index.add({'id':6,'href':'/engineering/10-networking/','title':"10 Networking",'section':"Engineering",'content':"Chapter 10 - Networking #  [TODO] Add follow along making a network stack\nBasics #  Nodes\nThese are all the points in the network. There are terminal nodes and intermediate nodes.\nTerminal nodes are things like your phone, laptop, desktop, and other user-facing devices, as well as servers, like would be used for hosting games or websites.\nIntermediate nodes, are things that are internal to the network: Things like modems, hubs, switches, routers, etc.\nLinks\nLinks are the interconnects between two nodes. Generally these fall into two categories: Guided and Unguided\nGuided Links are those that only connect a few nodes (usually only two) and are typically physical, hard-wire links, often copper or fiber optic.\nUnguided Links are those that broadcast out. These can be radio based (WiFi, cellular, etc.), optical (Flashing lights but no fiber optic, just like, though the air), acoustic, whatever. These might be terrestrial (from the earth) or be satellite based.\nNot all Links can support the same bandwidth or throughput. In general, Coaxial is worse than Twisted Pair which is in turn worse than fiber.\nApplications\nThese are the things that you want to do: Talk to someone via voice, text, or video; browse the web; download files; etc.\nIt can also refer to the specific program used to do these things, so like Chrome as your web browser or Zoom for video calling.\nan API (Wikipedia) or \u0026lsquo;Application Programming Interface\u0026rsquo; is what defines how two programs talk to each other. This doesn\u0026rsquo;t have to be over the network, but often is.\nEnd Systems - Hosts/Server \u0026amp; Clients\nNot everything fits the host/server and client terminology, but generally the host/server is the one that is sending data, and the client is the one receiving, or another way to look at it, the client is the one making requests and the host the one fulfilling them.\nPeer to Peer\n[TODO]\nPackets\nWhile we could just send a continual stream of data down a wire, that has a lot of issues. For one, it makes it hard to share the wire with multiple people. Of course you could split the wire so each person get\u0026rsquo;s a split amount of time on the wire (Time Division Multiplexing) or, if the wire can carry a range of frequencies give each user a small portion of those (Frequency Division Multiplexing, which limits the throughput similarly), but both of these sorta suck as they assume a user will always be using their provided channel. Instead, we do a sort of Time Division, but by packet-izing everything. Basically, each stream of data you want to send get\u0026rsquo;s broken up into manageable chunks called packets, and then these packets can be sent though the network.\n[TODO] packet headers\nRouters and Switches\nTake data in and out, usually though bi-directional links, and can switch which link goes where. Usually with the help of a forwarding table\n[TODO] image here\n[TODO] store and forward - buffering,\nEnd to End Delay\nd_ECE = 2 (L/R)\nwhere L = bits per packet, R = tx rate of link\nQueuing Delay\nPacket Loss\nSometimes packets in the network don\u0026rsquo;t reach their destination. This can be for a variety of reasons. Maybe a switch along the line was overloaded and it\u0026rsquo;s buffer was full, maybe it took a bad route, maybe you have crappy wifi. ‚ïÆ(‚îÄ‚ñΩ‚îÄ)‚ï≠. It happens. Usually the percent of dropped packets is called your packet loss.\nForwarding Table\nBandwidth Vs Throughput\n[TODO] physcics of link vs data of link - expand on FDM vs TDM\nLAN Vs WAN\nLocal Area Network and Wide Area Network- on most home connections your LAN is the network in your house while the WAN is the internet at large, so the WAN port on your router is where you connect the cable from your Internet Service Provider (ISP)\nProtocol\nUsually a network is dependent on a stack of protocols. Each protocol is just a standard for the way too things communicate. As we keep going you\u0026rsquo;ll see more about IP (Internet Protocol), TCP (Transmission Control Protocol), among many others.\nMost protocols are determined by standardization bodies such as the Internet Engineering Task Force (IETF) or IEEE Standards Association (IEEE-SA)\nA typical network #  [TODO]\nIP addresses, Ports, Default Gateway, Routes \u0026amp; kernel routing table, subnet mask - https://www.aelius.com/njh/subnet_sheet.html, ping, traceroute (mtr/lft), dns - resolv.conf, pihole, caching / squid, localhosts, port forwards, DHCP, private nets, firewalls, chromecast port thing, https vs no s, rsync,scp,samba, cups, databases , pihole, BGP, RIP, OSFI, multi-zone wifi, single ap multi freq wifi, enterprise security, secured ethernet, https://blog.cloudflare.com/how-verizon-and-a-bgp-optimizer-knocked-large-parts-of-the-internet-offline-today/\nIETF \u0026amp; RFCs\nIEEE-SA\nParallel, Pipelined, Persistance and Performance\nThe OSI model of networking is the model of networking most classes will cover. It is slightly different from the one used by the internet, which is the TCP/IP model.\nIn the TCP/IP model, the Physical and Data Link Layers are viewed as a unified \u0026lsquo;Network Acces Layer\u0026rsquo;\nThe Network Layer is called the Internet Layer\nThe Transport Layer stays the same,\nand The Session, Presentation, and Application layer are all part of a larger Application Layer.\nBut, because I think it\u0026rsquo;s easier to cover it with things more broken up, I\u0026rsquo;ll go over the OSI model from here:\n1 - The physical Layer #  Coax, Twister Pair, Fiber \u0026amp; More #  Wireless (Terrestrial and Satellite) #  geostationary vs LEO\nHubs, Repeaters, Taps #  Carrier Pidgeon, Can, etc. #  2 - Data Link #  MAC and LLC\nEthernet #  PPP #  Switch #  Bridge #  Frames #  VLAN #  3 - Network Layer/IP Layer #  Service Models #  Not guaranteed delivery, bounded delay, or throughput. Sorta sucks, but it\u0026rsquo;s cheap\nPackets #  IPV4, IPV6 #  IPV6 is a total nightmare \u0026amp; Hacker News comments on this blog post (note, I don\u0026rsquo;t agree with everything here, just providing it as another person\u0026rsquo;s comments)\nIPV4-\u0026gt;6 Tunneling\nLogical: [6] \u0026lt;-\u0026gt; [6] \u0026lt;- \u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;- -\u0026gt; [6] \u0026lt;-\u0026gt; [6]\nPhysical: [6] \u0026lt;-\u0026gt; [6] \u0026lt;-\u0026gt; [4] \u0026lt;-\u0026gt; [4] \u0026lt;-\u0026gt; [6] \u0026lt;-\u0026gt; [6]\nMAC #  ICMP, IGMP #  traceroute\nSubnets #  https://www.aelius.com/njh/subnet_sheet.html\nStatic and Dynamic Routes #  BGP #  open, update, keepalive, notification\n4 - Transport Layer #  Multiplexing, Demultiplexing\nReliable data tx/rx - checksums\nflow and congestion control\nTCP #  tcp header diagram\nQUIC #  UDP #  Raw #  A brief dive into FSMs #  Go-Back-N #  Selective Repeat #  Timeout and Retransmission from Estimated RTT #  5 - Session Layer #  Authentication #  Sockets #  API\u0026rsquo;s #  NetBios #  PAP #  RPC #  SMB #  SOCKS #  6 - Presentation Layer #  TLS #  SSL #  IMAP #  7 - Application Layer #  HTTP(s) #  http://bright28677.tripod.com/proj2/httpformat.htm (both images)\nresponse codes - 200, 300\u0026rsquo;s, 400\u0026rsquo;s, etc.\nIn header lines\nHost, user agent, accept-language, connection (keep-alive), \u0026hellip;?\nGET, POST, HEAD, PUT, DELETE\n https://www.monkeyuser.com/2017/http-status-codes/\n http1 vs 2 v 3\ncookies because stateless\nin-band\nFTP #  still TCP, out-of-band, maintains state, passive v active mode\nDNS #  record types\nYou Smart TV is probably ignoring your PiHole (LabZilla)\n72% of Smart TVs, 46% of Consoles hardcode DNS Settings, (Hacker News Comments on article)\nDHCP #  Some texts will put this in Data or Network layer or Link Layer, it\u0026rsquo;s a bit ambiguous. It\u0026rsquo;s not -technically- necessary, much like DNS, but it\u0026rsquo;s used as a core part of the network in most networks. It does appear the RFC 2131 says it\u0026rsquo;s Link Layer, but it seems most people think it belongs in Application Layer.\nSSH #  IRC #  EMail (SMTP, IMAP, POP) #  mail servers and useragents\nUPNP #  NTP #  Telnet #  NFS #  Torrents #  Distributed Hash Tables\nTime #  Real time clocks, timezones, utc, etc.\nVPNs #  OpenVPN #  Wireguard #  Wireguard Quickstart page\nWireguard entry on the (Arch Wiki)\nTailscale #  Networking Tools #  Etherape #  Wireshark #  https://wiki.wireshark.org/CaptureFilters\nNmap #  Scapy / Kamene #  Kamene\n(G)NS #  HTTPie #  HTTPie [Github] - human-friendly CLI HTTP client for the API era\nFurther Reading #  What happens when\u0026hellip; [Github] - An attempt to answer the age old interview question \u0026ldquo;What happens when you type google.com into your browser and press enter?\u0026rdquo;\nBen Eater\u0026rsquo;s Networking Tutorial Series is pretty good:\n Chapter 10.1 - Weird Networking, because why not! #  cjdns + hyperboria\nipfs\ndat\nNetsukuku\nBeaker Browser\nBombadillo is a non-web browser, designed for a growing list of protocols operating outside of the web.\nEVE Online internet from https://blog.benjojo.co.uk, which has a ton of other really, really neat posts, like The Speed of BGP network propagation, or Hacking Ethernet out of Fibre Channel cards\nSoftware Defined Networking, ActivityPub\nGreenTunnel - \u0026ldquo;GreenTunnel bypasses DPI (Deep Packet Inspection) systems found in many ISPs (Internet Service Providers) which block access to certain websites.\u0026rdquo;\nAlternative Internet (Github list)\nAwesome Mesh (Github list)\nList of tools in the BlackArch repo, meant mostly for security research, though obviously many of these are network related and so might give some inspiration or lead to interesting rabbit holes\nDefcon channel (YouTube), DefCon is a security confrence, and naturally that means a lot of network security, including Including some on hacking sex toys\nWhy do we use the Linux Kernel\u0026rsquo;s TCP Stack (Julia Evans Blog)\nA smol tcp stack (Github)\nThe Cost of CPU Networking on a Host (David Ahern\u0026rsquo;s Blog)\nEncapsulation of TCP over UDP\nWORST POSSIBLE quality on YouTube? (YouTube, FlyTech Videos)\n\u0026lsquo;Nerfnet\u0026rsquo; tunnells TCP/IP over cheap NRF24L01 Radios (Hackaday, Tom Nardi) \nRFC for 700 HTTP Status Codes (Github, Joho)\nFun with IP address parsing (David Anderson\u0026rsquo;s Blog)\n"});index.add({'id':7,'href':'/engineering/11-math/','title':"11 Math",'section':"Engineering",'content':"Chapter 11 - Math #   The next few chapters are, regrettably, necessary for developing your knack. Math, Physics, and Chemistry and fundamental to all engineering fields and while something about each of the three subjects finds a way to make the 16 year old highschooler in us release a long, exasperated groan. I think this is mostly due to each of these things being taught in a way that takes the fun and interesting parts out and replaces them with trying to learn skills that have largely been outdated by the advent of calculators, computers, and the internet. With that, let\u0026rsquo;s jump into it:\nAs with all of OpGuides, please skip around as necessary. I suspect the start of this math chapter will be stuff many readers already know, especially those currently in college. Chapter 11 - Math #  some motivation, Klein bottle guy, non-euclidean games, fractals, colatz conjecture, \u0026hellip;\n1 - Algebra #  This section is a tad bit misnamed, as instead of covering just Algebra I\u0026rsquo;ll be covering most things you\u0026rsquo;d learn in a high school Algebra class along side it, plus probably a bit extra.  Number Systems #  To get started, let\u0026rsquo;s look at \u0026lsquo;Number Systems\u0026rsquo;. Essentially, there are a variety of \u0026lsquo;types\u0026rsquo; of numbers, rather than get all philosophical let\u0026rsquo;s just dive in and I think you\u0026rsquo;ll get the gist.\n‚Ñï - Natural Numbers #  Natural Numbers are the dead basic set of numbers, 1, 2, 3, 4, 5, etc. note, this this doesn\u0026rsquo;t include fractions, decimals, etc. or the number 0. Whole Numbers is the set of natural numbers and the number 0, so 0, 1, 2, 3\u0026hellip;\n‚Ñ§ - Integers #  Alright, Natural and Whole numbers are great and all, but what if we want to represent a deficit or debt? Negative numbers would definitely be nice- introducing Integers, this is just the set of Whole numbers and the their inverses, so \u0026hellip;. -3, -2, -1, 0, 1, 2, 3 \u0026hellip;\nIf you come from a programming background, do note that what programming languages call integers is ever so slightly different. Namely, mathematically integers include arbitrarily large numbers, but in programming most int types are bounded by how many bits they can store, for example, an 8 bit signed integer can only hold values ranging from -128 to 127. ‚Ñö - Rational Numbers #  Alright, so, what if we want to represent the number of slices in a pie? Sure, we could say that pie has been cut into 6 slices and 1 of the slices is gone, so 5 remain, but the obviously natural way to say this is 5/6 of the pie is left, and like that we\u0026rsquo;ve invented rational numbers.\nA rational number is any number that can be written as an integer over an integer. so   \\( \\frac{1}{2} \\text{ and } \\frac{-1}{2} \\)  are both obviously valid. \u0026lsquo;Improper\u0026rsquo; fractions, that is fractions where the top is bigger than the bottom, like  \\( \\frac{4}{3} \\text{ and } \\frac{-3}{2} \\)  are both valid too.\nOf note, these can be written as mixed numbers too, that is  \\( \\frac{4}{3} = 1\\frac{1}{3} \\)  , as  \\( \\frac{3}{3} = 1 \\text{ so the remaining } \\frac{1}{3} \\)  is just written next to it.\nNote, that rational numbers do include numbers with an infinite repeating decimal, that is while  \\( \\frac{1}{2} \\text{ can be written as } .5 \\)  ,  \\( \\frac{1}{3} \\text{ has a repeating decimal, } \\frac{1}{3} = .333333... = .\\overline{33} \\)  , where the line over the 3\u0026rsquo;s implies that the 3\u0026rsquo;s repeat infinitely. This is still a rational number.\n- Irrational Numbers #  Alright then, what\u0026rsquo;s an irrational number?\nWell, this is easier to answer with a few examples, the most well know of which is  \\( \\pi = 3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499... \\)  \u0026hellip; I think you get the idea.\nIrrational numbers are numbers where the decimal doesn\u0026rsquo;t repeat and as such can not be written as an integer over another integer. Because pi is a geometrically defined constant, it may be easier to look at something a bit more tangible.\nthe square root of a number is just the number that when multiplied with itself gives the number in question, so the square root of 4 is 2 because 2*2 is 4, the square root of 9 is 3 because 3*3 is 9, etc.\nBut what about the square root of 2? well  \\( \\sqrt{2} = 1.414213562373.... \\)  you get the idea. Like with pi, it\u0026rsquo;s a number that goes on forever, with no repeating pattern.\nLater on you\u0026rsquo;ll see other irrational constants like  \\( e = 2.718281828459.... \\)  and The Golden Ratio  \\( \\frac{1\u0026#43;\\sqrt{5}}{2} = 1.618033988749.... \\)  ‚Ñù - Real Numbers #  Finally, we\u0026rsquo;re up to the normal number line, that is, we now have the set of all numbers on the number line, all the way from -‚àû to +‚àû, (often written as ¬±‚àû) pick any number, with as many random numbers before or after the decimal point as you want, and that\u0026rsquo;s a real number.\n \\( i \\)  - Imaginary Numbers #  Yep, that\u0026rsquo;s pretty much everyone\u0026rsquo;s first reaction. What in the hell is an imaginary number?\nWell, okay, remember before how I said a square root was just whatever number you need to multiply with itself to get the number, so  \\( \\sqrt{4} = 2 \\)  ? This has a problem, a negative number times a negative number is always positive, so  \\( 3 * 3 = 9, -3 * 3 = -9, \\text{ but } -3 * -3 = 9 \\)  So, what would the square root of a negitive number be? There are no two numbers that can multiply to give us -1, so, we made one up!  \\( \\sqrt{-1} = i \\)  furthermore,  \\( \\sqrt{-4} = 2i \\)  i being equal to  \\(\\sqrt{-1}\\)  has some interesting properties with exponents. Naturally exponentiation is the inverse of a root, that is  \\( 3^2 = 9, \\text{ as } \\sqrt{9} = 3 \\text{ implies that } \\sqrt{9}^2=9\\)  ,\nWhen taken to negitive numbers, we can see this effect, so  \\( \\sqrt{-1}^2=-1 \\text{ implies } \\sqrt{-1}^2 = i^2 = i* i = -1\\)  So what if we keep taking i to higher powers?\n \\( i * i = i^2 = -1 \\text{ and } i * i * i = i^3 = -i \\text{ and } i * i * i *i = i^4 = 1\\)  then this pattern repeats, so  \\( i^5 = i^4 * i = 1 * i = i \\text{ and } i^6 = i^4 * i^2 = -1 \\text{ and so on, } i^7 = -i, i^8 = 1, i^9 = i \\)  and so on.\nNote, you may also see \u0026lsquo;j\u0026rsquo; used instead \u0026lsquo;i\u0026rsquo; to represent imaginary numbers. While you\u0026rsquo;re inital reaction may be \u0026ldquo;Who cares?\u0026rdquo;, I assure you you\u0026rsquo;ll see the value of this in a bit.\n‚ÑÇ - Complex Numbers #  Complex numbers then, the end of this adventure for most sane people, are just Real numbers with imaginary numbers, written together, so this is numbers like  \\( 32 \u0026#43; 4i \\text{ or } 420.69 - 2i\\)  . This brings about something called the complex plane, as now if we want to plot these numbers we can no longer use a simple number line, but instead need an axis for each part, one for the Real (‚Ñù) part, and one for the imaginary part.\nHere\u0026rsquo;s a video to help you understand imaginary and complex numbers, albeit it does assume you\u0026rsquo;ve at least seen both a little bit before.\n Hypercomplex numbers are also a thing, this term includes Quaternions which are used in some very high level physics, but otherwise you\u0026rsquo;ll most likely never work with these.\nNotation #  +, -, *, √∑, mod #  If you don\u0026rsquo;t know that addition, subtraction, multiplication, and division are, I think you\u0026rsquo;re in the wrong place\u0026hellip;\nThat said, there are some things you may not be used to. For starters, multiplication can be written in a variety of ways. of course there\u0026rsquo;s the classic  \\( 2 \\times 2 = 4 \\)  but you may also see  \\( 2 \\cdot 2 = 4 \\)  or  \\( 2 * 2 = 4 \\)  or just  \\( 2(2) = 4 \\)  , where parentheses with no operation in between imply multiplication.\nTypically, the  \\( 2 \\cdot 2 = 4 \\)  and parentheses methods are used on paper, while the  \\( 2 * 2 = 4 \\)  is used on computer screens as it\u0026rsquo;s easy to type.  \\( 2 \\times 2 = 4 \\)  is generally not preferred as it can be confused with other operations you\u0026rsquo;ll see later.\nSomething to keep in mind is that addition and multiplication are both, both commutative and associative, while subtraction and division are not. What this means is that while  \\( 2 \u0026#43; 3 = 3 \u0026#43; 2 \\text{ but, } 2 - 3 \\neq 3 - 2 \\)  (The Commutative Property) similarly,  \\( 2 * 3 = 3 * 2 \\text{ but, } 2 \\div 3 \\neq 3 \\div 2 \\)  Furthermore,  \\( (2 \u0026#43; 3) \u0026#43; 4 = 3 \u0026#43; (2 \u0026#43; 4) \\text{ but, } (2 - 3) - 4 \\neq 2 - (3 - 4) \\)  and  \\( (2 * 3) * 4 = 3 * (2 * 4) \\text{ but, } (2 \\div 3) \\div 4 \\neq 2 \\div (3 \\div 4) \\)  , by the Associative Property.\nFor division, there\u0026rsquo;s some terminology you should know. First of all, in  \\( \\frac{a}{b} \\)  , a is the numerator and b is the denominator. The reciprocal of  \\( \\frac{a}{b} \\)  is  \\( \\frac{b}{a} \\)  . This is actually pretty useful, for example, given  \\( \\frac{a}{\\frac{b}{c}} \\)  you can write this as,  \\( a * \\frac{c}{b} \\)  Modulo is something you\u0026rsquo;ll see in programming a lot, in programming it\u0026rsquo;s usually represented with the percent sign.\nModulo is just the reminder after division, so 7%3 is 1, because 3 goes into 7 twice, with 1 left over.\n^, ‚àö, ! #  exponents, written as either  \\( a^x \\text{ or } \\)  a^x or exp(x) if the base is \u0026lsquo;e\u0026rsquo;, that is  \\( e^x \\)  , are pretty simple to understand, they\u0026rsquo;re just repeated multiplication, so  \\( a^3 = a * a * a \\)  This results in a few \u0026lsquo;rules\u0026rsquo; for exponents which are fairly easy to understand, with the exception of the not at all intuitive  \\( a^0 = 1 \\)     Exponent Rule Assume a‚â†0 and b‚â†0     Product Rule  \\( a^x * a^y = a^{x\u0026#43;y} \\)     Quotient Rule  \\( a^x / a^y = a^{x-y} \\)     Power Rule  \\( (a^x) ^y = a^{x*y}\\)     Power of a Product Rule  \\( (a*b)^x = a^x*b^x \\)     Power of a Fraction Rule  \\( (\\frac{a}{b})^x = (\\frac{a^x}{b^x}) \\)     Fractional Exponent  \\( a^{\\frac{x}{y}} = \\sqrt[y]{a^x} \\)     Negitive Exponent  \\( a^{-x} = \\frac{1}{a^x} \\)     Zero Exponent ¬°easy to forget!  \\( a^0 = 1 \\)      alright, so why do I say these are intuitive? Let\u0026rsquo;s take the product rule for example. Let\u0026rsquo;s look at  \\( 2^2 * 2^3 = 2^5 \\)  this is true because  \\( 2^2 = 2*2 , 2^3 = 2 * 2 * 2 \\text{, so multiplied together they\u0026#39;re }(2 * 2) * (2 * 2 * 2) \\text{ and as multiplication is associative that is } 2*2*2*2*2 = 2^5 \\)  , generally, any of these rules can be figured out by just writing out examples like these, expanding the exponent out like this, and seeing what happens.\nAlright, so now we can look at roots. The most common root you\u0026rsquo;ll work with is the square root, which is what is implied when seeing a root symbol with no number in the crevice, though can be written explicitly as  \\( \\sqrt[2]{n} \\)  , though as you should\u0026rsquo;ve notice in the exponent rules other roots are possible, for example the cube root, which is  \\( \\sqrt[3]{n} \\)  is just whatever number you need to multiply with itself 3 times to get n, so for example  \\( \\sqrt[3]{8} = 2 \\text{ as } 2 * 2 * 2 = 8 \\)  As implied by the Fractional exponent rule, roots can be written as fractional exponents, that is  \\( \\sqrt[2]{n} = n^{1/2} \\)  often it\u0026rsquo;s actually more convenient to enter this notation into a calculator or programming language anyway. It can even just be nice for working on paper as when writing something like  \\( \\frac{1}{\\sqrt{ \\text{some really long equation here}}} \\)  it can be easy to miss the top bar and forget it\u0026rsquo;s there, compared to  \\( \\frac{1}{( \\text{some really long equation here})^{\\frac{1}{2}}} \\)  where the power sticks out more.\nFinally, there\u0026rsquo;s factorial, written with the !, it just means to multiply the number with the number prior down to 1, so  \\( 4! = 4 * 3 *2 * 1 \\)  Scientific Notation #  [TODO]\n=, \u0026lt;, \u0026gt;, ‚â§, ‚â•, ‚â†, \u0026laquo;, \u0026raquo;, ‚âà, ‚àù #  The equal sign is pretty obvious, it just means that what ever is on each side is equal. The implications of this will lead us deeper into algebra though as we actually solve equations. There\u0026rsquo;s some really obvious equalities, those that lack variables, so things like  \\( 1 \u0026#43; 2 = 3 \\)  or any of the equalities shown to this point really. Where equality gets a bit more interesting is when there\u0026rsquo;s an unknown (variable, same thing). For example,  \\( 1 \u0026#43; x = 3 \\)  here we cane see pretty obviously that x must be 2. We\u0026rsquo;ll go into how to actually solve for these unknows with non-obvious equations in a bit.\nLess Than and Greater Than are similarly simple, they just state that one side has a bigger number than the other. The \u0026lsquo;\u0026gt;\u0026rsquo; or \u0026lsquo;\u0026lt;\u0026rsquo; symbols should always \u0026lsquo;eat\u0026rsquo; the bigger number, that is the open side faces the bigger number, and the pointy side points to the smaller.  \\( 2 \u0026lt; 3 \\)  and  \\( 4 \u0026gt; 3 \\)  are examples of this. When variable are involved, it usually means there are multiple solutions.  \\( x \u0026gt; 3 \\)  for example, is satisfied for any x greater than 3, right down to 3.0000000000\u0026hellip;00001 all the way up to ‚àû. Similarly, there are \u0026lsquo;or equal to\u0026rsquo; varients of less than and greater than, which are written with a bar underneath so  \\( x \\geq 3 \\)  is satisfied for x equal to 3 to ‚àû, so the 3 is included with the \u0026lsquo;or equal to part.\u0026rsquo;\n‚â† means \u0026lsquo;Not Equal To\u0026rsquo;, and as the name impiles it\u0026rsquo;s just saying the two sides can\u0026rsquo;t be equal so with  \\( x \\neq 0 \\)  , x can be any value, except for 0.\nNext are MUCH greater and less than, written with a doubble less than or greater than sign, so  \\( \\gg \\text{ or } \\ll \\)  these are weird for people new to the idea, because they\u0026rsquo;re sort of fluid and depend on the situation. Generally they\u0026rsquo;re used to say \u0026ldquo;This number is so small that it doesn\u0026rsquo;t effect the outcome\u0026rdquo; or \u0026ldquo;This number is large that it domininates the outcome\u0026rdquo;\nNext up, is ‚âà or \u0026ldquo;Approximately Equal To\u0026rdquo;. This is for when you know your answer is off by some amount, due to impercesion in computation but it\u0026rsquo;s still close enough for whatever you need to use it for. For example  \\( \\pi \\approx 3.1416 \\)  Finally, there\u0026rsquo;s ‚àù for \u0026lsquo;porportional to\u0026rsquo;. This just means the two equations are only different by a multiplited constant. For example, say  \\( y = kx \\)  , where k is a constant (some number that can\u0026rsquo;t change) then  \\( y \\propto x \\)  . This is useful for when two equations are representing something massively different in scale, but we want to indicate that they have the same behavior.\n|x|, ‚àÜ, ‚åäx‚åã, ‚åàx‚åâ, ¬± #  The  \\( |x| \\)  symbol means \u0026ldquo;Absolute Value\u0026rdquo;, which, is really just a fancy way of saying \u0026ldquo;Make it positive.\u0026rdquo;, so  \\( |3| = 3 \\)  , no change, but  \\( |-3| = 3 \\)  .\nLater on you\u0026rsquo;ll also see something called the \u0026lsquo;Determinate\u0026rsquo;, this uses the same notiation, two vertical bars, but is totally different. Thankfully it\u0026rsquo;s not hard to tell apart, as the determinate is a matrix operation, meaning there will be a grid of numbers between the bars instead of a single expression. Delta,  \\( \\Delta \\)  , is the change between two things, so from 10 to 20 degrees is a delta of 10 degrees. It is usally used with real units like this, giving us the difference between the final and inital values in an experiment. So really it\u0026rsquo;s just Final Value - Initial Value. You may also see  \\( \\Delta t \\)  or  \\( \\Delta x \\)  , this would be change in time and change in position (usually) respectively. Note that Œî can be negitive.\n \\( \\left \\lfloor{x}\\right \\rfloor \\)  is the \u0026lsquo;floor\u0026rsquo; of x. Similarly,  \\( \\left \\lceil{x}\\right \\rceil \\)  is the \u0026lsquo;ceiling\u0026rsquo; of x. Very basically, For floor this just means to drop everything after the decmial right off, so  \\( \\left \\lfloor{1.534}\\right \\rfloor = 1 \\)  . For ceiling, it means to go up 1 and take the decimal off.  \\( \\left \\lceil{1.001}\\right \\rceil = 1\\)  Finally, for lack of a better place to put it, let\u0026rsquo;s look at ¬±. This is \u0026lsquo;Plus or Minus\u0026rsquo; and it just means to do both, for example 3¬±2 gives us 1 and 5 as answers. Usually when this symbol is used, one of the two answers ends up being thrown out as invalid, but not always.\nf (x), (f ‚àò g) #  [TODO]\n(a,b), [a, b] #  [TODO]\n‚àë, Œ† #  [TODO]\nhttps://www.rapidtables.com/math/symbols/Basic_Math_Symbols.html\nOrder of Operations #  Yes, I did make my own stupid math meme just for this. Fite me.  We\u0026rsquo;ve all seen these incredibly stupid memes going around social media at one point (Reason ‚Ññ876 to quit FaceBook), but why do people argue over the answer? The real answer is because it\u0026rsquo;s a really stupid problem. It has ambuguity baked into it, because of a lack of perentheses the solution is truly a bit ambiguous. That said, the \u0026lsquo;accepted\u0026rsquo; correct answers will either be 2/3 or 6 because of PEMDAS, which is, in itself a crappy acroynm, and sholud probably be written as (PE)(MD)(AS), let me explain.   PEMDAS stands for Perentheses, Exponents, Multiplication, Division, Addition, Subtraction, and is in general the correct order to do math operations. so given a mess like  \\( \\frac{4*(1 \u0026#43; 2)^3}{2\u0026#43;1} \u0026#43; 1 \\)  we can solve it in order. Here though, I have to point out the first failing in the PEMDAS accronym, division with a bar implies perentheses, as you\u0026rsquo;ll have to do the 2+1 on the bottom before you can do the divison anyway. That said, let\u0026rsquo;s look at this step by step\n \\[\\frac{4*(1 \u0026#43; 2)^3}{2\u0026#43;1} \u0026#43; 1 = \\frac{4*(3)^3}{2\u0026#43;1} \u0026#43; 1= \\frac{4*(3)^3}{3} \u0026#43; 1 = \\frac{4*9}{3} \u0026#43; 1= \\frac{36}{3} \u0026#43;1 = 12\u0026#43;1 = 13\\]  In step 1 and 2 I did perenthes in top and the implied perenthes on the bottom, then in step 3 I did the exponent, followed by the multipliation and divison in steps 4 and 5, finally in the last step I did the +1 that was hanging off the entire time.\nThe P for Perenthes in PEMDAS can mean really any grouping symbol, so brackets [] or braces {}, whatever.  So, what\u0026rsquo;s the problem with with the math equation in the start and why do people disagree? Well, Divison and Multiplication don\u0026rsquo;t have to be done in that order, same for addition and substraction, instead they should be done all together, but going from left to right, so  \\( 1 \u0026#43; 2 \u0026#43; 3 - 4 \u0026#43; 1 - 2 \\)  for example can be done in order left to right giving us 1, not doing this:  \\( (1 \u0026#43; 2 \u0026#43; 3) - (4 \u0026#43; 1) - 2 \\)  which gives -1. Just to be crystal clear, 1 not -1 is correct here. So, applying this to the above social media meme, it\u0026rsquo;s the same problem but with multiplication, implied with the 3(3) after doing the addition, and the divison. Some people interpret PEMDAS literally, meaning multiplication is done before division always. These people are wrong. So, with the meme the problem looks like this:\n \\[\\frac{6}{3(1\u0026#43;2)} = \\frac{6}{3(3)} = \\frac{6}{9} = \\frac{2}{3}\\]  But see what I did there? I wrote the fraction as a bar, not as √∑, and here, because this problem is written crappily, that actually changes the solution! And I know what you\u0026rsquo;re thinking- Division is divison, how could that matter?? And you\u0026rsquo;re right, it is. It matters because the bar implies that order, but if I go back to using a division sign look what happens:\n \\[6\\div3(1\u0026#43;2) = 6\\div3(3) = 2(3) = 6‚Äã\\]  And there\u0026rsquo;s the problem. Now, you\u0026rsquo;re probably thinking \u0026ldquo;What fucking dipshit let math be ambiguous?\u0026quot; and the answer is really that this problem is just stupid. In any real problem the ambuguity here should be fixed by whoever is writing it in the first place, and since other than in textbooks math doesn\u0026rsquo;t just appear from thin air, the true order of the operations should be specified clearly with perentheses, either as\n \\[6\\div(3(1\u0026#43;2))) \\text{ -OR- } (6\\div3)(1\u0026#43;2)) \\text{ -OR- } \\frac{6}{3(1\u0026#43;2)}‚Äã\\]  where in the last option the bar implies the perentheses.\nSimplification #  Looking at some equations #  Linear #  Polynomial #  Systems of Equations #  Nobody should do these by hand unless they\u0026rsquo;re dead simple\nImaginary numbers, systems of equations\n1¬º - Accuracy and Precesion #  For lack of a better place to put it and not wantin to wait until the much latter section on probability, I\u0026rsquo;d like to briefly mention the difference between Accuracy and Precesion. Typically, this is repsented\n1¬Ω - Coordinate Systems #  So, up until now you\u0026rsquo;ve only seen the XY \u0026lsquo;Cartesian\u0026rsquo; coordinate system, but I did gloss over some details. For starters, when refering to points in the Cartesian plane, you may hear the term quadrants, these are the 4 infinite corners of the plane, coming out from the \u0026lsquo;+\u0026rsquo; shape at (0,0). Slightly counter intuitively, they\u0026rsquo;re numbered from starting in the top right and going counter clockwise.\n[TODO] picture here\nThe Cartesian coordinate system can be expanded into high dimensions as well, but you\u0026rsquo;re unlike to work with more than 3, to form space defined with XYZ\n[TODO] picture here\nThere are a few other coordinate systems you\u0026rsquo;ll likely come across though: Polar, Cylindrical, and Spherical.\n[TODO] all 3 of those\n1¬æ - Primes \u0026amp; Factors #  Alright, so maybe not something you\u0026rsquo;ll use everday, but you still should know the basics of primes, espically if you want to understand Public-key cryptography. So, what\u0026rsquo;s a prime?\nA prime is an number where the only two whole numbers that you can multiply to get to that number are 1 and itself.\n2? Prime. 1*2 is the only option.\n3? Prime. 1*3 is the only option.\n4? Not Prime. 2*2 = 4, as does 1*4\n103801? Prime. only two numbers that can multiplied together to get it are 1 and 103801.\nI think you get the gist. One of the neat applications of primes is that multiplying two prime numbers together makes for a number that\u0026rsquo;s not quite prime, but whose only other fators are two two numbers that you multiplied together, so say we take 103801 * 7 to get 726607, the only two whole numbers other than 1 and itself that can be multiplied to get 726607 are 103801 and 7.\nThere are also \u0026lsquo;antiprimes\u0026rsquo; (or \u0026lsquo;highly composite numbers\u0026rsquo;), from Wikipedia:\n \u0026hellip; an antiprime number, is a positive integer with more divisors than any smaller positive integer has\n so, technically 1, 2, 4, and 6 are all antiprime. But where it gets interesting is with larger numbers. For example, 360 is anti prime as you get get to it with  \\( 2*2*2*2*3*3*5‚Äã\\)  , which is 7 primes multiplied together, more than it takes to get to any number prior. These numbers are really easy to work with because of this, and it makes it really convient for the number of degrees in a circle as it can be divided so easily.\n1‚Öò - Number Bases #  Number Bases Strech the Mind (Hackaday)\n2 - Discrete Math #  http://discrete.openmathbooks.org/dmoi3/\nMath For Programmers (pdf)\nNotation #  https://en.wikipedia.org/wiki/List_of_mathematic_operators\n3 - Geometry and Trigonometry #  Very brief Geometry Lesson #  Notation #  ‚à•, ‚ä•,\nNotation #  4 - Calculus #  [] TODO limits before video\nBelow is a 12 video series that totals about 3.25 hours.   The Exponential Function is a Miracle (Mark Dominus)\n5 - Differential Equations #  Below is a 5 video series that totals about 1.5 hours.   6 - Matrix Theory / Linear Algebra #  Below is a 15 video series that totals a bit under 3 hours.   Matricies, Diagrammatically\nLinear Algebra - Jim Hefferson\nLinear Algebra and Applications: An Inquiry-Based Approach\n7 - Signals \u0026amp; Systems #  There\u0026rsquo;s a ton of content available on Signals and Systems in Video form, but honestly I don\u0026rsquo;t think any of it is great. The MIT OpenCourseWare series linked below is probably the best I can find, but it\u0026rsquo;s also still only 480p  MIT Signals and Systems Lectures (YouTube)\nBut, if you\u0026rsquo;d rather learn out of a textbook, if you go looking online you might just be able to stumble upon a 100% super-duper legal way to obtain Alan V. Oppenheim, Alan S. Willsky, with S. Hamid-Signals and Systems with ISBN 978-0138147570 published by Prentice Hall which is now a subsidiary of Pearson, a textbook publisher which can, and this is 100% true, go fuck themselves.\n One of the most important things in Signals is the Fourier Transform. Fortunately, quality content about it is abundant. This site, An Interactive Introduction to the Fourier Transform, provides a great introduction for developing an intuition about it graphically, while \u0026ldquo;But what is the Fourier Transform? A visual introduction. (YouTube, 3Blue1Brown)\u0026rdquo; goes a bit more into the math by the end.\n[TODO] put in all notes from class here to provide a half decent resource\nExtra Resources:\nIntuitive Guide to Convolution\nhttps://en.wikibooks.org/wiki/Signals_and_Systems\nA 313 Part - not even kidding - playlist on Signals and Systems on YouTube\nA 95 Video series, in case that 313 parter left you needing more.\nThe Scientist \u0026amp; Engineer\u0026rsquo;s Guide to Digital Signal Processing, 1999 (Analog Devices)\nDSP Spreadsheet: The Goertzel Algorithm is Fourier\u0026rsquo;s Simpler Cousin (Hackaday, Al Williams)\nWhat does the Laplace Transform really tell us? (Zach Star, YouTube)\nWhat does frequency mean in an image (Stack Exchange)\nTripple Pendulum on a Cart \u0026amp; Inverted Pendulum on a Cart (Steve Brunton\u0026rsquo;s Control Bootcamp on YouTube)\n8 - Probability/Stats #  Why, where are these used, etc.\nbring up music things, part failure rates, tollerences, etc.\nBasics #  Statistical Independence\nConditional probability\nSub experiments \u0026amp; Tree diagrams\nLaw of total probability\nBayes Rule\nCounting methods\ncombinations and permutations\nwith or without replacement\nRandom Variables #  Probability Mass Function (PMF)\nTypes of RV\u0026rsquo;s\n   Distribution Name PMF Mean Variance     Bernoulli      Geometric      Binomial      Pascal      Discrete Uniform      Poisson       Cumulative Distribution Function (CDF)\nfunctions of Random Variables\nFamilies of continuous RVs\nConditional Probability Mass Fn \u0026amp; Conditional Expected Value\nGaussian Random Variables / Normal RVs (same thing)\nI did it. pic.twitter.com/eMEmUw0HSY\n\u0026mdash; Zillion Ross (@ZillionRoss) November 25, 2020  TODO:\nhttps://en.m.wikipedia.org/wiki/Logistic_map\n"});index.add({'id':8,'href':'/engineering/12-physics/','title':"12 Physics",'section':"Engineering",'content':"Chapter 12 - Physics #  [TODO] speed vs Velocity vs Acceleration, clasicall vs realative\nRadiocarbon dating (Wikipedia)\nCosmic Microwave Background (Wikipedia)\nNatural nuclear fission reactor (Wikipedia)\nHow Kodak Exposed The Atomic Bomb (YouTube, Veritasium)\nSeeing the invisible: Event displays in particle physics\nBuilding a Vortex Tube (This Old Tony, YouTube)\nThe Chernobyl Dice: A quantum random number generator with a nixie tube display 1 - Newtonian (assume a spherical cow) #  2 - Electromagnetism #  The Electromagnetic Radiation Spectrum (Anthony Tekatch @ Unihedron.com)\n3 - Relativity and the Quantum #  "});index.add({'id':9,'href':'/engineering/13-chem/','title':"13 Chem",'section':"Engineering",'content':"Chapter 13 - Chem #  This chapter is more or less on hold while I prioritize adding the content I\u0026rsquo;m more familiar with, if you\u0026rsquo;d like, feel free to submit a PR to flesh this section out. Unfortunately my chemistry education was pretty \u0026lsquo;meh\u0026rsquo;, and I never actually made it to Organic Chem. I have CrashCourse\u0026rsquo;s Chemistry and Organic Chemistry videos on YouTube on my \u0026lsquo;To Watch\u0026rsquo; list though. Obviously I don\u0026rsquo;t know if they\u0026rsquo;re any good, but maybe they\u0026rsquo;d be a decent place to start. NileRed, Cody\u0026rsquo;s Lab, and Thought Emporium on YouTube all have good chemistry content as well.\n This series from Crash Course series has 46 videos, each about 10 minuets, so about 7.6 hours of content.   1 - Atomic Structure, Basics of the Table, Bonding #  2 - Acid/base, Electrochem, Thermochem, Photochem #  3 - Organic Chemistry #  This series from Crash Course series is in progress at the time of writing, but when done will consist of 50 videos, each about 12 minuets, so about 10 hours of content.   Yeast that produce PENICILLIN - Whose Gene is it Anyway (YouTube)\n"});index.add({'id':10,'href':'/engineering/13p5-othersubjects/','title':"13p5 Othersubjects",'section':"Engineering",'content':"Chapter 13¬Ω - \u0026lsquo;The Rest\u0026rsquo; #  English #  [TODO] Because the majority of the Internet and most publications are in English\nFinance #  [TODO] because making and engineering are expensive, and you probably want to make money, and spend less money.\nMusic #  [TODO] Because music is really mathy and can help with thinking about signals\nHealth #  [TODO] Mental \u0026amp; Physical, because nerds typically suck at this.\nWorld Studies #  [TODO] To help with tolerance and looking at things from new perspectives.\nArt #  [TODO] For web design, UI\u0026rsquo;s etc.\nShop #  [TODO] wood working, metal working because duh.\n"});index.add({'id':11,'href':'/engineering/14-circuits2/','title':"14 Circuits2",'section':"Engineering",'content':"Chapter 14 - Circuits \u0026amp; Semiconductors #  [TODO]\nShow everything in a circuit sim, fix heading levels (this is a mess)\nPossibly break up this chapter? Transistors, the opamp, etc alone may each justify their own chapters\nThat said, I don\u0026rsquo;t want to get to in the mud of transistor physics. I really want to focus on how/when/why to use what, not how they work as the physics is both pretty hard to grasp and not super useful. Still would like to mention that switching is what uses power and like process size things, but maybe not the chemistry or electron tunneling effects\nChapter 14.1 - Semiconductors #  Semiconductors? #  Will gallium nitride electronics change the world? (YouTube, Engadget)\n[TODO] pic of silicon bulb\nDiodes, the one way road #  [TODO]\nzeener, normal, bipolar\n varistors , sparkgaps Leds - getting current both ways, LED safety  Varicaps (Wikipedia)\nTunnel Diodes (Wikipedia)\nDiode Logic #  The Diode Clock\nTransistors #  [TODO]\nTransistor Families (JonDent - Blogspot)\nBipolar Transistor @ electronics-tutorials.ws\ntubes and how they work\nPNP V NPN #  IGBT, Mosfets? #  Tubes #  That Elusive Valve Amp Sound, For Not a Lot! (There has to be a Catch) (hackday.com)\nIntegrated Circuits #  [TODO]\nhttps://hackaday.com/2019/05/20/integrated-circuits-can-be-easy-to-understand-with-the-right-teachers/ Uncovering the Silicon: Demystifying How Chips are Built and How They Work (YouTube)\nReverse-engineering the TL431\nDistortion pedal with all homemade semiconductors, only one external component (cap for AC coupling) pic.twitter.com/M7t3Gl1m5P\n\u0026mdash; Sam Zeloof (@szeloof) July 6, 2020  Finally I learned how to do focus stacking with my macro (non-microscope) shots. 226 shots, 50¬µm camera shift per frame. Laowa 25mm F2.8@F4 on WeMacro rail. Stitched in Helicon Focus (pyramid, smoothing=1). 1 original photo for comparison. #WeMacro @laowa_lens #heliconfocus pic.twitter.com/yCdCIBXMRv\n\u0026mdash; Zeptobars (@Zeptobars) March 12, 2019  555, OpAmp, 74-Series Logic #  555 Timer IC (YouTube)\n555 as an amplifier (don\u0026rsquo;t actually do this!)\npotato semi\nChapter 14.2 - Opamps \u0026amp; Filters #  Optical Electronics #  [TODO]\nCrystal Oscillators #  [TODO]\nPiezoelectricity - Why hitting crystals makes electricity (YouTube)\nPWM #  [TODO]\nDriving a PAL tv over RF thanks to PWM harmonics (Hackaday)\nADC/DAC #  [TODO]\nhttps://en.wikipedia.org/wiki/Fourier_transform\nNyquist\nActive Filters #  http://sim.okawa-denshi.jp/en/\n[TODO]\nWaveguides #  Waveguides Explained (YouTube)\nAudio Devices #  [TODO]\nspeakers, piezos, amps, mics and pickup patters\nTODO #  add motors, analog meters, various connection standards, radio, flex/pressure sense, grounding (chassis, digital, analog, ground planes, etc.), solar/photo reactive,\nRelating AC and Music #  [TODO]\nRelate back to things like ADSR, Distortion, Reverb / Echo, Decibels (audio), etc. Use VCV RACK\nContinued Reading: #  [TODO]\nAt this point I highly recommend \u0026lsquo;Practical Electronics for Inventors\u0026rsquo; ISBN 978-1259587542, namely chapters 2-12, and 15-16. It\u0026rsquo;s a very large, detailed book that does it\u0026rsquo;s best to keep things, well, practical.\nhttps://taleri.files.wordpress.com/2014/02/practical_electronics_for_inventors_-_scherz_paul.pdf\nHardware isn\u0026rsquo;t generally copyrightable\nHackady.io 2020 Circuit Sculuture Challange\nRGB LED, Inductively Powered, Frequency Controlled (YouTube, Wolf Tronix)\nHow to protect circuits from reversed voltage polarity! (YouTube, AfroTechMods)\nCircuit Sculpture Workshop (Hackaday, Kristina Panos)\n"});index.add({'id':12,'href':'/engineering/15-digitallogic/','title':"15 Digitallogic",'section':"Engineering",'content':"Chapter 15 - Digital Logic #     Binary (0b) Hex (0x) Decimal     0000 0 0   0001 1 1   0010 2 2   0011 3 3   0100 4 4   0101 5 5   0110 6 6   0111 6 7   1000 8 8   1001 9 9   1010 A 10   1011 B 11   1100 C 12   1101 D 13   1110 E 14   1111 F 15      lineart by https://merveilles.town/@chirrolafupa, I (Vega) filled it in and turned it into a gif.\n  To access the original line art, use a gemini browser to go to gemini://caracolito.mooo.com/coloring-computers/\n   [Todo, insert intro about Minecraft redstone]\nWhat is digital logic? #   ignoring the analog world (10%/90%)\nTruth Tables, K-Maps #  min/max terms, Don\u0026rsquo;t cares, SOP/POS, multiple out\n[TODO] http://nandgame.com\nBasic Logic Gates #  [TODO] truth tables, circuit symbol, discrete logic symbol for all.\nNot #     Input Output     0 1   1 0    Truth table, transistor implementation pmos/nmos, cost, power consumption at switch\nAND #  A‚àßB, AB,\n   Input A Input B Output     0 0 0   0 1 0   1 0 0   1 1 1    NAND #     Input A Input B Output     0 0 1   0 1 1   1 0 1   1 1 0    Or #  Nor #  Exnor #  Xor #  Exor #  Transmission, #  Mux #  Demux #  Encoders #  Basic combinational logic #  propagation delay, fan in/out, POS/POS\n2\u0026rsquo;s Compliment, Floating Pt, Math #  overflow, carry, ripple, fast, mul, shift-and-add mult, divider,\nLatches and Flip Flops #  SR, Dl, edge triggering, Dff, Tff, JKff,\nRegisters #  Counters #  Making Some Circuits #  There\u0026rsquo;s a ton of simulators out there for making simple circuits educationally, but most sorta suck, so I\u0026rsquo;m going to delve right into something fun: Minecraft\n If you don\u0026rsquo;t own MineCraft and can\u0026rsquo;t afford it, MineTest with mesecons is an option. It\u0026rsquo;s\u0026hellip; not great. (sorry MineTest team, I still love what you\u0026rsquo;re doing \u0026lt;3 ) But it is Open Source. If you\u0026rsquo;re using Arch Linux (and updates haven\u0026rsquo;t broken things since writing) you should be able to install MineTest from the community repo and mesecons-git from the AUR.\n Minetest Circuit Challange\nMore Digital Logic resources #  We\u0026rsquo;ll come back to look at more complex digital logic in chapter 28 \u0026ldquo;Let\u0026rsquo;s try out programmable logic\u0026rdquo; and 29 \u0026ldquo;Let\u0026rsquo;s make our own SOC\u0026rdquo; , but if you\u0026rsquo;re hungry for even more, here are some resources\n"});index.add({'id':13,'href':'/engineering/16-embedded/','title':"16 Embedded",'section':"Engineering",'content':"Chapter 16 - Embedded Systems #  [TODO]\nWhat is an Embedded System? #  [TODO] need source PWM, SPI, I2C, What\u0026rsquo;s going on?! #  Driving a PAL TV over RF thanks to PWM harmonics (Hackaday)\nPlaying around - Hello World and blink #  Making an Embedded System project - 1 - Humidity Sensor #  Making an Embedded System project - 2 - MIDI Controller (with piezzo) #  Making an Embedded System project - 3 - Stepper Motor Music #  adapted from floppy drives, but less expensive\nReal Time Operating Systems #  RIOT-OS, MBED, etc\n[TODO note, MBED was used on the euclidean drum project for its event queue]\ntalk about scheduling (CFS, etc)\nOther weird and cool projects: #  a lot of people have been mocking this video but having tried it, I can confirm this is actually the most reliable way to fake keyboard events on windows 10. https://t.co/kTz5a6YlTI\n\u0026mdash; foone (@Foone) April 6, 2020  Of Course It Leaks!\n\u0026ldquo;The Simplest of Pseudo Random Number Generators\u0026rdquo; - Hackaday\nChapter 14.1 - Embedded Hardware comparison #  [TODO, Pi V RockPi4 V Arduinos V x86, ref architecture information from chapter 3.3]\nmention pi sd card performance / stability limits and pi advantages in how common it is\nArduino ‚â† Atmega32p #  I really want to make this clear: Arduino is a framework. Not a specific hardware platform. Different Arduino devices can run with wildly different specs and support wildly different features. STM 32 #  First up is the brains of the operation: an STM32F103. Not a lightweight chip: It\u0026#39;s a Cortex M3 @ 72MHz. It\u0026#39;s got 256kB of flash and 48kB of RAM and that\u0026#39;s a 100-pin TQFP package!https://t.co/oPCeo7XMpe pic.twitter.com/niDPuIFBPT\n\u0026mdash; Stargirl üå† (@theavalkyrie) November 17, 2020  Getting Started in Robotics (Arthur Allshire\u0026rsquo;s Blog)\n"});index.add({'id':14,'href':'/engineering/17-algorithms/','title':"17 Algorithms",'section':"Engineering",'content':"Chapter 17 - Discrete Math, Algorithms, Data Structures, and Not Sucking at Programming ‚Ñ¢* #  *With some complexity analysis too.\n[TODO]\nDiscrete Math #  [TODO] I also have discreete math in the chapter 11, math\u0026hellip; not sure what do do about this\u0026hellip;\nTruth tables, binary, logical equlivencies, propositional logic,\nSets, functions, relations, recurrence, induction, combonation, graphs, isomorphsm,\nSets are a well-defined collection of distinct objects. A set is represented in two ways, Rooster form or Set builder form.\nRooster form:- #  In this form we show all the elements in a set in curly brackets. For example: A set of odd numbers is {1, 3, 5, 7, 9, \u0026hellip;) A set of animals can be {Dog, Cow, Cat, Lion}\nSet Builder form:- #  In this form we show all the elements by using a property that all the elements of the set follow. For example: A set of even numbers upto 10 is {x | x is even and x \u0026lt;= 10} which is read as x where x is even and less than or equal to 10.\nOperations on Sets:- #  Unions:- #  A Union of two sets is a set which contains all elements of both the sets. A Union of set A and set B would be represented as, A‚ãÉB.\nFor example: The Union of Set A = {1,3, 5, 6} and Set B = {1, 2, 4, 6} is\nA ‚ãÉ B = {1, 2, 3, 4, 5, 6}\nComplexity analysis #    More cool videos like this can be found at https://www.youtube.com/c/Musicombo/videos\n +recursion analysis, P vs. NP (YouTube)\nBrute Force #  Data structures #  trees, hashtables/maps, stacks\nPractice #  Fib, some pracice logical equliv, base conversion algo, overlapping lines, matrix multiplication\nDynamic Programming #  Heads up, this is a 5 hour video: "});index.add({'id':15,'href':'/engineering/18-bigprog/','title':"18 Bigprog",'section':"Engineering",'content':"Chapter 18 - Writing a larger program #  From https://wiki.xxiivv.com/site/development.html\n  Prototype before polishing. Get it working before optimizing it. Separate policy from mechanism, separate interfaces from engines. Write simple modular parts connected by clean interfaces. Design programs to be connected to other programs. Write programs to write programs when you can. Design for the future, because it will be here sooner than you think. In interface design, always do the least surprising thing. When a program has nothing surprising to say, it should say nothing. When a program must fail, it should fail noisily and as soon as possible. Write big programs only when it is clear by demonstration that nothing else will do. Consider how you would solve your immediate problem without adding anything new.   Programming can seem scary at first but the more you exercise, the easier and more exciting it gets. After all, practice makes perfect! :)\n[TODO]\nObject Oriented Programming #  Planning #  Software Engineering #  "});index.add({'id':16,'href':'/engineering/19-servers/','title':"19 Servers",'section':"Engineering",'content':"Chapter 19 - Servers! #  [TODO]\nWhat\u0026rsquo;s a homelab?\nWhy build a server #  DIY Networking: Routing, firewall, etc. #  Web hosting #  Before we get to business there\u0026rsquo;s some necessary viewing: http://motherfuckingwebsite.com/\nFile Storage, Sharing, Backups #  Remote Access #  Git, Games, and Glory #  Virtual Machines #  Containerization #  Fault tolerance #  Serverless? #  "});index.add({'id':17,'href':'/engineering/19p5-cloud/','title':"19p5 Cloud",'section':"Engineering",'content':"Chapter 19¬Ω - \u0026ldquo;The Cloud\u0026rdquo; #  Dropbox saved almost $75 million over two years by building its own tech infrastructure (GeekWire)\nComparison of Vendors #  [TODO] Add Google Cloud to list, mention they\u0026rsquo;re all sorta evil.\n Note, I\u0026rsquo;m not going to directly compare pricing between these services because that\u0026rsquo;s both rather variable and because the cost is often in terms of resource usage, which can be calculated in so many different way that the only real way to compare is to actually run something. Similarly, comparing uptime is also mostly useless as there are different metrics used and because of service contracts any provider will do everything in its power to appear to have umpteen 9\u0026rsquo;s of uptime.\n Compute #  CPU #  For x86-64 CPU compute both offer a range of speed tier both for GPU and CPU, making direct comparison difficult.\nAWS EC2-C5 offers Intel Skylake CPUs that support AVX-512, nice if you have a highly vectorized workload. Azure does offer some of the same CPU, with AVX-512, but many of their CPUs are AMD\u0026rsquo;s EPYC line which while EPYC should give Azure the lead in efficiency that should lead to reduced costs for the consumer, no AMD CPUs have AVX-512 and the EPYCs in particular sometimes have a hard time distributing compute over their internal CCX complexes.\nAlso interesting, AWS offers EC2 A1, which lets you deploy to 64 bit arm cores instead of x86, which for workloads that work well on it can lead to cost savings or security benefits given the mess that was Meltdown and Spectre.\nGPU #  AWS appears to only offer Nvidia GPUs, buying into the Nvidia CUDA ecosystem while Azure offers a mix of GPUs from AMD and Nvidia, covering both CUDA and OpenCL workloads well.\nStorage #  AWS-S3, EBS, EFS, Glacier, \u0026hellip; There\u0026rsquo;s a lot here. There\u0026rsquo;s flexibility among offerings that suit various needs, from \u0026lsquo;object storage\u0026rsquo;, network file systems, and long term backups on cheap, bulk storage.\nAzure offers similar (and much better named) flexibility, with options like Azure Disks for bulk storage attached to a VM, \u0026lsquo;Azure Blobs\u0026rsquo; for an S3 equivalent, and \u0026ldquo;Azure Files\u0026rdquo; for a network file system.\nGenerally it seems there\u0026rsquo;s a pretty 1-to-1 match between Microsoft\u0026rsquo;s and Amazon\u0026rsquo;s offerings. The differences start to show a bit more when it comes to dev tools and libraries available to work with them though.\nDatabases #  So that I can talk about this all without trying to name everything, so just go look at This list of datbase products offered from AWS and This page from Azure\nAs you can see, both offer products covering all the normal database options. Azure, rather strangely, offers hosting of multiple SQL back ends, while AWS has multiple instance types for RDS, while Azure seems to just offer flexible options that automatically scale. This means less control, but also less management overhead and concerns for needing to upgrade or downgrade the instance latter. That said, for very large projects the industry is starting to move to non-relational anyway for it\u0026rsquo;s lower overhead and ease in making it distributed and Cosmos DB, is, uh, lacking. The first chat I included from Azures' docs shows that Azure dos have some Redis cache options, but AWS has Dynamo, Memcached, and Redis.\nOn top of all of that AWS offers a graphDB, which I can\u0026rsquo;t find Azure even competing with at all.\nThe only advantage that I can really find in Azure\u0026rsquo;s database offerings is the options for SQL being varied enough to support multiple SQL implementations.\nSecurity #  The number of open AWS S3 buckets that can be found on GitHub shows right off the bat that security is more down to the developer than the ecosystem. Anything I can write here is going to be largely marketing fluff from each company, that said, there are some security offerings:\nAWS offers \u0026lsquo;Inspector\u0026rsquo; which \u0026quot; automatically assesses resources for vulnerabilities or deviations from best practices, and then produces a detailed list of security findings prioritized by level of severity\u0026quot; - so in plain English, it tries to find anywhere your code or deployed app is vulnerable to a known CVE. Azure offers \u0026ldquo;Azure Security Center\u0026rdquo; which is similar.\nFurther, though all of 2020 AWS has had 3 CVEs and two other notices (source) but Microsoft has made even finding a list of vulnerabilities difficult, but I think going here setting the date range to all of 2020 and searching for azure is as close as I\u0026rsquo;ll get. That turns up 26 CVEs, of which 25 are really on them, 9 of them are elevation of privilege and and one of them is an RCE. Given Azure is the significantly smaller of the two so will have less attention on it, that\u0026rsquo;s especially not great.\nDev Tools #  AWS powers enough of the internet that when it goes down it seems the entire internet follows suit. Anadectodely this popularity seems to be from AWS\u0026rsquo;s extensive dev tools and documentation. Further, AWS\u0026rsquo;s larger popularity means many 3rd party libraries for various languages and frameworks exist to make development even easier.\nFurther separating things, while Microsoft has tried to make their development more platform agnostic recently with the whole \u0026ldquo;MS \u0026lt;3 Linux\u0026rdquo; thing, from personal experience I can tell you their stuff is rather annoying to work with if you don\u0026rsquo;t buy in to the platform as a whole, while AWS has been pretty OS and development environment agnostic from the start.\nSo, while Azure effectively has the single bullet point of visual studio, AWS has all of this\nAs a very lazy metric, just searching Github (Which is owned by MS and hosted on Azure), we find this:\n   I\u0026rsquo;m not going to pretend that having double the repos means AWS is twice as good, but what it does mean is that developers are choosing it. That could be because it\u0026rsquo;s cheaper or some other unrelated factor, but it could well be because it has much better documentation (something extremely evident in trying to do find this information in the first place) and because it has better tools developed by Amazon and the community.\n"});index.add({'id':18,'href':'/engineering/2-arch/','title':"2 Arch",'section':"Engineering",'content':"Chapter 2 - Let\u0026rsquo;s do it then, Installing Arch Linux #  Some Background #  Unlike Windows or Mac which are primarily differentiated by versions (Windows XP, Vista, 7, 10\u0026hellip;), Linux has two important things to look out for: The distribution and the kernel version number. Linux is actually just the name of the underlying \u0026lsquo;core\u0026rsquo; of the system, known as the kernel, as such, there are literally thousands of Linux variations. Some of the well known variants include Ubuntu, Fedora, OpenSuse, and Arch (No disrespect to the other distros out there!). Each of these has a different target audience, with some meant for servers, some meant for casual users as an alternative to Windows, others as work station for hard core computing. They also ship with different software pre-installed to be accessed after the first boot. The other differentiating factor is the version of the Linux Kernel that they use. Some chose to use an older, battle hardened kernel that is known to be very, very stable, others chose a nice middle ground, while yet others continuously release an update to the newest available kernel. There are pros and cons to each model and each has its place; however, the one I\u0026rsquo;m going to have you install is know as one of the hardest to work with, but also one of the most cutting edge, fun to tinker around in, and best documented: Arch Linux. Arch is what\u0026rsquo;s known as a rolling release distribution, which means it gets the bleeding edge features and the newest kernel pretty much as fast as possible, though really the biggest thing that makes Arch special is how bare bones it is out of the box, shipping with basically no pre-installed software. In fact, when you first start it up the only thing you\u0026rsquo;ll see is a screen to type and run commands, and that\u0026rsquo;s where we\u0026rsquo;re going to start.\nFor most distros like Ubuntu or OpenSuse (feel free to look these up, this page isn\u0026rsquo;t going anywhere) there\u0026rsquo;s a nice graphical, point and click installer which helps you install the system and somewhat mitigates potential risk of killing your original OS (Mac/Win) or losing data; however, the goal of this guide is to learn. Arch\u0026rsquo;s install process, entirely by typing commands in this terminal is hard, but that difficulty leads to a deeper understanding and respect for the system as a whole\nWhen we\u0026rsquo;re done you\u0026rsquo;ll have a system that has exactly what you need and nothing you don\u0026rsquo;t. You won\u0026rsquo;t find weird forcibly installed software like Win 10\u0026rsquo;s Candy Crush App here, and your system will only do exactly what you tell it. Of course, this implies you know how to speak it\u0026rsquo;s language and tell it what you want. Thankfully with some practice you\u0026rsquo;ll get used to running Arch and you\u0026rsquo;ll wonder why you ever dealt with other systems to begin with.\nPreparation #  Install instructions will vary dependent on your hardware, but I\u0026rsquo;m going to assume you have a desktop or laptop which shipped with Windows 10 and has a UEFI system. Most laptops newer than ~2016 should be in this category. If your system uses a BIOS or Legacy boot instead, or if you have a mac, this won\u0026rsquo;t apply to you, but you should be able to follow some of the resources I used to make this guide which are linked below along with some searching online to figure it out.\nAlright, so what exactly are you getting yourself into? Well, I\u0026rsquo;ll be real with you, a lot. Installing Arch sucks. Things can go wrong, it\u0026rsquo;s not user friendly at all, and is generally a pain, and if you screw up you\u0026rsquo;ll need someone who can restore your computer to at least having Windows on it again so I\u0026rsquo;ll say it again- Make a backup of your entire hard drive before proceeding, if you don\u0026rsquo;t know how to do this, look up how to use Clonezilla.\nSeriously. You should really make a full backup of your computer before doing this, as installing an operating system can rather easily lead to lost files when you reformat or reparation your drive or when you change settings in the BIOS/UEFI and swap the bootloader. Okay, so, with that said let\u0026rsquo;s dive into it. After you have a backup, you\u0026rsquo;ll need to head on over to https://www.archlinux.org/download/ and if you have a torrent client installed use the provided BitTorrent Downloads, if you have no idea what that is, look at the below box\nBitTorrent: Torrenting is type of download that runs over distributed peer to peer connections, this means you\u0026rsquo;re directly downloading the file from multiple people rather than from one large server. Popular clients on Windows include uTorrent, qBittorrent, and Deluge  You may want to go grab a coffee while it downloads depending on your connection, though the image should be rather small. Once that\u0026rsquo;s done downloading your torrent client should automatically confirm the image by checksum, but as this is a good learning opportunity let\u0026rsquo;s do a manual double check as well.\nchecksum: a mathematical summing of the bits in a file combined with some sort of cypher to produce a \u0026lsquo;hash\u0026rsquo; which can be checked to against one that is known, any modification would result in a different hash. This protects against malicious actors putting bad things in the code as well as from a corrupted download.   Windows Windows open up a command prompt by pressing ctr+r and typing \u0026lsquo;cmd\u0026rsquo; then enter, and we\u0026rsquo;ll need to navigate to the location of the downloaded file it should be named something along the lines of archlinux-20xx.xx.xx-x86_64.iso and be in your Downloads folder. When you open a command prompt on Windows it should start out in your user folder (C:\\Users%username%). To list the folders in this folder you can type \u0026lsquo;dir\u0026rsquo; and press enter. You should, at minimum, see folders like \u0026lsquo;Downloads\u0026rsquo; \u0026lsquo;Desktop\u0026rsquo; and \u0026lsquo;Documents\u0026rsquo; to enter the Downloads folder simply type \u0026lsquo;cd Dow\u0026rsquo; and press tab, the line should auto-complete to \u0026lsquo;cd Downloads\u0026rsquo;, then press enter. Now you can type \u0026lsquo;certutil -hashfile arch\u0026rsquo; , press tab to complete it to \u0026lsquo;certutil -hashfile archlinux-20xx.xx.xx-x86_64.iso\u0026rsquo; then add \u0026lsquo;sha1\u0026rsquo; on the end so the finally command looks like\n1  certutil -hashfile archlinux-20xx.xx.xx-x86_64.iso sha1    Note, if this spits out \u0026ldquo;The process cannot access the file because it is being used by another process.\u0026rdquo; you\u0026rsquo;ll need to close your torrent client or stop seeding the file first!\n So let\u0026rsquo;s look at this command. The first part, certutil, is a program on your computer, \u0026lsquo;-hashfile\u0026rsquo; says the next string of text is the name of the file we want to examine, and the last part sha1 is the checksum as mentioned before. Finally, if you go back to https://www.archlinux.org/download/ and look under \u0026lsquo;Checksums\u0026rsquo; you can compare the output of the command you just ran against the SHA1 sum provided to be sure you didn\u0026rsquo;t have any errors in the file. This is mostly a security check as in theory someone could provide a \u0026lsquo;bad\u0026rsquo; version of the OS containing malware, but such a version would produce an incorrect checksum, in practice this is extraordinarily uncommon. Though this does also serve to ensure the download wasn\u0026rsquo;t corrupted in any way either.\nMac Mac open up a terminal by going to the Utilities fore in Applications and open \u0026lsquo;Terminal\u0026rsquo;. The mac terminal is very, very similar to what you\u0026rsquo;ll use in Linux actually, and the commands here are actually identical. You should see something like\n1  MacBook:~ username$   waiting for input.\nThat ~ represents that you\u0026rsquo;re in your user or \u0026lsquo;home\u0026rsquo; folder, and assuming you downloaded Arch\u0026rsquo;s install image to your downloads folder you should be able to type\nMacBook:~ username$ shasum -a 1 Downloads/arch\nfollowed by pressing tab to make that auto complete to something like\nMacBook:~ username$ shasum -a 1 Downloads/archlinux-20xx.xx.xx-x86_64.iso\nupon pressing enter the terminal should print out a long string of text.\n So let\u0026rsquo;s look at this command. The first part, shasum, is a program on your computer, \u0026lsquo;-a 1\u0026rsquo; says to use the sha1 algorithm instead of something like sha256, and the last part is the filename we want to compute the checksum of. Now, if you go back to https://www.archlinux.org/download/ and look under \u0026lsquo;Checksums\u0026rsquo; you can compare the output of the command you just ran against the SHA1 sum provided to be sure you didn\u0026rsquo;t have any errors in the file. This is mostly a security check as in theory someone could provide a \u0026lsquo;bad\u0026rsquo; version of the OS containing malware, but such a version would produce an incorrect checksum, in practice this is extraordinarily uncommon. Though this does also serve to ensure the download wasn\u0026rsquo;t corrupted in any way either.\n Okay, so we have the OS, how do you install the damn thing? Well, get ready for a fun time. The first thing you\u0026rsquo;ll need is a flash drive with nothing on it you care about, as it\u0026rsquo;s going to be reformated, which will wipe any data on it. To install an OS you have to create \u0026lsquo;bootable media\u0026rsquo; this used to be done with a CD, though mostly it\u0026rsquo;s done with flash drives now. You\u0026rsquo;ll actually be putting the OS on the flash drive and then using that to put it on your hard drive.\nLet\u0026rsquo;s not get ahead of ourselves though, we need room to put the new operating system in! Thankfully Linux is small- really small. Even 50Gb should be plenty for the OS, all your programs, and tons of room to spare for data, but I typically recommend at least 100GB, and since we\u0026rsquo;ll be installing a lot of development tools, it makes sense to do this right to begin with.\nWindows Windows When you got your computer with windows is likely that all of the room on your hard drive was preallocated for windows (as it should be!) so we\u0026rsquo;ll need to shrink this down and make room for Linux to live along side Windows. Open the start menu and type \u0026lsquo;disk manag\u0026rsquo; and hopefully \u0026ldquo;create or format hard drive partitions\u0026rdquo; will show up as an option. At the bottom you should see a few bars showing partitions on your disk(s). If you have multiple hard drives there will be multiple rows of bars, otherwise there will be only one row. If you have multiple drives it\u0026rsquo;s likely that one is a larger hard drive (HDD) and the other a smaller solid state drive (SSD), if you have room on your SSD use that, if you don\u0026rsquo;t using the HDD will be fine, but the OS may feel slower than you\u0026rsquo;re accustomed to. If you only have one drive, ignore this. Right click in what is likely the largest box, labeled \u0026lsquo;primary partition\u0026rsquo; and chose \u0026lsquo;Shrink Volume\u0026rsquo;. After it finishes querying available disk space enter 102400 as the amount of room to shrink (This is 100GB as there are 1024MB in a GB) or a lower or higher value as you please, but realize this is data you will not be able to access from windows.\n If the window shows 0MB of available shrink space first try running disk cleanup and choose cleanup system files, try turning off system restore, and finally disable the page file. In my experince it\u0026rsquo;s usually the pagefile, which kinda sucks. If none of this works, you do have another option: wiping everything and installing linux. This is actually easier, however, it\u0026rsquo;s a bit more extreme, as you won\u0026rsquo;t be able to boot back to windows for anythig. You may instead want to try linux out on an old usused computer first. Either way, you do you, but I\u0026rsquo;m not liable if things go wrong. https://medium.com/@terajournal/increasing-size-of-available-shrink-space-for-hard-drive-partition-in-windows-8fffa50535d3\n Alright, we\u0026rsquo;re getting there I promise. You should now have a gray block next to that blue block of space that shows unused space, that\u0026rsquo;s perfect. Next up we\u0026rsquo;ll need to turn Fast Boot off. In my experience turning this off doesn\u0026rsquo;t effect windows boot time at all, and by having it off we\u0026rsquo;ll be able to access window\u0026rsquo;s file from inside linux later. To do this: go to \u0026lsquo;edit power plan\u0026rsquo;, then in the top bar navigate back to \u0026lsquo;Power Options\u0026rsquo;, select \u0026lsquo;Chose what the buttons do\u0026rsquo; on the left side, click \u0026lsquo;Change settings that are currently unavailable\u0026rsquo; and then un check \u0026lsquo;Turn on Fast Startup\u0026rsquo;.\nOkay, now we\u0026rsquo;re finally ready to copy the OS to a flash drive so we can install Arch, to do this, you\u0026rsquo;ll need to download a program called rufus https://rufus.ie/. Download, run, etc. When it opens select the flash drive as your \u0026lsquo;device\u0026rsquo; , press the select button under that and select the archlinux-20xx.xx.xx-x86_64.iso file we downloaded earlier. Everything else should be fine, so click start. This may take a second, in the mean time, open this guide on another computer as the next few steps will require a lot of restarting and doing things outside of windows.\nMac Mac Before we go any further I really want to warn you of two things, one, it\u0026rsquo;s going to be harder to follow this guide on a MAC. More steps are involved, and some work arounds are necessary, and more importantly, I have no experience with it. so I\u0026rsquo;m mostly regurgitating other things I\u0026rsquo;ve read. Pages like https://wiki.archlinux.org/index.php/Mac#Installation may prove helpful later.\nFirst, you\u0026rsquo;ll need to open up \u0026lsquo;Disk Utility\u0026rsquo; in Applications/Utilities, then pick your disk and click \u0026lsquo;Partition\u0026rsquo; and click the \u0026lsquo;+\u0026rsquo; button to make a new partition. Choose how much space you want to leave on the disk for MacOS and how much you want for Arch. The format of the new partition doesn\u0026rsquo;t matter.\n Note, if your disk is encrypted, you\u0026rsquo;ll need to decrypt first.\n Now, you\u0026rsquo;ll need to open a terminal like you did back when checking the checksum. Plug in either an empty flash drive or one which you don\u0026rsquo;t mind erasing, and run\ndiskutil list and you should see something like /dev/diskX (external, physical) which is your flash drive. Now run diskutil unmountDisk /dev/diskX where X is your flash drive disk number from above, then finally run dd if=path/to/arch.iso of=/dev/rdiskX bs=1m. Note that the of part has /rdiskX . The path to your arch iso is probably something like ~/Downloads/archlinux-20xx.xx.xx-x86_64.iso\nThis command won\u0026rsquo;t print anything while it\u0026rsquo;s running, but when it\u0026rsquo;s done you\u0026rsquo;ll see a new line asking for input. Two more notes ripped straight from https://wiki.archlinux.org/index.php/USB_flash_installation_media#In_macOS:\n To view progress, send SIGINFO by pressing Ctrl+t. Note diskX here should not include the s1 suffix, or else the USB device will only be bootable in UEFI mode and not legacy. After completion, macOS may complain that \u0026ldquo;The disk you inserted was not readable by this computer\u0026rdquo;. Select \u0026lsquo;Ignore\u0026rsquo;. The USB device will be bootable.\n Now you should be good to carry on with the guide\n  of note, the following guide will be assuming you\u0026rsquo;re installing Linux on the same drive as Windows or MacOS, making it applicable for most systems right away; however, I strongly recommend getting an extra SSD and giving Linux it\u0026rsquo;s own disk outright instead. This is far easier to do in a desktop, but if you have a laptop with a CD drive you may be able to put a SSD in it\u0026rsquo;s place. SSD prices have been steadily declining over the pas few years, but as of the time of writing a 250Gb ssd should be available for under 50 USD. I\u0026rsquo;d recommend a larger disk though, with 500Gb being plenty for most people\n While this guide should lead you though step by step, it may be helpful to follow the offical installation guide as well, which is available at https://wiki.archlinux.org/index.php/installation_guide. Furthermore, while slightly outdated, this flow chat is a nice refrence as well: https://i.imgur.com/Hokk8sK.jpg\ndespite the technically complexity to get to it, the best place for Arch Linux support, even for installation, is in the IRC (Internet Relay Chat) channel #archlinux on Freenode. https://wiki.archlinux.org/index.php/Arch_IRC_channels\nObviously if you need this you\u0026rsquo;ll need IRC open on a different device than the one you\u0026rsquo;re installing from. There are plenty of IRC clients available for any platform though.\nInstallation #  ‚ò†‚ò†‚ò† Seriously, backup your shit. I've done this countless times and have still managed to accidentally wipe a drive. There's a non-0 chance you're about to completely murder your windows install, It shouldn't happen, but it can. This is a necssary evil to learn, and I assure you'll be happy you've done all this, but this next bit is actual hell for people. I'm sorry it gets so bad so early. I promise it's worth it, okay? The next section requires a lot of reboots and has steps where you can't have this guide open on the computer you're working on. Don't be stupid.‚ò†‚ò†‚ò†  To be fair, you should probably be doing backups anyway. We\u0026rsquo;ll talk about this at some point, but, if you don\u0026rsquo;t have a regular back up solution + an occasional full disk backup and you\u0026rsquo;re already pretty nerdy, you might want to remedy that sooner rather than later\n  MAC USERS: Beware, none of the following was writen with a MAC in mind, and as such I strongly recommend you read https://wiki.archlinux.org/index.php/Mac#Installation and look for where my instructions deviate from what\u0026rsquo;s recommended here.\n Now you\u0026rsquo;ll need to power off your computer. Turn it back on and as you do mash the everliving hell out of both f2 and delete (unless you know what key gets you into the UEFI / BIOS settings). This should bring up a menu that either looks super fancy or looks stright out of the 80\u0026rsquo;s. Either is fine. The setting we\u0026rsquo;re looking for is \u0026lsquo;Secure Boot\u0026rsquo; it\u0026rsquo;s probably under a menu called \u0026lsquo;Boot\u0026rsquo; or \u0026lsquo;Security\u0026rsquo;. You\u0026rsquo;ll need to shut this off. In theory secure boot should protect against a nasty kind of virus called a rootkit, in practice it doesn\u0026rsquo;t and only serves to make installing linux more annoying, don\u0026rsquo;t worry, I\u0026rsquo;m a security nut and am comfortable leaving it off. Exit and save settings, and as your computer boots again mash F11 or whatever key gets you to a boot menu, and select your USB key. If it shows up twice try the first one first, if that doesn\u0026rsquo;t work try the other one. (If you end up back in Windows just restart and go back into the bios settings, go to \u0026lsquo;Boot\u0026rsquo; and reorder the boot menu entries so your flash drive is the first option) The system should boot first to a screen with a few options, pick Arch Linux if you have to or just wait for it to move on. You should, with any luck, see a list of text flash down the screen that looks roughly like\n1 2 3  [OK] doing thing [OK] starting thing [OK] did thing    If something comes up as [FAILED] even though you still get to the login prompt, don\u0026rsquo;t worry about it for now\n Then, you should be greeted by a minimal prompt that looks like\n1  root@archiso ~ #   and that\u0026rsquo;s it. Congrats, you\u0026rsquo;ve already made massive progress.\nThis is arch, but it\u0026rsquo;s not actually installed yet, right now your entire computer is running off the flash drive. So let\u0026rsquo;s get it installed.\nYou\u0026rsquo;ll need an internet connection to do anything, if you can connect you computer to the network though ethernet directly, that should be much, much easier than doing things though wifi. If you absolutely must do things though wifi, well, first, really don\u0026rsquo;t. I mean, you can, but\u0026rsquo;s a solid pain. I\u0026rsquo;m going to assume you\u0026rsquo;re not. Cool.\nIf you didn\u0026rsquo;t connect your computer to ethernet before you started arch, the first thing you should type in this prompt is\n1  systemctl restart dhcpcd   this manually restarts the service that asks the network for an IP address, which you need to do since currently the system is in such a minimal state it won\u0026rsquo;t do that automatically.\nNow, try\n1  ping archlinux.org   if you see something like \u0026lsquo;64 bytes from apollo.archlinux.org\u0026rsquo;, congrats! You\u0026rsquo;re online! If not, you may try a different network or wireless if applicable (seriously, it\u0026rsquo;s a pain)\nFrom here, you\u0026rsquo;ll need to see the names of the hard drives on your system. run \u0026lsquo;lsblk -f\u0026rsquo;.\nbut what does that even mean? well, let\u0026rsquo;s learn about another command! \u0026lsquo;man\u0026rsquo;\nfor most commands on linux if you type \u0026lsquo;man\u0026rsquo; before the command with no flags (the -x things after the command) it\u0026rsquo;ll open a manual page for the command. Read here to figure and try to figure out what lsblk is and what -f does.\n lsblk lists information about all or the specified block devices. The lsblk command reads the sysfs filesystem to gather information. The command prints all block devices (except RAM disks) in a tree-like format by default. Use lsblk \u0026ndash;help to get a list of all available columns. \u0026hellip; The default output as well as default output from options like \u0026ndash;topology and \u0026ndash;fs is subject to change, so whenever possible you should avoid using default outputs in your scripts. Always explicitly define expected columns by \u0026ndash;output columns in environment where a stable output is required. \u0026hellip; -f, \u0026ndash;fs Output info about filesystems. This option is equivalent to \u0026ldquo;-o NAME,FSTYPE,LABEL,MOUNTPOINT\u0026rdquo;. The authoritative information about filesystems and raids is provided by the blkid(8) command.\n Okay? Well, that probably doesn\u0026rsquo;t mean much so lets focus on the important bits\n\u0026ldquo;lsblk lists information about all or the specified block devices. The lsblk command reads the sysfs filesystem to gather information.\u0026rdquo;\nBlock devices are devices that have \u0026lsquo;blocks\u0026rsquo; of information, like hard drives, flash drives, solid state drives, sd cards, etc.\n\u0026ldquo;-f, \u0026ndash;fs \u0026hellip; Output info about filesystems.\u0026rdquo;\nThis means we\u0026rsquo;ll be able to see what type of file system is on each block device.\nSo, we can use this command to see information like we saw graphically back when we opened disk management in windows, only now with their linux names. In linux each block device is actually stored as a file, as bizarre as that may seem. This file is actually located in the dev folder which sits on top the root folder. The root folder is simply designated by a single \u0026lsquo;/\u0026rsquo; so a normal file structure may look like \u0026lsquo;/home/USERNAME/Documents/office/\u0026rsquo; and so on. It\u0026rsquo;s worth noting that \u0026lsquo;/\u0026rsquo; is actually a folder in itself, it\u0026rsquo;s just the absolute bottom folder, hence it\u0026rsquo;s called the root folder. So the dev folder is located at /dev. In /dev there\u0026rsquo;s a lot of things, but at the moment what we\u0026rsquo;re really concerned about is the storage devices. so, looking at this example output from lsblk you\u0026rsquo;ll see three storage devices /dev/sda /dev/sdb and /dev/nvme0n1\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  vega@linux ~ # lsblk -f NAME FSTYPE LABEL UUID FSAVAIL FSUSE% MOUNTPOINT sda ‚îú‚îÄsda1 ‚îú‚îÄsda2 ‚îú‚îÄsda3 ‚îî‚îÄsda4 sdb ‚îú‚îÄsdb1 ‚îî‚îÄsdb2 nvme0n1 ‚îú‚îÄnvme0n1p1 ntfs Recovery 36C8A86BC8A82B57 ‚îú‚îÄnvme0n1p2 vfat E2AB-10F2 ‚îú‚îÄnvme0n1p3 ntfs DE54B4D854B4B51D ‚îî‚îÄnvme0n1p4   What do these mean? Well, most drives in linux are simply designated by a /dev/sdX where x is just the next available letter in the alphabet, though on some newer systems like mine, you may find some blazing fast SSDs actually use that other odd nvme syntax. Both work exactly the same way for what were doing.\nlooking at that output again you\u0026rsquo;ll see each device has multiple things under it. For example /dev/sda has /dev/sda1 all the way though /dev/sda4. Each of these are the separate partitions. In this particular example, sda is actually the flash drive we\u0026rsquo;re running off of, so you can see that it is currently where our root file is \u0026lsquo;/\u0026rsquo; on /dev/sda1 and that it\u0026rsquo;s an ext4 file system (I\u0026rsquo;ll explain this a bit more in a bit) you\u0026rsquo;ll also see there\u0026rsquo;s another partition that\u0026rsquo;s formatted as fat32 for boot, but all of these are on the flash drive because they\u0026rsquo;re on sda.\nFor Simplicity now we\u0026rsquo;re actually going to look at a simpler \u0026lsquo;lsblk -f\u0026rsquo; output with only /dev/sda and sdb. sda is still the boot usb stick you\u0026rsquo;re on, but sdb is now the singular drive in a laptop that has windows installed and available free space in accordance with this guide.\n1 2 3 4 5 6 7  root@archiso ~ # lsblk -f sdb ‚îú‚îÄsdb1 ntfs Recovery 36C8A86BC8A82B57 ‚îú‚îÄsdb2 vfat E2AB-10F2 ‚îú‚îÄsdb3 ntfs DE54B4D854B4B51D ‚îî‚îÄsdb4   alright, so now on sdb we see there\u0026rsquo;s 4 partitions (sdb1,2,3,4) where in this case we have sdb2 as a ~512Mb vfat partition, sdb3 as a 300Gb NTFs partition, and then that blank partition we made on sdb4. That 512Mb partition contains the bootloader for both windows and soon linux. The larger NTFS file system is where Windows and all your programs documents and other things you\u0026rsquo;ve done on your computer in the past live. I hope now it\u0026rsquo;s obvious why I urged backups, as we\u0026rsquo;re about to play around with things a bit.\nWe\u0026rsquo;re going to need to make some changes this list tough, as we actually need one more small division in the partition table. run the command\n1  root@archiso ~ # cfdisk /dev/sdb   this should bring up a strange command line based almost graphical interface which you can used to edit, add, or remove partitions. With that 100Gb (or whatever you chose free space we made earlier), let\u0026rsquo;s divide it into two partitions, one that\u0026rsquo;s 8GB and the other that\u0026rsquo;s just what\u0026rsquo;s left. We\u0026rsquo;re doing this so we have somewhere to put SWAP in a second, but let\u0026rsquo;s get to that later, for now just use your arrow keys and highlight the large empty block and select new, select primary, then make it 8GB, which is 8*1024Mb or 8192, and then select end. Finally write it, then quit. Whew. Bit stressful even for me. Don\u0026rsquo;t worry, Linux get\u0026rsquo;s much much easier, especially when we get our graphical tools back.\nnow, run lsblk again. You should see something like\n1 2 3 4 5 6 7  root@archiso ~ # lsblk sdb ‚îú‚îÄsdb1 ntfs Recovery 36C8A86BC8A82B57 ‚îú‚îÄsdb2 vfat E2AB-10F2 ‚îú‚îÄsdb3 ntfs DE54B4D854B4B51D ‚îú‚îÄsdb4 ‚îî‚îÄsdb5   so now we need to format these partitions with a file system. For the root file system, where we\u0026rsquo;re gonna put all the programs, files, and the OS itself we\u0026rsquo;ll use the ext4 file system. It\u0026rsquo;s by far the most common file system for linux. To do this look at the lsblk output and look for the large empty space we left (not the 8Gb space we just made!) and run\n1  root@archiso ~ # mkfs.ext4 /dev/sdxy   where xy is the correct letter and number for your partition, in the above example that\u0026rsquo;s /dev/sdb4, as sdb5 is the 8Gb partition we just made\nalright, that\u0026rsquo;s actually most of the really hard stuff done. Now we need to mount both the file system we just made and the boot filesystem. run:\n1 2  mount /dev/sdbx /mnt mount /dev/sdby /mnt/boot   where x is the same as the above x and y is the number of the partition with the windows boot manager. sdby should be roughly 500 megabytes and be vfat, it may appear as \u0026lsquo;EFI partiton\u0026rsquo; in cfdisk if you\u0026rsquo;re unsure.\nNext up we need to install the base of the os to these drives, this is actually pretty easy just run\n[TODO] Arch linux\u0026rsquo;s install has changed a bit since this was written. Now, more arguments are required at install time as the base Linux kernel is no longer included in base. I\u0026rsquo;ve changed this here slightly, but it\u0026rsquo;s very likely still missing some things.\n1  pacstrap /mnt base base-devel linux systemd   then, we need something that tells the system the names of our partitions and how to mount them at boot. Thankfully, the system can generate (most) of this for us, just run\n1  genfstab -U /mnt \u0026gt; /mnt/etc/fstab   what this command does is looks at the id\u0026rsquo;s of the drives in /mnt (the ones we manually mounted when we ran mount a few commands ago) and redirects those id\u0026rsquo;s and the settings used to mount them (which were default) and writes that output using \u0026lsquo;\u0026gt;\u0026rsquo; as a redirect to a file stored in /mnt/etc/fstab. Because /mnt is the location where we mounted the harddrive, it\u0026rsquo;s actually writing a file to the hard drive now, just as pacstrap just did.\nAlright, next we need to use a command that you\u0026rsquo;ll probably never use again- chroot. This changes your root directly to be higher up the chain, effectively cutting off access to lower files, though we need to do this to install our bootloader, again this is easy\n1  root@archiso ~ # arch-chroot /mnt   which will change the above to look like: ' root@archiso ~ # ' to ' root@archiso / # ' as that \u0026lsquo;~\u0026rsquo; was actually a shorter representation of being in /home/root (there\u0026rsquo;s actually a user nammed root by default, and the user has it\u0026rsquo;s own home directory. It\u0026rsquo;s easy to confused root the user with root the directory, but you\u0026rsquo;ll get it eventually if you don\u0026rsquo;t now that\u0026rsquo;s okay c: )\nnow we can install the bootlooder with\n1  root@archiso / # bootctl install   Now we need to add a bootloader entry for arch. We\u0026rsquo;re going to use a very simple command line text editor called nano. it\u0026rsquo;s sorta like notepad on windows.\n1  root@archiso / # nano /boot/loader/loader.conf   this will bring up a text editor, it says how to operate it at the bottom (ctr+o to write out = save, crt+x to exit, etc)\nenter, exactly: (Note line 2 says linuZ-linux, that\u0026rsquo;s not a typo, and replace the x with your root partiton)\n1 2 3 4  title Arch Linux linux /vmlinuz-linux initrd /initramfs-linux.ing options root=/dev/sdbx rw   and for our last trick before we reboot save and exit nano with ctr+o, ctl+x then, run\n1  root@archiso / # nano /boot/loader/loader.conf   and enter\n1 2  timeout 3 default arch   then, we\u0026rsquo;re ready to reboot into the new OS!\nrun consecutively,\n1 2  root@archiso / # exit root@archiso / # reboot   and pull the flash drive out. If all went well your system should boot to Arch. If it didn\u0026rsquo;t, first make sure it\u0026rsquo;s set to boot to arch in the BIOS/UEFI\u0026rsquo;s boot settings, and then if things are still broken try to figure out why, there are plenty of people in the community willing to help, including me.\nAssuming it booted back up to a similar looking prompt but with no flash drive we have to do some house keeping but you\u0026rsquo;ll have a bad ass system in no time.\nFirst things first enter \u0026lsquo;root\u0026rsquo; for the user name, this should let you login.\nthen run \u0026lsquo;passwd\u0026rsquo; this will prompt you to set a password. For the love of god don\u0026rsquo;t forget it.\nNext you\u0026rsquo;ll need to set a hostname, this is how your computer id\u0026rsquo;s itself on the network, so might help if you make it something sensible like \u0026lsquo;usernamelinux\u0026rsquo; to do this run\n1  echo \u0026#39;mynewawesomehostname\u0026#39; \u0026gt; /etc/hostname   then let\u0026rsquo;s add a user, as using root all the time is very unsafe. To do so run:\n(I recommend using the same password you used for root)\n1 2 3 4 5  useradd -m -G wheel mycrappyusername followed by, passwd mycrappyusername   I swear to you we\u0026rsquo;re getting there.\nrun\n1  EDITOR=nano visudo   then find the line that says\n1  # %wheel ALL=(ALL) ALL   and remove the \u0026lsquo;#\u0026rsquo;\nAs an explanation, the \u0026lsquo;#\u0026rsquo; is turning that line in that file into a comment, in programming it\u0026rsquo;s common practice to use comments to disable sections of code so say we had a program:\n1 2 3  for i in range(5) #print(i) print(i/2)   the # before print(i) is preventing it from actually executing so the output of this would be {1/2,1,3/2,2,5/2} instead of {1,1/2,2,1,3,3/2,4,2,5/2,5}\nAnyway, with that out of the way let\u0026rsquo;s find fix up networking so we can get online and run updates\nrun ip link and look for the name of your network interface. If it\u0026rsquo;s a wired adapter it should be enpXsY where X and Y are number, wif is similar but uses wlp instead of enp. To make sure the network brings itself up on each boot let\u0026rsquo;s enable dhcpcd - that service we restarted way back when- on that interface. Just run\n1 2 3 4 5 6  systemctl enable dhcpcd@enpXsY.service this enable it at each boot however we should start it now because this is the frist time systemctl start hdcpcd@enpXsY.service   next up, we should make sure things know what language we speak. Assuming you want to use US english just run\n1 2 3 4 5  locale-gen followed by, localectl set-locale LANG=en_US.UTF-8   Timezones, run each independently\n1 2 3 4 5 6 7 8 9  tzselect timedatectl list-timezones timedatectl set-timezone Zone/SubZone hwclock -systohc -utc timedatectl set-ntp true   It\u0026rsquo;s worth noting Linux and Windows use differenent clock standards so every time you reboot between the two windows will messup the clock, to fix it in WINDOWS you can run\n1  reg add \u0026#34;HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\TimeZoneInformation\u0026#34; /v RealTimeIsUniversal /d 1 /t REG_DWORD /f   in an admin command prompt\nAlright, we\u0026rsquo;re getting close to graphical stuff now, I swear. Remember that 8Gb partion we made a while ago, time to use it. Now that we\u0026rsquo;re in the full OS the\u0026rsquo;re a good chance the location names of the partitions changed so run lsblk -f again and figure out where that 8Gb portion is\n1 2 3 4 5  lsblk -f mkswap /dev/sdXY swapon /dev/sdxy   then, we need to edit the fstab file we generated earlier.\nLet\u0026rsquo;s look at what the fstab file looks like right now. We can read a file from the command line without opening it up for editing with cat, so run\n1  cat /etc/fstab   and you can see what it looks like. See all those super long UUID\u0026rsquo;s? We need the right one of those for our new swap area. Thankfully there\u0026rsquo;s an easier way to do this than writing it down on a sticky note.\nif we run lsblk -no UUID /dev/sdxy (obviously substitute x and y) you\u0026rsquo;ll get this UUID, so let\u0026rsquo;s just append it onto the end of the fstab file!\nRemember how we used the \u0026lsquo;\u0026gt;\u0026rsquo; character before to write the output of genfstab to /etc/fstab, well you can also use two of that same character to append an output to a file. However, before we do that let\u0026rsquo;s be safe rather than sorry and make a backup of the fstab file by first moving to the /etc directory then making a copy of the file\n1 2 3  cd /etc cp fstab fstab.bak lsblk -no UUID /dev/sdxy \u0026gt;\u0026gt; fstab   note we didn\u0026rsquo;t need to type /etc/ before each fstab because that\u0026rsquo;s a file in the folder we\u0026rsquo;re already in.\nbut we\u0026rsquo;re not done yet. use nano to open up the fstab file and edit it so the last line we just appended looks more like:\n1  UUID=whateverthisis none swap defaults 0 0   Save and close nano and then to finish up swap all we need to do is edit one more file\n1 2 3 4 5  nano /etc/sysctl.d/99-sysctl.conf and add the single line vm.swappiness=10   Alright, lets run an update and reboot!\nFor now to do updates we\u0026rsquo;ll use pacman (short for package manager)\nrun \u0026lsquo;pacman -Syyu\u0026rsquo;\nThe -S says to Sync, or actually apply the updates, the double y\u0026rsquo;s say to force grab the newest database (usually only use one y) and u means upgrade. If you want more detail run man pacman\nOnce that\u0026rsquo;s done you can run systemctl reboot\nFinally, we\u0026rsquo;re going to get a graphical environment running.\nOnce the system reboots login with your username, not root. When you type your password you won\u0026rsquo;t see anything, but it is actually typing!\nthen run:\n1  sudo pacman -S xf86-video-vesa mesa   This command uses sudo or \u0026lsquo;superuser do\u0026rsquo; because you\u0026rsquo;re now logged in as a user, and as such need admin privileges to install software. This is part of why Linux is so secure. Pacman, again, is just \u0026lsquo;package manager\u0026rsquo; , -S tells pacman to sync the requested packages from the server and the other two things are the two packages we want right now, both are used for video output.\nTo install the correct driver for your graphics hardware you can run\n1 2 3 4 5 6 7  these next few commands use \u0026#39;pipe\u0026#39; the character above enter on most US keyboards lspci | grep -i VGA and if that doesn\u0026#39;t turn up anything lspci | grep -i 3D   to find the vendor of your graphics card. If the output contains NVIDIA run\n1  sudo pacman -S xf86-video-nouveau   for INTEL run\n1  sudo pacman -S xf86-video-intel   and for AMD run\n1  sudo pacman -S xf86-video-amdgpu   if you have multiple, it\u0026rsquo;s safe to install both.\nAlright, now we need to install the desktop environment. Because this guide to this point is probably already melting your brain I\u0026rsquo;ll take it easy for a bit and we can install KDE-Plasma.\nKDE Plasma is pretty big though, so we\u0026rsquo;re gonna want to be sure we\u0026rsquo;re using fast mirrors before we do anything else\n1  sudo pacman -S reflector   then we\u0026rsquo;re going to temporarily switch to the root account using su all you have to do is type su and enter, then type the password\nnow run\n1  reflector -c us -n 25 -f 5 \u0026gt; /etc/pacmand.d/mirrorlist   Finally to install Plasma run\n1 2 3 4 5 6 7 8 9 10 11  sudo pacman -S xorg-server xord-utils xorg-xinit xterm plasma kde-applications then sudo systemctl enable ssdm amixer sset Master unmute and finally, lets see the epic payoff of all the effort sudo systemctl start ssdm   Note that KDE Plasma is fairly large to download and a bit resource intensive. As an alternative if on older hardware\n1 2 3 4 5 6 7 8 9 10 11  sudo pacman -S xorg-server xorg-utils xorg-xinit xterm mate mate-extra lightdm then sudo systemctl enebale lightdm amixer sset Master unmute and finally, lets see the epic payoff of all the effort sudo systemctl start lxdm   Alright, now you can take a few minutes to get used to how your new computer works, play with settings, etc.\nbefore you wrap up lets do a tiny bit of houskeeping\n1 2 3 4 5 6 7 8 9  sudo pacman-key --init sudo pacman-key --populate sudo pacman -S git --needed git clone https://aur.archlinux.org/yay.git cd yay makepkg -Acs sudo pacman -U yay -S zsh chsh -s /bin/zsh   from now on you can just open a terminal and type yay followed by your password to run updates.\n[TODO] Make NTFS drives accesible and auto mount\nSo Why Did I do all of that exactly? #  Linux makes development of code particularly easy, so, let\u0026rsquo;s write some code!\nThe first language we\u0026rsquo;re going to try out is called python. Python is an interpreted language, meaning each block to be executed can be run one at a time, to show you, let\u0026rsquo;s install it.\nBecause we installed yay earlier you could use either that or pacman, but let\u0026rsquo;s just use yay for simplicity. From here on out I\u0026rsquo;ll be coping directly from what my terminal prompt looks like. Yours, for now, probaly looks similar to:\n1  username@root /current/folder : command -to -be executed   However, mine looks like\n1 2  ‚ï≠‚îÄvega@lyrae /current folder ‚ï∞‚îÄ‚û§ command -to -be -executed   so, install python just like we\u0026rsquo;ve installed other programs with python or yay\n1 2  ‚ï≠‚îÄvega@lyrae ~ ‚ï∞‚îÄ‚û§ yay -S python   once that\u0026rsquo;s done you should be able to start the python interpreter by simply typing python and pressing enter. This will give you a new prompt that takes python code as input\n1 2 3 4 5 6  ‚ï≠‚îÄvega@lyrae ~ ‚ï∞‚îÄ‚û§ python Python 3.7.2 (default, Jan 10 2019, 23:51:51) [GCC 8.2.1 20181127] on linux Type \u0026#34;help\u0026#34;, \u0026#34;copyright\u0026#34;, \u0026#34;credits\u0026#34; or \u0026#34;license\u0026#34; for more information. \u0026gt;\u0026gt;\u0026gt;   the \u0026gt;\u0026gt;\u0026gt; is the prompt asking for input, go ahead and just try 1 + 1 for now\n1 2  \u0026gt;\u0026gt;\u0026gt; 1 + 1 2   Okay, who cares though, right? let\u0026rsquo;s try something a bit cooler. Say you wanted to add up all the odd integers up to 72? This isn\u0026rsquo;t something that\u0026rsquo;s trivial to do on most calculators and would be a real pain by hand, but it\u0026rsquo;s trivial to do in python. The code to run this in python is\n1 2 3 4 5 6 7  #note, this is to 37 because we\u0026#39;re multiplying i by 2 below, so we only have to go until 2*i = 72 or i = 36. #EXCEPT, the range function includes the first number and excludes the last, so we actually use range(1,37) sum = 0 for i in range(1,37): sum = sum + (2*i+1) print(sum)   when you type this in the prompt you\u0026rsquo;ll actually be able to enter multiple lines when you write the for loop. There\u0026rsquo;s no clear way to explain this in text, you\u0026rsquo;ll just have to try it and see how it works, note the way python set up looping is by indentation, so you\u0026rsquo;ll need to press tab when the prompt lets you type the line sum = sum + i so that it\u0026rsquo;s obviously a \u0026lsquo;child\u0026rsquo; of the for loop.\nafter you run the print statment you should see the output\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  ‚ï≠‚îÄvega@lyrae ~ ‚ï∞‚îÄ‚û§ python Python 3.7.2 (default, Jan 10 2019, 23:51:51) [GCC 8.2.1 20181127] on linux Type \u0026#34;help\u0026#34;, \u0026#34;copyright\u0026#34;, \u0026#34;credits\u0026#34; or \u0026#34;license\u0026#34; for more information. \u0026gt;\u0026gt;\u0026gt; sum = 0 \u0026gt;\u0026gt;\u0026gt; for i in range(1,73): ... sum = sum + i ... \u0026gt;\u0026gt;\u0026gt; print(sum) 2628 \u0026gt;\u0026gt;\u0026gt; exit() ‚ï≠‚îÄvega@lyrae ~ ‚ï∞‚îÄ‚û§   telling us the answer is 2628. To make you feel like a bad ass, you actually just wrote code that\u0026rsquo;s equivalent to this math   \\( \\sum_{n=1}^{72} n \\)  pretty cool right? But that\u0026rsquo;s math? Who cares? Let\u0026rsquo;s do something cool!\n If you\u0026rsquo;re not familiar with math like this, this is the sum from n=1 to n=72 of n, so it\u0026rsquo;d be 1+2+3+\u0026hellip;+72\n Python code doesn\u0026rsquo;t have to be written in line by line, you can put it an a file and the computer will run that file as a program, so let\u0026rsquo;s do that! But to do that we\u0026rsquo;re gonna need something better than a terminal editor or an equivalent to notepad. There are actually text editors that make writing code much easier. Let\u0026rsquo;s go grab the \u0026lsquo;Visual Studio Code\u0026rsquo; editor. Hopefully by now you know the command! (The name of the package is just code)\nsuper quick detour: while you can open graphical programs though the start menu down in the lower left hand corner just like on Windows, you can actually open a program directly from the terminal. Interestingly, this can make a program that opens in a new window a \u0026lsquo;child process\u0026rsquo; of the terminal, which is why we normally don\u0026rsquo;t do this. What this normally means is that if you start a program from the terminal - the parent- and then close the terminal, the child process, in this case the graphical program you started, will die too. Strangely, VSCode actually separates itself from it\u0026rsquo;s parent process almost immediately, which is why we can start it from a terminal and then close the terminal and it should stay running. so, let\u0026rsquo;s do that.\n1 2  ‚ï≠‚îÄvega@lyrae ~ ‚ï∞‚îÄ‚û§ code   and a new window should pop up. It\u0026rsquo;ll probably open with a few tabs welcoming you, asking if you want to install a theme, if you are okay sending VSCode usage info, etc. Uncheck boxes so these don\u0026rsquo;t come up each time and answer questions as you please. Then, we\u0026rsquo;re going to go up to the top and chose\nfile -\u0026gt; new file Then, down at the bottom right of the editor you should see something that says plain text click that and a box will appear asking for the name of the language you\u0026rsquo;re working with. Obviously chose python.\nalright, now we\u0026rsquo;re ready to code! Let\u0026rsquo;s put a bit more interesting of a program in and then we\u0026rsquo;ll talk about what it does line by line. I stole this code from https://matplotlib.org/2.0.2/examples/animation/animate_decay.html\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45  #!/bin/python3 import numpy as np import matplotlib.pyplot as plt import matplotlib.animation as animation def data_gen(t=0): count = 0 while count \u0026lt; 1000: count += 1 t += 0.1 yield t, np.sin(2*np.pi*t) * np.exp(-t/10.) def init(): ax.set_ylim(-1.1, 1.1) ax.set_xlim(0, 10) del xdata[:] del ydata[:] line.set_data(xdata, ydata) return line, fig, ax = plt.subplots() line, = ax.plot([], [], lw=2) ax.grid() xdata, ydata = [], [] def run(data): # update the data t, y = data xdata.append(t) ydata.append(y) xmin, xmax = ax.get_xlim() if t \u0026gt;= xmax: ax.set_xlim(xmin, 2*xmax) ax.figure.canvas.draw() line.set_data(xdata, ydata) return line, ani = animation.FuncAnimation(fig, run, data_gen, blit=False, interval=10, repeat=False, init_func=init) plt.show()   So you can just copy and paste all of this into VSCode, then use ctrl+s to save it, and let\u0026rsquo;s save it in the Documents folder as test.py - the .py extension is for python files.\nBefore we talk about our code, let\u0026rsquo;s see it run!\nOpen up a terminal, and run cd Documents to get to your documents folder, ls to see what\u0026rsquo;s in there, then ./test.py to run the program.\n1 2 3 4 5 6 7  ‚ï≠‚îÄvega@lyrae ~ ‚ï∞‚îÄ‚û§ cd Documents ‚ï≠‚îÄvega@lyrae ~/Documents ‚ï∞‚îÄ‚û§ ls test.py ‚ï≠‚îÄvega@lyrae ~/Documents ‚ï∞‚îÄ‚û§ ./test.py   Oops! that probably didn\u0026rsquo;t run. If you look at the errors it will tell you you\u0026rsquo;re missing matplotlib ad numpy, let\u0026rsquo;s go get those\n1 2  ‚ï≠‚îÄvega@lyrae ~/Documents ‚ï∞‚îÄ‚û§ yay -S python-matplotlib python-numpy   Now it should work! run ./test.py again, and now you should see a decaying sine wave. Still not exactly something that get\u0026rsquo;s the heart racing, but it does prove the power of programming! The code did all of that in under 50 lines of text!\nFrankly, the code that makes this work is a bit complicated but we can go over some of the important bits\nat the very top there are four important lines:\n1 2 3 4  #!/bin/python3 import numpy as np import matplotlib.pyplot as plot import matplotlib.animation as animation   the first line uses a shebang #! followed by python\u0026rsquo;s location, this tells Linux to use python (specifically python3) to run the code underneath, actually, that\u0026rsquo;s the location of the python program we installed earlier. In Linux, most of your programs can be found in /bin\nNext we have a bunch of imports. In most programming lanuges you don\u0026rsquo;t want to reinvent the wheel so you\u0026rsquo;ll use libraries. These are well documented, heavily tested, and optimized blocks of code you can use that you don\u0026rsquo;t really need to understand how work under the hood, only how to use them. Although not used here, the most basic example would be advanced math in the math library, like\n1 2 3 4 5 6 7 8 9 10 11  ‚ï≠‚îÄvega@lyrae ~ ‚ï∞‚îÄ‚û§ python Python 3.7.2 (default, Jan 10 2019, 23:51:51) [GCC 8.2.1 20181127] on linux Type \u0026#34;help\u0026#34;, \u0026#34;copyright\u0026#34;, \u0026#34;credits\u0026#34; or \u0026#34;license\u0026#34; for more information. \u0026gt;\u0026gt;\u0026gt; import math \u0026gt;\u0026gt;\u0026gt; math.sin(1) 0.8414709848078965 \u0026gt;\u0026gt;\u0026gt; math.pow(2,4) 16.0 \u0026gt;\u0026gt;\u0026gt; exit()   on line 6 the math library, which gave us access to sin and exponent functions, was imported. We don\u0026rsquo;t know how math.sin() works, but we know it does, and that\u0026rsquo;s fine.\nThe same is true for numpy and matplotlib above, both of these are libraries, matplot lib is what handled actually putting the data on the screen, and numpy as can be seen on line 12 of the program:\n1  yield t, np.sin(2*np.pi*t) * np.exp(-t/10.)   is used for doing some of the math. Numpy is a common python library used for doing more advanced math really fast, we\u0026rsquo;re not going to worry about that right now though.\nthe next thing you should notice is how the code is organized into blocks with def name(): like def data_gen(t=0): or def init(): these blocks of code are called functions and they let programmers break up code into re-usable pieces or just wrap up a lot of complicated things to make code more readable, for example imagine a function that takes two numbers and does hundreds of lines of complicated math with them (eww)\n1 2 3 4  def mathyMess(num1, num2) num1 = math.sin(num1) + math.pow(num1,num2) # imagine hundreds more lines here return result   this would make it so latter in your code anytime you needed to do this math again you could just use\n1 2 3  thing = mathyMess(42, 12) otherThing = mathyMess(0, 2) finalThing = thing + otherThing   this is much, much easier to read than a copy and pasted version without these functions or \u0026lsquo;blocks of code\u0026rsquo; furthermore, if you accidentally made a mistake somewhere in the math in mathyMess you can fix it there rather than in each independent copy individually.\nFor now, we\u0026rsquo;re going to take a bit of a break from code, but we\u0026rsquo;ll be back.\nOkay, so what? #  So, yeah, you can develop python just fine in Windows. Installing it is just a matter of going online and fetching an exe installer and checking the right boxes. There\u0026rsquo;s nothing here you can\u0026rsquo;t do in windows. If that\u0026rsquo;s the case why do any of this.\nFrankly the answer is complicated. The gist of it is that Linux actually exposes things in a way that while might be possible in windows will probably be much more difficult. Even in the above, when we installed python and a few libraries there was no need to open a web browser and each package is maintained and verified in a way that makes installation easy, secure, and reproducible.\nBut more than that, Linux actually exposes the system to the user and doesn\u0026rsquo;t try to hide it\u0026rsquo;s inner workings, rather, for many things Linux implies that you should manually edit the config files, look at how programs use various resources, and peer into how the system actually handles any given task.\nYou\u0026rsquo;ll start to see this more as we move forward though these next few chapters. Speaking of\u0026hellip;\n"});index.add({'id':19,'href':'/engineering/20-databases/','title':"20 Databases",'section':"Engineering",'content':"Chapter 20 - Databases #  [TODO] Start with comparison to spread sheet, explaining \u0026lsquo;NoSQL\u0026rsquo; Vs \u0026lsquo;SQL\u0026rsquo; and that this is Relational vs Non-Relational\n[TODO] explain CRUD\nCRUD #  Create, Read, Update, Delete\nSQL #  This is Opinionated Guides, so let me be clear, I really, really hate SQL. I don\u0026rsquo;t like OOP in general, and SQL is sorta like object orientation taken further. Add onto this a mostly shit syntax, like, JOINs are objectively weird to read, write, and understand. I\u0026rsquo;m not saying SQL doesn\u0026rsquo;t have it\u0026rsquo;s place: It\u0026rsquo;s reasonably good for ensuring data fits a strict structure and does make sense in cases where using OOP also makes sense. It\u0026rsquo;s just that OOP itself is over-used leading to SQL being over used. This is probably in part due to education mostly teaching SQL and it being the only type of database many students ever learn. This might make some sense if it were honestly better, but I suspect that it\u0026rsquo;s in large part taught for the same reason Java is: Sun Microsystem paid a fuck ton of money to push it- hence the \u0026ldquo;3 Billion Devices Run Java\u0026rdquo; Thing. Then, Oracle bought Java from Sun Microsystems and made the first comercially available implimention of SQL. I\u0026rsquo;m hopeful (albeit probably naively) that Oracle making Java a mess of licencesing as the \u0026lsquo;main\u0026rsquo; Java Virtual Machine goes paid (Read on Wikipedia) and suing Google will be the nail in the coffin for education using it- and that SQL will be demoted to being taught along side other options along with that. Regardless of the reasons though, you should still learn it because everything uses it. [TODO] SQL, full CRUD, joins, the works\n[TODO, like, all of it. Need SQL vs Non Relational too]\nGenerating SQL Code with Blocks - Scratch Like Programming for SQL\nSQL Servers (MySQL) #  Sanitizaing Inputs #  [TODO] need image source Key-Value (Memcached, Redis) #  Graph Databases (Neo4j, GraphQL?) #  Why not use GraphQL?\nDocument-Oriented Database (Couchbase) #  Other Resources #  List of Some Open Source Database Options\n"});index.add({'id':20,'href':'/engineering/21-debugbuildtest/','title':"21 Debugbuildtest",'section':"Engineering",'content':"Chapter 21 - Debugging, Automated Building and Testing #  Automated Building #  Debugging #  ./missing-semester - Bebugging and Profiling\nSoftware Debugging #  [TODO]\nGDB with Gef, interpreted languages, embedded systems, non-code issues (boot problems, glitchy behavior), hardware failures, valgrind, various trace programs, print debugging extended\nDebuggers #  GDB Frontend\nGDB + GEF\nThe State of Linux Debuggers (Jamie Brandon\u0026rsquo;s Blog) ‚Üê This is a decent rant about why most debuggers sort of suck. And yeah, they do. But we still sorta need them\nStatic Analysis #  CodeChecker using LLVM/Clang (GitHub)\nHardware Debugging #  common interfaces, simulation, serial/print debugging (slow), internal data logging, physical indicators of internal state, hardware to facilitate debugging (LED \u0026lsquo;byte\u0026rsquo;)\nTesting #  @jnesselr replying to @alicegoldfuss (Nov 13, 2018) +----------------------------------------------------+ |Me: *does major refactor* | |Tests: ‚úì | |Me: I don't believe you | +----------------------------------------------------+ [Suspended User] +----------------------------------------------------+ |Me: *deliberately breaks something, just to be sure*| |Tests: ‚úì | |Me: oh no | +----------------------------------------------------+ @boo_radley +----------------------------------------------------+ |Me: *changes nothing* | |Tests: ‚úó | |Me: oh no | +----------------------------------------------------+ [Suspended User] +----------------------------------------------------+ |Me: *runs tests again* | |Tests: ‚úî | |Me: oh no no no | +----------------------------------------------------+ src: https://twitter.com/boo_radley/status/1062513898954391552 Software Testing #  unit tests, integration tests\nHardware Testing #  Automated Building and Testing #  [TODO]\nFuzzing (sandsifter), make and alts, etc.\nContinuous Integration #  Continuous Deployment #  Benchmarking #  https://github.com/sharkdp/hyperfine\n"});index.add({'id':21,'href':'/engineering/22-compileassemble/','title':"22 Compileassemble",'section':"Engineering",'content':"Chapter 22 - Compilers and Assemblers #  https://lee.earth/til/compiling-c-code-a-step-by-step-guide/\nCommon Flags and When to Use them #   These flags are not universal, instead they\u0026rsquo;re from GCC. GCC and Clang are the big two compilers you\u0026rsquo;ll see a lot and these flags should be mostly the same between the two. Of course, there are many, many other compilers, but I\u0026rsquo;m going to start with the common stuff\n -o (Output) #   Note, this is a lowercase \u0026lsquo;o\u0026rsquo;\n You should\u0026rsquo;ve seen this already, I\u0026rsquo;m mentioning it mostly to give a brief review of what a flag is, it\u0026rsquo;s basically just another term for an argument to a program where the program is run as program-name argument1 argument2 ... but, usually flags are prefixed by - or --\nin the case of -o it just means, use the next argument as the output name, so using\ngcc input.c -o myprogram gives you an executable named myprogram instead of just input.\nWarnings #  Just, read this: https://interrupt.memfault.com/blog/best-and-worst-gcc-clang-compiler-flags - It\u0026rsquo;s a lot more in depth than anything I could write here. It\u0026rsquo;s focused on Embedded development, but should be broadly applicable.\n-S (aSSembly) #  -v (Verbose) #  Optimization #   Note, this is an uppercase \u0026lsquo;O\u0026rsquo;\n And now we can get to fun stuff. -O is generally used in levels, here with no space, so there\u0026rsquo;s -O, -O2, -O3, and -Ofast are for speed, and -Os is for size of the binary. (or -Oz for clang)\n Technically, -Ofast can break your code. This is rather unlikely though.\n Each of these will take longer to compile but be more aggressive about optimizing the assembly code that is generated from your input. For example, let\u0026rsquo;s look at the code\n1 2 3 4  int mult(int m, int n){ char a[m][n]; return sizeof(a); }   This is a very stupid multiply function. Effectively, it\u0026rsquo;s multiplying two numbers by making a matrix of size m by n, and then counting the number of spots in that matrix instead of just multiplying the two numbers. I\u0026rsquo;ve embedded a GodBolt page below with this code on the left, and it\u0026rsquo;ll show the assembly output on the right. At the top you should be able to see a box to type compiler options, go ahead and put in -O. You should see a huge long mess of assembly that used multiple imul (multiply) instructions be reduced to 3 lines of assembly with only a single multiply. The compiler has figured out that what we were doing was a stupid multiply and optimized it for us.\n Here there\u0026rsquo;s no difference between -O and O3, but with more complex code there often is. Just keep in mind that this is a trade off, there is the upfront cost of a longer compile time.\n-march, -mtune, -flto, -msse4.2, -mavx, -mavx2 #  -ansi #  Stripping (Not like that, perv) #  Strip command [Wikipedia]\nUnderstanding compilers and common compiler flags #  How expensive is integer-overflow trapping in C++? / Hacker News Comments on article\nHow the cpython compiler works\nCS 6120: Advanced Compilers: The Self-Guided Online Course\n[TODO]\nMaking a compiler and assembler, DIY language eso-lang style\nMaking an interpreted language #  Making a compiled language #  https://medium.freecodecamp.org/the-programming-language-pipeline-91d3f449c919\nGarbage Collection #  Garbage Collection Algorithms + Writing a memory allocator\nContinued Reading #  At this point I highly recommend \u0026lsquo;The Art of Exploitation\u0026rsquo; by Jon Erickson\nFun things #  Malloc Geiger (Github)\n"});index.add({'id':22,'href':'/engineering/23-exploitation/','title':"23 Exploitation",'section':"Engineering",'content':"Chapter 23 - Exploitation #  XKCD #2166 Often when we think about Exploitation, better known as hacking, we conjure images of a more-punk-than-cyber cyberpunk person clicking away wildly on a keyboard as code flies by, like the 1995 movie, Hackers, and to some extent this isn\u0026rsquo;t wrong, as one look around the floor at DefCon, will show you. And honestly, that\u0026rsquo;s to by accident. While there are strictly professional security experts, those that work at corporations and banks, a large number do it for the lolz, for fun, and to bring a little fun back into computing. Calling exploitation \u0026lsquo;hacking\u0026rsquo; is almost a misnomer, as hacking encompass a lot more than exploitation, and exploitation a lot more than hacking. For that reason, before we start, I recommend you watch this video, on speed running Super Mario 64, this is a prime example of exploitation in a non-harmful manner done for fun.\n[TODO]\nTypes of exploits #  [TODO] - where to put return oriented programming, super old hardware/software - \u0026lsquo;the home router\u0026rsquo;,\nOtherwise known as hacking, exploitation of software is always alluring, though in reality like many things it is much less glamorous than the news or tv make it out to be. Before I get into it I want to plug \u0026lsquo;The Art of Exploitation\u0026rsquo; by Jon Erickson again, as it truly is a masterpiece that describes exploiting in a way that just makes sense\nSoftware #  Injection - SQL\nbreaking hashes\nHeap/buffer overflow\ndangling pointers\ncode-injection\nclock attacks\nRace conditions\nPath traversal\nformat string\npseudo-random\nFuzzing\nNetworking #  DoS/DDoS\nMitM\nXXS\nHow The Self-Retweeting Tweet Worked: Cross-Site Scripting (XSS) and Twitter (Youtube - Tom Scott)\nMAC/IP spoofing\nsniffing\nDNS: https://www.xudongz.com/blog/2017/idn-phishing/\nWifi Cactus\nHardware #  Intro to Hardware Reversing: Finding a UART and getting a shell (YouTube)\nTalk about CPU bugs\nPower side channel\nTiming attacks\npseudo-random (hardware side)\nHardware trust (HID injection)\nreplay attacks\nradio, rfid, etc\nrowhammer, Heartbleed\nHolly s**t. Keyboard tap audio keylogger üßêhttps://t.co/EAzwaVMyp3 pic.twitter.com/40hzZSEVWJ\n\u0026mdash; gorelics (@gorelics) December 15, 2020  Social Engineering #  Phishing\nspoofing (email, phone)\nUTF-8 v ASCII\nclick jacking\nexpired certificate\ndefault passwords\nhoney pots\nPhysical security #  Lock picking as a last resort\nLaw School for Lockpickers [YouTube, DEF CON 28]\ndata destruction\nMalware #   Section here about not being a dick\n Viruses\npolymorphic\nboot-record\ntrojan\nlogic/compression bomb\nlogic/time bombs\nransomware\nadware/spyware\nTools of the trade #  Many tools in common with debugging (gdb - gef, hex editors, logic analzer)\nand testing (fuzzing)\ndecompilers, dissassembly, analysis\nWireshark\nCheatengine\ndynamic linking\nGetting some practice #  CTF-Time #  PWNie Island #  Let\u0026rsquo;s Play/Hack - Pwn Adventure 3: Pwnie Island (YouTube, LiveOverflow) (Here he\u0026rsquo;s playing a game where you have to exploit it to win)\nHow To Learn Something New? - Game Devlog #1 (YouTube, LiveOverflow) (Here he\u0026rsquo;s making a game where you\u0026rsquo;re supposed to exploit it)\nWhere to learn even more: #  Live Overflow, Youtube: https://www.youtube.com/channel/UClcE-kVhqyiHCcjYwcpfj9w/playlists\nPhrack : http://www.phrack.org/\nDefcon Media Server : https://media.defcon.org/\nAs mentioned above in Chapter 17- Compilers and Assemblers At this point I highly recommend \u0026lsquo;The Art of Exploitation\u0026rsquo; by Jon Erickson\nhttps://microcorruption.com/ , https://ctftime.org/ ,\nCTF time,\nhttps://nagarrosecurity.com/blog/interactive-buffer-overflow-exploitation\nWritehat (GitHub) - \u0026ldquo;A pentest reporting tool written in Python. Free yourself from Microsoft Word.\u0026rdquo;\nSome Hacking Community Fun #  Bash injection without letters or numbers (YouTube, LiveOverflow)\nPwned By The Owner: What Happens When You Steal A Hacker\u0026rsquo;s Computer (YouTube, Defcon)\nHow a Hacker Convinced Motorola to Send Him Source Code\nDiabetics Are Hacking Their Own Insulin Pumps\nWow. @sparkfun made an app that searches for nearby bluetooth devices that might be ATM/gas pump skimmers.\nThat\u0026#39;s some real cyberpunk shit. pic.twitter.com/CLsI5RKxMC\n\u0026mdash; foone (@Foone) September 19, 2017  Does register selection matter to performance on x86 CPUs? \nLeap Day Bugs\nNever claim something is \u0026lsquo;unhackable\u0026rsquo;: https://techcrunch.com/2019/05/10/eyedisk-encrypted-flash-drive-unhackable/, DEF CON 18 - Zoz - Pwned By The Owner: What Happens When You Steal A Hacker\u0026rsquo;s Computer (YouTube)\nDiabetics Are Hacking Their Own Insulin Pumps (YouTube)\nBig List of Naughty Strings (Github)\nWidevine L3 Decryptor\nŒ±cœÑ¬µŒ±lly pŒ¥rœÑŒ±blŒµ ŒµxŒµc¬µœÑŒ±blŒµ\nSacred texts of hacking: #  From https://wiki.xxiivv.com/#development:\n The Four Essential Freedoms The freedom to run the program as you wish, for any purpose. The freedom to study how the program works, and change it. The freedom to redistribute copies so you can help others. The freedom to distribute copies of your modified versions to others.\n The hacker and information freedom community has multiple \u0026lsquo;sacred texts\u0026rsquo; if you will, which I think do a good job of outlining some of the ideologies of the communities. Probably the most famous is the Guerrilla Open Access Manifesto written by Aaron Swartz, an amazing man that, according to Wikipedia \u0026ldquo;was involved in the development of the web feed format RSS and the Markdown publishing format, the organization Creative Commons, and the website framework web.py, and was a co-founder of the social news site Reddit\u0026rdquo;. Due to his extensive work in online politics his Wikipedia page almost acts like a hub of sorts for relevant information: https://en.wikipedia.org/wiki/Aaron_Swartz. The full text of the Guerrilla Open Access Manifesto is below:\n Information is power. But like all power, there are those who want to keep it for themselves. The world\u0026rsquo;s entire scientific and cultural heritage, published over centuries in books and journals, is increasingly being digitized and locked up by a handful of private corporations. Want to read the papers featuring the most famous results of the sciences? You\u0026rsquo;ll need to send enormous amounts to publishers like Reed Elsevier.\nThere are those struggling to change this. The Open Access Movement has fought valiantly to ensure that scientists do not sign their copyrights away but instead ensure their work is published on the Internet, under terms that allow anyone to access it. But even under the best scenarios, their work will only apply to things published in the future. Everything up until now will have been lost.\nThat is too high a price to pay. Forcing academics to pay money to read the work of their colleagues? Scanning entire libraries but only allowing the folks at Google to read them? Providing scientific articles to those at elite universities in the First World, but not to children in the Global South? It\u0026rsquo;s outrageous and unacceptable.\n\u0026ldquo;I agree,\u0026rdquo; many say, \u0026ldquo;but what can we do? The companies hold the copyrights, they make enormous amounts of money by charging for access, and it\u0026rsquo;s perfectly legal ‚Äî there\u0026rsquo;s nothing we can do to stop them.\u0026rdquo; But there is something we can, something that\u0026rsquo;s already being done: we can fight back.\nThose with access to these resources ‚Äî students, librarians, scientists ‚Äî you have been given a privilege. You get to feed at this banquet of knowledge while the rest of the world is locked out. But you need not ‚Äî indeed, morally, you cannot ‚Äî keep this privilege for yourselves. You have a duty to share it with the world. And you have: trading passwords with colleagues, filling download requests for friends.\nMeanwhile, those who have been locked out are not standing idly by. You have been sneaking through holes and climbing over fences, liberating the information locked up by publishers and sharing them with your friends.\nBut all of this action goes on in the dark, hidden underground. It\u0026rsquo;s called stealing or piracy, as if sharing a wealth of knowledge were the moral equivalent of plundering a ship and murdering its crew. But sharing isn\u0026rsquo;t immoral ‚Äî it\u0026rsquo;s a moral imperative. Only those blinded by greed would refuse to let a friend make a copy.\nLarge corporations, of course, are blinded by greed. The laws under which they operate require it ‚Äî their shareholders would revolt at anything less. And the politicians they have bought off back them, passing laws giving them the exclusive power to decide who can make copies.\nThere is no justice in following unjust laws. It\u0026rsquo;s time to come into the light and, in the grand tradition of civil disobedience, declare our opposition to this private theft of public culture.\nWe need to take information, wherever it is stored, make our copies and share them with the world. We need to take stuff that\u0026rsquo;s out of copyright and add it to the archive. We need to buy secret databases and put them on the Web. We need to download scientific journals and upload them to file sharing networks. We need to fight for Guerilla Open Access.\nWith enough of us, around the world, we\u0026rsquo;ll not just send a strong message opposing the privatization of knowledge ‚Äî we\u0026rsquo;ll make it a thing of the past. Will you join us?\nAaron Swartz\nJuly 2008, Eremo, Italy\n If you\u0026rsquo;d like more information on Swartz\u0026rsquo;s infulence you can watch a documentry on him here\nAnother important document is \u0026ldquo;The Conscience of a Hacker\u0026rdquo; written by \u0026ldquo;The Mentor\u0026rdquo; in \u0026lsquo;86\n Another one got caught today, It\u0026rsquo;s all over the papers. \u0026ldquo;Teenager Arrested in Computer Crime Scandal\u0026rdquo;, \u0026ldquo;Hacker arrested after Bank Tampering\u0026rdquo;\u0026hellip;\nDamn kids. They\u0026rsquo;re all alike.\nBut did you, in your three-piece psychology and 1950\u0026rsquo;s technobrain, ever take a look behind the eyes of a hacker? did you ever wonder what made him tick, what forces shaped him, what may have molded him?\nI am a hacker. Enter my world.\nMine is a world that begins with school\u0026hellip; I\u0026rsquo;m smarter than most of the other kids, this crap they teach us bores me\u0026hellip; Come on\u0026hellip; Ain\u0026rsquo;t Got All Day!! Damn underachiever. They\u0026rsquo;re all alike.\nI\u0026rsquo;m in junior high or high school. I\u0026rsquo;ve listened to the teachers explain for the fifteenth time how to reduce a fraction. I understand it. \u0026ldquo;No Ms. Smith, I didn\u0026rsquo;t show my work. I did it in my head\u0026hellip;\u0026rdquo;\nDamn kid. Probably copied it. They\u0026rsquo;re all alike.\nI made a discovery today. I found a computer. Wait a xecond, this is cool. It does what I want it to. if it makes a mistake, it\u0026rsquo;s because I screwed it up. Not Because it doesn\u0026rsquo;t like me\u0026hellip; Or feels threatend by me\u0026hellip; Or thinks I\u0026rsquo;m a smart ass\u0026hellip; Or doesn\u0026rsquo;t like teaching and shouldn\u0026rsquo;t be here\u0026hellip;\nDamn kid. All he does is play games. They\u0026rsquo;re all alike.\nAnd then it happened\u0026hellip; a door opened to a world\u0026hellip; rushing through the phone line like junk through an addict\u0026rsquo;s veins, an electronic impulse is sent out, a refuge from the day-to-day incompetencies is sought\u0026hellip; a board is found.\n\u0026ldquo;this is it\u0026hellip; this is wwhere I belong\u0026hellip;\u0026rdquo;\nI know everyone herre\u0026hellip; even if I\u0026rsquo;ve never met them, never talked to them, may never hear from them again\u0026hellip; I know you all\u0026hellip;\nDamn kid. tying up the phone line again. They\u0026rsquo;re all alike\u0026hellip; Come on\u0026hellip; Ain\u0026rsquo;t Got All Day!! You bet your ass we\u0026rsquo;re all alike\u0026hellip; we\u0026rsquo;ve been spoon-fed baby food at school when we hungered for steak\u0026hellip; the bits of meat that you did let slip through were prechewed and tasteless. We\u0026rsquo;ve been dominated by sadist, or ignored by the apathetic. The few that had something to teach us found us willing pupils, but those few are like drops of water in the desert.\nThis is our world now\u0026hellip; the world of the electron and the switch, the beauty of the baud. We make use of a service already existing without paying for what could be dirt-cheap if it wasn\u0026rsquo;t run by profiteering gluttons, and you call us criminals. we explore\u0026hellip; and you call us criminals. We seek after knoledge\u0026hellip; and you call us criminals. We exist without skin color, without nationality, without religous bias\u0026hellip; and you call us criminals. You build atomic bombs, you wage wars, you murder, cheat, and lie to us and try to make us believe it\u0026rsquo;s for our own good, yet we\u0026rsquo;re the criminals.\nYes, I am a criminal. My crime is that of curiosity. My crime is that of judging people by what they say and think, not what they look like. My crime is that of outsmarting you, something that you will never forgive me for.\nCome on\u0026hellip; Ain\u0026rsquo;t Got All Day!!\nI am a hacker, and this is my manifesto. You may stop this individual, but you can\u0026rsquo;t stop us all\u0026hellip; after all, we\u0026rsquo;re all alike.\n+++The Mentor+++ Racketeers\n "});index.add({'id':23,'href':'/engineering/24-security/','title':"24 Security",'section':"Engineering",'content':"Chapter 24 - Security #  ./missing-semester - Security\n \u0026lsquo;SMS is just the worst, but I\u0026rsquo;m having trouble convincing people to adopt my preferred system, TLS IRC with a local server and a patched DOSBox gateway running in my mobile browser.\u0026rsquo;\n XKCD #2365 focus on how to write secure programs, protect hardware, etc.\nESDA is bad\nCryptography #  How To Learn Cryptography as a Programmer (Soatok)\nA furry writes about Cryptography but trust me you should actually read this (Soatok)\nHashing #   Note there\u0026rsquo;s generall two \u0026lsquo;classes\u0026rsquo; of hashing- hashing for cryptograhic security (Passwords) and for just general usage, the cryptograhic ones typically are siginicantly more computationally intensive to make it harder to brute force all possible keys. Also most cryptograhpic hashing algorithms go to much greater lengths to avoid collisions. Also, salting is relevent here: Salting (Wikipedia)\nNetwork Security #  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam magna leo, tincidunt sed ex at, rhoncus tempus purus. Aenean feugiat a massa quis rutrum. Nulla gravida euismod lobortis. Praesent in blandit libero. Ut tincidunt nibh in facilisis viverra. Aliquam auctor, diam id accumsan porta, turpis erat faucibus urna, ut convallis metus ipsum in nisl. Ut semper metus vitae lacinia pulvinar. Praesent at congue lectus, ac ultrices ante. Quisque tempor semper mi scelerisque hendrerit. Vivamus rhoncus odio quam, in pulvinar mauris tristique quis. Duis vitae lacus et dolor semper interdum. Interdum et malesuada fames ac ante ipsum primis in faucibus.\nUt gravida venenatis luctus. Fusce sagittis quam vehicula porttitor condimentum. Cras luctus rutrum orci, vel consequat diam faucibus sit amet. Praesent blandit dui arcu, sed ultricies purus congue sed. Etiam scelerisque porttitor tempor. Vestibulum tincidunt pharetra neque. Maecenas rhoncus ac mauris ac ultrices. Morbi pulvinar auctor turpis, nec molestie odio egestas id. Phasellus ornare orci quis ligula pulvinar, nec bibendum lorem dictum. Praesent euismod tincidunt accumsan. Mauris sodales magna est. Maecenas eu malesuada neque. Aenean nec leo a sapien rutrum porttitor.\n  Source, Artist (used with permission from Phyxius)\n   "});index.add({'id':24,'href':'/engineering/25-fosscopyright/','title':"25 Fosscopyright",'section':"Engineering",'content':"Chapter 25 - Open Source, Licenses, and Copyright #  [TODO]\nactually contribute on github, make an issue, submit a pull request, make a custom repo,\nhttps://github.com/Marak/faker.js/issues/1046\nHow to break the Internet: Cory Doctorow at TEDxOxbridge (YouTube)\nNo, \u0026ldquo;Open Source\u0026rdquo; does not mean \u0026ldquo;Includes Free Support\u0026rdquo; + The update to that post.\nChapter 25.1 - Things That Really Need to Exist #  Better than DuckDuckGo [Drew Devault\u0026rsquo;s Blog]\n"});index.add({'id':25,'href':'/engineering/26-pcb/','title':"26 Pcb",'section':"Engineering",'content':"Chapter 26 - Let\u0026rsquo;s make our own PCB #  [TODO]\nFirst things first, we\u0026rsquo;re going to be using Kicad, so you\u0026rsquo;ll want to go grab that from the repos. While that\u0026rsquo;s downloading and installing give this a watch to get the basics down:\n                                       image/svg+xml     1) Create a project File  New Project  New Project    cheatsheet  2) Eeschema : draw the schematic  Add components : A   Move item1 : M  +   Copy item : C  +   Copy selection :  + Shift      Delete item : Del  +   Delete selection : Shift    Ctrl   + +   Rotate item : R  +   Mirror item : Y  + X  /   Add wires : W   Edit properties : E   Add power symbols : P   Add no-connect : Q   Add text : T   Add labels : L   List of shortcuts : ?   Grab item1 : G  +   Edit value : V   1grab keeps connections, move doesn't  3) Create new components as necessary If editing an existing library : Select working library  Draw component  Add pins Library editor  / Load component to edit from current library  Create new component   Save current component to new library  / Update current component into current library   Preferences  Component libraries   How to load the new library in Eeschema : Component library files Add   Select your .lib file  P   4) Create and assign footprints Footprint Editor  If editing an existing library : Select active library  Draw component  Add pins  / Load footprint from library New footprint Create new library and save current footprint  / Save footprint in active library   Run CvPcb to associate components and footprints   Preferences  Footprint libraries   How to load the new library in CvPcb : Append with wizard  Select your .pretty folder  Generate netlist   6) Export Gerbers File  Plot   Generate Drill File  Plot   +   Check result using GerbView   Anthony Gautier - http://silica.io http://kicad-pcb.org/help/documentation/  5) Pcbnew : design the layout  Read netlist Select top layer : Copy item : Rotate item : Add via : Switch posture : Add tracks : Switch track width : Drag track : Fill zones : 3D viewer : Design Rules  Layers Setup  Design Rules  +  Grab item1 : M  +  C  +  R  +  V  Q  X  W  D  B  + 3  Alt  Shift    + ( )   G  +  1grab keeps connections, move doesn't (Only for AZERTY keyboards)  Move item1 : Select bottom layer : PgDn   PgUp       Sorce: Foalyy @ https://forum.kicad.info/t/cheatsheet-for-kicad/5247 https://llllllll.co/t/pcb-art-artfully-shaped-copper-traces/22027/2\nAlways double check your footprints. üò¨ pic.twitter.com/BdTq9e9Byq\n\u0026mdash; Greg (@GregDavill) April 22, 2020  Let KiCad and Python design your PCB Coils [Hackaday]\nKiCad STM32 + RF + USB Hardware Design (YouTube, Phil\u0026rsquo;s Lab)\nI quite like this combination I soldered today: @oshpark \u0026#39;s After Dark PCB with purple LEDs. This is my COPXIE project, which is inspired by PIXIE from @lixielabs . More information can/will be also found here: https://t.co/BLMhnu95Vu pic.twitter.com/Ssg1d1uNFN\n\u0026mdash; Alex (@tinyledmatrix) October 22, 2020  The whole family - top ones are the oldest and the two test prototypes I made. There was issues with the micro I was using and I couldn\u0026#39;t get it low enough power to run. Also assembly was really difficult. pic.twitter.com/3mKgYs83Nr\n\u0026mdash; Loial Otter (@LoialOtter) April 15, 2020  Chapter 26.1 - PCB \u0026lsquo;Badges\u0026rsquo; #  Source: @AkioOhtori on Twitter\nHacked @DCFurs badges to broadcast AWOO beacons! pic.twitter.com/6CUdRlKHn1\n\u0026mdash; caudamus (@caudamus) August 10, 2019  Furby Theremin Badge (Tindie, Harbinger LTD)\nhttps://github.com/badgeek/svg2shenzhen\n"});index.add({'id':26,'href':'/engineering/27-multithread/','title':"27 Multithread",'section':"Engineering",'content':"Chapter 27 - We\u0026rsquo;ve got cores, let\u0026rsquo;s use em' #  [TODO]\nhttps://lemire.me/blog/2020/01/30/cost-of-a-thread-in-c-under-linux/\nC++ coroutines\nnot really threading, but process children\n"});index.add({'id':27,'href':'/engineering/28-guiprog/','title':"28 Guiprog",'section':"Engineering",'content':"Chapter 28 - Graphical Programming #  Let\u0026rsquo;s start in a way that\u0026rsquo;s incredibly simple, and abstract away all the hard stuff at first by using a tool kit called \u0026lsquo;Processing\u0026rsquo;, which is available under that name from the community repo in arch. The default IDE that comes with it is awful to work in though, so go ahead and open up VSCode and grab the Processing Language add on, then in VSCode open up a new workspace folder and make a file called processing.pde, then open VSCode\u0026rsquo;s command pallete (CTRL+Shift+P) and run \u0026lsquo;Processing: create task file\u0026rsquo;, after that you\u0026rsquo;ll want to open the tasks.json file and change the command: line to have \u0026quot;command\u0026quot;: \u0026quot;/usr/bin/processing-java\u0026quot;, after that you can easily try new code just by re-building project the project with CTRL+Shift+B\nAlright, setup out of the way, let\u0026rsquo;s code! One of my first projects in processing was to make a Topographic Map, looking generator because I just find them quite visually appealing.\nSo, thinking about that problem, we clearly need data. probably an array of sorts with a bunch of values that have a smoothed relationship when viewing them as height map, then we\u0026rsquo;d want to look at the transition points between ranges of values.\nLooking up random data generation in python, and you should stumble upon it\u0026rsquo;s noise generation, and see that it uses Perlin Noise, which upon looking at it should be obvious that it generates exactly what we want. So, looking up an example for that in processing we get to this page: https://processing.org/examples/noise2d.html\nWell, that\u0026rsquo;s already super close, so let\u0026rsquo;s look at that code\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34  float increment = 0.02; void setup() { size(640, 360); } void draw() { loadPixels(); float xoff = 0.0; // Start xoff at 0  float detail = map(mouseX, 0, width, 0.1, 0.6); noiseDetail(8, detail); // For every x,y coordinate in a 2D space, calculate a noise value and produce a brightness value  for (int x = 0; x \u0026lt; width; x++) { xoff += increment; // Increment xoff  float yoff = 0.0; // For every xoff, start yoff at 0  for (int y = 0; y \u0026lt; height; y++) { yoff += increment; // Increment yoff  // Calculate noise and scale by 255  float bright = noise(xoff, yoff) * 255; // Try using this line instead  //float bright = random(0,255);  // Set each pixel onscreen to a grayscale value  pixels[x+y*width] = color(bright); } } updatePixels(); }   Alright, so line by line, it seems that line 1 is just defining a constant. Reading the Processing docs you\u0026rsquo;ll find setup() should contain size() which takes two arguments that are the size of the output window in pixels (x and y) and that draw() is an endlessly looping function that updates that window.\nBefore going further let\u0026rsquo;s copy and paste the code into VSCode and run it:\n[TODO] add picture\n[TODO]\nC++ from scratch, JS electron app, Processing creative coding, Python Kivy or similar, Flutter (google lang), shaders (graphical editors), nimp, ronin, Nuklear\nGP-GPU #  [TODO]\nTracy - \u0026ldquo;A real time, nanosecond resolution, remote telemetry, hybrid frame and sampling profiler for games and other applications\u0026rdquo;\nLibraries #  Nanogui (Github)\nNative GUI #  Web-based #  Just plotting some data #  ŒºPlot (Github)\nhttps://www.scratchapixel.com\n"});index.add({'id':28,'href':'/engineering/29-funcprog/','title':"29 Funcprog",'section':"Engineering",'content':"Chapter 29 - (((())(()((()(())))))) #  [TODO]\nFunctional Programming, and other paradigms : lisp, haskell, luna-lang.org, ronin\n"});index.add({'id':29,'href':'/engineering/3-hardware/','title':"3 Hardware",'section':"Engineering",'content':"One of the nifty things about Linux is you don\u0026rsquo;t need to install extra software to check out the deeper parts of your hardware. While on windows you might need a tool like CPU-Z to look at information about the CPU on Linux you can do it out of the box. Let\u0026rsquo;s get started on that then!\nThe CPU #  These are CPUS or Central Processing Units. They\u0026rsquo;re the beating heart of your computer, doing the day-to-day number crunching. The rectangular one of one of the first CPU\u0026rsquo;s in the lineage leading up to CPU\u0026rsquo;s like the ones used in desktop\u0026rsquo;s today, with further successors shown in order from top left to the bottom right. The metal-capped one at the bottom right, while old, is visually quite representative of a modern desktop CPU, though the CPUs in a laptop or smart phone do look quite different still.\nOne of the nifty things we do pretty easily in linux is get information about our hardware directly. Just as when we were installing Arch and we used lsblk to see an overview of the disks on the system, we can use some other tools to find out some other information about the system. Let\u0026rsquo;s start off basic and see what CPU you have. Go ahead and run\n1 2  ‚ï≠‚îÄvega@lyrae ~ ‚ï∞‚îÄ‚û§ cat /proc/cpuinfo   This is actually just using that same cat command we used before. This time we\u0026rsquo;re using it to read the system generated file that tells us about the processor in this system. I\u0026rsquo;m going to provide the output from my system for reference:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  processor : 0 vendor_id : AuthenticAMD cpu family : 23 model : 1 model name : AMD Ryzen 7 1700 Eight-Core Processor stepping : 1 microcode : 0x8001137 cpu MHz : 2018.119 cache size : 512 KB physical id : 0 siblings : 16 core id : 0 cpu cores : 8 apicid : 0 initial apicid : 0 fpu : yes fpu_exception : yes cpuid level : 13 wp : yes flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl nonstop_tsc cpuid extd_apicid aperfmperf pni pclmulqdq monitor ssse3 fma cx16 sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw skinit wdt tce topoext perfctr_core perfctr_nb bpext perfctr_llc mwaitx cpb hw_pstate sme ssbd sev ibpb vmmcall fsgsbase bmi1 avx2 smep bmi2 rdseed adx smap clflushopt sha_ni xsaveopt xsavec xgetbv1 xsaves clzero irperf xsaveerptr arat npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold avic v_vmsave_vmload vgif overflow_recov succor smca bugs : sysret_ss_attrs null_seg spectre_v1 spectre_v2 spec_store_bypass bogomips : 7688.44 TLB size : 2560 4K pages clflush size : 64 cache_alignment : 64 address sizes : 43 bits physical, 48 bits virtual power management: ts ttp tm hwpstate eff_freq_ro [13] [14]   Alright, that\u0026rsquo;s a whole lot of information, let\u0026rsquo;s break it down.\nFirst of all, almost all modern Central Processing Units (CPUs) have multiple cores, and as with most things in computers the\u0026rsquo;re counted from 0, so on a 4 core computer you\u0026rsquo;ll have cores 0, 1, 2, and 3. Multiple cores simply let your computer do things in parallel, running multiple programs or tasks at the same time\nNext is the vendor ID, family, model, name, and stepping. My processor is an AMD Ryzen 7 1700. There\u0026rsquo;s a pretty good chance your CPU will be made by Intel, and as such the family, model, name, and what not will reflect that. AMD and Intel are practically the only two laptop and desktop CPU providers, though in the feature we\u0026rsquo;ll work with boards that use CPU\u0026rsquo;s made by other manufactures. Really, most of this doesn\u0026rsquo;t matter. Some CPUs are nicer than others, and if you follow the market or care it\u0026rsquo;s easy to get a sense of a CPU\u0026rsquo;s speed just based on it\u0026rsquo;s name, but let\u0026rsquo;s move on for now.\nNext is\n1 2 3  microcode : 0x8001137 cpu MHz : 2018.119 cache size : 512 KB   Each of these things is very important, but I\u0026rsquo;m going to start with cpu MHz as it\u0026rsquo;s probably the easiest to understand, however, to understand this we\u0026rsquo;ll need to get even a bit lower level than this and learn about the electronic component that changed humanity: the transistor.\nClock Speed #  However, to get to that we\u0026rsquo;ve gotta go just a bit further down the rabbit hole to the relay. Relays are super simple to understand, they\u0026rsquo;re just a metal switch that is pulled open or closed using another input signal (usually a magnet pulling/pushing the switch closed/open) basically imagine a light switch, where the switch itself is controlled by yet another electrical signal. Relays are slow though, they require a physical metal plate to move to change the connection. Because of this they have limited reliability and worth note they\u0026rsquo;re actually loud. You can hear an audible click of the switch as they change state.\n If this is already interesting to you, here\u0026rsquo;s a video demonstrating a relay computer you can actually buy\n Enter the vacuum tube. Though rarely used today outside of high end audio and old radios, for a period of time the logic inside a computer used these tubes. Essentially theres three important parts of the tube, the Cathode, Plate and Grid. Put very simply the Cathode emits electrons and the Plate collects them. Where it gets interesting is the grid in between. By applying a voltage to the grid a signal can be controlled giving us the same ability to turn something on or off by a third wire as in the relay.\n Worth note but irreverent for digital electronics, tubes and transistors can actually pass only a percentage of the input back out, based proportionally on the input. This actually means that both tubes and transistors can act as an amplifier, using a small input range to control a much larger signal. A single tube or transistor in conjunction with other supporting components can be used to make a functional amplifier.\n Though the real break though here was the fact that this was no longer a mechanical system. With relays there was a very slow limit on the rate at which they could respond reliably, but with tubes this increased exponentially. Tubes were still expensive, large, and power hungry though. However, with their advent early computers saw a massive boost in speed with a decrease in cost\nFinally, enter the transistor. The physics here isn\u0026rsquo;t that far removed from the vacuum tube, only now instead of a vacuum the electrons are moving though a semiconductor - typically silicon. Again this brought a massive shrink in physical size and increase in that rate at which it could respond. Pictured above are two discrete transistors, however, this is where things get mind blowing:\nThe Ryzen 1700 CPU in the computer I\u0026rsquo;m typing this on has 4,800,000,000 transistors in a package that is only 213 mm¬≤, and finally, we can refrence the number output by cat /proc/cpuinfo\nAt the moment I got that output the transistors where being turned on and off at a rate of 2018Mhz. or 2Ghz. However, this system can run up to roughly 3.8Ghz. The faster this speed the faster your computer; however, your CPU will also use more power and run hotter. It\u0026rsquo;s for this reason that most systems adjust the speed based on load. Doing simple things like writing this document and as seen with that output my system runs at nearly half speed which is actually the slowest it can run. Because the computer is hardly doing anything right now the majority of that switching is actually just doing nothing but using power running \u0026lsquo;no operation instructions\u0026rsquo; the functional equivalent of just running 0+0 while it it waits for something to do.\nThe OS itself actually tells the processor what speed it should be running at. In Windows, when you change your power plan to \u0026lsquo;high performance\u0026rsquo; one of the major things it does is not allow the processor to run at a slower speed, and in Linux you can similarly control this using some cpu speed commands. We\u0026rsquo;ll get to that later though.\nFinally it\u0026rsquo;s worth note that on some systems, primarily high end desktops, you can actually run your processor outside of factor specifications by increasing the maximum clock rate of the processor. Doing this can lead to system stability issues and obviously leads to a higher power usage and heat output though. This process is known as \u0026lsquo;overclocking\u0026rsquo; as your taking the internal clock of the processor beyond it\u0026rsquo;s rating. My CPU, a Ryzen 1700, has actually been over clocked in order to get 3.8Ghz at all times on all of the cores.\nMicrocode #  Modern processors are very, very complicated. So complicated in fact that there is a full very tiny computer in your processor. This computer does multiple things, but the main one we\u0026rsquo;ll talk about is the translation between types of machine code. In order to understand this we\u0026rsquo;ll need to look a basic program written in the language \u0026lsquo;C\u0026rsquo;.\nThis code first makes two integers, a and b, gives them values, then adds them together and stores the result back into a. Finally, the program returns a 0 to the operating system in order to say \u0026ldquo;I ran without errors\u0026rdquo;.  1 2 3 4 5 6 7 8  int main() { int a; int b; a = 8; b = 16; a = a + b; return 0; }      Unlike python which get\u0026rsquo;s converted to something the computer can understand as it executes C is compiled before hand. This makes it so programs written in C are much, much faster than those written in python, though obviously C code is more difficult to write. Compilation is the process of turning a program into a file full of instructions the computer actually understands. This happens in two steps, first the program is turned into assembly code, for the above code this results in the output to the right:  1 2 3 4 5 6 7 8 9  push rbp mov rbp, rsp mov DWORD PTR [rbp-4], 8 mov DWORD PTR [rbp-8], 16 mov eax, DWORD PTR [rbp-8] add DWORD PTR [rbp-4], eax mov eax, 0 pop rbp ret   As you can see, this is incredibly difficult to read to a \u0026lsquo;normal\u0026rsquo; person, so even though we\u0026rsquo;re not there yet.\n  This in turn gets turned into binary as can bee seen by this screenshot generated using https://godbolt.org/\n   Binary (0b) Hex (0x) Decimal     0000 0 0   0001 1 1   0010 2 2   0011 3 3   0100 4 4   0101 5 5   0110 6 6   0111 6 7   1000 8 8   1001 9 9   1010 A 10   1011 B 11   1100 C 12   1101 D 13   1110 E 14   1111 F 15     See the weird numbers next to each instruction? like 4004b255? That\u0026rsquo;s a base 16 number or hexadecimal usually referred to as \u0026lsquo;Hex\u0026rsquo;. Hex is what is used by most computer guys to represent numbers because computers operate in base 2, or binary- like 01001100, which is very difficult to read and type accurately, however, base 10, the normal numbering system your used to, makes translating between binary and decimal a bit uncomfortable as the common factor is 5, an number that is both odd and in turn not a factor of two, where as 16 is 2^4 (2*2*2*2) so that means we can easily represent binary like this:\nOkay, so now those 1\u0026rsquo;s and 0\u0026rsquo;s are what your computer actually reads to run instructions. We\u0026rsquo;ll come back to this later, but since we\u0026rsquo;re here I\u0026rsquo;ll drop this link\nWhere you can see how these 1\u0026rsquo;s and 0\u0026rsquo;s are arranged to tell the computer what to do. That is super advanced for where we are now though, so let\u0026rsquo;s get back on track- what the hell is micro code already?\nWell, it turns out that modern processors are still compatible with some really, really old code. All the way back to the first 8086 processor made by Intel in 1978. It was here that the x86 instruction set - the instructions like \u0026lsquo;mov\u0026rsquo; , \u0026lsquo;push\u0026rsquo;, and \u0026lsquo;add\u0026rsquo; above that define the x86 architecture were born. Originally these were 16bit CPUs, that is each instruction only had 16 1\u0026rsquo;s and 0\u0026rsquo;s but soon the i386 came along and used 32bits. Back when 32 bit computers were common this is what this was in reference to.\n  As with all things technology progressed and 64bit cpu\u0026rsquo;s came along. Many attempts were made to make 32bit programs run with backwards comparability at high speeds on these CPU\u0026rsquo;s, though in the end AMD made the method used today, dubbed the x86_64 instruction set. Overtime this instruction set was expanded with various additions. We can actually see the names of these additions that are available on the CPU in the system by looking yet again at the output of cat /proc/cpuinfo and looking at the flags section. While not all of these signify instruction set additions, many do. The most common \u0026lsquo;famous\u0026rsquo; if you will is SSE, of which there have been multiple revision, the first version alone adds 70 instructions, which are used to make math faster\nAlright, so finally, enter Mircocode. At some point all of this became a lot to manage and processor designs evolved even further, getting exponentially more complicated and faster with more and more instructions, so they added this little computer which has the primary duty of turning the mess of countless possible instructions into yet even smaller instructions that the heavy duty \u0026lsquo;real\u0026rsquo; processor does. Every once in a while a problem will be found in the way this is done, or a security vulnerability in the hardware itself may be found, and your CPU manufacture will release a microcode update.\nThat update version is what you see on that line of cat /proc/cpuinfo\nNow, at the beginning of this guide I said I wouldn\u0026rsquo;t provide useless information, and I\u0026rsquo;m sure that all looks pretty useless without more context. In general, this is interesting because you can (and will need to) write some assembly code by hand every now and then. Thankfully, its usually not x86 assembly which is very, very difficult to write but instead assembly on much smaller, micro controllers (basically really tiny computers), where that assembly is necessary because the system is so limited.\nCache #  Okay, next up is cache. Cache, just like in the real world, is a small place to store things. Most people like to think the majority of what a computer does is raw number crunching, doing hard math, but the truth is more often than not it\u0026rsquo;s just moving data around. This follows a path from slowest and cheapest storage up to the fastest but most expensive. Typically this order looks a bit like\nHard Drive -\u0026gt; Solid State Drive -\u0026gt; Ram -\u0026gt; Cache -\u0026gt; Registers , where the price for storage on a hard drive can be under $0.10Gb, Ram upwards of $10Gb, and Cache and registers, which are storage baked directly onto the CPU, cost much, much, more to implement. It\u0026rsquo;s of note that these not only are digitally faster with each jump, but also usually physically close. A hard drive can be 10\u0026rsquo;s of feet of wire from the CPU while the RAM can be a few inches at best, and the cache and registers are physically in the CPU dye. Most of the data above the HDD/SSD level is actually just smaller subsets of each previous pool. In fact, on modern CPU\u0026rsquo;s there are actually usually 3 levels of cache, each with a progressively smaller size but increase in proximity to the executed instruction.\nPut simply, just as with adding more Random Access Memory (RAM) to your system, having more cache means more information can be within arm\u0026rsquo;s reach of the CPU to do work on at any moment.\nLet\u0026rsquo;s take a look. install the hwloc package using yay and then run lstopo and you should get an output that looks a bit like this\nThe stuff on the right are connections around the system, you can ignore those for now, but see the various cache layers, designated by L3, L2, L1d and L1i, and you can see how each core has it\u0026rsquo;s own cache. Finally, you can see that each core has two processing units? Hey, wait, what\u0026rsquo;s that all about?\nHyper threading, or SMT, or whatever the new term is for it, is a way of adding paths for doing things to keep every part of the CPU active. We\u0026rsquo;ll go into this more later, but for now, suffice it to say it\u0026rsquo;s a way of getting just a bit more performance out of a system.\nInterrupts #  While not listed in the /proc/cpuinfo output , it\u0026rsquo;s still relevant to bring up CPU interrupts, which are, fittingly, listed in /proc/interupts\n Output of cat /proc/interupts on my system\n  Output of information for the first 3 cores on my system displayed graphically using Netdata\n CPU interrupts are a bit confusing because the term interrupt can refer to the action itself, the code that executes, or the general concept. In general a CPU interrupt is when something needs to poke the CPU to tell it to interrupt what it\u0026rsquo;s doing. This can be when physical pin in the CPU gets a signal, a timer going off, or a program dividing by 0. We\u0026rsquo;ll cover this more in depth later, but from the hardware perspective what\u0026rsquo;s relevant is the CPU is generally so fast compared to other actions that the rest of the system mostly just triggers an interrupt to let the CPU know that a task the CPU asked to be done has completed. The most common example is requesting data from disk (Hard drive or SSD) takes so long, even at just a few milliseconds, that the CPU can get millions of things done while it waits for the request to be fulfilled. So rather than waste that time having the CPU poke the device asking \u0026ldquo;Are you done yet? Are you done yet?\u0026rdquo; the disk (or the controller it\u0026rsquo;s hooked up to, like the chipset) issues an interrupt to the CPU to let it know a task has completed. USB works in a similar way, though the really old keyboards with the circular connector (PS2) actually did interrupt the CPU directly on each key press.\nWe\u0026rsquo;ll come back and explore this more later, but if you\u0026rsquo;re really interested you can read ahead by going over these links and reading these man pages: Oreilly on Interupts, Oreilly cont., man trap, man syscall,\nPower #  the CPU is one of the most power hungry parts of your computer, and as such it does some interesting things to try to keep it\u0026rsquo;s power usage lower. Namely, it\u0026rsquo;ll turn it\u0026rsquo;s clock speed to do less operations per second as previously mentioned, but theres other things like entering sleep and hibernation states the processor is also capable of. The main thing you might want to concern yourself with from a performance to power consumption stand point is how aggressive this clock speed changing is. You can go as extreme as to tell the system to never let the processor get to full speed or to say \u0026lsquo;only run at max speed all the time\u0026rsquo;. The latter is actually quite useful as often it can take quite a few clock cycles after a heavy load is started for the processor to come up to speed, but if it\u0026rsquo;s always running full steam ahead this is a non issue. This entire topic is particularly relevent to laptops, and on Arch you may want to install a program to manage some of this for you or set sane defaults to save battery. I\u0026rsquo;ve had good luck using the tlp package. the cpupower package is helpful for looking at how arch handles cpu scaling and it lets you directly set these min and max frequencies or pick the scaling governor to handle how aggressive the switching is.https://wiki.archlinux.org/index.php/CPU_frequency_scaling#cpupower\nI very strongly recommend looking into this on any system though, as by default some CPUs will run at the minimum frequency only.\nWe\u0026rsquo;ll talk about delivering power to the CPU in a bit, when we talk about the Voltage Regulation Module (VRM) on the Motherboard.\nPhysically, what and where is this thing? #  The CPU is on a square or rectangular board that is usually covered by a large heat sink used to keep it cool under load. It connects to the motherboard via hundreds of small, gold plated pins to send and receive signals (which well will discuss in depth later) from all around the system. Even though most modern CPUs are x86_64, generation to generation and cross manufacturer there are changes in the number of pins and the way they are arranged, meaning getting a new processor that\u0026rsquo;s not from the same generation usually won\u0026rsquo;t work. Furthermore, most laptops have soldered on processors that can not be upgraded to begin with.\nA note on x86, vendors, and CPU politics #  [TODO]\nchina trying to make their own silicon, apple to own CPU, etc.\nhttps://www.agner.org/forum/viewtopic.php?f=1\u0026amp;t=6\nOtherthings done by the CPU: #  The CPU has a lot of dedicated hardware inside for specific functions, for example many CPUs have a dedicated hardware random number generator.\nFurther Reading #  Why you should use \u0026lsquo;nproc\u0026rsquo; and not grep /proc/cpuinfo\nSpyware at The Hardware Level - Intel ME \u0026amp; AMD PSP (YouTube, Mental Outlaw)\nRAM #  This is RAM or Random Access Memory. The above two sticks are the normal sized used in desktop PCs, this form factor is called a DIM while the bottom two are from laptops and are called SO-DIMS, the placement of the notch is an indicator of the generation of RAM, with nearly all modern ram being a consecutive generation of the DDR standard. At the time of writing (Q2,2019) DDR4 is common in new, medium to high end devices, with many DDR3 devices still being used. Of note many more compact devices solder the ram chips directly to the board, meaning there is no form factor to consider.\nJust like the CPU, RAM has a speed at which it operates as well, Typically it\u0026rsquo;s listed in MHz still, but speeds range from ~1.8Ghz to ~3.8Ghz at the time of writing, dependent DDR3 or 4. While DDR4 has faster clock speeds, it does typically have a higher overall latency, meaning there\u0026rsquo;s a longer delay between when when data is requested to when it\u0026rsquo;s delivered, albeit at a much higher total throughput. This is a massive topic in of itself, yet is also pretty niche as outside of some pretty specialized applications RAM speed and latency has a relatively minor impact, though faster is typically better.\nokay, let\u0026rsquo;s move on to ram in Linux.\nWhile support for this will vary depending on your motherboard, you should be able to see information about your ram by running sudo dmidecode --type 17\nThe output will probably repeat multiple times, printing once for each physical stick of ram in your system. I actually have 4 sticks, but I\u0026rsquo;ll just be showing one:\nYou should note that many of the things mentioned above can be seen here, though I do want to look at some things here.\nFirst, size. This is an 8Gb or 8192Mb stick of ram. Obviously the more ram the better, but you may find strange ram configurations where there\u0026rsquo;s a mix of ram sizes in a system. This can be bad for performance though, because of memory channels.\nMost modern systems use 2 or 3 memory channels, to simplify a bit, it makes it so two sticks of ram can have their speed be used in parallel. Think about it like a parking lot, if you have a total of 4 parking lots you could, theoretically, hook them all up in a straight line with one entrance/exit shared among them. This would be pretty stupid though, as it would severely bottleneck traffic going though. Instead you may want to add a separate entrance and exit for each, but that quickly becomes expensive. Instead, most systems use a mix of the two, connecting a pair of sticks together, allowing for added capacity, but allowing for multiple pairs to be inserted independently. A lot of people don\u0026rsquo;t fully fill all the available memory slots on their motherboard though, so instead of having 4 lots with 2 entrances you should be able to have 2 and 2, unless you mistakingly put the sticks in wrong, leaving one \u0026lsquo;entrance\u0026rsquo; closed entirely while the other now has a ton of capacity. On my motherboard these \u0026lsquo;lots\u0026rsquo; are labeled A1, A2, B1, and B2. Looking above you can see the stick we\u0026rsquo;re looking at here is the A1 lot. It\u0026rsquo;s because of this that you should ideally have a multiple of as many sticks of ram as you do memory channels. For example, if you have a two channel motherboard and CPU then you want either 2, 4, or 8 sticks of ram. Most motherboards top out at 4 sticks though, with 2 channel and 2 sticks being the most common configuration.\nNext, I want to look at the line that says \u0026lsquo;Type Detail: Synchronous Unbuffered (Unregistered)\u0026rsquo; this is referencing another type of ram, which is buffered and error correcting (ECC) memory. This type of ram is almost strictly used in servers and is special because there\u0026rsquo;s actually an extra physical memory die on the card. If you look above you\u0026rsquo;ll notice each stick has sets of 8 black memory dies. ECC memory actually has 9 dies. The reason there are normally 8 dies is simple- there\u0026rsquo;s 8 bits in a byte. Servers don\u0026rsquo;t work on some magic 9-bit in a byte system, instead, this extra bit per byte is used to ensure the data hasn\u0026rsquo;t been corrupted. The math behind this can get complicated and weird, but for now let\u0026rsquo;s just go with it. Buffered memory is basically just adding an extra \u0026lsquo;buffer\u0026rsquo; between the read/write and again, it\u0026rsquo;s a server thing.\nFinally I want to point out the voltage. Much like a CPU the voltage a Ram module runs at is important, and needs to be kept very stable. However, it may need bumped up if the RAM is running at a particularly high speed or if it\u0026rsquo;s set higher than factory (overclocked).\nSome RAM actually includes a special memory profile, often called XMPP, which can be applied in the BIOS/UEFI settings to make sure you\u0026rsquo;re getting the absolute best performance out of you RAM before manual overclocking. This may actually overclock your CPU a bit as well as a bit of a side effect.\nThere\u0026rsquo;s a program on your system called free which can be used to see how much RAM you have, how much is in use, etc. Let\u0026rsquo;s run free with the -h flag so we can see the amounts with nice units.\n1 2 3 4  ‚ï≠‚îÄvega@lyrae ~ ‚ï∞‚îÄ‚û§ free -h total used free shared buff/cache available Mem: 31Gi 4.5Gi 23Gi 488Mi 3.3Gi 26Gi   You can see I have 32Gb of RAM total (it get\u0026rsquo;s truncated to 31 because it\u0026rsquo;s actually like 31.99, units are weird), with ony 4.5Gb used. Most people complain about Chorme eating all their RAM but the truth is unused RAM is wasted RAM. The OS will manage RAM for you, and if you run out start using swap (that partition we made eariler).\nLet\u0026rsquo;s take a deeper dive, reading the man page for free with man free we can see it uses information from /proc/meminfo, so lets look at that file ourselves using cat /proc/meminfo.\nOne of the most interesting things to point out here is the concept of Dirty memory.\n\u0026lsquo;Dirty\u0026rsquo; memory is the amount of information that has been modified in memory, but that has not been saved back onto the permanent storage (SSD/HDD). If you were to suddenly lose power this information would be lost.\nPagefaults and misses are also important. Because these topics are a bit hard to summarize I\u0026rsquo;m going to recommend you read the Wikipedia page on Pagefaults and on Cache Misses. It\u0026rsquo;s okay if you don\u0026rsquo;t understand everything you\u0026rsquo;re reading. Hopefully as you read more later and gain more experience the terms you didn\u0026rsquo;t know will \u0026lsquo;click\u0026rsquo; and you\u0026rsquo;ll understand.\nGoing back to when cache was mentioned though, RAM\u0026rsquo;s primary job is to hold bulk information that\u0026rsquo;s in use a bit closer to the CPU. For example if you load a large image file it\u0026rsquo;ll first get copied to ram and then be processed though cache in chunks, this is because there just simply isn\u0026rsquo;t enough cache on the CPU to hold a large image.\nMemory issues and Memtest86: #  Rowhammer #  The Motherboard #  This is an older motherboard, but still new enough to have modern parts. Let\u0026rsquo;s start by looking at the the most obvious physical features and move to smaller things from there.\nThe most obvious thing to point out is the size of the motherboard. This is a mATX motherboard, which is considered the normal size for most systems. Most gaming or DIY computers will use full size ATX motherboards, which look very similar but are a bit longer vertically, allowing for more expansion slots - those horizontal black bars - among other features. Other form factors include ITX, a smaller form factor with only a single expansion slot, eATX (extended ATX) which is rarely used now, and SSI and EEB which are both server motherboard sizes.\nThe large, white square is the CPU socket. This is an older board made for an AM3+ processor. The AM3+ processor line, as well as most consumer processors from AMD use a PGA or Pin Grid Array socket. these CPUs have many pins on the bottom which fall into these holes to make contact. Before the CPU is inserted the metal leaver arm, seen at the bottom of the socket if you look carefully, is raised and the CPU should smoothly plop right in, after which the arm can be lowered. Modern Intel CPUs follow a similar-ish mechanism, only instead of having a bunch of pins that go into holes the \u0026lsquo;pins\u0026rsquo; are actually tiny springy pieces of metal on the motherboard which make contact with pads on the CPU, that socket looks a bit like this, albeit this is an old one:\nimg source If you\u0026rsquo;re looking at a server or high end workstation you may actually run into a single motherboard with multiple CPU sockets. These are becoming less common with time, but even though there are multiple CPUs the system still operates as one larger system. For example, I have access to a system with 4, 8 core, 16 thread cpu\u0026rsquo;s to give for a total of of 64 threads. Giving this beautiful sight:Clearly, a server with that much horsepower will use a lot of electricity though, and there is some overhead for the system when getting information from one physical CPU to another.\nAbove and left of the CPU on you\u0026rsquo;ll see a bunch of copper coils in little boxes and some small metal cylinders, as well as a cluster of these with a large, 4-hole plug a bit further left, directly above the big aluminum heat sink. This all makes up the VRM or Voltage Regulation Module. The connector there is where the CPU power plug from the PC power supply would be plugged in. The power needs to be carefully controlled, filtered, and adjusted based on the needs of the CPU, that\u0026rsquo;s what all of this is for. Generally the beefier and faster a CPU, the larger the VRM. The VRM also needs to dissipate a good amount of heat on higher end systems so many nicer motherboards will cover this up with a large heatsink.\nMoving on from the CPU you\u0026rsquo;ll see 4 vertical slots next to socket, these are where the RAM sticks are inserted. You\u0026rsquo;ll notice they\u0026rsquo;re color coded as to indicate which slots share the communication channel, so in this case you\u0026rsquo;d want to put the first memory stick in the blue slot closest to the socket, followed by the black slot closest to the socket, then repeat.\nWhile we\u0026rsquo;re looking at this side of the board- next to the RAM slots you\u0026rsquo;ll see two things of note. First, that black circular thing is actually a little buzzer. A lot of even modern systems have these on board to buzz error codes out in morse code if something goes wrong. Below that is a large, 20 or 24 pin connector (most modern systems use the 24pin varient) which is where the power supply is plugged in to provide power to the motherboard (with the exception of the CPU) as well.\nOn the other side of the CPU and down a little you\u0026rsquo;ll see a sizable metal heatsink. This is covering the chipset. We\u0026rsquo;ll come back to what the chipset does in a bit. This motherboard is actually a bit weird, on most motherboards the chipset is found almost directly below the RAM, but in general look for a large heatsink and it\u0026rsquo;s probably under that.\nBelow the chipset here are 4 expansion slots, all of which use the PCI-e standard in this case. We\u0026rsquo;ll come back to these in a bit.\nIn the bottom right of the motherboard there are 6 SATA connectors, here each is a different color (for no apparent reason?). These are for connecting storage like hard drives.\nVertically in line but closer to the center of the board you\u0026rsquo;ll also spot a coin cell battery. This is so the system can keep time with use of an on board Real Time Clock (RTC) even when fully powered down and disconnected from wall power.\nAlong the bottom you\u0026rsquo;ll see various connectors with pins sticking out, these are mostly for front panel connections- where the USB, audio, power button, etc. from the front of your case connect.\nFinally, along the top of the back left edge you\u0026rsquo;ll see the metal tops of the main \u0026lsquo;rear i/o\u0026rsquo; for the computer. These are all the main connections for your system. The bulk of the system\u0026rsquo;s USB ports, networking, and audio ports will be found here.\nSo, how do we get any information from the motherboard? Well, in case it wasn\u0026rsquo;t already obvious, the motherboard isn\u0026rsquo;t really one thing. It\u0026rsquo;s more a common interconnect point and routing system than anything; however, it does have some of it\u0026rsquo;s own responsibilities. To start small let\u0026rsquo;s look at one small, but exceedingly import role of the motherboard: fan and temperature control.\nTo see what your fans are doing on Linux you\u0026rsquo;ll need to grab the package lm_sensors with yay, then you can run run sudo sensors-decect and mash enter until it\u0026rsquo;s done. After this you should be able to run sensors and see an output similar to this one:\nOf note, depending on your system, there\u0026rsquo;s a small chance nothing will be detected at all or that some information will be wrong. Even in my case this is true as my CPU fan is reporting 0 RPM. Actually entering your motherboard\u0026rsquo;s UEFI or BIOS settings may expose more information, but we\u0026rsquo;ll talk about that more later.\nAlright, so that\u0026rsquo;s coll and all, but what else can you do?\nAlright, let\u0026rsquo;s move on to seeing the system buses, namely, the pci bus.\nThe pci bus is where most of the system\u0026rsquo;s add in cards, controllers, and the like connect. Here\u0026rsquo;s a shortened version of the output of lspci from my system\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32  00:00.0 Host bridge: Advanced Micro Devices, Inc. [AMD] Family 17h (Models 00h-0fh) Root Complex 00:00.2 IOMMU: Advanced Micro Devices, Inc. [AMD] Family 17h (Models 00h-0fh) I/O Memory Management Unit 00:01.0 Host bridge: Advanced Micro Devices, Inc. [AMD] Family 17h (Models 00h-1fh) PCIe Dummy Host Bridge 00:01.1 PCI bridge: Advanced Micro Devices, Inc. [AMD] Family 17h (Models 00h-0fh) PCIe GPP Bridge ... 00:08.1 PCI bridge: Advanced Micro Devices, Inc. [AMD] Family 17h (Models 00h-0fh) Internal PCIe GPP Bridge 0 to Bus B 00:14.0 SMBus: Advanced Micro Devices, Inc. [AMD] FCH SMBus Controller (rev 59) 00:14.3 ISA bridge: Advanced Micro Devices, Inc. [AMD] FCH LPC Bridge (rev 51) 00:18.0 Host bridge: Advanced Micro Devices, Inc. [AMD] Family 17h (Models 00h-0fh) Data Fabric: Device 18h; Function 0 ... 00:18.7 Host bridge: Advanced Micro Devices, Inc. [AMD] Family 17h (Models 00h-0fh) Data Fabric: Device 18h; Function 7 01:00.0 Non-Volatile memory controller: Phison Electronics Corporation E12 NVMe Controller (rev 01) 02:00.0 USB controller: Advanced Micro Devices, Inc. [AMD] X370 Series Chipset USB 3.1 xHCI Controller (rev 02) 02:00.1 SATA controller: Advanced Micro Devices, Inc. [AMD] X370 Series Chipset SATA Controller (rev 02) 02:00.2 PCI bridge: Advanced Micro Devices, Inc. [AMD] X370 Series Chipset PCIe Upstream Port (rev 02) 03:00.0 PCI bridge: Advanced Micro Devices, Inc. [AMD] 300 Series Chipset PCIe Port (rev 02) ... 03:07.0 PCI bridge: Advanced Micro Devices, Inc. [AMD] 300 Series Chipset PCIe Port (rev 02) 07:00.0 USB controller: ASMedia Technology Inc. ASM1143 USB 3.1 Host Controller 08:00.0 Ethernet controller: Intel Corporation I211 Gigabit Network Connection (rev 03) 0a:00.0 PCI bridge: Advanced Micro Devices, Inc. [AMD] Device 1470 (rev c3) 0b:00.0 PCI bridge: Advanced Micro Devices, Inc. [AMD] Device 1471 0c:00.0 VGA compatible controller: Advanced Micro Devices, Inc. [AMD/ATI] Vega 10 XL/XT [Radeon RX Vega 56/64] (rev c3) 0c:00.1 Audio device: Advanced Micro Devices, Inc. [AMD/ATI] Vega 10 HDMI Audio [Radeon Vega 56/64] 0d:00.0 VGA compatible controller: NVIDIA Corporation GP106 [GeForce GTX 1060 6GB] (rev a1) 0d:00.1 Audio device: NVIDIA Corporation GP106 High Definition Audio Controller (rev a1) 0e:00.0 Non-Essential Instrumentation [1300]: Advanced Micro Devices, Inc. [AMD] Zeppelin/Raven/Raven2 PCIe Dummy Function 0e:00.2 Encryption controller: Advanced Micro Devices, Inc. [AMD] Family 17h (Models 00h-0fh) Platform Security Processor 0e:00.3 USB controller: Advanced Micro Devices, Inc. [AMD] Family 17h (Models 00h-0fh) USB 3.0 Host Controller 0f:00.0 Non-Essential Instrumentation [1300]: Advanced Micro Devices, Inc. [AMD] Zeppelin/Renoir PCIe Dummy Function 0f:00.2 SATA controller: Advanced Micro Devices, Inc. [AMD] FCH SATA Controller [AHCI mode] (rev 51) 0f:00.3 Audio device: Advanced Micro Devices, Inc. [AMD] Family 17h (Models 00h-0fh) HD Audio Controller   Alright, clearly there\u0026rsquo;s a lot going on here, and on first glance it doesn\u0026rsquo;t even look all that useful. But let\u0026rsquo;s look deeper. From this output we can see some interesting things. Starting from the top you\u0026rsquo;ll see there\u0026rsquo;s a lot of internal AMD things that are just handling routing, really these probably don\u0026rsquo;t matter. the first interesting things to look at is 01:00.0 Non-Volatile memory controller: Phison Electronics Corporation E12 NVMe Controller (rev 01) which is telling me that my super speedy NVMe solid state drive is at the address 01:00.0 on the pci bus and despite being made by a consumer brand (I think mine\u0026rsquo;s a Silicon Power? though I have another that\u0026rsquo;s made by Samsung) the actual controller on the device is made by Phison, a reputable brand for NVMe controllers.\nnext thing of note is\n1 2  02:00.0 USB controller: Advanced Micro Devices, Inc. [AMD] X370 Series Chipset USB 3.1 xHCI Controller (rev 02) 02:00.1 SATA controller: Advanced Micro Devices, Inc. [AMD] X370 Series Chipset SATA Controller (rev 02)   You can see here that I have a separate controller for my USB 3.1 ports and that it\u0026rsquo;s sharing pci lanes with my sata controller. In theory, this means If I\u0026rsquo;m working one or both of these really hard, the other may be slower.\nnext is:\n1 2  07:00.0 USB controller: ASMedia Technology Inc. ASM1143 USB 3.1 Host Controller 08:00.0 Ethernet controller: Intel Corporation I211 Gigabit Network Connection (rev 03)   What\u0026rsquo;s interesting here is I have another 3.1 controller, on an entirely different set of lanes. Really, this is a fault of USB that it\u0026rsquo;s not very clear, this is actually a USB 3.1 gen 2 controller, so each port has a top speed of 10gb/s, compared to the 5gb/s of the other controller.\nYou\u0026rsquo;ll also see that my network interface is being handled by an Intel network controller, despite this system having an AMD CPU.\nmoving on:\n1 2 3 4  0c:00.0 VGA compatible controller: Advanced Micro Devices, Inc. [AMD/ATI] Vega 10 XL/XT [Radeon RX Vega 56/64] (rev c3) 0c:00.1 Audio device: Advanced Micro Devices, Inc. [AMD/ATI] Vega 10 HDMI Audio [Radeon Vega 56/64] 0d:00.0 VGA compatible controller: NVIDIA Corporation GP106 [GeForce GTX 1060 6GB] (rev a1) 0d:00.1 Audio device: NVIDIA Corporation GP106 High Definition Audio Controller (rev a1)   Here you\u0026rsquo;ll see some devices can actually use multiple IDs for one physical device. both of the 0c:00.x \u0026lsquo;devices\u0026rsquo; are actually for the \u0026lsquo;Vega56\u0026rsquo; graphics card (Often called GPU for graphics processing unit) made by AMD Radeon, while the 0d:00.x devices are for the GTX1060 card made by Nvida that I have in this system as well. Of note, having both of these in one system is exceedingly uncommon, and my use case is strange; however, It is common to see systems which have a gpu integrated into the CPU (which will still appear in this list) and have a separate larger GPU in the system as well.\nIf you continue down this list you\u0026rsquo;ll see there\u0026rsquo;s yet another USB controller and a audio controller among other things.\nWhat\u0026rsquo;s cool is this information relates back to something we saw earlier when looking at the CPU:\nSee all those PCI ids on the right side, those directly correlate with a lot of the above.\nFinally, if you want a lot more information you can run sudo lspci -v to see even more info about anything, for example, here\u0026rsquo;s the output about my GTX1060 GPU:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  0d:00.0 VGA compatible controller: NVIDIA Corporation GP106 [GeForce GTX 1060 6GB] (rev a1) (prog-if 00 [VGA controller]) Subsystem: Micro-Star International Co., Ltd. [MSI] GP106 [GeForce GTX 1060 6GB] Flags: bus master, fast devsel, latency 0, IRQ 78 Memory at f6000000 (32-bit, non-prefetchable) [size=16M] Memory at c0000000 (64-bit, prefetchable) [size=256M] Memory at d0000000 (64-bit, prefetchable) [size=32M] I/O ports at c000 [size=128] Expansion ROM at f7000000 [disabled] [size=512K] Capabilities: [60] Power Management version 3 Capabilities: [68] MSI: Enable+ Count=1/1 Maskable- 64bit+ Capabilities: [78] Express Legacy Endpoint, MSI 00 Capabilities: [100] Virtual Channel Capabilities: [250] Latency Tolerance Reporting Capabilities: [128] Power Budgeting \u0026lt;?\u0026gt; Capabilities: [420] Advanced Error Reporting Capabilities: [600] Vendor Specific Information: ID=0001 Rev=1 Len=024 \u0026lt;?\u0026gt; Capabilities: [900] Secondary PCI Express \u0026lt;?\u0026gt; Kernel driver in use: nouveau Kernel modules: nouveau   The most notable thing here is actually at the end:\n1 2  Kernel driver in use: nouveau Kernel modules: nouveau   tells us I\u0026rsquo;m using the nouveau driver and kernel modules instead of one of the alternatives on the Nvida card in my system If I wanted to I could switch this over to the proprietary Nvidia driver to get a pretty nice speed boost in some applications.\n I\u0026rsquo;m not really worried about this because I\u0026rsquo;m mostly just using the Vega56 card. The nvidia card is there strictly for CUDA support in some workloads.\n Much like lspci, there\u0026rsquo;s also lsusb, which as you can imagine, tells us information about the USB devices on the system. I have a LOT of usb devices on this system so I\u0026rsquo;ll just paste in a snippet:\n1 2 3 4 5  Bus 002 Device 001: ID 1d6b:0003 Linux Foundation 3.0 root hub Bus 001 Device 003: ID 0c45:6340 Microdia Camera Bus 001 Device 008: ID 28de:1142 Valve Software Wireless Steam Controller Bus 001 Device 006: ID 258a:0013 Bus 001 Device 005: ID 05e3:0745 Genesys Logic, Inc. Logilink CR0012   You\u0026rsquo;ll see here that USB hubs, input devices, webcams, etc. all show up. Anything that\u0026rsquo;s hooked up through USB should appear here. The device with ID 258a:0013 isn\u0026rsquo;t really telling us anything though. What we do know is the first part is the USB Vendor ID. This is an ID that vendors of USB devices have to purchase to uniquely id their products.\nupon looking this id up online, it appears it\u0026rsquo;s used for a generic USB keyboard.\nFor completeness I\u0026rsquo;ll mention, the first part of the id, the x\u0026rsquo;s in xxxx:yyyy is the vendor id, while the y\u0026rsquo;s are the product id.\nFinally, I\u0026rsquo;d like to mention dimdecode. according to the manual page:\n dmidecode is a tool for dumping a computer\u0026rsquo;s DMI (some say SMBIOS) table contents in a human-readable format. This table contains a description of the system\u0026rsquo;s hardwarecomponents, as well as other useful pieces of information such as serial numbers and BIOS revision. Thanks to this table, you can retrieve this information without having to probe for the actual hardware. While this is a good point in terms of report speed and safeness, this also makes the presented information possibly unreliable.\n we\u0026rsquo;ve already used this to get information about the system ram, but other things can be read as well. For example, going back to the pci slots from above running sudo dmidecode --type 9 will tell you what physical slots correspond to what bus address among other information, for a full list of available types simply look at the dmidecode man page with man dmidecode.\nChipset #  The chipset is a chip usually located in the bottom right 1/4 of a motherboard underneath a heatsink. The chipset coordinates the data flow between the processor and most of everything else- excluding the few direct-CPU attached things like the Graphics card. Older systems had both a Northbridge and and a SouthBridge as two separate chips, but everything modern has just the single chip, as the Northbridge, which had memory the memory controller, isn\u0026rsquo;t necessary on modern systems where the memory controller has been integrated into the CPU itself.\nFor the most part, the chipset on a motherboard will match a certain CPU socket, that is each generation of CPU will have it\u0026rsquo;s own chipset and socket; however, this is not always the case as sometimes one chipset may support multiple CPU generations or a CPU generation will work with multiple chipsets. This is the case with AMD\u0026rsquo;s ryzen line where a first generation Ryzen CPU such as the Ryzen 1700 will work in a motherboard with an x370, x470, or x570 chipset, and a third generation Ryzen CPU such as the Ryzen 3700 will work in any motherboard with one of those as well, albeit running a generation mis-match may result in degraded performance or missing features (such as lacking PCIe 4.0).\nFinally, it\u0026rsquo;s notable that the chipset typically acts as a PCIe lane \u0026lsquo;splitter\u0026rsquo; of sorts, turning (usually) 4 lanes into may more so that more devices may be attached. This can be particularly important when many high bandwidth devices are attached though, as even though these lanes are split, there\u0026rsquo;s still only that original 4 lanes of bandwidth to go around.\nImage Source Image Source Expansion slots #   Two PCI-e 1x expansion cards, one for USB 3.0 and one for audio. Of note, most modern motherboards have both functions built in.\n Most modern expansion cards connect though the PCI Express or PCIe bus. This standard, much like DDR, has gone though multiple generations of bandwidth doubling. Currently consumer devices offer up to PCIe 3.0 but devices with both 4.0 and 5.0 should be on the market shortly.\nPCIe cards are used for just about anything you could imagine, form adding a more powerful graphics card, more usb ports, a higher end sound card, to some more esoteric things like specific task accelerators (encryption, compression) or even a software defined radio.\nNo matter what the device is you have to keep in mind its physical and electrical requirements. That is, do you have a slot long enough to accommodate the card and can you provide power to it.\nThis may seem odd, but unlike most connections (think USB or Ethernet) which may support varying speeds (usb2 vs 3) but are still physically the same size, the more bandwidth hungry a PCIe device, the larger the physical connection. The largest available is a 16x connection, while the smallest is a 1x. The most commonly used lane arrangements are 1x, 4x 8x, and 16x. The motherboard shown above has one 16x connector and three 1x connectors. If you have a card that is electrically wired for 4x it will definitly work in any slot physically designed for 4x or greater, and it will still work in a 1x slot of that slot is open ended- this means the \u0026lsquo;back\u0026rsquo; of the slot is open, allowing the card\u0026rsquo;s connector to go past the actual physical connection. Similarly, many 16x physical slots only have 8x actually wired. If you use a card which elecrically needs more connections it will almost certainly still work, but may have degraded performance. Similarly, if you have a card which expects a PCIe gen 3 16x connection but the best you have available is a PCIe gen 2 connection, it will run at half speed. To be extra clear:\nPCIe 1 @ 16x == PCIe 2 @ 8x == PCIe 3 @ 4x\nSimilarly, putting a card which only supports PCIe Gen 2 into a Gen 3 slot will not suddenly make the card faster, even if it was to compensate, that is, if the card is made for PCIe Gen 2 @ 16x and you put it in a PCIe Gen 3 @ 8x slot, it will still run at half speed because it\u0026rsquo;s the lowest gen number of the card or the slot that determines how many lanes are actually needed.\nUnfortunately, PCIe lanes, that is if you add together all the available 16x\u0026rsquo;s and 8x\u0026rsquo;s etc. on a given CPU are usually pretty limited. If the only extra card you plan on adding is a graphics card, you\u0026rsquo;ll be fine, but if you intend to add a graphics card, sound card, network card, etc. all at once you may find that you\u0026rsquo;ve either run out of physical slots or that a card is running with less than ideal bandwidth as a 16x slot may \u0026lsquo;give up\u0026rsquo; 8 of it\u0026rsquo;s lanes becoming an 8x slot so that another card can function at all.\nOf note, the number of physical lanes and slots the mother board has probably greatly exceeds the number of lanes actually going to the CPU, so even if it appears you have plenty of room to add cards you may end up accidentally starving one for bandwidth.\nFinally, from a power perspective most motherboards will supply up to 75 watts to a card through the motherboard, but power hungry cards like the Nvidia and AMD graphics cards in my system may require external power connections. Also, some server boards cap PCIe power delivery to only 25 watts without an external power supply, so just be careful with compatibility.\nThere are some other standards other than PCIe worth mentioning though.\nOlder standards such as PCI, AGP, and ISA were all used before the widespread adoption of PCIe and while their availability is declining, PCI cards are still often for sale, you need to be very careful to only get PCIe cards and not PCI cards if your system doesn\u0026rsquo;t support them.\nBoth AGP and ISA have been phased out a long time ago, but very old cards may poke up now and then. If you\u0026rsquo;re into vintage computers you may want to look the standards up to learn more.\n Top: a 16x pci-e graphics card and a 1x pcie networking card\nBottom: an ISA networking card and an AGP graphics card, not pictured is the PCI connector\n ROM/BIOS/UEFI #  Motherboards have to coordinate the communication of all the peripherals on the system and their own internal buses, furthermore, they have to have some sort of minimal configuration settings for setting things like which drive to boot off of or what speed the CPU or RAM should run at. These configuration settings are stored in some ROM or \u0026lsquo;Read Only Memory\u0026rsquo;, which is an independent chip on the motherboard. This configuration is read by the Binary Input Output System (BIOS) or the Unified Extensible Firmware Interface (UEFI). UEFI is essentially just the newer replacement for BIOS, and usually includes a compatibility mode for BIOS based hardware. When you first turn on the system you can typically mash either the delete or F12 key to enter this configuration page. It\u0026rsquo;s typically from this interface that you\u0026rsquo;d select your boot device, change your CPU or RAM clock speed, and set the system time. On that note, the system also likely has a battery on board which power\u0026rsquo;s the on-board real time clock, which allows the system to maintain the time even when disconnected from power. On some systems the ROM is actually volatile meaning if this battery dies and the system is disconnected from power you may loose the BIOS/UEFI settings.\nOf note, you may need to update the UEFI or BIOS of a system which is sometimes done via a special admin command within windows but more commonly done by downloading a file to flash drive, putting the drive in a specific usb port, and loading the update file. When this is done it\u0026rsquo;s common to lose all UEFI/BIOS settings as well, as it overwrites the ROM.\nFinally, it should be noted that it\u0026rsquo;s pretty easy to make your system not boot or boot-loop if you break things here. So, be careful. If you set your fan speeds slower to make the system quieter then everything overheats and dies, well, „ÉΩÔºà¬¥„ÉºÔΩÄÔºâ‚îå\nBecause this varies per motherboard there\u0026rsquo;s no universal way to describe how it looks or works. Some boards will support a lot more configuration than others, with really the only nearly definite options you\u0026rsquo;ll find at the time of writing being a switch to enable virtualization extensions (for running virtual machines) and a switch to turn of Secure Boot, which you likely had to do to install Arch to begin with.\nFurther reading How To Geek: What Is UEFI, and How Is It Different from BIOS?\nVRM #  The VRM or \u0026lsquo;Voltage Regulation Module\u0026rsquo; serves a simple but important task of ensuring that the CPU (or processor in question) receives a constant voltage or voltage that makes sense for it\u0026rsquo;s current clock speed.\nEssentially the VRM may contain multiple stages of current and voltage regulation modules. The more of these stages the more stable the voltage and the more current can be delivered. For most cases, this can be left alone, but it\u0026rsquo;s incredibly important when over clocking, as to overclock a CPU or GPU it\u0026rsquo;s usually necessary to increase the voltage, which is typically done from within the BIOS/UEFI or from a configuration utility inside the OS in the case of the GPU.\nYou can typically tell how strong a particular VRM is by counting the number of \u0026lsquo;chokes\u0026rsquo; on the board.\n[TODO, add pictures of chokes]\nGraphics Card (or integrated graphics) #   A wide array of graphics cards spanning multiple generations. The majority pictured are made by Nvidia\n Most \u0026lsquo;beefier\u0026rsquo; systems have a graphics card, but (almost) every computer that can output a video signal has dedicated graphics processing of some sort. For many lower end or low power systems (especially laptops) this graphics processing unit, or GPU, is built into the CPU and uses the systems same ram for video. For larger systems there\u0026rsquo;s typically a larger graphics card (often the graphics card is called a GPU as shorthand; however, the GPU is technically just the processor on the board), which is a separate device hooked up though an expansion connection (like PCIe). Typically these cards differ from their integrated into the CPU counterparts in that they\u0026rsquo;re much, much faster and drink much more power. In general the GPU is required because while CPUs are great at very fast consecutive operations like taking \u0026lsquo;1+1=a, a+1=b, b+1=c\u0026rsquo; the GPU is really good at parallel operations like \u0026lsquo;1+1=a, 2+2=b, a+b=c\u0026rsquo;, where both of the first two operations can be done at the same time by different processing units before being manipulated together in the third operation. In reality, this is because the modern GPU really only treats pushing color data to the screen as a secondary operation, instead it\u0026rsquo;s main purpose is to do complex matrix and vector math which is what goes into drawing polygons in a 3D scene, and these matrix operations are massively parallel. So while a CPU has at the high end a dozen cores, a GPU may have multiple thousand. These cores are much more limited in what they can do of coarse, and typically run at a lower clock speed than the CPU, but for their purpose they absolutely shred though large data. This has given rise to GpGPU Computing, or General Purpose Graphics Processing Unit Computing, where in the GPU is used for things other than graphics, like accelerating data base searchers or training AI models.\nAs a brief note, historically graphics cards served primarily to actually draw to the screen, with some only having a fixed number of characters they could draw for rendering a text interface and others having a quite limited color palette that dictated how final images would look.\nToday, there are three primary manufactures of GPUs: Nvidia, AMD, and Intel.\nThe largest player in the space, Nvidia, makes cards targeted primarily to gamers in their GTX and RTX lineup, and has cards meant for professional/compute tasks in their Tesla and Quadro lines. While the two lines are very similar technically they vary mostly in drivers and compute bit depth, with the professional cards providing the ability to do higher resolution floating point calculations easier. This is primarily done for market segmentation though- to prevent professional from buying the much cheaper (albeit still far to expensive) \u0026lsquo;gaming\u0026rsquo; cards. All of Nvidia\u0026rsquo;s cards support CUDA, a programming framework that makes it easier to take advantage of Nvidia\u0026rsquo;s cards for GpGPU purposes.\nAMD is currently offering little competition to Nvidia in the high end; however, their more midrange cards have found great success as they perform plenty well for the majority of games and compute work loads at what is often a fraction of the cost. Of note, AMD cards do not support CUDA, though they do support a variety of open standards that serve the same purpose. This is still an issue though, as many programs that can take advantage of GpGPU acceleration depend on CUDA and therefor require an Nvidia card. Nvidia has frequently been quite hostile to the open source community and their drivers significantly lag behind in quality and performance compared to AMD\u0026rsquo;s for Linux.\nAlso of note, AMD makes many \u0026lsquo;APU\u0026rsquo;s or Accelerated Processing Units, which is just branding for their take on graphics integrated into the CPU. However, AMD\u0026rsquo;s integrated graphics, at least at the moment, far out do Intel\u0026rsquo;s offerings. Intel, at the moment, only offers integrated graphics that are less than stellar performers. Despite this, laptops with Intel Integrated Graphics are very common due to their low power usage. Intel\u0026rsquo;s Integrated Graphics have very good drive support though, both on Linux and Windows.\nAs of the time of writing, Intel is starting to send prototype graphics cards to vendors in a bid to break out of the integrated graphics only space.\nMoving into the actual hardware itself let\u0026rsquo;s look at three graphics units, starting with Intel Integrated.\nBoth Intel and Amd offer integrated graphics of various capability that usually pair reasonably well with the CPU they share the die with. Below is an image of the inner workings of a ryzen cpu with integrated graphics, showing the actual CPU cores (I believe this is a 4 core eight thread system?) in CCX0, the memory controller, and the very large Vega series GPU on the right. This looks to be a Vega11 GPU as you can count the 11 stacks of Compute Units in the GPU section. Of note, if you get a CPU with integrated graphics and don\u0026rsquo;t actually use it because you\u0026rsquo;re getting a separate, more powerful card , then you\u0026rsquo;re effectively paying for a large amount of hardware you\u0026rsquo;re not using. As you can see below, if the GPU was not there, there would be a lot more room to add more CPU cores or other features to the CPU to make it more powerful. Unfortunately, due to market segmentation even if the actual cost to add these extra cores would be the same or less as the iGPU\u0026rsquo;s cost, a CPU of the equivalent size would likely be much more expensive.\nFinally, it should be noted the iGPUs share system memory for graphics memory, which is actually one of their most limiting factors- as system memory (RAM) is optimized for a different kind of access pattern, it is not nearly as fast as GDDR or HMB2, both of which are memory technologies that have been optimized for use with graphics devices.\nImage Source Moving on to graphics cards, Looking above at the stacks of graphics cards above, you\u0026rsquo;ll probably notice that a graphics card is basically just a full separate motherboard and processor on a card. Really, this is pretty accurate, as there is a separate compute device (the GPU), ram (GDDR or HBM), and io (fan control, etc.) on the board. Of course, the Graphics card can\u0026rsquo;t really be used as a full separate computer, but thinking about it as such isn\u0026rsquo;t entirely wrong either. In fact, graphics cards really harken back to much older systems where it was common to add a math co-processor chip along side the CPU to make some mathematical operations faster.\nFurther reading on GPU hardware:\n\u0026ldquo;World\u0026rsquo;s Simplest TTL VGA circuit?\u0026rdquo; - George Foot on Hackaday\nHardware Accelerated Decode #  [TODO]\nhttps://utcc.utoronto.ca/~cks/space/blog/web/Firefox80VideoAccelConfusion\nStorage #   Pictured here are 3 hard drives, 2 of which are \u0026lsquo;full size\u0026rsquo; at 3.5\u0026quot; and the the other a \u0026lsquo;laptop drive\u0026rsquo; at 2.5\u0026quot;, the left most hard drive has been opened up, which has certainly ruined it as dust has gotten in. Below the smaller Hard drive is an NVMe ssd, a micro sd card, and a flash drive. All of which are examples of solid state storage\n Permanent storage is rapidly evolving, but the old guard: hard drives and tape storage aren\u0026rsquo;t going anywhere either. But why use one over the other? How do you interact with them in Linux?\n[TODO] mention hdd, ssd, sata, nvme, usb-storage, sd, scsi, u.2, m.2, tape, floppy, zip\nhdparm\nHDDs #  Hard disk drives or \u0026lsquo;HDDs\u0026rsquo; are sometimes called \u0026ldquo;spinning rust\u0026rdquo; because unlike other modern storage devices they\u0026rsquo;re fundamentally mechanical.\nLooking at the delidded hard drive you\u0026rsquo;ll see they\u0026rsquo;re pretty simple in their basic construction: a magnetized needle(s) move across (a) platter(s) and flip bits accordingly. These platters typically spin at 5400 or 7200 RPM, with the faster meaning data can be read and written faster as well. Hard drives generally are not used for speed though, as compared to other alternatives they\u0026rsquo;re extraordinary slow. Instead, they run at \u0026lsquo;good enough\u0026rsquo; speeds for most things- like storing video, music, etc. while being much less expensive than solid state options and with a proven reliability and without suffering from data loss when left without power for long periods of time. That said, just like any storage medium, over time data can be corrupted, so backups are still a must.\nWhen a Hard drive is powered off, the head will typically \u0026lsquo;park\u0026rsquo; off the platter (this is part of why the delidded plater above died, as it parked incorrectly) and transportation should be pretty safe, however, when running and spinning quickly they\u0026rsquo;re pretty fragile, and this is why so many older laptops have dead drives: the gyroscopic effects of spinning something that fast make it resistant to a change in orientation, causing things to scrape, scratch, or otherwise go wrong. Thankfully most 2.5\u0026quot; hard drives have been hardened against this now; however, it\u0026rsquo;s still a good idea to store and run hard drives with as much protection from vibration and shock as possible. In fact, yelling at a hard drive has been shown to hurt performance.\nAt the end of the day, for bulk media storage that you still want to be able to access quickly or for backups, hard drives are still one of the best options.\nMost hard drives connect though either SATA or SAS, with almost all consumer drives being SATA, and enterprise drives using a mix. SAS has some extra features and depending on the drive may be capable of writing an reading at the same time, a nifty trick SATA drives can\u0026rsquo;t do without alternating between the two rapidly.\nFor bulk storage servers you can get insane capacities, and building one yourself isn\u0026rsquo;t all that hard. Here\u0026rsquo;s mine: A modified powervault MD1000 with a hard drive poking out and the computer - being used an archive server - it connects to. It currently is only housing three, 3Tb SAS hard drives.\n For working with hard drives in Linux you\u0026rsquo;re best friend is hdparm lets use it to look at some disks. First we need to pick a disk to look at, running lsblk you should be able to see all the disks on your system, and I\u0026rsquo;ll be looking at my main data drive which is a 3.7Tb drive on /dev/sdg\nThe first thing we should do is get an idea about the disk usage, to do that I\u0026rsquo;ll go to the mount point of the disk on my system ( it\u0026rsquo;s mounted at /run/media/vega/raid despite the fact it\u0026rsquo;s no longer in a raid array, we\u0026rsquo;ll come back to this)\nso first I\u0026rsquo;ll run df -h , that -h on most Linux commands means to make the output human readable, printing things in terms of Gigabytes or Terabytes etc instead of just a raw byte count.\n1 2  Filesystem Size Used Avail Use% Mounted on /dev/sdg2 3.7T 2.3T 1.5T 62% /run/media/vega/raid   Alright, so I already have the disk 62% used, let\u0026rsquo;s give that a closer look by firing up ncdu at the mount point. This will take a little while to scan, the more files the longer it will take. After spending a few minutes to analyze the disk I\u0026rsquo;m greeted with this:\nFrom this you should be able to plainly see that the majority of the hard drive is taken up by Archived files, Music, Games, Videos, and Pictures. Pretty Mundane, but I could easily dive into the Archives and see why they\u0026rsquo;re so big and save myself some space\nNone of this is really all that interesting though, so what about speed? How fast or slow is the hard drive? Now is where hdparm comes in. Reading the man page you\u0026rsquo;ll find the the -T and -t flags both perform disk read bench marks, one cached reads, the other raw, so let\u0026rsquo;s run sudo hdparm -Tt /dev/sdg\nThis gives:\n1 2 3  /dev/sdg: Timing cached reads: 22946 MB in 2.00 seconds = 11492.36 MB/sec Timing buffered disk reads: 556 MB in 3.01 seconds = 184.91 MB/sec   You should immediately notice that cached reads are absolutely insanely high compared to buffered, in reality it\u0026rsquo;s because it was using RAM for cache, and RAM really is that fast. The reads of bulk data on the other hand? A little under 200MB/sec is actually quite fast for a hard drive. Anything between 1-200 is normal. You\u0026rsquo;ll soon see that compared to SSDs though, this is kind of disappointing.\nBut, moving on, another few interesting flags available in hdparm are -g which displays the \u0026ldquo;geometry\u0026rdquo; of the drive: cylinders, heads, sectors, etc., -H for tempature. This begs the obvious question: what are cylinders, heads, and sectors [TODO]\nAnother thing of note is S.M.A.R.T tests, while not exclusive to hard drives, they\u0026rsquo;re particularly useful for them as most hard drives give a lot of warning signs before failing out right. In order to get in-depth S.M.A.R.T info on your drive, you\u0026rsquo;ll likely need to run a test first, after which you can view the results. To do this on Linux you can run\n1 2  yay -S smartmontools sudo smartctl -i path/to/disk   Finally, a quick note about Western Digital Green drives: Linux eats them. Thankfully you can use hdparm to fix this. From the man page:\n -J Get/set the Western Digital (WD) Green Drive\u0026rsquo;s \u0026ldquo;idle3\u0026rdquo; timeout value. This timeout controls how often the drive parks its heads and enters a low power consumption state. The factory default is eight (8) seconds, which is a very poor choice for use with Linux. Leaving it at the default will result in hundreds of thousands of head load/un‚Äê load cycles in a very short period of time. The drive mechanism is only rated for 300,000 to 1,000,000 cycles, so leaving it at the default could result in premature failure not to mention the performance impact of the drive often having to wake-up before doing routine I/O. WD supply a WDIDLE3.EXE DOS utility for tweaking this setting, and you should use that program instead of hdparm if at all possible. The reverse-engineered implementation in hdparm is not as complete as the original official program, even though it does seem to work on at a least a few drives. A full power cycle is required for any change in setting to take effect, regardless of which program is used to tweak things. A setting of 30 seconds is recommended for Linux use. Permitted values are from 8 to 12 seconds, and from 30 to 300 seconds in 30-second increments. Specify a value of zero (0) to disable the WD idle3 timer completely (NOT RECOMMENDED!).\n Shouting in the Datacenter (YouTube)\nWestern Digital is trying to redefine the word ‚ÄúRPM‚Äù (arstechnica)\nWhat Is ZFS?: A Brief Primer (YouTube, Level1Linux)\nNon-Posix File Systems (G√∂ran Weinholt\u0026rsquo;s Blog)\nSSD #  Solid state drives, like HDDs, come in many capacites, speeds, and form factors; however, SSDs come in many, many more than HDDs. The primary two of note at the moment are SATA SSDs and NVMe SSDs. Sata SSDs are typically the same size and shape (though sometimes a bit thinner) as the normal 2.5\u0026quot; laptop hard drive; however, some other standards are used such as mSATA and m.2. Unfortunately, the m.2 spec is slightly confusing, with some drives being SATA based and some being NVMe based, and the m.2 slot itself supporting any mix (just SATA, just NVMe, or both), so when getting a drive you need to be careful that your motherboard\u0026rsquo;s m.2 slot and the drive are compatible.\nThe main reason you\u0026rsquo;d want to use NVMe is because it\u0026rsquo;s much, much faster. NVMe drives are often many times faster than their SATA equivilents, and as of the time of writing, only slightly more expensive, albeit not supported on all systems.\nAll SSDs regradless of type consist of 3 main parts: The Controller, the NAND, and some RAM. (okay, technically not all SSDs have ram, but that\u0026rsquo;s sorta misleading)\n[TODO] Optane, NVMe, Sata, technically all flash, Ram disks, different controllers, MLC, TLC, etc.\nRecovering File Systems from NAND Flash (YouTube, Defcon 28)\nCloud Storage (Some one else\u0026rsquo;s drives) #  This is opinioned guide, so now that\u0026rsquo;s about to show: Dont do it. All cloud storage is is someone else\u0026rsquo;s disks. If you want to use it as a backup sure, but I don\u0026rsquo;t see why- it\u0026rsquo;s much less expensive to just backup the reallly important stuff to a hosted server continually and periodically (weekly, monthly, whatever) backup to some external disks that you keep somewhere else. Not to mention the privacy concerns. Like, really? You want to put allllll your family pictures under the all seeing eyes of Google or Microsoft. Nah. I\u0026rsquo;ll pass.\nPortable #  Most fixed disk enclosures suck, albeit they can be less expensive. I\u0026rsquo;d recommend getting a portable multi-drive enclosure that runs over whatever the fastest connection you have is (Thunderbolt, USB 3.1, etc.). You can even get usb-\u0026gt;nvme adapters, albeit they have a nasty amount of bandwidth limiting.\nMost off-the-shelf flash drives have ass cooling and will over-heat them selves to death when you use them for things like installing operating systems regularly, so I recommend just getting a bulk pack of cheap, low capacity ones to toss when they finally kick the bucket and a few nice USB-\u0026gt;SATA or USB-\u0026gt;NVME adapter for your main portable storage needs. Failing that, you can always use your phone if you\u0026rsquo;ve got a nice high capacity SD card in it or plenty of spare internal storage. The problem with that is MTP or \u0026lsquo;Media Transfer Protocol\u0026rsquo; is a buggy, slow mess, and there\u0026rsquo;s no other clean way to transfer things from a phone. So ¬Ø\\(„ÉÑ)/¬Ø\nRecuperaci√≥n de datos de ¬µSD nivel: F*cking Master of the Universe. pic.twitter.com/B9egCrW4WJ\n\u0026mdash; ChuxMan Skywalker (@MrChuxMan) July 28, 2020  The Past #  Floopy, Zip Disks, and Tape? Really? Yes. And yes, they\u0026rsquo;re still used, so you should probably know at least a little about them.\n[TODO]\nFloppy, Zip, tape\nRAID and Disk Pools #  [TODO]\nZfs, hardware raid, software raid, emulated hardware (bios), etc.\nNetwork Interfaces #   Pictured here are three Network Interface cards or NICs. The three on the left are for WiFi (though some of this form factor may include bluetooth as well) while the one on the right has an ethernet port for wired access. Most computer\u0026rsquo;s will not have a separate card for the wired interface though, as most motherboard\u0026rsquo;s have a wired network interface built in.\nNICs also include the wireless chipset used for connecting to a cell tower and really any radio communication device in general.\nOlder NICs include those used for Dial-Up connections and some obscure wireless methods that predate WiFi.\n  Ethernet #  [TODO] rj45, ethernet over infiniband, speed bases\nWiFi #  [TODO]\nChannels 12, 13, 14. 2.4 v 5, wifi 6, weird authentication, etc\nHigh Bandwidth #  [TODO], infiniband, DMA, 10GbE+, Multigig\nAt the end of the day, nothing is faster than a truck filled with drives.\nThe Future #  [TODO]\nwifi6, 10gbe rj45 and beyond, cellular, sdr\nThe Past #  [TODO]\ncoax network, infrared, sneakernet\nPower Supply #  The Power Supply Unit or PSU does what you think. It takes power from the wall and turns it into power for the computer. This isn\u0026rsquo;t the chapter on voltage and current, so I\u0026rsquo;ll spare some of the details, but effectively you want a power supply that can deliver plenty of power and that has clean power. A given power supply usually has a rating like \u0026lsquo;500w\u0026rsquo; for 500 watts, but this is usually a bad indicator, as they could be referring to multiple things- you see a desktop power supply usually outputs multiple voltages (-12, +12, +5, +3.3) and each one of those lines will have a different maximum power output. Typically, the one that\u0026rsquo;s most relevant is the +12 rail, as both the GPU and CPU will likely run on that and they\u0026rsquo;re what draws the most power. So, you can actually check just this rail by taking the voltage (+12V) times the max current (amperage) on that line (let\u0026rsquo;s use 20A) to see the max power (so 12*20=240 watts)\nAlso note that the power supply itself may be of varrying quality, with the voltage \u0026lsquo;ripple\u0026rsquo; and the efficiency being important as well. Voltage ripple occurs when the supposed-to-be 12V line instead outputs a signal that\u0026rsquo;s varying a little, so let\u0026rsquo;s say you measure the +12V line and it reads 12.2V now, then a minute later reads 11.8V, that\u0026rsquo;s quite a bit of ripple when you expect a constant +12V. Generally you can trust the power supply is decent about this though so long as the power supply is also pretty efficient. Telling efficiency is easy too, as there\u0026rsquo;s a nifty specification that most PC PSU\u0026rsquo;s have called \u0026ldquo;80 plus\u0026rdquo; and it\u0026rsquo;s rated by a metal-value system, so an 80+ bronze power supply is already (typically) much better than one without the rating, and an 80+ Gold is even better, going on up to Platinum.\nMost PC PSU\u0026rsquo;s are in the ATX format, the same specification used to size motherboards, and the majority of desktops use a standard ATX power supply, though smaller systems may opt for one of the smaller standards such as SFX. Servers typically have their own power supplies which look a bit strange as they\u0026rsquo;re basically the shape of an elongated brick, but they\u0026rsquo;re like that so they can be easily swapped in and out. Often server power supplies are redundant so a new one could be put in while the system is still on in many cases.\nMain takeaway here, if some one is talking about an ATX PSU they\u0026rsquo;re talking about the power supply in a desktop. Often they\u0026rsquo;re (less than safely\u0026hellip;) used in other applications as they\u0026rsquo;re cheap and often easy to find used or salvaged from old systems.\n[TODO] add pictures\nCooling #  Blower, air flow vs static pressure, fan size liquid, heat pipes, pwm vs DC control\nPeripherals #  USB #  [TODO] all the annoyences of USB standards\nUSB3: why it\u0026rsquo;s a bit harder than USB2\nKeyboards #  HID or Human Interface Device, is the standard over which most mice, keyboards, and game controllers talk to the computer. Unfortunately, it\u0026rsquo;s also a pretty lame standard. You can\u0026rsquo;t just input arbitrary Unicode or send fancy data back to the keyboard to control fancy RGB lights, because of this it\u0026rsquo;s common to need extra drivers per device\n[TODO]\n5pin din, PS2, USB\nWhat Happens When (Github)\nHere\u0026#39;s a terrible idea for a keyboard that I\u0026#39;m annoyed I didn\u0026#39;t invent first.\nType out morse code by closing your laptop lid! from https://t.co/FfXB2etRUu pic.twitter.com/YMJ5XVm8io\n\u0026mdash; foone (@Foone) April 2, 2020  Chapter 3.1 - How to know what to buy #  [TODO - possibly move]\nChapter 3.2 - Legacy Hardware #  [TODO]\nParallel, Serial, Tape, CD, gameport\nChapter 3.3 - Architectures #  From the README.md file at https://github.com/radareorg/radare2\n Architectures #  i386, x86-64, ARM, MIPS, PowerPC, SPARC, RISC-V, SH, m68k, m680x, AVR, XAP, System Z, XCore, CR16, HPPA, ARC, Blackfin, Z80, H8/300, V810, V850, CRIS, XAP, PIC, LM32, 8051, 6502, i4004, i8080, Propeller, Tricore, CHIP-8, LH5801, T8200, GameBoy, SNES, SPC700, MSP430, Xtensa, NIOS II, Java, Dalvik, WebAssembly, MSIL, EBC, TMS320 (c54x, c55x, c55+, c66), Hexagon, Brainfuck, Malbolge, whitespace, DCPU16, LANAI, MCORE, mcs96, RSP, SuperH-4, VAX.\n Which is only further complicated by:\n File Formats #  ELF, Mach-O, Fatmach-O, PE, PE+, MZ, COFF, OMF, TE, XBE, BIOS/UEFI, Dyldcache, DEX, ART, CGC, Java class, Android boot image, Plan9 executable, ZIMG, MBN/SBL bootloader, ELF coredump, MDMP (Windows minidump), WASM (WebAssembly binary), Commodore VICE emulator, QNX, Game Boy (Advance), Nintendo DS ROMs and Nintendo 3DS FIRMs, various filesystems.\n and\n Operating Systems #  Windows (since XP), GNU/Linux, GNU/Darwin, GNU/Hurd, Apple\u0026rsquo;s {Mac,i,iPad,watch}OS, [Dragonfly|Net|Free|Open]BSD, Android, QNX, Solaris, Haiku, FirefoxOS.\n plus, the above lists are by no means exhaustive. Clearly there\u0026rsquo;s no shortage of CPU architectures (virtual or physical) that can be present on a system which can be running any of a number of operating systems which may use a variety of ways of actually storing the executable instructions, so, let\u0026rsquo;s take a look at what all of this actually means. First, let\u0026rsquo;s start with the different architectures you\u0026rsquo;re likely to run into and what makes them different:\n[TODO]\nFor more information on embedded architectures and in-depth comparisons look at Chapter 14.1. For info on Virtual machines (for hosting Linux or for languages like Java) look to Chapters 8 and 17\n[TODO] note on hackintoshes\n"});index.add({'id':30,'href':'/engineering/30-fpga1/','title':"30 Fpga1",'section':"Engineering",'content':"Chapter 30 - Let\u0026rsquo;s try out programmable logic #  !\u0026gt; Before we get started, please be sure you\u0026rsquo;ve read Chapter 15 - Digital Logic\n Simulation of an Intel 4004 in TICS (The Integrated Circuit Simulator) a (abandoned?) WIP by Oni, Download the interpreter here, the repo has pleanty of examples.\nSomething a bit less cool but similar is https://github.com/martinkirsche/wired-logic\n [TODO]\nFinite State Machines, VHDL, Verilog, FPGA \u0026amp; CPLD internals\n"});index.add({'id':31,'href':'/engineering/31-fpga2/','title':"31 Fpga2",'section':"Engineering",'content':"Chapter 31 - Let\u0026rsquo;s make our own SOC #  Before we start, I\u0026rsquo;ll warn you this isn\u0026rsquo;t easy, but it\u0026rsquo;s also not as bad as it sounds, and it\u0026rsquo;s certainly not as bad as it used to be\n[TODO]\nFPGA Linux Kernel drivers\nAn FPGA that only plays Doom\nThe DooM-chip! It will run E1M1 till the end of times (or till power runs out, whichever comes first).\nAlgorithm is burned into wires, LUTs and flip-flops on an #FPGA: no CPU, no opcodes, no instruction counter. Running on Altera CycloneV + SDRAM. (1/n) pic.twitter.com/wd7j4JnfWn\n\u0026mdash; Sylvain Lefebvre (@sylefeb) May 8, 2020  My Nor - \u0026ldquo;a single board computer that does not have a CPU. Instead, the CPU consists of discrete logic gates from the 74HC series. This computer also has no ALU. Only a single NOR gate is used to perfom all computations such as addition, subtraction, AND, OR and XOR.\u0026rdquo;\nChapter 31.1 - FPAAs #  ZRNA FPAA\n"});index.add({'id':32,'href':'/engineering/32-3dprint/','title':"32 3dprint",'section':"Engineering",'content':"Chapter 32 - 3D printing, CNC, and making things #  Basic making #  Wood working #  Safety #  Cool projects #  Lichtenberg Figure Table (imgur)\nEpoxy Inlay and Rustic Compass Butcher Block Countertops (imgur) (YouTube)\nMetal Working #  Safety #  CNC, 3D, Lasers, \u0026amp; Plotting #  [TODO]\nWhile this book/guide/thing primarily focuses on the less mechancial-engieering-y side of things, it wouldn\u0026rsquo;t make sense not to include at least a little about 3D printing, molding, materials, gears, springs, and the like. So, here goes:\nVpype (GitHub) - \u0026ldquo;The Swiss-Army-knife command-line tool for plotter vector graphics.\u0026rdquo;\nLaser Etching Stainless Steel with Mustard (Hackaday)\nAchieve true 3D printing with non planar slicing (YouTube, Teaching Tech)\nGiant Mechanical Iris! Cut on a CNC Router (YouTube)\nTopology Optimization makes for some cool shelves (YouTube)\nClearner Laser Cutting With a 3D-Printed Nozzle (Hackaday) ,Links to article by Jesse @Nervous Systems\n"});index.add({'id':33,'href':'/engineering/33-aiml/','title':"33 Aiml",'section':"Engineering",'content':"Chapter 33 - Fine, I\u0026rsquo;ll talk about AI #   https://hific.github.io/\ni.am.ai Roadmap \u0026ndash; this shows that AI/ML are rooted in Data Science, as a [TODO] this probably needs talked about here\nThis ____ Does Not Exist\n \u0026ldquo;Using generative adversarial networks (GAN), we can learn how to create realistic-looking fake versions of almost anything\u0026rdquo;\n "});index.add({'id':34,'href':'/engineering/34-hamradio/','title':"34 Hamradio",'section':"Engineering",'content':"Chapter 34 - Ham Radio #  \u0026lsquo;137Mhz\u0026rsquo; by u/CashewHut LORA\n2.4Ghz patch antenna\nelectronically tunable filters\nNational Radio Quiet Zone (Wikipedia)\nhttps://newhams.info/2017/02/17/rf-connector-types/\nquestion of the day:\nAnalog TV is shut down in the US, right? so all the over-the-air TV is digital. And existing analog OTA frequencies are getting repurposed to other uses... so what am I seeing on UHF channel 60? it\u0026#39;s got way more structure than the noise everywhere else. pic.twitter.com/Jm9W9JsjgF\n\u0026mdash; foone (@Foone) March 17, 2020  Waveguides Explained (YouTube)\nHow a Crystal Radio Works (YouTube)\nSo You Got an SDR (Twitch, DefCon28) (Youtube, Defcon28)\nRadi-uhoh : What is this SDR thing and how do I use it?: Josh Conway (Youtube)\n2200-meter band (Wikipedia)\nMonitor Airplane Traffic with a Raspberry Pi and SDR\nSDR: Digital Adventures in Shortwave Radio (Justus.ws Blog)\nIRC over LORA for when things go really south(Tom Nardi, Hackaday)\nA Cleverly Concealed Magnetic Loop Antenna (Jenny List, Hackaday)\n Video courtesy of OH6BPL  Here OH6BPL is using the Computer Craft Minecraft mod to mirror the settings of his radio!   From u/irresponsible_owl on Reddit, in response to a picture of a USB cable with a dozen ferrite cores on it:\n Are you sure the cable is shielded? One quick way to tell is to put a continuity tester on the outside metal parts of each end. If it beeps, the cable is likely shielded. I\u0026rsquo;ve seen tons of cables that aren\u0026rsquo;t, where there\u0026rsquo;s no connection between the jack covers - even though the USB specification says there must be. If there\u0026rsquo;s continuity it doesn\u0026rsquo;t guarantee it\u0026rsquo;s shielded, but lack of continuity is a sure sign it\u0026rsquo;s not.\nIf the cable is shielded you shouldn\u0026rsquo;t need more than 2 ferrites, one at each end.\nSource: I\u0026rsquo;ve been down this road before\u0026hellip;\nEdit: Here are some fun articles to read:\nhttps://www.yoctopuce.com/EN/article/usb-cables-shielding-matters-as-well\nhttps://www.totalphase.com/blog/2020/05/what-are-the-guidelines-for-testing-ground-and-shield-resistance-of-usb-cables/\nYou can get a lot more in depth with the testing if you want\u0026hellip; or just buy a higher quality cable :D\n ?\u0026gt; I\u0026rsquo;ve actually set this up using a HackRF and Rock64. It\u0026rsquo;s pretty neat. Just be aware the ADS-b, the radio signals you\u0026rsquo;ll be picking up to do this, are very line-of-sight so you might need to plop the antenna on your roof or something.\n"});index.add({'id':35,'href':'/engineering/4-linuxdirtree/','title':"4 Linuxdirtree",'section':"Engineering",'content':"Chapter 4 - Back to the Root of Things #  We\u0026rsquo;ve been using file in /proc and /dev throughout this, but we never really looked to see what else is in there. Let\u0026rsquo;s do that.\ngo ahead and open up a terminal and run\n1 2 3 4 5  ‚ï≠‚îÄvega@lyrae ~ ‚ï∞‚îÄ‚û§ cd /dev ‚ï≠‚îÄvega@lyrae /dev ‚ï∞‚îÄ‚û§ ls [Very, Very Long Output here]   Alright, I know what you\u0026rsquo;re thinking.\nWhat. The. Actual. Fuck.\nAnd honestly, yeah. But first, lets talk about what we just did.\nPermissions #  if you run ls it normally shows you the all the folders, shortcuts, and files in a directory, except it excludes any hidden files. In linux you can make a file or folder hidden simply by naming the folder with a \u0026lsquo;.\u0026rsquo; at the beginning, so naming a folder .nsfw will mark it has hidden. Hidden doesn\u0026rsquo;t really mean much though as most file managers allow you to view hidden files/folders by checking a box, and in this case, we can see hidden items by using the -a flag for ls. running man ls you\u0026rsquo;ll see the -a flag just stands for \u0026lsquo;all\u0026rsquo; and does exactly what I\u0026rsquo;ve said.\nfurther down you\u0026rsquo;ll see the \u0026lsquo;-l\u0026rsquo; flag gives a \u0026ldquo;long listing format\u0026rdquo; which is an almost impressively bad description. This means that on each listing will be displayed like this:\n1 2 3 4  Permissions numOfLinks owner group size month date time name example: drwxr-xr-x 2 vega vega 4096 Jul 7 2018 Documents   So let\u0026rsquo;s break that up further. Linux permissions are incredibly powerful, and are set up like this\nd rwx rwx rwx , the d, or lack there of, species weather a file is a directory (folder) or file.\nLess commonly you may see l, c, or b, as we do here in the /dev folder.\nl is the easiest to understand, it\u0026rsquo;s a link or shortcut. That\u0026rsquo;s why you\u0026rsquo;ll see an arrow pointing to where it leads at the end\nc is a character special file, b is a special block file.\nFinally, you may also see either p or | here for named pipes- more about that in a bit too.\nThere are other possibilities here two, of which you can learn about by running info ls\nThe vast majority of the time you will only see d for a director (folder) or - designating a file though.\nMoving on to the rwx blocks, these stand for read, write, and execute respectively and each block in order states the permission of the owner of the file, those that are in the same group as the owner, and everyone else, for this reason these permissions will almost exclusively be set such that permissions are lost with each level, for example a file with\n-rwxr--r-- , is a file (no d), which may be read, written, or if it is a program ran (executed), by the owner, but by anyone else in the same group as the owner or anyone else on the system may only be read.\nThat\u0026rsquo;s why it repeats 3 times, there\u0026rsquo;s three access levels- Owner, Group, and Everyone Else. This mostly harkens back to when Linux boxes were shared servers at a university or business that everyone would remote into. You might want a file to only be modify-able (rw-) by you, only be readable (r--) by people in a shared group (Say, other students of the same class at a University or other managers at a business, etc.), and not even readable by others (---), this would give that file a total permission string of -rw-r-----. There are other uses of groups on systems too, usually for assigning who has access to hardware, like you may find that your user is in group called \u0026lsquo;audio\u0026rsquo; if you run the groups command.\nSo if we changed the permissions on that python file we wrote back in Chapter 2 to be this then while anyone else could see the code, they couldn\u0026rsquo;t run it without making a copy.\nwith that let\u0026rsquo;s skip over the number of links, as I\u0026rsquo;ve never found it particularly useful and jump to the owner and group fields. The owner of a file is a single user, usually the one who created it. The root user is often the owner of important system files, which is why we have to temporarily use root account when we do many admin actions, such as updating or installing programs using sudo.\n(note, yay calls sudo automatically and you should NOT run yay with sudo)\nNext is size, this is pretty self explanatory, as its just the size of the file. Directories do take some space on the disk as they have to store the bit of their own permissions, name, and so on. On this note, directories are a bit strange in regards to the \u0026lsquo;execute\u0026rsquo; flag that was previously mentioned. On a directory, rather than stating if a user can execute a directory (this wouldn\u0026rsquo;t make any sense!) it says weather or not a user can see what\u0026rsquo;s in the directory at all, almost like a lock on a file cabinet.\nNext is the file modification time, finally followed by the items name, both of which are self explanatory.\nTo round this off we need to talk about how to change these permissions using chown and chmod\nchown, as the name implies, changes the owner, note, you need to also have permission to change the owner, so often times this require using sudo as well.\nFor example running\n1 2  ‚ï≠‚îÄvega@lyrae ~ ‚ï∞‚îÄ‚û§ sudo chown vega:vega someFile   would change both the owner and group to me, vega (assuming I exist on your system)\nbut what if you want to change every file in a directory?\n1 2  ‚ï≠‚îÄvega@lyrae ~ ‚ï∞‚îÄ‚û§ sudo chown -R vega:vega someFolder   the -R flag (Recursive) means to apply the change to every sub folder and directory\nUsing chmod is pretty easy too, though there are two ways to use it.\nThe first, which is easier to understand is with direct flags such as\n1 2  ‚ï≠‚îÄvega@lyrae ~ ‚ï∞‚îÄ‚û§ chmod +x on a file to mark it as executable   The other uses the octal system to set flags. Octal has 3 bits:\n   Octal       Octal Binary Permission   0 000 \u0026mdash;   1 001 \u0026ndash;x   2 010 -w-   3 011 -wx   4 100 r\u0026ndash;   5 101 r-x   6 110 rw-   7 111 rwx    Now, you should notice some of those options are nonsenes? being able to write to a file you can\u0026rsquo;t read? being able to execute a file you can\u0026rsquo;t read? In practice this leads to only some of these being used, but I digress to use these in chmod simply run\n1 2  ‚ï≠‚îÄvega@lyrae ~ ‚ï∞‚îÄ‚û§ chmod 764 someThing   which would set permissions to -rwxrw-r\u0026ndash;\nFinally one last oddity. Using ls -la you\u0026rsquo;ll see two more files that are very strange one named \u0026lsquo;.\u0026rsquo; and another \u0026lsquo;..\u0026rsquo; ; \u0026lsquo;.\u0026rsquo; is actually the current folder, as bizzare as this sounds, effectively when you run a command with \u0026lsquo;.\u0026rsquo; as an argument it is replaced with the full path to the current folder. In practice this isn\u0026rsquo;t used much, but it means running something like cd . just takes you nowhere. I assure you are practical uses though. More relevant is \u0026lsquo;..\u0026rsquo; which is the previous directory. so if you\u0026rsquo;re currently in /a/b/c/d and you run cd .. you\u0026rsquo;ll be taken to /a/b/c\nTo round this conversation off , as previously mentioned, \u0026lsquo;~\u0026rsquo; represents your home directory. This usually means it expands out to /home/yourUsername which can be particualy helpful if you are say, in /dev and want to get to your documents folder you can use cd ~/Documents instead of cd /home/user/Documents\nWith all of that out of the way let\u0026rsquo;s finally look at /dev !\n/dev, the devices folder #  Alrighty then, first, a heads up. My /dev folder will have some things yours wont. I\u0026rsquo;m on a desktop with a lot of hardware, drives, input devices, etc. And I\u0026rsquo;ve installed hundreds of programs, some of which interface with the system at a low enough level to necessitate extra files in here. For that reason some are going to be skipped over. I\u0026rsquo;ll be breaking up the ouput of ls /dev into a bunch of code blocks below because of how ludicously large this output is.\n1 2 3 4 5 6 7 8 9 10 11 12 13  drwxr-xr-x 22 root root 4600 Feb 8 06:03 . drwxr-xr-x 18 root root 4096 Jan 26 22:05 .. crw-rw-rw- 1 root root 10, 56 Feb 8 06:03 ashmem crw-r--r-- 1 root root 10, 235 Feb 8 06:03 autofs crw-rw-rw- 1 root root 511, 0 Feb 8 06:03 binder drwxr-xr-x 2 root root 520 Feb 8 06:02 block drwxr-xr-x 2 root root 200 Feb 8 06:02 bsg crw------- 1 root root 10, 234 Feb 8 06:03 btrfs-control drwxr-xr-x 3 root root 60 Feb 8 06:02 bus lrwxrwxrwx 1 root root 3 Feb 8 06:03 cdrom -\u0026gt; sr0 drwxr-xr-x 2 root root 5700 Feb 8 06:03 char crw------- 1 root root 5, 1 Feb 8 06:03 console lrwxrwxrwx 1 root root 11 Feb 8 06:02 core -\u0026gt; /proc/kcore   \u0026lsquo;ashmem\u0026rsquo; is something that is on my system as a part of a project with the end goal of running android apps natively on linux called \u0026lsquo;anbox\u0026rsquo; it\u0026rsquo;s still in early development, and is very difficult to run on arch\n\u0026lsquo;autofs\u0026rsquo; is a configurable system for mounting and unmounting storage as it is used\n\u0026lsquo;binder\u0026rsquo; is another component of \u0026lsquo;anbox\u0026rsquo;\n\u0026lsquo;block\u0026rsquo; is a directory which contains numbered links to the file system blocks used previously (such as sda)\n\u0026lsquo;bsg\u0026rsquo; is a directory with files that, again, represent your drives at a hardware level. You can open the bsg folder and run ls followed by lsscsi and compare the outputs to understand. This is practically just an artifact of older systems now.\n\u0026lsquo;btrfs-control\u0026rsquo; is used when you have drives on the system formatted with the btrfs file system, this is a file system that is still in heavy development primarily targeted at storage arrays that are resilient to drive failures\n\u0026lsquo;bus\u0026rsquo; is a folder which contains a folder \u0026lsquo;usb\u0026rsquo; which contains folders for each usb host controller on the system, and then their devices. This is probably the first really cool one we\u0026rsquo;re hitting as you should already be able to see how the system is letting us get data directly. To show this we\u0026rsquo;ll need to have the usbutils package installed so that we can run lsusb. If you do that you should get an output like this\n1 2 3 4 5 6 7 8  Bus 006 Device 003: ID 2109:0812 VIA Labs, Inc. VL812 Hub Bus 006 Device 002: ID 2109:0812 VIA Labs, Inc. VL812 Hub Bus 006 Device 001: ID 1d6b:0003 Linux Foundation 3.0 root hub Bus 005 Device 005: ID 1235:007c Focusrite-Novation Launchkey MK2 49 Bus 005 Device 007: ID 0c45:6340 Microdia Camera ... Bus 005 Device 002: ID 1e7d:2e4a ROCCAT Tyon Black Mouse ...   I\u0026rsquo;ve added ellipsis to the output to make it fit here, but you can see there that my mouse is device 002 on bus 005. If you poke around in here it should be pretty obvious how these correlate. Note, that this is just where the system puts info about the device (it\u0026rsquo;s name, etc) not where the communication with the device actually happens (usually*). That\u0026rsquo;s over in /sys which we\u0026rsquo;ll get to more in depth in a bit, but for example here I could go to /sys/bus/usb/devices/5-2 and run cat product for example to get the human readable name \u0026lsquo;ROCCAT Tyon Black\u0026rsquo;.\n\u0026lsquo;cdrom\u0026rsquo; is actually a link to the new location of cdroms- sr0 , but, still, it\u0026rsquo;s use it pretty duh\n\u0026lsquo;char\u0026rsquo; is a folder which contains links to a lot of other things in /dev for use with legacy things\n\u0026lsquo;console\u0026rsquo; is again a legacy component and is effectively the same as tty, which is always the current terminal. to be explained more when we get to the tty\u0026rsquo;s\n\u0026lsquo;core\u0026rsquo; a link to /proc/kcore is a direct way to read memory, used mostly for debugging\n1 2 3 4 5 6 7 8 9 10 11  drwxr-xr-x 2 root root 60 Feb 8 06:02 cpu crw-rw---- 1 root realtime 10, 60 Feb 8 06:03 cpu_dma_latency crw------- 1 root root 10, 203 Feb 8 06:03 cuse drwxr-xr-x 8 root root 160 Feb 8 06:02 disk crw-rw----+ 1 root audio 14, 73 Feb 8 06:03 dmmidi4 ... crw-rw----+ 1 root audio 14, 121 Feb 8 06:03 dmmidi7 drwxr-xr-x 3 root root 140 Feb 8 06:03 dri crw------- 1 root root 242, 0 Feb 8 06:03 drm_dp_aux0 ... crw------- 1 root root 242, 4 Feb 8 06:03 drm_dp_aux4   \u0026lsquo;cpu\u0026rsquo; is a folder which contains a character file named mircocode. If you enable msr it can also allow you to r/w model specific registers. I don\u0026rsquo;t even know what this means. You\u0026rsquo;ll never work on this directly, moving on.\n\u0026lsquo;cpu_dma_latency\u0026rsquo; is something to do with making sure changing between power states (sleep) doesn\u0026rsquo;t take to long, otherwise the system will just refuse to do. Not used directly by anyone really\n\u0026lsquo;cuse\u0026rsquo; is fuse for character devices, ref fuse below\n\u0026lsquo;disk\u0026rsquo; is the way most modern things access the disk, with separate folders for by id, label, path, or uuid\n\u0026lsquo;dmmidi\u0026rsquo; is for MIDI or Musical Instrument Digital Interface devices. I have multiple on this system.\n\u0026lsquo;dri\u0026rsquo; contains links to your graphics cards, this is part of the direct rendering manager for video things (3D, games, etc)\n\u0026lsquo;drm_dp_aux\u0026rsquo; each represent an output from the GPU, so think of these as the actual cables between the monitor and the computer\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  crw-rw---- 1 root video 29, 0 Feb 8 06:03 fb0 lrwxrwxrwx 1 root root 13 Feb 8 06:02 fd -\u0026gt; /proc/self/fd crw-rw-rw- 1 root root 1, 7 Feb 8 06:03 full crw-rw-rw- 1 root root 10, 229 Feb 8 06:03 fuse crw------- 1 root root 254, 0 Feb 8 06:03 gpiochip0 crw------- 1 root root 254, 1 Feb 8 06:03 gpiochip1 crw------- 1 root root 240, 0 Feb 8 06:03 hidraw0 ------------------------------------------------------------------------------------ to make this output shorter I stripped out hidraw 1-5,10-12 ------------------------------------------------------------------------------------ crw-rw----+ 1 root root 240, 6 Feb 8 06:03 hidraw6 ------------------------------------------------------------------------------------ to make this output shorter I stripped out hidraw 7-9 ------------------------------------------------------------------------------------   \u0026lsquo;fb0\u0026rsquo; is your framebuffer - I can\u0026rsquo;t do this justice https://www.kernel.org/doc/Documentation/fb/framebuffer.txt, in practice you\u0026rsquo;re unlikely to ever use this, but it\u0026rsquo;s very good to know\n\u0026lsquo;fd\u0026rsquo; is for file descriptors, which are now in /proc this is part of how the system internally handles file reads and writes\n\u0026lsquo;full\u0026rsquo; literally just returns no space left when accessed, used to test how a program responds to a disk full error\n\u0026lsquo;fuse\u0026rsquo; Filesystems in User Space is a system which allows for interesting virtual drives (think things like GoogleDrive) to be accessible to the native system among other things. This is a very heavily used part of the system and worth a deeper look if you\u0026rsquo;re interested\n\u0026lsquo;gpiochip\u0026rsquo; is for general purpose input/output like with exposed pins that can be used on development board such as the raspberry pi\n\u0026lsquo;hidraw\u0026rsquo; is for raw communication with Human Interface Devices (mouse, keyboard, gamepad) and allows for custom drivers, like those necessary for RGB backlit keyboards\n1 2 3 4 5 6 7 8 9 10 11  crw-rw---- 1 root realtime 10, 228 Feb 8 06:03 hpet drwxr-xr-x 3 root root 0 Feb 8 06:03 hugepages crw------- 1 root root 10, 183 Feb 8 06:03 hwrng lrwxrwxrwx 1 root root 12 Feb 8 06:03 initctl -\u0026gt; /run/initctl drwxr-xr-x 4 root root 880 Feb 8 06:03 input crw-rw-rw- 1 root render 241, 0 Feb 8 06:03 kfd crw-r--r-- 1 root root 1, 11 Feb 8 06:03 kmsg crw-rw-rw- 1 root kvm 10, 232 Feb 8 06:03 kvm drwxr-xr-x 2 root root 60 Feb 8 06:02 lightnvm lrwxrwxrwx 1 root root 28 Feb 8 06:03 log -\u0026gt; /run/systemd/journal/dev-log crw-rw---- 1 root disk 10, 237 Feb 8 06:03 loop-control   \u0026lsquo;hpet\u0026rsquo; \u0026ldquo;High Precession Event Timer\u0026rdquo; is for internal timer-y things\n\u0026lsquo;hugepages\u0026rsquo; - read this https://wiki.debian.org/Hugepages , these are actually pretty important as they can make a large impact on performance, especially with virtual machines\n\u0026lsquo;hwrng\u0026rsquo; hardware random number generator, rarely used directly, often not trusted due to known faults, typically used though the soon to be mentioned \u0026lsquo;urandom\u0026rsquo; interface - https://main.lv/writeup/kernel_dev_hwrng.md\n\u0026lsquo;initctl\u0026rsquo; part of the init system, just dont touch it\n\u0026lsquo;input\u0026rsquo; is a directory which contains links to all input devices, going to /dev/input/by-id can explicitly tell you how some devices are connected, and can be a way to extract input form devices for input in your own programs\n\u0026lsquo;kfd\u0026rsquo; has little documentation- appears to be for AMD GPU accelerated compute\n\u0026lsquo;kmsg\u0026rsquo; is the i/o of dmesg which itself is the main system log\n\u0026lsquo;kvm\u0026rsquo; is the kernel virtual machine, used for running virtual machines. We\u0026rsquo;ll talk about this more much later.\n\u0026lsquo;lightnvm\u0026rsquo; use for NVMe drives\n\u0026lsquo;log\u0026rsquo; no shit, access using sudo journalctl\n\u0026lsquo;loop-contol\u0026rsquo; - http://man7.org/linux/man-pages/man4/loop.4.html, effectively used to mount images or or other file systems to be read as a separate block device\n1 2 3 4 5 6 7 8 9 10 11 12  drwxr-xr-x 2 root root 60 Feb 8 06:03 mapper crw-rw---- 1 root video 239, 0 Feb 8 06:03 media0 crw-r----- 1 root kmem 1, 1 Feb 8 06:03 mem crw------- 1 root root 10, 57 Feb 8 06:03 memory_bandwidth crw-rw----+ 1 root audio 14, 66 Feb 8 06:03 midi4 crw-rw----+ 1 root audio 14, 82 Feb 8 06:03 midi5 crw-rw----+ 1 root audio 14, 98 Feb 8 06:03 midi6 crw-rw----+ 1 root audio 14, 114 Feb 8 06:03 midi7 drwxrwxrwt 2 root root 40 Feb 8 06:02 mqueue drwxr-xr-x 2 root root 60 Feb 8 06:03 net crw------- 1 root root 10, 59 Feb 8 06:03 network_latency crw------- 1 root root 10, 58 Feb 8 06:03 network_throughput   \u0026lsquo;mapper\u0026rsquo; is primarily used for LVM systems, https://wiki.archlinux.org/index.php/LVM, which is used for more advance disk management but comes with disadvantages in complexity and inter-OS compatibility\n\u0026lsquo;media0\u0026rsquo; is the i/o file for a webcam\n\u0026lsquo;mem\u0026rsquo; is direct access to the system\u0026rsquo;s physical memory. This is dangerous. There\u0026rsquo;s almost no reason to do this directly, unless you\u0026rsquo;re writing a low level driver\n\u0026lsquo;memory_bandwidth\u0026rsquo; - as the name implies. Rarely used\n\u0026lsquo;midi\u0026rsquo; direct access to midi devices. Documentation on dmmidi vs midi unclear\n\u0026lsquo;mqueue\u0026rsquo; used for interprocess comunnication\n\u0026lsquo;net\u0026rsquo; contains virtual network adapters, will likely contain \u0026lsquo;tun\u0026rsquo; by default, used for interprocess communication in weird ways.\n\u0026lsquo;network_latency\u0026rsquo; and \u0026lsquo;network_thoughput\u0026rsquo; is primary used to specify current minimum necessary requirements for the network, used for power saving on wireless adapters\n1 2 3 4 5 6 7 8 9 10 11 12  crw-rw-rw- 1 root root 1, 3 Feb 8 06:03 null crw------- 1 root root 243, 0 Feb 8 06:03 nvme0 brw-rw---- 1 root disk 259, 0 Feb 8 06:03 nvme0n1 brw-rw---- 1 root disk 259, 1 Feb 8 06:03 nvme0n1p1 brw-rw---- 1 root disk 259, 2 Feb 8 06:03 nvme0n1p2 crw-r----- 1 root kmem 1, 4 Feb 8 06:03 port crw------- 1 root root 108, 0 Feb 8 06:03 ppp crw------- 1 root root 248, 0 Feb 8 06:03 pps0 crw------- 1 root root 10, 1 Feb 8 06:03 psaux crw-rw-rw- 1 root tty 5, 2 Feb 8 16:37 ptmx crw------- 1 root root 247, 0 Feb 8 06:03 ptp0 drwxr-xr-x 2 root root 0 Feb 8 06:03 pts   \u0026lsquo;null\u0026rsquo; literally just discards anything it receives. Useful when a command outputs junk when doing things, and getting rid of the junk. \u0026lsquo;/dev/null\u0026rsquo; is referred to regularly in jokes in technical circles\n\u0026lsquo;nvmexxxx\u0026rsquo; the system NVMe storage device(s), will only exist if you have an NVMe solid sate drive\n\u0026lsquo;port\u0026rsquo; used for direct access to i/o ports. Dangerous\n\u0026lsquo;ppp\u0026rsquo; point-to-point protocol. Similar to /net/tun - https://stackoverflow.com/questions/15845087/what-is-difference-between-dev-ppp-and-dev-net-tun\n\u0026lsquo;pps0\u0026rsquo; pule per second provides a pulse once per second\n\u0026lsquo;psaux\u0026rsquo; , ps provides a snapshot of currently running system processes, ps aux, where aux: \u0026lsquo;a\u0026rsquo; is all user processes, \u0026lsquo;u\u0026rsquo; is show user/owner, and \u0026lsquo;x\u0026rsquo; processes not attached to a terminal\n\u0026lsquo;ptmx\u0026rsquo;, pseudo terminal master/slave, used for virtual terminals, like the one\u0026rsquo;s you\u0026rsquo;ve been opening in KDE\n\u0026lsquo;ptp0\u0026rsquo; precession time protocol, links to realtime clock\n\u0026lsquo;pts\u0026rsquo; interval virtual filesystem, used for things like docker. Works closely with \u0026lsquo;ptmx\u0026rsquo;\n1 2 3 4 5 6 7 8 9 10  crw-rw-rw- 1 root root 1, 8 Feb 8 06:03 random crw-rw-r--+ 1 root rfkill 10, 55 Feb 8 06:03 rfkill lrwxrwxrwx 1 root root 4 Feb 8 06:03 rtc -\u0026gt; rtc0 crw-rw---- 1 root realtime 250, 0 Feb 8 06:03 rtc0 brw-rw---- 1 root disk 8, 0 Feb 8 06:03 sda brw-rw---- 1 root disk 8, 1 Feb 8 06:03 sda1 ... brw-rw---- 1 root disk 8, 96 Feb 8 06:03 sdg brw-rw---- 1 root disk 8, 97 Feb 8 06:03 sdg1 brw-rw---- 1 root disk 8, 98 Feb 8 16:37 sdg2   \u0026lsquo;random\u0026rsquo; waits for true randomness and will block things from finishing until enough entropy is generated\n\u0026lsquo;rfkill\u0026rsquo; kills all radio transmission on system\n\u0026lsquo;rtc\u0026rsquo; real time clock, direct access - we\u0026rsquo;ll talk more about real time clocks and time in networking.\n\u0026lsquo;sdxn\u0026rsquo; the \u0026lsquo;normal\u0026rsquo; representation of block devices like HDDs, SSDs, and flash drives to the system. Each number is a partition\n1 2 3 4 5 6 7 8 9 10 11 12  drwxr-xr-x 4 root root 80 Feb 8 06:03 serial crw-rw----+ 1 root optical 21, 0 Feb 8 06:03 sg0 crw-rw---- 1 root disk 21, 1 Feb 8 06:03 sg1 ... crw-rw---- 1 root disk 21, 7 Feb 8 06:03 sg7 drwxrwxrwt 2 root root 80 Feb 8 16:37 shm crw------- 1 root root 10, 231 Feb 8 06:03 snapshot drwxr-xr-x 4 root root 760 Feb 8 06:03 snd brw-rw----+ 1 root optical 11, 0 Feb 8 06:03 sr0 lrwxrwxrwx 1 root root 15 Feb 8 06:02 stderr -\u0026gt; /proc/self/fd/2 lrwxrwxrwx 1 root root 15 Feb 8 06:02 stdin -\u0026gt; /proc/self/fd/0 lrwxrwxrwx 1 root root 15 Feb 8 06:02 stdout -\u0026gt; /proc/self/fd/1   \u0026lsquo;serial\u0026rsquo; contains references to serial devices by id or path\n\u0026lsquo;sgx\u0026rsquo; are mostly just remaps of other devices for legacy support\n\u0026lsquo;shm\u0026rsquo; is for shared memory, to be passed between programs\n\u0026lsquo;snapshot\u0026rsquo; is used for hirenation\n\u0026lsquo;snd\u0026rsquo; sound devices raw access, legacy and probably will not work\n\u0026lsquo;sr0\u0026rsquo; used for optical media\n\u0026lsquo;stderr\u0026rsquo; is the standard error interface, try echo 1 \u0026gt; /dev/stderr - you should see an error return code depending on your terminal setup\n\u0026lsquo;stdin\u0026rsquo; is the standard input interface, try echo hello | cp /dev/stdin /dev/stdout\n\u0026lsquo;stdout interface, try echo hello \u0026gt; /dev/stdout\n1 2 3 4 5 6 7 8 9  crw-rw-rw- 1 root tty 5, 0 Feb 8 15:49 tty crw--w---- 1 root tty 4, 0 Feb 8 06:03 tty0 ... crw--w---- 1 root tty 4, 63 Feb 8 06:03 tty63 crw-rw-rw- 1 root uucp 166, 0 Feb 8 06:03 ttyACM0 crw-rw----+ 1 root tty 4, 64 Feb 8 06:03 ttyS0 crw-rw----+ 1 root uucp 4, 65 Feb 8 06:03 ttyS1 crw-rw----+ 1 root uucp 4, 66 Feb 8 06:03 ttyS2 crw-rw----+ 1 root uucp 4, 67 Feb 8 06:03 ttyS3   TTY\u0026rsquo;s, these are important: #  \u0026lsquo;tty\u0026rsquo; the currently active terminal, try echo 1 \u0026gt; /dev/tty\n\u0026lsquo;ttyx\u0026rsquo; are virtual consoles accessible though ctrl+alt+fx, where fx is a function key. You should ben on tty7 by default (maybe? if not you might have to use ctrl+alt+fx on each number until you find your graphical environment again), go ahead and try it now. Note you may need to hold the \u0026lsquo;fn\u0026rsquo; key as well depending on your keyboard.\n\u0026lsquo;ttyACMx\u0026rsquo; or \u0026lsquo;ttyUSBx\u0026rsquo; are attached USB devices that can be accessed as a virtual terminal. This is mostly used for development boards, and we\u0026rsquo;ll be using this later\n\u0026lsquo;ttySx\u0026rsquo; are serial port terminals, rarely used outside of scientific or server gear. The physical connector usually looks similar to VGA cable. Your motherboard may well have a serial port header for adding this even if you don\u0026rsquo;t physically see one available on the outside of the case\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  crw------- 1 root root 10, 61 Feb 8 06:03 udmabuf crw------- 1 root root 10, 239 Feb 8 06:03 uhid crw-rw-rw-+ 1 root root 10, 223 Feb 8 06:03 uinput crw-rw-rw- 1 root root 1, 9 Feb 8 06:03 urandom drwxr-xr-x 2 root root 200 Feb 8 06:03 usb crw------- 1 root root 10, 240 Feb 8 06:03 userio drwxr-xr-x 4 root root 80 Feb 8 06:03 v4l crw-rw---- 1 root tty 7, 0 Feb 8 06:03 vcs crw-rw---- 1 root tty 7, 1 Feb 8 06:03 vcs1 ... crw-rw---- 1 root tty 7, 7 Feb 8 06:03 vcs7 crw-rw---- 1 root tty 7, 128 Feb 8 06:03 vcsa crw-rw---- 1 root tty 7, 129 Feb 8 06:03 vcsa1 ... crw-rw---- 1 root tty 7, 135 Feb 8 06:03 vcsa7 crw-rw---- 1 root tty 7, 64 Feb 8 06:03 vcsu ... crw-rw---- 1 root tty 7, 71 Feb 8 06:03 vcsu7   \u0026lsquo;udmabuf\u0026rsquo; Uniform Direct Memory Access Buffer https://github.com/ikwzm/udmabuf, you probably don\u0026rsquo;t care\n\u0026lsquo;uhid\u0026rsquo; for Human Interface Device stuff on the system side, you shouldn\u0026rsquo;t mess with this\n\u0026lsquo;uinput\u0026rsquo; https://www.kernel.org/doc/html/v4.12/input/uinput.html, basically you can fake a keyboard or mouse in your program\n\u0026lsquo;urandom\u0026rsquo;, the main source of random numbers. give it a shot but running head -5 /dev/urandom\n\u0026lsquo;usb\u0026rsquo; folder which contains character devices to the HID inputs, used by the system\n\u0026lsquo;userio\u0026rsquo; mostly used for laptop touchpad drivers\n\u0026lsquo;v41\u0026rsquo; part of the video subsystem\n\u0026lsquo;vcsx\u0026rsquo; virtual console memory, used when running a terminal emulator\n\u0026lsquo;vcax\u0026rsquo; virtual console stuff\n\u0026lsquo;vcsux\u0026rsquo; virtual console stuff\n1 2 3 4 5 6 7 8  drwxr-xr-x 2 root root 60 Feb 8 06:03 vfio crw------- 1 root root 10, 63 Feb 8 06:03 vga_arbiter crw------- 1 root root 10, 137 Feb 8 06:03 vhci crw-rw----+ 1 root kvm 10, 238 Feb 8 06:03 vhost-net crw------- 1 root root 10, 241 Feb 8 06:03 vhost-vsock crw-rw----+ 1 root video 81, 0 Feb 8 06:03 video0 crw-rw----+ 1 root video 81, 1 Feb 8 06:03 video1 crw-rw-rw- 1 root root 1, 5 Feb 8 06:03 zero   \u0026lsquo;vfio\u0026rsquo; is used for passing hardware directly to virtual machines, often massively improving performanec\n\u0026lsquo;vga_arbiter\u0026rsquo; if you still have a computer that uses vga I\u0026rsquo;m sorry. This almost certainly doesn\u0026rsquo;t matter to you even if you do: https://www.kernel.org/doc/html/v4.16/gpu/vgaarbiter.html\n\u0026lsquo;vhci\u0026rsquo; used for passing though usb devices to virtual machines\n\u0026lsquo;vhost-net\u0026rsquo; \u0026amp; \u0026lsquo;vhost-vsock\u0026rsquo; used for virtual machine networking\n\u0026lsquo;videox\u0026rsquo; the graphics adapter in the system. Most systems will have only one, some will have two, very, very rarely you may have more.\n\u0026lsquo;zero\u0026rsquo; generates an infinite stream of zeros. Used for generating test files of arbitrary size, among other things.\nAnd That\u0026rsquo;s it, congrats. Now lets go to /proc\n/proc, the fake file system #  /proc doesn\u0026rsquo;t really exist, it\u0026rsquo;s a memory only system used primarily for information about processes, hence the name.\nhttps://www.tldp.org/LDP/sag/html/proc-fs.html \u0026amp; https://linux.die.net/man/5/proc\nLet\u0026rsquo;s dig in by hand a bit though, lets start by opening a terminal and running cd /proc\nif you run ls you\u0026rsquo;ll see a bunch of numbers followed by some strange things, like uptime\nlet\u0026rsquo;s start with the not-number things. We\u0026rsquo;ve already seen cpuinfo and meminfo, but there\u0026rsquo;s other stuff in here too. Running cat uptime will tell us how many seconds the system has been powered on for, for example. A lot of things in here are bit hard to understand, but things like \u0026lsquo;uptime\u0026rsquo; and \u0026lsquo;loadavg\u0026rsquo; can be legitimately useful in our own programs. running cat loadavg you\u0026rsquo;ll see some numbers that represent how much load the system is under. You can use the above links to learn more, but now we\u0026rsquo;re going to dive into the juicy bits!\nBefore we do so though, let\u0026rsquo;s grab a program that will make our lives a bit easier called \u0026lsquo;htop\u0026rsquo;, just use yay to install it.\nonce it installs go ahead and open it up\nyou should see something like this:\nThis is a super powerful equivalent to task manager from windows. You can see the load on all 16 of my cpu threads, the memory usage on the system, uptime, loadavg, and number of tasks running here, but best of all we can see a nice tree of all the processes, and how each one of them is impacting the system. (you may need to press f5 to put it in tree mode) From here you can also see the Process\u0026rsquo;s ID known as the PID, these numbers should directly corolate with those visable in /proc\nLeaving that windows open lets open up two more terminals, in one navigate to /proc and in the other start up python:\nfrom here go back to the window running htop and use f3 to search for python if there are multiple processes that come up just keep pressing i3 until you find one that has a tree that looks like:\n(note your terminal will probably be named either konsole or xterm, not deepin-terminal)\nand look to the left to find the pid of the running python process, in my case it\u0026rsquo;s 754.\nGo over to the terminal where you navigated to /proc and now navigate to the folder with the id of your process, in my case i\u0026rsquo;d run cd 754 then run \u0026lsquo;ls\u0026rsquo; and look at everything in this folder:\nnow, we\u0026rsquo;re gonna run one more thing before we leave, and we\u0026rsquo;ll come back to it later, but I want to show you now, so you can appreciate how cool it is later: go ahead and run sudo cat stack\nyou should see something like:\nbut when we run this in the python terminal:\n1 2  while(1): 1+1   and read the stack again we\u0026rsquo;ll see:\nWhich while may not look overly interesting, I assure you will be something of interest later.\nOne interesting processed to note in here is the process numbered \u0026lsquo;1\u0026rsquo; which, if you look back in htop, you\u0026rsquo;ll see is the init process. This means it\u0026rsquo;s actually possible to look at a mountain of deails about the init process, which we\u0026rsquo;ll talk about in a bit.\nBefore we leave /proc, look back up at all the file that each process has and take note, also notice how some of these relate to what we saw in /dev\nTake a breather,\nAs you can see, Linux gives us a lot of raw access to hardware. There are no training wheels here. While you can use Linux the exact same way you used windows: watch YouTube videos, open a graphical file manager, etc, you can also get down to the nitty gritty of the OS.\n/bin, /sbin, /lib, /lib64 #  [TODO]\nsymbolic links to usr explanation\n/sys #  echoing to change settings, probabaly focus on device\n/usr #  [TODO]\nShare, man, local, var\n/boot #  [TODO]\nboot loaders, init, initrd fs?\n/etc #  \u0026hellip; and etc.\nLiterally. the etc folder contains system configuarion files mostly. Remember back when we installed and you used nano /etc/fstab that was editing the list of file systems that the system loads at boot, a configuration file. When we configure SSH later, it\u0026rsquo;s config files are stored here too. Basically, most of the admin level system config files and default config files (lower priority than the config by the user) files are here. As you learn about your system and tweak things you\u0026rsquo;ll find yourself in this folder rather often. [TODO, add chapter links]\nSome of the more interesting things in /etc are:\n /ca-certificates/ \u0026ndash; we\u0026rsquo;ll talk about these more in networking [TODO] /conf.d/ \u0026ndash; various system default config files for system services /cron.d/,/cron.daily/,/cron.hourly/, etc. are all form the cronie package which can be installed then enabled with systemd. Note, systemd timers are a built in way to do the same thing. cron is the \u0026lsquo;old\u0026rsquo; way of doing thing, but is super simple to use /crypttab is the similar to /fstab but for encrypted partitions /cups is a folder used by cups, which is the backend used for printers in linux /dbus-1/ is used by dbus which is a backend for interprocess communication in linux /dconf/ is a folder used by dconf wich is used to store config settings. dconf is a cli tool for changing these settings /gconf/ \u0026ndash; gconf is very similar to dconf but outdated. Still used by somethings though. /dnsmasq.conf is used by dnsmasq, which will be discussed in networking [TODO] /default/ stores default configuration files, typically these get overriden elsewhere by the user /dhcp_fingerprint.conf,/dhcpcd.conf,/dhcpd.conf, and /ducpd6.conf are all part of dhcpcd and dhcp, used for reciveing DHCP information. This is dicussed further in the networking chapter [TODO] /dkms/framework.conf is used to configure dkms or Dynamic Kernel Module Support which is used to load modules for the kernel without building the kernel from source. In practice this means drivers for various hardware can be loaded even if it\u0026rsquo;s not in the linux source tree. Read more here: https://www.linuxjournal.com/article/6896 /envrioment is a configarating file for pam_env files. Basically, enviroment variables that you want to be loaded at boot can be put here. For example to change the defalut editor used by command line programs you can set EDITOR=vim or EDITOR=nano or whatever you like here. /ethertypes is a file listing various ethernet protolcols, we\u0026rsquo;ll come back to this in the networking chapter [TODO] /exports is used to setup NFS shares, again, in networking [TODO] /firewall.d/,/gufw/ are where firewall settings are stored, dependant on the firewall progarm used /fonts/ holds your fonts, go figgure. You\u0026rsquo;ll need to update the font database if you install things manually: https://wiki.archlinux.org/index.php/Fonts#Manual_installation /foremost.conf is used by the foremost package, it contains information about file headers, footers, and data structures for file recovery purposeses. For example, if you have a backup .img file of a failing hdd and need to scan for .jpg file headers to recover images /freeipmi/ contains config files for Intelligent Platform Managment Inferface Modules. We\u0026rsquo;ll talk about this more in servers [TODO], but essentially it\u0026rsquo;s a way to, using server hardware, set BIOS settings, monitor hardware, and turn the system on/off remotely. /freetds/,/mysql/,/sqlmap.conf,/odbc.ini,ODBCDataSources,and odbcinst.ini all have to do with databases and database connectivity. [TODO_Ch17] /fstab/ short for file system table contains a table of file systems to be mounted at startup and options they should have. Settings here can dramatically effect fs performance or cause your system not to boot, so make sure you know what you\u0026rsquo;re doing. Even if your system doesn\u0026rsquo;t boot because of something here, you should land in an emrgancy shell where you can edit /etc/fstab and fix the mistake /fuse.conf is the config file for fuse, which is dicussed below in file systems. /gdb/gdbinit \u0026ndash; you probably want to put the global gdb config file at ~/.gdbinit not here in /etc. gdb is discussed more in debugging [TODO_Ch18] /group is where linux user groups are defined. You probably want to use the groups,groupadd,groupdel,groupmems, and groupmod commands. /grub.d/ contains config files and boot loader entries for the grub bootloader. Not relevent if you\u0026rsquo;re using systemd boot on a UEFI system /gshadow contains encrypted passwords for each group. !! and ! both indicated no password, though !! is no password has been set before /healthd.conf used to notify if hardware has an issue (temp, fan, etc) \u0026ndash; provided by lmsensors /host.conf \u0026amp; /resolv.conf are used for resolver configuration. More in networking [TODO] /hosts local host configuration file. Very useful, in networking again [TODO] /httpd/, and specifically /httpd/conf/httpd.conf is used to conigure a local web server like Apache. Refrenced in Networking [TODO] and Servers [TODO]  /home, /mnt, /run #  [TODO]\ndiscuss systemd taking over home soon\nUsers and Groups #  [TODO]\npermissions discussed eariler, recap here\nDrivers \u0026amp; Kernel Modules #  [TODO] Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum sit amet lacus convallis, finibus neque sit amet, iaculis neque. Nulla consectetur nulla at magna condimentum, sed bibendum risus finibus. Nulla cursus felis vitae odio porttitor ultricies. Aenean mollis est non lorem facilisis, vitae blandit purus accumsan. Sed vitae neque pharetra libero elementum maximus. Quisque vel euismod sem. Nullam eget bibendum arcu. Nulla facilisi. Vestibulum vulputate libero lorem, nec blandit nibh suscipit vitae. Suspendisse laoreet vitae arcu non ornare. Nam aliquet lorem vitae mollis facilisis. Aliquam non accumsan libero, nec consequat ex. Duis dolor urna, facilisis non iaculis vitae, sagittis ut justo. Nulla porta turpis bibendum posuere elementum. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae;  Art by @monoxromatik, made for @Freixfox   https://github.com/orhun/kmon\n[TODO]\nudev rules\nFile systems #  [TODO]\nInodes, Raid, fuse, ext4, ntfs, zfs, tmpfs, fat/fat32/exfat, \u0026hellip;\ninclude bit about named pipes\nmknod\nhttps://wiki.maemo.org/Modifying_the_root_image\nProcesses and Memory #  [TODO]\nloading libs, forks, env variables, process ownership\nlsof, strace, ltrace, nice levels\nSystem Calls #  [TODO]\nhttps://github.com/microsoft/ProcMon-for-Linux\nstart with a syscall table\nKernel Parameters #  [TODO]\nmodprobe\nSystemD and alternatives #  [TODO]\ninit system: https://www.lifewire.com/how-to-use-the-init-command-in-linux-4066930\nSchedulers #  [TODO]\n+real time kernel/preemption\nDbus #  [TODO]\nhttps://github.com/KnowNo/How-Linux-Works-2nd-Edition/blob/master/How.Linux.Works.What.Every.Superuser.Should.Know.2nd.Edition.PDF.pdf\nWe\u0026rsquo;ll explore more of the OS later, but for now I think the information overload is a bit much anyway, so lets move away from screens and into the world of hardware\n"});index.add({'id':36,'href':'/engineering/5-circuits1/','title':"5 Circuits1",'section':"Engineering",'content':"Chapter 5 - Intro to Angry Pixies #  A simple guide to electronic components (YouTube)\nThe Tools of the Trade #  Building, fixing, and analyzing circuitry requires the use of a few tools and appliances. While there are many more than those listed here, these are the most important ones and should be all you need for most even very advanced applications.\nThe Multimeter #   note, the above video uses U=IR instead of V=IR like \u0026lsquo;normal\u0026rsquo;. You\u0026rsquo;d think that engineers could just get along and pick consistent symbols, but, nope. The \u0026lsquo;normal\u0026rsquo; V (voltage) = I (current) * R (Resistance) is often E=IR [TODO] textual description of all multimeter functions\nResistance and the OHM meter #  resistors do one thing- resist current. Using the ohm meter function of your multimeter you can find out the amount of this resistance measured in ohms (ohms are represented with a capital omega, Œ©) using an ohm meter is simple, just poke and prod with at least one component in between the leads. If there\u0026rsquo;s nothing in between - that is the leads are touching one another- there will be no resistance, if there\u0026rsquo;s no way for a DC voltage to get from one point to the other, that will be infinite or \u0026lsquo;overload\u0026rsquo; resistance\nVoltage, Ground, and the Volt Meter #  Voltage can be thought of as the \u0026lsquo;pressure\u0026rsquo; in a hose. However, this pressure is relative to another point, the point we usually take reference to is called \u0026lsquo;ground\u0026rsquo;, though this doesn\u0026rsquo;t have to be the case- you can measure the voltage across a single resistor or other component too. Just remember measuring the voltage with both probes at point or along the same wire doesn\u0026rsquo;t make sense because a volt meter only tells you the voltage difference between two points. This would be like seeing the pressure difference in hose between two nearby points, obviously the pressure of one point minus the other will be 0.\nIn general there are two primary ways you will work with voltage- AC or DC, these stand for Alternating Current and Direct Current. DC is simply a constant voltage level output. AC on the other hand is any time varying signal, usually periodic (repeating) and most commonly a sine, though many other waves are used like square, triangle, saw, and any mixture of these, including the same signal with a DC offset. Not here that AC is technically referring to the current having this shape and not the voltage, it\u0026rsquo;s just that in the basic scenario with a constant load, the current and voltage waves will look the same    Your multimeter will likely have two different settings for measuring voltage, one for DC and one for AC. Of note, most inexpensive multimeters are not true RMS (Root Mean Square) meters, meaning the reading of AC voltage is not an accurate measure of how much energy the wave can deliver unless it\u0026rsquo;s a clean, no DC offset sine wave. Imagine a square wave like the above, with the same height, but where the the peaks are thinner, with longer periods of rest in between (this is known as having a lower duty cycle), in this case the wave would still have the same Voltage Peak-to-Peak (Vpp) value but on average wouldn\u0026rsquo;t be able to carry as much energy. That\u0026rsquo;s where RMS comes in, it is effectively the measure of how much energy that waveform can deliver and is much, much more useful in general. RMS is a topic we\u0026rsquo;ll be covering later, but to wet your apatite, this from Wikipedia may help:  https://en.wikipedia.org/wiki/Root_mean_square\n  Of note, from a mathematical perspective all time varying signals can be represented as an infinite number of sine waves added together, this is actually used to do practical computation in many things, and what is used if you ever want to get into digital signal processing. I only mention it here because I foresee it being a rabbit hole someone could fall down when trying to gronk what RMS is. Again, we\u0026rsquo;ll talk more about all of this latter, so I\u0026rsquo;m going to move on for now.\nhttps://en.wikipedia.org/wiki/Fourier_series#Examples\nIf you\u0026rsquo;re feeling really adventurous Chapter 7, Section 11 has more resources on this topic\nCurrent and the Ammeter #  If current is the pressure in the hose, then current is how much water actually flows. This analogy holds up too, because if we use a resistor to kink the hose and the flow is restricted the current will go down. If you were to stick a wire directly into the wall outlet all the current the wall can give will try to flow though, but it can be restricted. To measure the current though a circuit we can\u0026rsquo;t just probe between two points as before though. Instead the probes need to form the exclusive path that part of the circuit can flow through.\nIn practice this means the wire you want to measure current through would need to be cut and the ammeter\u0026rsquo;s probes hooked up at either end, making the meter part of the circuit.\nCurrent, just like voltage, can vary, and in AC circuits usually does. This leads to some more interesting cases like power factor, but we\u0026rsquo;ll get to that later.\nContinuity Tester #  The continuity tester does exactly what it\u0026rsquo;s name implies, it makes sure two points are connected electrically. If you have a piece of metal and put both probes on it it should beep, but if you put the probes on rubber, they clearly will not be. The continuity tester isn\u0026rsquo;t really much different from the ohm meter in operation, and many will actually display the resistance if there is any. The main use is that it beeps when the resistance is low enough to be confident two points are electrically connected.\n[TODO] day to day use, why you want one #  OHM\u0026rsquo;s Law #  + with power wheel\nThe Lab Power Supply #  Power Supply Units or \u0026lsquo;PSU\u0026rsquo;s are useful because unlike your phone charger which puts out a singular voltage of 5 volts (ignoring fast charging) they can have their output voltage varied usually between 1 and 35-ish volts. Furthermore, they provide current limiting, useful when you\u0026rsquo;re unsure of how much current your circuit might sink or need it for safety.\n[TODO] add picture, mention ATX psu, current safety\nThe Frequency or Waveform Generator #  Frequency generators can be used to output a signal that is alternating, unlike the DC signal of the Lab PSU. Usually they\u0026rsquo;ll support a range of wave shapes, frequencies, amplitudes, and DC offsets. Many support far more than this, though the applications for the more advanced modes are few. If you\u0026rsquo;re just starting out you can (with precausions) actually just use the audio output of your computer or buy an inexpensive one for under $20, unlike the expensive example below:\nhttps://en.wikipedia.org/wiki/Arbitrary_waveform_generator\nThe Oscilloscope #  The oscilloscope (or OScope or simply Scope) allows you to see an AC signal and how it varies over time as a plot of Voltage on the Y axis and time on the X, Most OScopes will allow you to look at multiple signals at once, with one overlaid on the other. Furthermore, most support X-Y mode, where the plot is actually the voltage of one input as the X axis and the voltage of another as the Y, moving a dot and it\u0026rsquo;s trail around the screen. In fact, this is how the first computer monitors worked:\nModern OScopes look much different than their phosphorescent green ancestors though:\nHowever, a decent \u0026lsquo;Digital Storage Oscilloscope\u0026rsquo; or DSO like the one above run a minimum of $300 at the time of writing, so many hobbyist opt for older scopes like this one:\nor a cheap, low resolution, low speed one from Ebay. For most uses, both of these will be perfectly fine. For just starting out though I\u0026rsquo;d recommend a logic analyzer (I\u0026rsquo;ll talk about that next) and oscilloscope combo tool, like the LHT00SU1 The which can be found on Ebay pretty easily. Be aware they can fry your USB port or worse though.\n[TODO] updated recommendations with DSLogic from Ebay and a cheap scope\nBut what are these actually used for day to day, and why would you want one? [TODO]\nQuake on an oscilloscope (YouTube)\nThe Logic Analyzer #  Logic Analyzers\u0026hellip; analyze logic. Who knew? But what does that mean? Well, in reality they are somewhat similar to an oscilloscope in that they show a voltage over time, the difference is they only show either on or off over time based on the set TTL (Transistor‚Äìtransistor logic) voltage. This lets you eavesdrop on the digital communication going on over a wire. Here\u0026rsquo;s an example output:\nIn this particular encoding, the longer high bumps represent a 1 and the short high bumps a 0, so you\u0026rsquo;re looking at the binary that was sent over a wire. It\u0026rsquo;s actually pretty rare that a wire sends raw high for a 1 and low for 0 so other schemes, like the one above, are used. For most schemes the software can actually be used to decode the received data into raw binary or if it was human readable characters even that.\nUsing a logic analyzer is pretty simple, most today are connected to your computer over USB and then use software like Pulseview as shown above, then you just select the sample rate (how many times per second to check the wire, here 1MHz) and the number of samples to collect and hit start. You may want to setup a trigger too (speaking of, it\u0026rsquo;s worthwhile to look up how triggering works on an OScope [TODO]) Most logic analyzers support 8 or more simultaneous data streams, though in the picture above I\u0026rsquo;m only using one.\n[TODO] explain when a logic analyzer is actually used, and look at a quick example decode\nSoldering #  https://www.digikey.com/en/maker/blogs/rohs-vs-non-rohs-soldering\nSoftware Simulation #  [TODO]\nCircuit Simulator\nSimulide\nVCV Rack?\n[TODO- following title needs split up, possibly new chapter?]\nOHM\u0026rsquo;s law, Nodal \u0026amp; Mesh Analysis, Superposition, Thevanins #  [TODO]\nResistors #  [TODO]\npotentiometer read from aduino full range (center tap or max resitor)\nCapacitors #  [TODO]\nTrue, Reactive, Apparent \u0026amp; Deformed Power\nWhy electrolytic capacitors are actually kinda shitty üí© (YouTube)\nIdeal Capacitor\u0026rsquo;s aren\u0026rsquo;t real\nInductors #  [TODO]\nRGB LED, Inductively Powered, Frequency Controlled (YouTube)\nMotors\nTransformers, Variacs #  World\u0026rsquo;s Most Powerful Pancake Slayer Tesla Coil? Melts Copper! (YouTube, Plasma Channel)\n[TODO]\nButtons, Switches, and Knobs #  [TODO] SPST DPST etc. Pots V encoders, encoders with buttons, slider pots. (inc motorized) etc.\nRelays #  [TODO] solid state vs old school\nFilters #  [TODO]\nPassive V Active\nDecibels #  [TODO]\nHow to read logarithmic first\nlog-scales demo in uPlot (github)\nFurther Reading #  [TODO]\nhttps://learn.sparkfun.com/tutorials/voltage-current-resistance-and-ohms-law/voltage\nhttps://en.wikipedia.org/wiki/Transmission_line\n"});index.add({'id':37,'href':'/engineering/6-howwework/','title':"6 Howwework",'section':"Engineering",'content':"Chapter 6 - Let\u0026rsquo;s work on how we work #  The Terminal #  In the world of programming, embedded development, and electrical debugging you will inevitably need to understand how to use a terminal/command line at some point. While the text only interface can look intimidating, it has some clear advantages. Namely it\u0026rsquo;s significantly faster to use the cli or \u0026lsquo;command line interface\u0026rsquo; version of many tools. Because of the nature of this guide you will be using the terminal frequently, so for convince sake information on using it effectively has been moved to Appendix A, though I highly recommend you read though it now.\nAt bare minimum, I recommend getting autojump (j) setup early as it makes navigating around the terminal much faster, bat makes reading code though cat not suck, and tldr will save you time when you forget how to use tar. Set these up early if nothing else. But really, there\u0026rsquo;s a lot in Appendix A that I think is really cool. Do check it out.\nHeads up, #  With that out of the way, I want to preface this chapter with a big warning: Getting used to everything we\u0026rsquo;re about to do will be a pretty big leap. There\u0026rsquo;s a good chance you\u0026rsquo;ve never used a computer that works in a way like we\u0026rsquo;re going to be setting up, but it\u0026rsquo;s what I and many of my friends use daily and for good reason. This is probably where more opinions are going to show than anywhere else.\n[TODO] pacman -Qi , pacman -R\nCode editors #  People get defensive about the way they work, and frequently try to claim theres is the best way. I personally see value in multiple of them, but also understand how setting down with just one and getting very fast with it may have it\u0026rsquo;s appeal. I have three recommendations for code editors, as silly as that may seem.\nThe first two are terminal based nano and vim,\nnano, is the most simplistic of all the editors I\u0026rsquo;ll list here. It\u0026rsquo;s stupid simple to use and for quick just opening a text file and changing one line, probably the fastest. It clearly prints it\u0026rsquo;s instructions at the bottom of the terminal:\nwhere ^ is the ctrl key, and M the alt key. However, you\u0026rsquo;ll quickly find nano rather limiting, so onto vim!\nVim, with Spacevim (spacevim.org) ontop is a very powerful tool.\nVim can do everything you could ever dream of, and probably a bit more, and with spacevim ontop, it\u0026rsquo;s a powerhouse. Unfortunately, vim is regularly the butt end of a joke becaue of how nutoriously difficult it is to get the hang of. For that reason I\u0026rsquo;m going to link a mini tutorial here: https://www.openvim.com/, and link https://spacevim.org/documentation\nGraphically I recommend Visual Studio Code with Platform IO(1), Bracket Pair Colorizer 2, and GitLens. If you\u0026rsquo;re looking for more extensions than that, there\u0026rsquo;s also a version of Asciiflow for VSCode, pleanty of extensions for live rendering (live-p5, glsl-canvas, Processing Language)\nThis gives you a pretty kick butt editor on bar with most full Integrated Development Environments or IDEs. I recommend you try out IDEs, especially if for some unholy reason you want to write in Java, but otherwise this will do fine.\nThere are of course a ton of other options, emacs, ox, Atom, \u0026hellip; If these don\u0026rsquo;t suit you, feel free to look into others.\nThe Desktop Environment #  This is the biggest change, I\u0026rsquo;m going to recommend switching from KDE, which we installed when we setup arch, to i3. i3 is a tiling window manager, this means it looks something like this:\nThis is with 3 windows open: Marktext (the program I\u0026rsquo;m writing this in), a file manager, and an terminal I used to launch the program (scrot) to take the screenshot. What\u0026rsquo;s cool about i3 is how it will always use space as efficiently as possible by tiling the windows, and you can navigate between the windows (or multiple monitors) entirely by keyboard (mouse still works obviously) and open multiple virtual workspaces. When programming and using a computer for advanced things it\u0026rsquo;s not uncommon to have a dozen windows open and having things organized like this can be a life saver.\ni3, when first installed, is very, very minimal, it will greet you with a plain black bar and clicking with either mouse button anywhere will do nothing. You should, however, be able to open a terminal by using your modkey (probably the windows or alt key) and enter.\ni3 actually comes in a bunch of separate parts, the most important of which are the window manager itself, the status bar, and the task runner.\nThe window manager is the thing that actually manages the windows, this is the part most people are referring to when talking about i3 (assuming they\u0026rsquo;re not talking about an i3 Intel CPU) and is sometimes refereed to as i3wm. A very popular \u0026lsquo;fork\u0026rsquo; of i3 is i3-gaps which is available in the community repository.\nOn top of the raw window manager you\u0026rsquo;ll probably want a status bar of some kind. While the default i3bar which is included with the i3-gaps package is fine when paired with i3status, it does leave a bit to be desired. Many other options are available. I personally use polybar though I have friends that have used lemonbar ori3blocks.\nFinally you\u0026rsquo;ll want a runner/application launcher. While i3-demu is included, I find it rather annoying to use, and much prefer rofi \u0026ndash; this is much better explained here than I can briefly: https://github.com/davatorium/rofi\nTo further make i3 reasonable to use you\u0026rsquo;ll want a few more things:\npicom is a composite manager. This is used to allow application to have some transparency, prevent screen tearing, and do slight effects, like but a shadow behind windows.\nlxappearance-gtk3 can be used to set the theme used by various graphical applications. I use Sweet but there are nearly endless options\nFor setting the wallpaper (which you probably wont see much) you can use nitrogen or feh\nif you have multiple monitors before setting the wallpaper though you\u0026rsquo;ll probably want to arrange your monitors correctly, for this you can use xrandr , read the man page for more information. You can add the command you use to set up your displays to your i3 config file to apply them at each reboot\nif you have a high resolution monitor and things are small, you may want to look here: https://wiki.archlinux.org/index.php/HiDPI , the best thing from this is to add the text on the right to your /etc/environment file.  1 2 3 4  QT_QPA_PLATFORMTHEME=qt5ct QT_AUTO_SCREEN_SCALE_FACTOR=1 GDK_SCALE=2 ELM_SCALE=1.5      You\u0026rsquo;ll be needing quite a few different utilities beyond this. for a terminal I highly recommend kitty, rxvt-unicode, or Alacritty.\nFor fonts you\u0026rsquo;ll certainly have your own tastes, but I really like Droid Sans Mono, which is in ttf-droid, but ttf-hack and otf-fira-code are pretty cool too. I also recommend installing noto-fonts, noto-fonts-extra, and ttf-font-awesome. The noto packages will provide coverage for weird characters and font awesome is basically icons saved as a font, and many open source projects use it.\ninside your i3 config file you may want to set specific actions to take place based on a window\u0026rsquo;s name (bind all social applications to a social workspace for example) to do this you\u0026rsquo;ll need to get the windows class using a tool like xprop\nIf you\u0026rsquo;re looking for more ways to make your setup the best it can be or config files you can steal from check out r/unixporn.\n[TODO] https://github.com/mjswensen/themer\nThe Physical Environment \u0026amp; Hardware #  Working on a laptop with a mushy membrane keyboard is totally fine for some people, but when you\u0026rsquo;re deep into some complicated work having the best possible setup can save a lot of time, frustration, and mental overhead.\nFurthermore, the work environment can change how long you can work for and how productive your work time really is. Be it for comfort or productivity, there are many reasons to take care in making sure you\u0026rsquo;re setup is right for you.\nIf you are on a laptop some of the following is still applicable, but consider how any of what I\u0026rsquo;m about to mention may be adapted to your own setup.\nDisplays\nThe way you use your monitor is more important the monitor itself. Don\u0026rsquo;t get me wrong, if you have an 11\u0026quot;, 4:3 aspect ratio monitor running though VGA there\u0026rsquo;s a limited amount you can do, but there\u0026rsquo;s still some things.\nFirst and foremost is positioning. I\u0026rsquo;ve helped many a office worker complaining about neck and back pain simply by raising their monitor closer to eye level. Ideally you want your eyes to naturally rest right on the on the top 3rd line of your screen, about the level where the left-most knob is on the wallpaper on my right-most monitor in the picture above.\nUnfortunately, there is no magic rule for how far away your monitor should be from your face, as this highly depends on your vision, monitor\u0026rsquo;s resolution, and size\n on this note, you\u0026rsquo;ll often hear monitors described by their dots per inch, this is a measure of the number of pixels in a square inch on the screen, the higher this is the finer the details, but the smaller any given element on screen will be. Apple\u0026rsquo;s Retina displays for example have a high DPI rating, which is a large part of the reason they look so good\n I personally have my three, 4k (that\u0026rsquo;s 3840x2160, or 4 times the resolution of 1080p) monitors positioned approximately 30 inches from my eyes.\nBefore moving forward though, I think it would make sense to talk about some of this display terminology. With that, I present far too much information condensed into one box:\nAspect Ratio Aspect ratio is the ratio is the ratio of the width to the height of the screen, most modern screens are 16:9, or have 16 units of width for every 9 units of height. Most older displays, often now called square screens, are actually 4:3. Many people actually still prefer this for the extra vertical room it affords at a given size, and some laptops are actually moving back to a more \u0026lsquo;square\u0026rsquo; aspect ratio. On the other hand more exotic ultra-wide displays are also coming out\nSizing of displays is a bit odd. A 27\u0026quot; 16:9 display, is not the same size as a 27\u0026quot; 4:3 display as displays are measured diagonally.\nResolution Resolution of a display refers to the number of pixels, HD technically starts at 720p, or 720 pixels across, though this is generally rather low by modern standards, with acceptable usually considered 1080p, which is technically 1920x1080. You may also see 1080i, this is a strange concept, not actually related to resolution, but more to refresh rate. Interlaced Video (Wikipedia)\nQHD is 1440p and 4k (ignoring the mess of naming there) is usually 2160p. I recommenced against 1440p unless the system is mostly for gaming, as scaling from most content that is in 1080p to 1440p is awkward compared to the direct 2x scaling with 1080p to 2160p\nInterface The interface on your display matters greatly as well, the most common at the are HDMI, Display Port, DVI, and VGA\nVGA is the worst option here, as it\u0026rsquo;s an analog signal. This means the signal can do strange things, getting corrupted between your computer and the monitor. Typically this is a blue, screw in connection with many pins\nDVI is still pretty common and looks like an even larger VGA connection, with a typically white, screw in connector. This signal is normally digital, though there is a varient of DVI that can be adapted into VGA. Of note, DVI can also be adapted to HDMI though you will not have audio, as DVI does not carry sound\nHDMI, probably the most well known connector, has multiple revisions, the revision determines many things such as the maximum resolution, refresh rate, and weather or not more obscure things such as HDR are supported. HDMI is usually considered the best of these three options\nTaking the crown however, is Display Port (DP). Like HDMI display port does have multiple revisions which do differentiate similar things; however, Display Port will generally support high resolutions and more features at any given point. Assuming you\u0026rsquo;re running a bog-standard 60hz 1080p display however, you\u0026rsquo;ll find no difference between DVI, HDMI, and DP - unless you need sound.\nRefresh Rate Next, you\u0026rsquo;ll want to note the refresh rate of your monitor. This is how many times per second your monitor refreshes the screen. Typically monitors run at 60hz and TVs at 30 or 60. Because unlike a TV you\u0026rsquo;re causing things on screen to change though, 30hz is generally considered bad and can even cause motion sickness. While 60hz may be standard, going for something even higher, with many displays offering well above 120hz, is something you may want to consider, especially if you plan on gaming.\nNewer displays may support Freesync or Gsync, and both of these technologies require a supported graphics card in the system as well. These allow the display and computer to adaptively change the refresh rate so the monitor and computer both send and display frames in sync, which can make even a low refresh rate \u0026lsquo;feel\u0026rsquo; much higher. This is a feature typically marketed to gamers and only supported in video games, but this has been changing. Gsync monitors generally have a much better implementation of the technology but it requires an Nvidia graphics card. As of the time of writing both Freesync and GSync are supported on linux, but quite rough around the edges.\nLatency Related to refresh rate is latency. In general this can actually mean two things, one is how long it takes for an image sent to the screen to actually be displayed. The lower this time the better, with good screens being sub 10 millisecond. Unfortunately, there\u0026rsquo;s no standard among the industry to measure this and many get it wrong.\nAlso with latency there\u0026rsquo;s grey to grey times, this is a measure of how long it takes a pixel to go from one shade to another. The lower this is the less motion blur the screen will exhibit.\nColor Depth The color depth of the display determines how precisely a color may be displayed. The higher this is the better, but almost all modern displays will be the same, and unless you\u0026rsquo;re an artist or creative professional you\u0026rsquo;re unlikely to notice a difference\nOn the other hand, you are likely to notice the color gamut or what range of colors the display is actually capable of displaying.\nFor example, two displays may both be capable of displaying 255 levels of red, but if one display\u0026rsquo;s range is only from a dingy red to a dark-ish red, while the other is from a brilliant red to a deep dark red, there\u0026rsquo;s a massive difference in color availability. If this is important to you, notably as a creative professionally in photo or video, you may want to read more at https://en.wikipedia.org/wiki/Gamut\nDynamic Range The next obvious thing to mention is dynamic range, or how deep the blacks are and how vivid the whites are. Again, this is simple, the higher the better. Many display types (LCD, TN-Panel) will have similar specifications in all these areas, but particularly here. OLED is probably the best when it comes to dynamic range as it can display true black by actually turning the source of the light off, but unfortunately these are quite susceptible to burn in and image persistence.\nActually, display technology overall (OLED, LCD, TN, CRT, etc.) will have more of an impact than anything else. But, this is also getting really into the weeds, and I don\u0026rsquo;t want to recommend one technology over the other since depending on many other factors on each display theres no clear winner, as everything is a trade off - OLED is probably the best as it can display true black by actually turning the source of the light off, but it suffers from bad burn in, plus moving the image quickly can result in a \u0026lsquo;purple smear\u0026rsquo; - something you may have noticed when scrolling though images on your phone. You probably won\u0026rsquo;t find an OLED monitor for sale anyways because of this. Great for movies, but when you have un-changing elements on screen for hours at a time it\u0026rsquo;s not ideal.\nThere are some newer displays which feature HDR or High Dynamic Range, which allows the panel to selective change the brightness in an area of the screen, giving much better dynamic range in supported applications than a normal display\nBurn in burn in and image persistence are both negative effects on many displays where a pixel either permanently or temporarily resists change in color. This can lead to being able to read previously displayed bright white text on a now black image for example. More commonly you\u0026rsquo;ll find TVs which have a particular station\u0026rsquo;s logo \u0026lsquo;burnt in\u0026rsquo; to one corner of the screen, persisting even after changing channelsBrightness Brightness is obvious, how bright or dim is the display. The big thing to note here is weather the brightness is PWM or DC controlled. Displays with PWM controlled brightness are much more common, however, it\u0026rsquo;s a bit of a cheat. Instead of actually changing the intensity of the back light directly, they\u0026rsquo;re simply strobing the light on and off to fast for the eye to see. This can cause eye strain over time though, and generally DC control, which actually does change the brightness directly is preferred. If you have a PWM display and don\u0026rsquo;t mind it at full brightness, this should help with eyes strain, as there is no longer a strobe effect as the display\u0026rsquo;s backlight is just constantly on.Subpixels Finally, if fonts look bad on a screen, it may be due to Sub-pixel rendering. Basically, while most screens pixels go R-G-B in order, not all do. To make text look sharper, most font renders will try to abuse this sub-pixel order to get sharper-than-pixel fonts. This is adjustable in lxappearence on Linux, and should be handled by setting up \u0026lsquo;ClearType text\u0026rsquo;. clearly there\u0026rsquo;s a lot to be considered here. A no compromise monitor can cost thousands of dollars, but nice 4k 27\u0026quot; monitors like mine can be found for \u0026lt;250 on sale, and I love them. Just figure out what you need and what would be the most beneficial for you and work from there.\n One of the great things about i3 is how powerful it can be with multiple displays, though even if you\u0026rsquo;re not using i3 having a \u0026lsquo;multi head\u0026rsquo; setup can be a god send for productivity. Even if your monitors don\u0026rsquo;t match it\u0026rsquo;s worth it. If you have the budget to get two matching monitors, great, if not just getting a cheapo used monitor from a thrift store will be a massive improvement. I think 2 is the magic number for most people. 3 monitors take up a lot of room and unless you do some very multi-tasked things you won\u0026rsquo;t see much benefit that using something like i3\u0026rsquo;s workspaces wouldn\u0026rsquo;t provide anyways.\nAnother thing to mention is red-light filters. While I dont personally use one many people find that reducing the amount of blue light coming from their displays significant helps with eyestrain. If this interests you give redshift a shot. I use it every now and then if I have a headache.\nKeyboard\nProbably the most important thing you can do for your workspace is getting a nice keyboard. If you\u0026rsquo;re rocking a rubber dome or membrane keyboard, moving to a mechanical keyboard will make a massive difference.\n(source)\nThe membrane/rubber dome keyboard on the left doesn\u0026rsquo;t give much physical feedback to your fingers when you press a key, compared to the mechanical key switch on the right. A decent mechanical keyboard can be found on amazon for \u0026lt;50 USD, though as with anything in life the more you spend the better the product. One thing to keep in mind is the color of the switch used. Above you can see that keyboard has blue switches, blue switches have a noticeable \u0026lsquo;bump\u0026rsquo;, that is the switch has a spot of higher resistance before it actually bottoms out, and the key actually presses at this point, furthermore, blue keys are clicky - they are loud and some people find this annoying. Finally, they\u0026rsquo;re also pretty light, not taking too much force to push down. Generally, blues are considered the \u0026lsquo;gold standard\u0026rsquo; among typist, but games on the other hand may prefer a brown, red, or black switch.\n    Linear Bump Bump + Click     Light Red Brown Blue   Heavy Black Clear Green     these are the common colors and how they feel for Cherry MX switches. Most other mechanical switches are \u0026lsquo;clones\u0026rsquo; of MX switches- though sometimes these clones are actually superior- but these clones don\u0026rsquo;t always follow this chart\n really it\u0026rsquo;s all a matter of preference, I\u0026rsquo;m actually using a switch not listed here on my keyboard, but generally finding what you like among the above first is a good place to start. If I\u0026rsquo;m not using my main keyboard I generally use Blues. If you\u0026rsquo;d like to try some out before pulling the trigger on a full keyboard you can find switch test boards for sale online.\nFurthermore, there are other types of switches like IBM\u0026rsquo;s old Model M line which use a buckling spring, which are quite stiff and have a very unique, heavy feeling. If you don\u0026rsquo;t want to use a 20 year old keyboard Unicomp makes clones that are quite nice.\nYou should also consider they layout of your keyboard. Some people absolutely need a number pad while others are happy to omit it and have the shorted hand travel to their mouse. Even still others want an extravagant number of keys or a weird split keyboard like mine: This is a custom built ErgoDone keyboard, The Ergodox-ez can be purchased for ~300 USD, or you can build one like mine for a bit under 200\n r/Mechancial Keyboards is a good place to go for inspiration and more information\nBeyond the physical layout you may also consider the keymap or software layout. Not only does my keyboard look weird, but the keys aren\u0026rsquo;t arranged as you\u0026rsquo;d expect either. Instead of typing in QWERTY, I actually use Dvorak. That layout looks a like this on a normal keyboard:    though obviously anything is possible. A lot of programmers like to disable their Caps key for example and put something more useful there, or you may just want to move around a letter or two. Using a standard layout like Dovark is a bit easier though as I can easily load my keymap pretty quickly on any computer. Plain old Qwerty is fine, but I personally like my \u0026lsquo;weird\u0026rsquo; keymap.\nIf you\u0026rsquo;re shelling out big bucks on a nice keyboard anyway, you may also want to get a keyboard which supports QMK, a completely open source firmware which gives you total control of your keyboard, allowing you do to cool things like type greek letters ( Œ© , Œ±, Œ≤) or type parentheses by tapping the shift keys. I find that particularly helpful as my keyboard doesn\u0026rsquo;t actually have enough keys to do have every key nicely available (note how I don\u0026rsquo;t have a function row) for more info check out https://docs.qmk.fm/#/ . You can actually buy an adapter to use a normal keyboard with QMK, but it\u0026rsquo;s a bit hack-y and I really recommend just saving up to get a full keyboard made for it.\nBack to ergonomics, you\u0026rsquo;ll want to make sure your keyboard is a t a comfortable height for you and that you can type in a way that isn\u0026rsquo;t putting your wrists at any weird angles\nFinally, one of the nice things about i3 is the ability to navigate everything entirely from the keyboard as well as bind as much as you want to as many keys as you\u0026rsquo;d like. Want a key combo to launch a file manager? easy. Want a key to navigate to open up a terminal and immediately run a command- no problem. Set things up as you like and enjoy being able to use your system at break neck speed while everyone else drags things around slowly.\nMouse and other input\nSpeaking of dragging things around slowly: The mouse\nSound\nNoise isolation both electrical and physical, headphone types (over, on, in), amplifiers, dacs, ASIO/ sound hardware, connection types\nThe Desk and Chair\nLighting\nAir Quality\nThis Is Your Brain On Stale Air (YouTube)\nVarious Programs: #  Markdown\n[TODO]\nMarktext, Typora, colabrative editing, Github markup, etc\nTaskwarrior \u0026amp; Timewarrior\n[TODO]\nTaskweb\nFile Explorers \u0026amp; Storage Managment\n[TODO]\nRanger, Thunar, Nautilius, Baobab, Gparted\nif you use Nautilius, you may want to run\n1  dconf write /org/gnome/nautilus/preferences/always-use-location-entry true   so that the file paths are displayed in full\nMedia (Music, Video, PDF,)\n[TODO]\nOffice \u0026amp; Creative Software\n[TODO]\nMasterplan\nLibreoffice\nKrita\nAudacity\nDAW? QJackCTL?\nOBS\nKiCad\ndarktable\nEvince\nFeh, nomacs\nWine\nBoxes- vm\nasciiflow\nPackage managment\n[TODO]\nPamac, Steam, AppImg, itch.io, dpkg, snap.\nmaintaining an aur package, pacman conf stuff\nWeb and network protocols\n[TODO]\nVivaldi, Firefox, Syncthing, Beaker, IPFS, IRC - irssi, Telegram, Etherape, Wireshark, gufw,\nShell Scripts\n[TODO]\nTools for accessibility #  https://joshwcomeau.com/accessibility/hands-free-coding/\nPlatfromIO is for working with embedded hardware like Arduino or STM32, etc. Unfortunately, it opens an annoying screen at start up. This can be disabled, but at least in the past this has caused other issues for me. If you do work with embedded hardware though it's still by far the best option as the normal ArduinoIDE is absolute trash. "});index.add({'id':38,'href':'/engineering/6p5-git/','title':"6p5 Git",'section':"Engineering",'content':"Chapter 6¬Ω - Git. #  ./missing-semester - Version Control\nThe above link does a better job of covering the vast majority of what I\u0026rsquo;d say than I could hope to put here. Just check it out. Bit, an alternative git cli (Github)\nlearngitbranching.js.org (more than just branching)\nŒºGit- DIY Git in python\n[TODO] Show how to setup SSH keys for Git\nSSH keys article on the (Arch Wiki)\nssh-keygen\nAfter you have a key generated, you\u0026rsquo;ll need to add the public key to github,\nyou may need to change existing repo to use a git based origin rather than an https one:\n1 2 3 4 5 6 7 8 9 10  ‚ï≠‚îÄvega@lyrae ~/git/local/opguides ‚Äπmaster‚Ä∫ ‚ï∞‚îÄ‚û§ git remote -v origin\thttps://github.com/VegaDeftwing/opinionatedguide (fetch) origin\thttps://github.com/VegaDeftwing/opinionatedguide (push) ‚ï≠‚îÄvega@lyrae ~/git/local/opguides ‚Äπmaster‚Ä∫ ‚ï∞‚îÄ‚û§ git remote set-url origin git@github.com:VegaDeftwing/opinionatedguide.git ‚ï≠‚îÄvega@lyrae ~/git/local/opguides ‚Äπmaster‚Ä∫ ‚ï∞‚îÄ‚û§ git remote -v origin\tgit@github.com:VegaDeftwing/opinionatedguide.git (fetch) origin\tgit@github.com:VegaDeftwing/opinionatedguide.git (push)   [TODO] show graphical git tools\nhttps://desktop.github.com\nhttps://extrawurst.itch.io/gitui\nhttps://aurees.com\nhttps://gitfiend.com\nhttp://cong.tools (Windows only)\nhttps://gitahead.github.io/gitahead.com/\nhttps://github.com/FredrikNoren/ungit\nhttps://gitextensions.github.io (Windows only)\nhttps://tortoisegit.org/download/ (Windows only)\n[TODO] comparison of Bit, Git, GithubCLI\n[TODO] .gitignores\n[TODO] show git log --all --graph --decorate --oneline and adding it to the gitconfig\n[TODO] git diff\nhttps://github.com/dandavison/delta\n[TODO] Git on not-github, diy hosting\nhttps://dhwthompson.com/2019/my-favourite-git-commit\n[TODO] Files Git works with\nhttps://blog.martinfenner.org/2014/08/25/using-microsoft-word-with-git/\n[TODO] Not commiting private info to Git\nWhat will happen when you commit secrets to a public Git repo? \nhttps://onlywei.github.io/explain-git-with-d3/\nNotes on GitHub and competition #  Stop using number of git commits as any metric (u/Sajjon on Reddit)\n\n generated using https://github.com/ryo-ma/github-profile-trophy, the above are the stats on my github profile\n  ahh, much better. Made using https://github.com/gelstudios/gitfiti, inspired by someone else that wrote the same thing, but I can\u0026rsquo;t find the original.\n Other Version Control Systems #  Git is by far the most used VCS out there. If you want to use something else I encourage you to try it and learn it, but realize if the point is to work with others it might be a pain [TODO]\nSubversion\nMercurial\nCVS\nFossil\nWeird Git #  https://radicle.xyz\nCSS in Github READMEs\nFurther Reading #  ./missing-semester - Metaprogramming\nChapter 6¬æ - Documentation #  Lets talk about changelogs, or, how I loathe \u0026lsquo;bugfixes and performance improvements\u0026rsquo; (Remy van Elst\u0026rsquo;s Blog)\n"});index.add({'id':39,'href':'/engineering/7-codeintro/','title':"7 Codeintro",'section':"Engineering",'content':"Chapter 7 - Let\u0026rsquo;s write some Code #  Starting Minimal #  Code is mostly math #  Heres the thing: Code is mostly math. If you\u0026rsquo;re anything like me, you probably just went ugggggghhhhhhh.\nAnd I get it. But it\u0026rsquo;s not that bad for two reasons:\n The math isn\u0026rsquo;t like what you\u0026rsquo;re used to. The math is actually doing something. You\u0026rsquo;re not just getting a number to solve a problem, you\u0026rsquo;re making a tool that can solve many problems or watching the math cause something to happen on screen.  On point 1., it\u0026rsquo;s usally because code has lots of flow control and logic that you\u0026rsquo;re probably not used to seeing in math.\nThings like\nfake code for beginners:\n1 2 3 4  if x is equal to y: set x to x-1 else: set x to y   or\n1 2  while Alice and Bob are Connected: exchangeMessages(Alice,Bob)     slightly less fake code for people that have seen this before:\n1 2 3 4  if x == y: x = x-1 else: x = y   or\n1 2  while Alice.isConnectedTo(Bob): Alice.Message(Bob, \u0026#34;Hello\u0026#34;)      But, what about point 2.? Take a look at this:\n  This is tixy.land \u0026ndash; Click on the moving dots to advanced though a lil' tutorial and some examples\nHere in tixy land, you can try out some code. I don\u0026rsquo;t want to lead you to anything. Just, type something. See what happens.\nEven if you don\u0026rsquo;t understand all the math or what the symbols mean I\u0026rsquo;m sure you can get a rough idea of what\u0026rsquo;s going on.\nTo give a quick run down of some operations you might want to use:\n[TODO]\nYou can usually make something cool by just entering a bunch of trig and making complex functions you don\u0026rsquo;t truely understand. You\u0026rsquo;re learning, that\u0026rsquo;s fine, no shame. Here, for example, is one I made by wandering around trig functions asin((t/9*(i/32*sin(t/4))*y)%5)\n  [TODO] I want to start here instead of python, need to research which one to start with. I like pico-8, but it\u0026rsquo;s paid and I\u0026rsquo;d like to keep OpGuides accessible. Tic-80 appears to be the most common otherwise? Pyxel looks good too though and would lead into python nicely? \u0026hellip; ‚ïÆ(‚îÄ‚ñΩ‚îÄ)‚ï≠\nhttp://zenithsal.com/assets/documents/tic-80_cheatsheet.png\nhttps://tic80.com , https://steemit.com/programming/@crypticwyrm/tic-80-learn-to-program-games-using-javascript-or-lua-on-a-fantasy-computer-simulating-old-school-game-programming - still $5 for pro.\nhttps://medium.com/@G05P3L/fantasy-console-wars-a-guide-to-the-biggest-players-in-retrogamings-newest-trend-56bbe948474d\nhttps://paladin-t.github.io/b8/\nhttps://github.com/kitao/pyxel\nhttps://www.lexaloffle.com/pico-8.php (and https://www.lexaloffle.com/voxatron.php)\nPython #  [TODO] Why start with python\nThe building blocks of programming #  All programming is just chaining logic, for example using treatments like \u0026ldquo;if a is b, then make c hold the value of a-3\u0026rdquo; followed by \u0026ldquo;if c is negitive then say hello\u0026rdquo;\nWell, that\u0026rsquo;s actually an easy program\n1 2 3 4 5 6 7 8 9  a = 1 b = 1 c = 1 if a == b: # Why are there two equal signs here? c = a-3 if c \u0026lt; 0: print(\u0026#39;hello\u0026#39;)   you should notice a few weird things here though, namely, on line 5 we used two equal signs to check equality. This is the case in most programming languages because a single equal sign, like is used on the first two lines, is used for assignment that is assigning the value of a to 1 and b to 1 or as on line 6 assigning the value of ( a - 3 ) to c, because we\u0026rsquo;ve already used a single equal sign for assignment, two equal signs is used for checking that two things are actual equal. That is, one equal sign sets things to be equal, two checks that they are equal.\nIf you follow the logic here, a and b are both 1, so line 5 checks that to be true, so line 6 does happen. Now \u0026lsquo;c\u0026rsquo; which previously held the value \u0026lsquo;1\u0026rsquo; is now equal to \u0026lsquo;a-3\u0026rsquo;, where \u0026lsquo;a\u0026rsquo; is \u0026lsquo;1\u0026rsquo;, so \u0026lsquo;c\u0026rsquo; becomes \u0026lsquo;-2\u0026rsquo;. on line 8 we check if \u0026lsquo;c\u0026rsquo; is less than \u0026lsquo;0\u0026rsquo;, and because it is we print the word \u0026lsquo;hello\u0026rsquo;. Here, you\u0026rsquo;ll notice \u0026lsquo;hello\u0026rsquo; is in quotes. This is because if it were not, that is if it were print(hello) it would try to print the value of the variable \u0026lsquo;hello\u0026rsquo; which since hello isn\u0026rsquo;t defined, wouldn\u0026rsquo;t work. Let\u0026rsquo;s try this in the Python interpreter. You can find install instructions for your operating system here: https://www.python.org/downloads/. If you\u0026rsquo;re on Linux simply type python into the terminal.\nWith the Python interpreter open try without quotes:\n1 2 3 4  \u0026gt;\u0026gt;\u0026gt;print(hello) Traceback (most recent call last): File \u0026#34;\u0026lt;stdin\u0026gt;\u0026#34;, line 1, in \u0026lt;module\u0026gt; NameError: name \u0026#39;hello\u0026#39; is not defined   As you can see Python failed to print hello because the variable was not defined. Now lets try assigning a value to the hello variable before printing:\n1 2 3  \u0026gt;\u0026gt;\u0026gt; hello = \u0026#34;Hello World!\u0026#34; \u0026gt;\u0026gt;\u0026gt; print(hello) Hello World!   Anything you write to the interpreter can also be added to a file and ran that way. Try saving the examples above to a file called test.py, opening a terminal and running it with python test.py.\nConditions using if, elif and else #  You often want code only to be executed, if a certain condition is met. For example, take a look at the following code:\n1 2 3 4 5 6  a = 13 b = 27 if a \u0026gt; b: print(\u0026#34;a is bigger\u0026#34;) else: print(\u0026#34;b is bigger\u0026#34;)   Using the if statement, connected with a logical condition, you can control the program flow. In this case, a is smaller than b, so python will skip the code inside of the if case and only execute what is within the else part.\nYou can also combine multiple if cases like this:\n1 2 3 4 5 6 7  a = 3 if a \u0026lt; 0: print(\u0026#34;a is negative\u0026#34;) elif a == 0: print(\u0026#34;a is zero\u0026#34;) else: print(\u0026#34;a is positive\u0026#34;)   Using the elif statement, you can check for another condition if the one in the if statement was false.\nLoops #  Some lines of codes have to be repeated very often. Instead of typing the same line over and over again, you can use loops. There are two types of loops: The for and the while loop. While they both basically do the same thing, sometimes it is more intuitive to use one over the other.\nThe for loop #  The for loop iterates over a list of items and stores the current element in a variable. This is especially useful when working with lists, for example.\n1 2 3  fruits = [\u0026#34;apple\u0026#34;, \u0026#34;banana\u0026#34;, \u0026#34;cherry\u0026#34;] for fruit in fruits: print(\u0026#34;I am eating a \u0026#34; + fruit)   If you are familiar with loops in other programming languages (such as Java or C), you\u0026rsquo;re probably thinking: \u0026ldquo;That\u0026rsquo;s not a for loop, that\u0026rsquo;s a for-each!\u0026rdquo;. This is true, in python all for loops are for-each loops. If you want to iterate over a range of numbers, use pythons range() function:\n1 2  for i in range(0, 100): print(i)   The while loop #  The for loop is very useful, but sometimes, using the while loop is easier and more straightforward. For example, if you want to repeat something until a certain condition is met, using this loop is simple:\n1 2 3 4  i = 0 while i \u0026lt; 10: print(i) i += 1   You can also combine the condition after the while keyword with an else statement:\n1 2 3 4 5 6  i = 11 while i \u0026lt; 10: print(i) i += 1 else: print(\u0026#34;i is bigger than 10!\u0026#34;)   [TODO] assignment, comparison, combined ops (+=), mod, exponent, floor, in/not in, is/is not, data types, functions libraries\nCommon methods used #  commenting-out print debugging Recursion, object orientation while(true) try/catch\nSome simple programs #  Hello World #  As seen in the example above, the following will print Hello World!: print('Hello World!') Lets get some input aswell:\n1 2 3 4 5  print(\u0026#39;What\\\u0026#39;s your name?\u0026#39;) # This prints the question. Notice the escape character \\ is used to avoid stopping the string.  print(\u0026#39;Hello \u0026#39; + input()) # This will pause the program and wait for user input before printing Hello \u0026lt;input\u0026gt;   Even or Odd #  Below is an example of a Python script which checks if the input number is odd or even.\n1 2 3 4 5 6 7  # A number is even if division by 2 give a remainder of 0. # If remainder is 1, it is odd number. num = int(input(\u0026#34;Enter a number: \u0026#34;)) if (num % 2) == 0: print(\u0026#34;{} is Even\u0026#34;.format(num)) else: print(\u0026#34;{} is Odd\u0026#34;.format(num))   Prime Numbers #  Prime number is a number greater than 1 whose only factors are 1 and itself. Few instances of prime numbers include 2, 3, 5, 11. Below is an example of python function which defines whether the given input number is prime or not.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  def is_prime(num): if num \u0026gt; 1: # Iterate from 2 to n / 2 for i in range(2, num // 2): # If num is divisible by any number between # 2 and n / 2, it is not prime if (num % i) == 0: print(\u0026#34;{} is not a prime number\u0026#34;.format(num)) break else: print(\u0026#34;{} is a prime number\u0026#34;.format(num)) else: print(\u0026#34;{} is not a prime number\u0026#34;.format(num))   Calculating sine and pi #  Sorting a list #  Palindromes #  Cypher #  Making a full project #  Part 0, Git #  Before we get started, I want to be sure you took the time to read the section on Git in Chapter 6.1 above. If you need to refer to a cheat sheet you can look in Apendix B.\nPart 1, Starting easy #  [TODO] guide to write an OO python program with libraries to read and write entries to a database-like file and a real database the database should have 3 tables, a to-do list, a time-tracker list, and a list of articles\nTo-do: NAME, DUEDATE time-tracker: 2types, either manually enterend with NAME, TSTART, TSTOP or NAME, TTOTAL for the following program articles: NAME, PUBLISHED, TPUB, TEDIT\nwe\u0026rsquo;ll need some way to track what items in the time tracker were started, but never stopped\nfor now, everything should be strictly command line arguments and print statments\nMore advanced topics #  [TODO] Move this section\nLambdas #  A lambda expression is used to create a a small anonymous function. It can take any number of arguments, but can only have one expression. Below is an example of a lambda expression which can be used to compute cube of any given number.\n1 2 3  \u0026gt;\u0026gt;\u0026gt; cube = lambda x : x**3 \u0026gt;\u0026gt;\u0026gt; cube(5) 125   And here is the other example of a lambda expression with three arguments.\n1 2 3  \u0026gt;\u0026gt;\u0026gt; sum = lambda a, b, c : a + b + c \u0026gt;\u0026gt;\u0026gt; sum(1,2,-3) 0   threads/ parrallelization(high level only), interupts (actually, let\u0026rsquo;s save this until embbeded), apis,\nA little more practice #  Weird projects\nEasing int Graphical Programming with Creative Coding #  http://feed.grantcuster.com/\nCoding Adventure: Ray Marching (YouTube) Coding Adventure: Marching Cubes(Youtube) Coding Adventure: Portals (YouTube)\n"});index.add({'id':40,'href':'/engineering/7p5-consequences/','title':"7p5 Consequences",'section':"Engineering",'content':"Chapter 7¬Ω - Consequences #  Programming is awesome. If you get into creative coding you\u0026rsquo;ll be able to use it to make art. You\u0026rsquo;ll likely use it to automate tasks you find boring. If you\u0026rsquo;re like me, you might use it to make your own website or start to make products you intend to sell. That\u0026rsquo;s great. But there are a few things you need to consider as what you make becomes more professional. If you\u0026rsquo;re just making something for you and a few friends, don\u0026rsquo;t worry about it- hack it together and have fun. But as you start making things for a business or that something impact systems that are deeply meaningful in someone\u0026rsquo;s life, you need to be careful. This story, The Code I\u0026rsquo;m Still Ashamed Of, ever since I\u0026rsquo;ve read it, has come back to me every now and then. And sure, it\u0026rsquo;s a pretty extreme example, but it\u0026rsquo;s also a lot easier to put into that kind of situation than you\u0026rsquo;d probably like to think.\nThere\u0026rsquo;s a pretty big list of considerations you should keep in mind when what you\u0026rsquo;re making starts to grow in impact, but honestly most of them just come down to being an empathetic, good person as best you can.\nUser Data \u0026amp; Privacy\n Is user data secure? Do users have control over their data? Do users have a way to export their data? If this data were leaked, what would the impact be? Should the users have deniability (Soatok.blog) Can the code be open source? Is there an open API?  Maybe what you\u0026rsquo;re making can\u0026rsquo;t be open, but interaction could be. Sorta like having 3rd party Twitter or Reddit apps.    Development Considerations\n  Does it rely on other tools or libraries that don\u0026rsquo;t follow these ideals?\n ·∂ú·µí·µò·µç ∞ Windows ·∂ú·µí·µò·µç ∞    Have you given credit to any tools or libraries you depend on?\n Have you given funding to any of those tools, if you\u0026rsquo;re making money off of them? Have you contributed code to any of them?    Localization\n Can users of other in other regions still use it? Qwerty isn\u0026rsquo;t standard everywhere, neither is left-to-right text.  Hell, ·öõ·öÖ·öë·öà·öÄ·öê·öÇ·öÇ·öÄ·öÑ·öö·öê·öâ·öì·öÑ·öÄ·öê·öè·öì·öÄ·öÑ·öö·öê·öâ·öì·öÑ·öú (YouTube, Tomm Scott)   Does it comply with local laws and regulations?  Not all illegal services are morally wrong- take Sci-Hub for example.   Does it force units of measurement?  Monetization\n How is copyright infringement handled?  This gets very complicated, read more in Philosophy Ch.8 - Copyright   If something on what you\u0026rsquo;re making is paid, is Purchasing Power Parity an option so that users in less fortunate areas can still have access?  If you know what you\u0026rsquo;re making will be pirated, can you release a \u0026lsquo;Here, but seriously please pay me\u0026rsquo; version?     User Experience\n  Can differently-abled people still use it?\n  Color Blindness?   Deaf?\n  Bad vision?\n  super tiny text     Motion? Flashing Lights? Light sensitivity?\n    Are the elements of interaction standard / automatable\n This largely ties into differently-abled access    Does it really need to use as many resources as it does?\n Could it still work if your internet was 100x slower? Could it still work if your hardware was 10 years older?    How long does it take a user to find a feature they know exists without help?\n  Avoid \u0026lsquo;Dark Patterns\u0026rsquo;\n Don\u0026rsquo;t use stupid progress bars    Social Duties\n Can it be used for Hate Speech? Spreading misinformation?  How does content moderation work? How does this conflict with free speech?  Does it matter that it does?     Can it be used for exploitation of vulnerable people?  The elderly? Children? Those in abusive relationships?   Does it make assumptions about social norms? Does it assume something about FirstName LastName naming conventions? Does it assume binary sex/gender fields? Does it assume Hetro relationships?  36C3 ChaosWest: \u0026ldquo;Hello, I\u0026rsquo;m your Edge Case!\u0026quot;      Here\u0026rsquo;s a nice video from TomScott on this topic:\n CAPTCHAs don\u0026rsquo;t prove your human - They prove you\u0026rsquo;re American\nStop over validating your forms\n"});index.add({'id':41,'href':'/engineering/8-lowlvl/','title':"8 Lowlvl",'section':"Engineering",'content':"Chapter 8 - Low Level Programming #   Ashlyn Black\u0026rsquo;s C Cheat Sheet\nWhy C? #  This chapter of OpGuides will be mostly C, but, why? Well, there\u0026rsquo;s only really a few options for learning low level programming that make sense to start with. C, C++, Rust are the \u0026lsquo;big three\u0026rsquo; that come to mind for me. C is awesome. It\u0026rsquo;s spec is small, it\u0026rsquo;s been kept minimal, and it\u0026rsquo;s got a ton of tools to help you learn. It forces you to know the low level, which in this case is great. C++ has grown into behemoth where any thing can be done in about a dozen different ways and each development team is effectively writing in their own dialect of C++.\nOn the other hand, C has a lot of annoyances due to its minimalism. For example, there are no strings - only arrays of characters - and all memory management is manual.\nRust is cool, but I think it\u0026rsquo;s more of a language you need to grow into understand why someone would want to use it. It\u0026rsquo;s very rigid and does a very good job of preventing memory mistakes and making sure the programmer has handled any errors that could come their way (What do you do if you go to open a file and it\u0026rsquo;s not there, for example).\nThankfully, C++ and C are pretty similar, as C++ is a superset of C - that is it\u0026rsquo;s C with a whole wack ton of added features (for better or worse)\nWhat this really means is that should you need the added features of C++ the syntax should be at least familiar. Keep in mind though they are different languages. C++ has features that you absolutely should use if you\u0026rsquo;re writing in it. Strings, abstracting out much of the memory management, \u0026lsquo;vectors\u0026rsquo;, etc.\nIt\u0026rsquo;s also worth considering that you can use C code in C++ projects if you need.\nDon\u0026rsquo;t throw out everything you already know! #  [TODO] loops, while, etc.\nSome simple programs, in C #  [TODO] use TCC instead of GCC, to enable live reload https://bellard.org/tcc/\n[TODO] https://github.com/rby90/project-based-tutorials-in-c\n[TODO] 30 Seconds of C++ (Github)\n[TODO] http://pages.cs.wisc.edu/~remzi/OSTEP/\nHello World! #  It\u0026rsquo;s traditional to start in any language by writing a program that just outputs the words \u0026ldquo;Hello World!\u0026rdquo; to the terminal, so let\u0026rsquo;s start there in C++\n1 2 3 4 5 6  #include \u0026lt;stdio.h\u0026gt; int main() { printf(\u0026#34;Hello World!\\n\u0026#34;); return(0); }   To run this code, save it to a file named hello.cpp and then open a terminal, navigate to that folder and run gcc hello.cpp -o hello, then you can run your program with ./hello, that should give you something like this:\n[vega@lyrae ~]$ gcc hello.c -o hello [vega@lyrae ~]$ ./hello Hello World! Alright, so let\u0026rsquo;s go though line by line.\nOn line 1 there\u0026rsquo;s a #include statement, this tells the compiler we want to include some library or other code. In this case we want the stdio library, as well need it in a few lines, but what about this library, where is it?\nWell, that library is just some other code. We can look at it by navigating to /usr/include/stdio.hor, in VSCode you can hold control and click on the word stdio to go it\u0026rsquo;s file, so let\u0026rsquo;s look at that file:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36  /* Define ISO C stdio on top of C++ iostreams. Copyright (C) 1991-2020 Free Software Foundation, Inc. This file is part of the GNU C Library. The GNU C Library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version. The GNU C Library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details. You should have received a copy of the GNU Lesser General Public License along with the GNU C Library; if not, see \u0026lt;https://www.gnu.org/licenses/\u0026gt;. */ /* *\tISO C99 Standard: 7.19 Input/output\t\u0026lt;stdio.h\u0026gt; */ #ifndef _STDIO_H #define _STDIO_H\t1  #define __GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION #include \u0026lt;bits/libc-header-start.h\u0026gt; __BEGIN_DECLS #define __need_size_t #define __need_NULL #include \u0026lt;stddef.h\u0026gt; //cutting the code here to show line 332 extern int printf (const char *__restrict __format, ...);   okay, so it starts with a big copyright block in comments - in C // makes a single ling comment and /* comment */ are for multi-line comments - then on lines 39 and 40 we can see it is in turn including three more files such as stddef.h on line 33.\nBut lets look deeper, down on line 332 of stdio.h we can see printf() is loaded as an external function. The extern keyword marks this as a sort of indicator to the compiler, gcc in this case, that this function definition is actually implemented elsewhere, but that this is the signature to expect from it\u0026rsquo;s usage. That is, when anything that imports stdio.h uses printf() it should expect to return an integer (the int before the word printf) and take in a pointer to a character array (the char * inside the parentheses)\nSo, where\u0026rsquo;s the code for printf() that does the actual printing?\nWell, in it\u0026rsquo;s part of libc. libc is the C standard library on linux, typically it\u0026rsquo;s glibc in particular. This is a pre-compiled shared library so that when any program needs to use printf() it can just call the printf implementation from libc, which is stored in /usr/lib/libc.so.6\nWe could go looking into the source code for this, but I think it\u0026rsquo;s sufficient to say that it\u0026rsquo;s simply loaded from a shared system library.\nAnother thing you should notice is the #ifndef at the start of this file, which starts with a #, just like define.\nThese are pre-processor directives, just like #include is, basically, it\u0026rsquo;s special code that the compiler (in our case gcc) looks at before it complies the code. Of note there are #if and #else blocks, you might see these used for checking if a certain library is available for example, as a way to check what compiler is being used to adjust things slightly, or to check what OS the code is even being compiled for.\nyou also might see #define used to either set constants such as #define PI 3.14159 or #define GET_SIZE(*p*) (GET(p) \u0026amp; ~0x7)\nThis little adventure was mostly just to show you that these #include statements that use system libraries are not magic, and to point out that most code will end up loading shared system libraries (.so files on Linux, .dll files on Windows)\nOkay, so, that\u0026rsquo;s done. Line 2 of our 6 line hello.c is just \u0026lsquo;white space\u0026rsquo; or a blank line, so we can skip it. Line 3 is where things get interesting again, with int main() {. The main() function is special, as without doing something weird, it\u0026rsquo;s where your code starts from. you may often see this line as int main(int *argc*, char const **argv*[]) too, which I\u0026rsquo;ll get to in a bit.\nSo, lets break this down, starting with int.\nC is a statically typed language, this means that each variable has a defined type, but also that each function has a defined type it returns and expects to be given.\nso, with int main() { we\u0026rsquo;re saying the main() function will return an integer. skipping ahead a bit, we can see this is the case, as on line 5, return(0) it does exactly that, but, why?\nLet\u0026rsquo;s run our code as is (./hello), then change this return code to return(2);, recompile with gcc hello.cpp -o hello and run ./hello again.\nSee that little 2 ‚Üµ in my terminal? That\u0026rsquo;s the return code, but why did it get printed?\nWell, when the program exits, it returns that number to the process that called it (In this case the shell - read up on shell vs terminal in Appendix A1) and if this number is anything but 0 the shell prints it, because anything but 0 is assumed to be an error condition, and that this number may indicate what that error was. So, if we know getting to that return(0) signifies that our program ran correctly, we should, in fact, return 0.\n    Okay, So, other than the closing curly brace (}) on line 6 that defines the end of main, with\n1 2 3  int main(){ //code goes here between the curly braces }   We only have one line left to look at, and that\u0026rsquo;s line 4, which is\n1  printf(\u0026#34;Hello World!\\n\u0026#34;);   Okay, breaking it up, we first see that we\u0026rsquo;re using printf() the function whose definition we imported from stdio.h and which is actually being executed from a linked system library stored in /usr/lib/libc.so.6\nOkay, so, we now have almost everything, last up is just the string that we\u0026rsquo;re printing to the terminal, which is \u0026quot;Hello World!\\n\u0026quot;\nBut what\u0026rsquo;s with that \\n on the end? Well, to understand this line we\u0026rsquo;ll need our helpful friend, the ASCII table.\nOn most unix based systems you can access this at any time by running man ascii  ASCII is a really old way for computers to represent text. In most modern systems it\u0026rsquo;s been replaced by unicode (which is what let\u0026rsquo;s you use emjois ü§î) but the start of the the much larger character space of Unicode is the same as the ASCII table anyway. Alright, so, you\u0026rsquo;ll notice some really weird characters in the ASCII table, not just the normal symbols you\u0026rsquo;d expect. The one I\u0026rsquo;d like to mention now though is at 0xA - [LINE FEED]\nLine Feed, as well as some others like Bell and Carriage Return all date back to when computers were hooked up to Teletype machines - which were basically a mix of printer with a typewriter, so, naturally, there had to be some control characters to do things like tell the machine to move to the next line.\nBecause we like backwards comparability so very much, we still use these same codes for modern terminals, so typing \\n at the end of a line is really saying \u0026ldquo;put a line feed control code here\u0026rdquo; which, to a modern system, means go to the next line.\nThe reason we do this is because without it, the output of our program looks like this (ran first as is, then with the \\n removed)\n[vega@lyrae ~]$ ./hello Hello World! [vega@lyrae ~]$ gcc hello.c -o hello [vega@lyrae ~]$ ./hello Hello World![vega@lyrae ~]$ see how it doesn\u0026rsquo;t leave room for the prompt to be printed on a new line of it\u0026rsquo;s own!\nThe ASCII table has some other interesting side effects too. See how a capital \u0026lsquo;A\u0026rsquo; has an \u0026lsquo;index\u0026rsquo; 32 higher than a lower case \u0026lsquo;a\u0026rsquo;, and the same for \u0026lsquo;B\u0026rsquo; to \u0026lsquo;b\u0026rsquo;. Let\u0026rsquo;s use this to our advantage to make the \u0026rsquo;d' in \u0026lsquo;Hello World!\u0026quot; uppercase.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36  #include \u0026lt;stdio.h\u0026gt;#include \u0026lt;string.h\u0026gt; int main() { //move the greeting into a variable so we can play with it  char greeting[14] = \u0026#34;Hello World!\\n\u0026#34;; //print it as is  // because arrays are naturally passed as a pointer this is fine  printf(greeting); /* * C is \u0026#39;0\u0026#39; indexed, this means that * \u0026#39;H\u0026#39; is at position 0, \u0026#39;e\u0026#39; is at 1, and so on. * We want to change \u0026#39;d\u0026#39; which is at pos 10. * so we access the charecter in the string with the * syntax variableName[indexOfCharacter] */ // The following line is equivilent to greeting[10] = greeting[10] - 32;  greeting[10]-=32; printf(greeting); // note, we could have just changed the character directly,  greeting[10]=\u0026#39;z\u0026#39;; printf(greeting); // Let\u0026#39;s break that line feed character too, why not.  greeting[12]=\u0026#39;?\u0026#39;; printf(greeting); // need to include string.h to use strcat  // here strcat is concatinating on the newline that we removed.  printf(strcat(greeting,\u0026#34;\\n\u0026#34;)); return(0); }   [vega@lyrae ~]$ gcc hello.cpp -o hello [vega@lyrae ~]$ ./hello Hello World! Hello WorlD! Hello Worlz! Hello Worlz!?Hello Worlz!? [vega@lyrae ~]$ Recursive Fibonacci #  The Stack‚Ñ¢\nCalculating sine and pi #  pseudo code, types\nSorting a list #  pointers, heap\nmention efficiency, analysis later\nhttps://github.com/laserallan/malloc_geiger\nPalindromes #  Cipher #  Bit Operations #  1  int x = 0b11 \u0026lt;\u0026lt; 1   0b11 in binary is 3, (the 0b prefix means binary) 1 here is the number of places we want to shift it left, so, x would now contain 0b110 which is 6.\nunsigned, signed bit, 1\u0026rsquo;s compliment, 2\u0026rsquo;s compliment\nBit Twiddling Hacks from Sean Eron Anderson\nSystem Calls #  Assembly #  I very, very much so recommend getting a feel for writing assembly with the TIS-100 game. It\u0026rsquo;s $7 on steam (at the time of writing).\nInterrupt \u0026amp; Signal handling #  Part 2, Going Deeper #  [TODO] Interacting with the above, this program should run in the background and update the data, based on window focus events using libxdo\nThis program should actually provide the VAST majority of the source code, with purposeful errors for demonstating the below\nfurthermore, the C code should check to see if there is a new article, and if so it should call a function that first checks a \u0026lsquo;meta\u0026rsquo; entry to see if the python code to change a published time to be newer or the number of entries has changed to optimize:\n  generates a template markdown file for the article if PUBLISHED is FALSE and no file for it exists,\n  generates a template markdown file for the article if PUBLISHED is TRUE and no file for it exists,\n  generates a html file from the markdown if PUBLISHED is TRUE and no html exists then updates TEDIT, TPUB\n  remove the html file if PUBLISHED is FALSE and an html file for it exists,\n  however, every time this will still need checked to monitor the md for changes, using ionotify\n  generates a new html from the markdwon if PUBLISHED is TRUE and md has changed then updates TEDIT\n  if markdown is removed, the html file should be as well\n  What are we going to do? #  [TODO]\nTools to use #  [TODO]\nC Gibberish \u0026lt;\u0026ndash;\u0026gt; English Translator\nPseudo code #  [TODO]\nWriting it #  [TODO]\nusing a code editor, header files, libraries, writing and using a Make file, stdout / stderr,\nDebugging it #  So, by now you\u0026rsquo;ve written a fair amount of code, and I\u0026rsquo;m sure you\u0026rsquo;ve figured out that a bunch of tiny issues can get really annoying. Maybe you keep forgetting semicolons, maybe you wrote \u0026lsquo;=\u0026rsquo; instead of \u0026lsquo;==\u0026rsquo; when doing an equality check, whatever. Turns out, there\u0026rsquo;s an easier way to catch these kind of errors and it\u0026rsquo;s available for most languages. Allow me to introduce you to\u0026hellip;\nLinting: #  Yeah, it\u0026rsquo;s literally named after the fluff you\u0026rsquo;d find in your hoodie pockets, but, it\u0026rsquo;s still a super necessary tool. A \u0026lsquo;Linter\u0026rsquo; is a static analysis tool, basically it makes sure you\u0026rsquo;re code is good before you run it. There\u0026rsquo;s a whole bunch of linters out there. As a pretty stupid example, lets look at this python:\nHere\u0026rsquo;s our stupid simple example, here we want a program to show us the output of sin(1\u0026hellip;10)\n1 2 3 4 5 6  #!/usr/bin/python if __name__ == \u0026#34;__main__\u0026#34;: for i in range(0,10): math.sin(x) pass   If we run this code anyway, we\u0026rsquo;ll see python print:\nTraceback (most recent call last): File \u0026quot;/home/vega/test.py\u0026quot;, line 5, in \u0026lt;module\u0026gt; math.sin(x) NameError: name 'math' is not defined   This code intentionally has a few issues stopping it from running, thankfully the Linter, in my case VSCode\u0026rsquo;s Pylance, found them both:\n[5,9] : \u0026quot;math\u0026quot; is not defined [5,18] : \u0026quot;x\u0026quot; is not defined Here, it\u0026rsquo;s saying on Line 5, character 9, (where the word math starts) I have no function named math. Furthermore, on the same line, but character 18, the variable x is not defined. Running the program did already tell us that we didn\u0026rsquo;t have math defined, but this caught that x was undefined too. Let\u0026rsquo;s fix up the code, and add some print debugging while we\u0026rsquo;re at it.\n1 2 3 4 5 6 7 8  #!/usr/bin/python import math if __name__ == \u0026#34;__main__\u0026#34;: for i in range(0,10): print(\u0026#34;The value of sine(\u0026#34;,i,\u0026#34;) is \u0026#34;, math.sin(i)) pass      now running our code yields this:\nthe value of sine( 0 ) is 0.0 the value of sine( 1 ) is 0.8414709848078965 the value of sine( 2 ) is 0.9092974268256817 the value of sine( 3 ) is 0.1411200080598672 the value of sine( 4 ) is -0.7568024953079282 the value of sine( 5 ) is -0.9589242746631385 the value of sine( 6 ) is -0.27941549819892586 the value of sine( 7 ) is 0.6569865987187891 the value of sine( 8 ) is 0.9893582466233818 the value of sine( 9 ) is 0.4121184852417566 But, remember I said we want sine(1\u0026hellip;10)? The linter no longer has any problems listed, so what\u0026rsquo;s up? Well, that\u0026rsquo;s a limit of static analysis, it can only find errors that occur statically and it\u0026rsquo;s not able to read your mind. Here, the issue is that python\u0026rsquo;s range() function is inclusive of the first number, and not the second, so it should be range(1,11) to work correctly.\nSo, what can and can\u0026rsquo;t static analysis do (with some exceptions depending on language and linter):\nSTATIC ANALYSIS CAN:\n (Usually) tell you missed something trivial, like forgetting a semicolon at the end of a line (If in a strongly typed language) Tell you if you\u0026rsquo;re doing something stupid with types  int x = 10; String y = \u0026quot;test\u0026quot;; int z = x + y; would tell you to quit being a dunce   Let you know if you\u0026rsquo;re doing something that\u0026rsquo;s bad practice  Often code formatting, like warning you that a line is super fucking long and is why you have a tiny horizontal scroll bar.   Warn you about unused variables Warn you about undeclared variables and functions Warn you about some math fuckups (divide by 0, integer overflows, etc.) Warn you about some out of bound accesses (accessing the k+1 element of an array with k elements Warn you if you try to derefrence a null pointer Tell you about some dead (un-reachable) code. find some security issues find some memory leaks   STATIC ANALYSIS CAN NOT:\n Read your mind - if you write a an add(a,b) function as int add(int a, int b) { return(a * b) } it won\u0026rsquo;t know you fucked up Know what is relevant - it\u0026rsquo;s not uncommon to get a huge pile of warnings you don\u0026rsquo;t care about while doing initial development. This can make for a sea of problems that is just\u0026hellip; exhausting Always be right - There are occasional false positives Find all issues - It\u0026rsquo;s in the name, it\u0026rsquo;s static analysis. Not Dynamic. Your code is dynamic. It runs, it lives. Static Analysis is just doing a once-over to let you know if there\u0026rsquo;s something super obviously wrong, not doing in depth diagnostics. Stop you from writing stupid, inefficient, insecure, and otherwise shit code.  You want to implement the the obnoxiously slow recursive version of the fibonacci function? It won\u0026rsquo;t stop you.       [TODO], Clang Tidy, and using it in VSCode\n  [TODO]\ngdb + gef, gdbfrontend, Valgrind, https://cdecl.org/, etc. Mention Virtual v Physical adressing/translation\nhttps://github.com/hediet/vscode-debug-visualizer/tree/master/extension\noverflows\nAnalyzing the Assembly #  [TODO]\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce id tellus ultricies, tempor mi interdum, pulvinar orci. Proin volutpat tincidunt tellus, facilisis iaculis elit scelerisque vel. Integer auctor vulputate augue non vulputate. Duis id orci ac tortor sollicitudin semper. Sed vulputate ipsum in eros semper laoreet. Praesent justo odio, porttitor non rutrum vitae, dignissim vitae augue. Cras aliquam mi sit amet massa accumsan viverra. Sed nec malesuada libero, vel vestibulum lacus. Sed in facilisis turpis. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam quis tempus lacus. Proin fringilla bibendum erat. Nullam auctor efficitur lacinia. Donec dapibus, tellus sed porta facilisis, sem magna maximus odio, quis semper purus orci interdum velit. Nulla et maximus urna. Maecenas sed nibh in ligula rutrum fringilla.\n Art by @awr_hey, Rachel the Rox belongs to @PixelatedWah   [TODO]\nCutter, TIS-100, Shenzhen IO,\nPatching it #  [TODO]\nsource patching, binary patching\nFile formats #  [TODO] wav is easy, mp3 is hard.. show this. WAV format on 767 of POC||GTFO\nWhere to get more practice with low level programming #  [TODO]\nhttps://github.com/rby90/Project-Based-Tutorials-in-C\nFive Seconds of Donkey Kong. #plottertwitter\nThe NES has 2048 bytes of RAM. I snapshotted the RAM at each frame (60 fps) during 5 seconds of gameplay and plotted time series of the ones that changed at least once. pic.twitter.com/rtPT0mHiLD\n\u0026mdash; Michael Fogleman (@FogleBird) January 19, 2018  Fast Inverse Square Root - A Quake III Algorithm (YouTube)\n"});index.add({'id':42,'href':'/engineering/9-codecont/','title':"9 Codecont",'section':"Engineering",'content':"Chapter 9 - Finishing up the project #   Manifesto #   Everything should be a tool. A tool transforms data without adding to its source limitations. It\u0026rsquo;s a function: returns an output for a given input. A great tool is ambient. It should disappear and flow through your actions. You should never need it because it\u0026rsquo;s always at your hands. You should never ignore it because it\u0026rsquo;s never in your way. Tools should be adaptable, changeable and personalisable. If a tool does not perfectly fit your needs, you should be able to change, mix or remove its parts. Data should be reusable, text-editable, human-readable. Produces a higher chance that (1.) is passed. Tools should be lightweight, available and timeless. Computing power or internet speed shouldn\u0026rsquo;t be the limitation for most tasks. It works in the past and in the future.   \u0026ldquo;Only through open sources, open standards, human-readable formats and their independencies, might they survive this fleeting age of self-destructing informatics.\u0026rdquo; ‚Äï Devine Lu Linvega\n  - Hunor Karam√°n @ hex22.org\nPart 3, more advanced high level #  Modify the original python program to support a pretty cli input in a pretty way to make entries and visulize the data collected, parallelize some things, finally add a config file using yaml\nPart 4, getting our toes wet with embeded systems #  Finally, let\u0026rsquo;s go back and add a com port to the C code and send data to an arduino (can be simulated) and a TFT to display the currently active task and time elapsed.\nOther resources and articles: #  Good Coders Borrow, Great Coders Steal (StackOverflow Blog)\nThe Art of Code - Dylan Beattie (YouTube)\nBit Tricks (GitHub)\nCoding Challenge #12: The Lorenz Attractor in Processing (YouTube, The Coding Train) and Coding in the Cabana 4: Worley Noise (YouTube, The Coding Train)\nCoding Challanges #  Obfuscated C programs: Introduction (YouTube) Obvuscated C, https://www.ioccc.org/\nSource: https://gist.github.com/munificent/b1bcd969063da3e6c298be070a22b604 "});index.add({'id':43,'href':'/engineering/9p5-languages/','title':"9p5 Languages",'section':"Engineering",'content':"Chapter 9¬Ω - Programming Languages #  for (ü•ö = 1; ü•ö \u0026lt; üêî; ü•ö++){ //whatever } [TODO] talk about to why there are so many, pros \u0026amp; cons per domain, etc\nhttps://esoteric.codes\nLow Level #  C, C++, C#, ???? #  [TODO] - a lot, talk about the varieties and differences of C and C++ and C# and why thery\u0026rsquo;re good and bad, etc.\nBest-of-C\nAssembly #  Assembly code is specific to an Instruction Set Architecture or ISA, that means it is written for a specific family of processors. Most laptops and desktops today run on x86_64 processors made by either AMD or Intel, while most tablets and phones use processors that use ARM. Of course, there are many, many other instruction sets than these two. For example, 6502 assembly is particularly easy to write as it\u0026rsquo;s from an era (1) when programming at the assembly level was still common. On the other hand, RISC-V is a newer ISA that has been gaining a lot of traction due to it\u0026rsquo;s open nature.\nx86 ASM: #  x86 Assembly: Hello World! (YouTube, John Hammond)\nSay hello to x86_64 Assembly 1-8 by 0xAX\nor\nLet\u0026rsquo;s Learn x86-64 Assembly! Part 0 - Setup and First Steps\nPart 1 - Metaprogramming in Flat Assembler\nPart 2 - We\u0026rsquo;re Writing a Virtual Machine\nor for the very adventurous\nLinux-kernal-module-cheat [Github], has a nice guide to asm\n6502 #  \u0026lsquo;Furby\u0026rsquo; Source Code\nRust #   Rust‚Äôs rich type system and ownership model guarantee memory-safety and thread-safety ‚Äî enabling you to eliminate many classes of bugs at compile-time.\n Basically, Rust doesn\u0026rsquo;t let you screw up. It enforces writing code that\u0026rsquo;s safe (except when you specify you want to do something unsafe). It has a lot of other really nice features and makes using efficient data structures easy. Another really nifty thing about Rust is that it has a sort of at compile time garbage collection of sorts, for lack of a better way to put it. Read more on that here.\nI really recommend A half-hour to learn Rust\nNannou, is a creative coding framework for Rust that\u0026rsquo;s pretty nifty too.\nTo show the maturity, just check out https://www.redox-os.org/, a full OS written in Rust!\nAlso, it\u0026rsquo;s worth noting Rust can be used to generate Web Assembly (more about that below)\nOther sources to lean rust:\n https://doc.rust-lang.org/book/foreword.html Learning Rust the Dangerous Way (Cliff L. Biffle) Rust Performance Book  Go #   Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.\n The big claim to fame for go is, well go, which let\u0026rsquo;s you do really easy threading. (https://gobyexample.com/goroutines)\nOther sources to learn Go:\n https://tour.golang.org/welcome/1  Zig #   A general-purpose programming language and toolchain for maintaining robust, optimal, and reusable software.\nhttps://ziglang.org/\n Zig: A programming language designed for robustness, optimality, and clarity ‚Äì Andrew Kelley (YouTube)\nWriting a small ray tracer in Rust and Zig\nCrystal #  Crystal\u0026rsquo;s big thing is a Ruby (a very fast to write language) that\u0026rsquo;s compiled and fast. From the home page:\n1 2 3 4 5 6 7 8 9 10  # A very basic HTTP server require \u0026#34;http/server\u0026#34; server = HTTP::Server.new do |context| context.response.content_type = \u0026#34;text/plain\u0026#34; context.response.print \u0026#34;Hello world, got #{context.request.path}!\u0026#34; end puts \u0026#34;Listening on http://127.0.0.1:8080\u0026#34; server.listen(8080)   Seriously check it out at https://crystal-lang.org/\nD #  A lesser used competitor to C++ mostly. It\u0026rsquo;s very syntactically similar. Might be worth looking at.\nhttps://dlang.org\nNim #   Nim is a statically typed compiled systems programming language. It combines successful concepts from mature languages like Python, Ada and Modula.\nhttps://nim-lang.org/\n Further, Nim allows for easy \u0026lsquo;metaprogramming\u0026rsquo; which basically means you can [TODO]\nNim\u0026rsquo;s syntax is python-like-ish\nRed #  To be honest, I\u0026rsquo;m not sure Red belongs in the low level category, as it can be ran as a JIT language.\n Red is a next-gen programming language, strongly inspired by REBOL. Main features are:\n Human-friendly syntax Homoiconic (Red is its own meta-language and own data-format) Functional, imperative, reactive and symbolic programming Prototype-based object support **Gradual and multi-**typing Macros system Rich set of built-in datatypes (50+) Both statically and JIT-compiled to native code Cross-compilation done right Produces executables of less than 1MB, with no dependencies Concurrency and parallelism strong support (actors, parallel collections) Low-level system programming abilities through the built-in Red/System DSL Powerful PEG parser DSL included Cross-platform native GUI system, with a UI DSL and drawing DSL Bridging to the JVM High-level scripting and REPL console included Visual Studio Code plugin, with many helpful features Highly embeddable Low memory footprint, garbage collected Single-file (~1MB) contains whole toolchain, full standard library and REPL. No install, no setup Fun guaranteed!  https://www.red-lang.org/p/about.html\n If you\u0026rsquo;re interested, check out Red\u0026rsquo;s \u0026lsquo;Getting Started\u0026rsquo; page.\nHaxe #   Haxe is an open source high-level strictly-typed programming language with a fast optimizing cross-compiler.\nhttps://haxe.org/\n Java \u0026amp; Kotlin #  !\u0026gt; This is Opinionated Guides, so let me be clear, I really, really hate Java. It\u0026rsquo;s a langage that didn\u0026rsquo;t even become popular on it\u0026rsquo;s own merit, instead Sun Microsystem paid a fuck ton of money to push it- hence the \u0026ldquo;3 Billion Devices Run Java\u0026rdquo; Thing. I\u0026rsquo;m hopeful (albeit probably naively) that Oracle (Which bought Java from Sun) making Java a mess of licencesing as the \u0026lsquo;main\u0026rsquo; Java Virtual Machine goes paid (Read on Wikipedia) and suing Google will be the nail in the cofin for education using it and that it will die out with time. Criticism of Java (Wikipedia)\ndon\u0026rsquo;t. but, here\u0026rsquo;s why not to use Java:\nhttps://jakewharton.com/shrinking-a-kotlin-binary/\nWebAssembly #   WebAssembly (abbreviated Wasm) is a binary instruction format for a stack-based virtual machine. Wasm is designed as a portable target for compilation of high-level languages like C/C++/Rust, enabling deployment on the web for client and server applications.\nhttps://webassembly.org/\n While not technically a programming language, I wanted to bring it up and encourage you look into it to be used instead of JavaScript for real projects.\nhttps://www.assemblyscript.org is a TypeScript varient that can generate Web asm.\nhttps://webassembly.studio\nVult #  Vult Language Homepage\n\u0026ldquo;The Vult Language is a transcompiler to write high-performance DSP code\u0026rdquo;\nCall for Contribution #  If I missed a language you think I should have mentioned or would like to write a nice guide to your language of choice to be included in this Opinionated Guide please submit a pull request. I\u0026rsquo;d love to expand the Rust, Go, and Zig sections significantly!\n High Level #  [TODO] probably going to need to break this out into it\u0026rsquo;s own chapter\nPython #  Cython\n Cython is an optimising static compiler for both the Python programming language and the extended Cython programming language (based on Pyrex). It makes writing C extensions for Python as easy as Python itself.\n JavaScript #  Fine. I\u0026rsquo;ll talk about JS. But, please. For the love of god do not use this to make an Electron App.\nBefore going to far, I do want to mention that a chunk of my hatred for JS is solved using frameworks and that I totally acknowledge the utility of JS for making quick, often very cool, \u0026lsquo;sketches\u0026rsquo;. The creative coding community is amazing. Further, JS, as much of a total dumpster fire as it is, is responsible for the Internet as it is today weather thats a good thing or not.\nCoffeeScript #  https://coffeescript.org/\nTypeScript #  https://www.typescriptlang.org/\nFrameworks #  https://en.wikipedia.org/wiki/Comparison_of_JavaScript_frameworks\nAngular #  React #  Vue #  Node #  PHP #  don\u0026rsquo;t. but, here\u0026rsquo;s why not to use PHP: If you must, you might want to check out Hack: https://hacklang.org/\nRuby #   A dynamic, open source programming language with a focus on simplicity and productivity. It has an elegant syntax that is natural to read and easy to write.\nhttps://www.ruby-lang.org/en/\n For the Skript Kidd3s #   In programming and hacking cultures, a script kiddie, skiddie, or skid is an unskilled individual who uses scripts or programs developed by others to attack computer systems and networks and deface websites, such as a web shell. It is generally assumed that most script kiddies are juveniles who lack the ability to write sophisticated programs or exploits on their own and that their objective is to try to impress their friends or gain credit in computer-enthusiast communities. However, the term does not relate to the actual age of the participant. The term is considered to be derogatory.\nfrom https://en.wikipedia.org/wiki/Script_kiddie\n But, really, some absolutely incredible code has been written in the following languages. They more than serve their purpose and are generally some of the fastest \u0026ldquo;I just need a quick and dirty solution\u0026rdquo; options out there. Not everything needs a blazing fast hand optimized C implementation, and code that\u0026rsquo;s really just for personal use, to acomplish a one-off task, or that runs inside a bigger program (3D modeling software like Blender, Video editing software like Premier, Game development editors, etc.) should probably be easy to read and modify quickly. Rapid prototyping certainly has it\u0026rsquo;s place.\nJust don\u0026rsquo;t think you should use these to write efficient, safe code.\nLUA #  MoonScript #  AHK #  Tasker (Android) #  CMD.exe #  Bash, ZSH, Fish, Xonsh, wut? #  Node-Red #  n8n #  Is this even Programming anymore? #  Pure-Data #  vvvv #  tooll.io #  ORCŒë #  Esolangs, the hole goes deeper #  https://en.wikipedia.org/wiki/Esoteric_programming_language\nAwesome Esolangs (Github)\nhttps://esolangs.org\nBrainfuck Designer\nPiet\n Hello World implimented in Piet (Source)\n Puddlelang\nBlancmange\nRETURN\nMoonstroke - 3d\nNandlang\nbitman\nSpiral\n0@v*v^*v^*v^*v^*v^*v^*v^*v^*v^*v^*v^*v^*v^*v^*v^*v *^v*^v*^v*^v*^v*^v*^v*^v*^v*^v*^v*^v*^v*^v*^v*^v*^ v ^*v^*v^*v^*v^*v^*v^*v^*v^*v^*v^*v^*v^*v^*v^*v^*v= ***^v*^v*^v*^v*^v*^v*^v*^v*^v*^v*^v*^v*^v*^v*^v*^ * **********v^*v^*v^*v^*v^*v^*v^*v^*v^*v^*v^*v^*v^## *^v*^v*^v*^v*^v*^v*^v*^v*^v####################### v ^*v^*v^*v^**************v^*v^*v^*v^*v^*v^********** #########^v*^v*^v*^v*^v*^v*^v*^v*^v*^v*^v*^v*^v**** # ###############v^*v^*v^*v^*v^*v^*v^*v^*v^*v^*v^*v^* v*^v*^v*^v**************^v ==== X @ i:vX==:==== u@vX=@v i! ==XX ===v^== X vs.vuv @=== s=vv=X=$v= v =X X = # ===@v@X  ROT13 implimented in Spiral\n Tree\n ^ ^^|^^ ^^\\|/^^ H^ |/^^^ \\| e |/ ol~| \\| , 32| \\/ | \\ | W l \\| / \\ d |/ o \\/ !|r / \\/ |\\/ \\ |/ \\|  Hello World implimented in Tree\n Ziim\n Hello World implimented in Ziim\n SendStuff (unimplemented)\nPowerPoint is Turing Complete\nGraphics Programming #  look to chapter 26 for programming involving graphics, including node based shader editors and more\nFunctional Programming #  Look at Chapter 27 for Functional Programming\n Lisp, Haskell, Luna,\n Database (SQL) #  Look at Chapter 18 for information on Databases\nPopular video game consoles and computers, such as the Atari 2600, Atari 8-bit family, Apple II, Nintendo Entertainment System, Commodore 64, Atari Lynx, BBC Micro and others, use the 6502 or variations of the basic design.-from that same wikipedia article "});index.add({'id':44,'href':'/engineering/a0-wrappingup/','title':"A0 Wrappingup",'section':"Engineering",'content':"Wrapping up - Where to go from here #  Hey, so, you made it. I can\u0026rsquo;t give you a degree. But, I\u0026rsquo;m proud of you. Even if you skipped a chapter or two, you still put in work to improve yourself and learn something. That\u0026rsquo;s cool.\nBut, maybe you thinking \u0026ldquo;Okay, but now what?\u0026quot;\nIntegrating other interests #  There\u0026rsquo;s a lot more to life than computers and code and electronics and making and hacking. Sure, all of these things are fun, but you\u0026rsquo;ll burn yourself out if they\u0026rsquo;re all you do, especially if you\u0026rsquo;re just coding for code\u0026rsquo;s sake instead of making something cool.\nSo, make something cool and find other hobbies.\nI\u0026rsquo;m into making music, longboarding, writing, making digital art, gaming, and a whole buncha' things. I often find ways to mix my interests though, and those are the times I have the most fun.\nMusic? Make some synths or effects pedals- distortions are dead simple.\nLong boarding? Make an electric board, or something to track your speed.\nWriting? You can make interactive fiction, stories with choices!\nGaming? You could make your own game, make a mod, make cheats - only for single player or anarchy servers.\nYou get the idea. Having a passion for nerdy things like this guide has talked about is great, but don\u0026rsquo;t let it be all consuming.\nOn that note, a lot of smart people think they always need to be making something that contributes to society or that they always need to be working to feel fulfilled.\nDon\u0026rsquo;t.\nAnd look, I know it\u0026rsquo;s not that simple. I can\u0026rsquo;t say\n\u0026ldquo;You shouldn\u0026rsquo;t feel bad for playing video games in your free time\u0026rdquo;\nand have you be suddenly all good and able to relax.\nbut, please, being happy and doing things you enjoy, even if you have to force yourself, is often the most productive thing you can do.\nWork life balance is important.\nContributing to Open Source #  If you do need something to work on though, I really recommend adopting an open source project and giving it some contributions. You might even make some friends along the way.\nYou don\u0026rsquo;t have to start with something as big and as intimidating as the Linux kernel to contribute. You can do something as easy as fixing typos and adding content to a site like this one - hint, hint - or find some actual code repos on GitHub that are actively seeking maintainers and contributors.\n"});index.add({'id':45,'href':'/engineering/a1-linuxshell/','title':"A1 Linuxshell",'section':"Engineering",'content':"Appendix A- Using the Linux Shell #  ./missing-semester - The Shell\n./missing-semester - Shell Tools and Scripting\n./missing-semester - Data Wrangling\nWhat The Shell? #  Okay, first question you probably have after I\u0026rsquo;ve been using them interchangebly \u0026lsquo;What is a Shell and is it different from a terminal?\u0026rsquo;\nYes, they\u0026rsquo;re different, but before I talk about the shell it\u0026rsquo;s easier to talk about the Terminal.\nThe Terminal is a piece of hardware, or, rather was a piece of hardware. For example, here\u0026rsquo;s an old IBM 3151.\nNow, don\u0026rsquo;t mistake this for a CRT monitor like everyone was using in the early 2000\u0026rsquo;s, this is a terminal it has a serial connection in the back that only reciveves messages of text from the computer it\u0026rsquo;s attached to, and it can only display text on it\u0026rsquo;s dim green screen. Before the days of graphical computing everything was though a text only interface that you\u0026rsquo;d usually read on one of these. Fortunately, technology has gotten much, much better.\nSo in the exact same way that you can emulate an old video game console to play retro games on your computer, the terminal itself is emulated on Linux. If you really wanted to you could hook up an old terminal like the above, but it\u0026rsquo;s much easier to open a terminal emulator. Of course, just as there are multiple different emulators for some old consoles, there are multiple options for terminal emulation. A few different terminals are shown on the right in that picture (Cool Retro Terminal, Terminus Œ±, and Kitty), and just as hardware may have different features, different terminals can as well. Just like the hardware however, the terminals don\u0026rsquo;t do anything on their own, that is where the shell comes in. The shell is the program your terminal is usually running when it opens. By default on most Linux Systems it\u0026rsquo;s Bash and on Windows it\u0026rsquo;s CMD or Powershell, but there\u0026rsquo;s many, many alternative shells. These shells all serve a few main functions\n Work as a sort of dispatcher for other commands. For example, when you run ls the shell let\u0026rsquo;s ls print to the terminal before taking back control) Provide content redirection facilities. For example, when you runls \u0026gt; somefile the shell is handling the \u0026gt; which tells it to take the output from the running program (ls) and put it into the file (some file). Provide scripting capability. Allowing for programming by chaining other commands. We\u0026rsquo;ll look at this more in a bit. Provide basic niceities (history, tab completion, automatic suggestions, etc.)  But others may include some weirder things, for example, xonsh is a shell that will let you mix python and other commands. (note, it tends to act weird for somethings. I like having it as a secondary shell that\u0026rsquo;s available, but use ZSH as my primary shell.)\nIn the above picture, all of the text prompts on the emulated terminals are being generated by ZSH, the difference in color and font is due to the settings for the terminal emulator - again restating how the terminal handles \u0026lsquo;hardware\u0026rsquo; things while the Shell only sends text.\nAs a very brief aside, you may see pictures in some terminals. This is possible with some neat hackery both on part of the shell and terminal emulator. I\u0026rsquo;ve even seen some that can render 3D graphics. This isn\u0026rsquo;t your grandpa\u0026rsquo;s terminal anymore.\nThe Basic Commands #  Of note, while the majority of these commands should be available on nearly any unix system you may use, many of the alternate recommendations may not be.\n  man \u0026ldquo;man [command/topic]\u0026rdquo;, ex, \u0026ldquo;man ascii\u0026rdquo;, bring up an in depth manual page for a given command/topic.\n Alternative recommendation: tldr, actually digestible and much faster when it gives enough info    pwd - Print working directory - literally just a command to tell you the file path to where you are\n  ls - list - list the files/folders in the current directory, lots of flags available\n Alternative recommendation: exa    cd - change directory, if you can\u0026rsquo;t use this may god have mercy\n Alternative recommendation: j (for autojump)    mv - move (or rename) a file to a new location (or name)\n Alternative recommendation: rsync    rm - remove a file/folder\n  touch - create an empty file, or change last accessed time of existing file\n  mkdir \u0026amp; rmdir - make or remove an empty directory (folder)\n  cat - output the contents of a file\n Alternative recommendation: bat, less, more, fltrdr, or an editor like vim or nano    date - output current date and time\n  chmod \u0026amp; chown - change a file or folders permissions or owner\n  ln - make a symbolic / hard link (shortcut)\n  du \u0026amp; df - Disk usage and disk free, df will show you how much room you have left per disk, du serves to help find what\u0026rsquo;s using up your disk\n Alternative recommendation: ncdu doesn\u0026rsquo;t suck.    clear - clear the screen of text- (only use in scripts)\n Alternative recommendation: ctrl + l , much faster    passwd - change a users password\n  sudo \u0026amp; su - run a command as another user, typically root\n  head \u0026amp; tail - print a number of lines from the top or bottom of a file\n  tee - mostly used with pipes to print output to terminal as well as put it into a file\n  grep, sed, awk, tr - the \u0026lsquo;big four\u0026rsquo; commands used for text processing in a terminal. grep (and egrep) are used for search, for example running ls | grep myfile to confirm a file is indeed in a folder. sed is used for text/character replacement. awk is a programming language in it\u0026rsquo;s own right, used primarily for selecting text fields by separator, for example only printing the permissions column in the output of ls -l\n  w - show who is currently logged in and what they\u0026rsquo;re running, epically applicable on shared servers if you need to see if there\u0026rsquo;s an active ssh connection to your system\n  tar, gzip, bzip, zip - all used for making compressed folders (like .zip files)\n  ssh , scp, ftp - used for doing remote access, letting you run commands on one system from another\n  diff - show the differences between two files\n  sort - sort input by a number of criteria\n  uniq - remove duplicate entries\n fdupes is recommended if the goal is to identify duplicate files    export - used to set environment variables, these for example use export EDITOR=nano to use nano as your terminal text viewer by default.\n  systemctl - literally system control, wayyy to big to cover quickly, used for everything from setting services to run on boot, shutting down/restarting the system, to viewing logs. Look up Systemd for more information. This is probably the least-universal of the tools listed here, but most linux systems have switched to Systemd now for better or worse.\n  ip, ping, \u0026amp; dig - ip is used to view as well as modify aspects of network configuration at the more hardware-level, such as turning on/off a networking interface. ping allows you to see if you\u0026rsquo;re able to reach a site/ip address, and dig allows you to check if you\u0026rsquo;re able to turn a domain name to an ip, such as checking the ip address that archlinux.org points to with dig archlinux.org\n  ps - process management: listing processing, finding the parent of a particular process, etc.\n Alternative recommendation: procs (Github)    free - display information about system RAM usage\n  top - a graphical-ish view of the running processes, ram, and CPU usage\n Alternative recommendation: htop    kill, murder a process in various ways\n  whereis - find the location of an executable, ex whereis ls will tell you it\u0026rsquo;s in /usr/bin/ls\n  wget, curl - retrieve a web page\n  Alternative recommendation: lynx, w3m, or brow.sh\nHeads up, you may ocassionly see installation instructions for things on github that ask you to use curl www.example.com/script.sh | bash - DON\u0026rsquo;T. It\u0026rsquo;s not safe. Instead, you can curl the script, check that it\u0026rsquo;s something you want to run with cat script.sh, and then run it with ./script.sh.     Tab Completion and faster navigation #  Probably the most useful shortcut for using the shell is tab completion. This is used when you need to type a really long command or chain of commands, say I want to run ncmpcpp, a name that is both long and hard to remember, instead of just typing the full name I can type ncm and press tab, and ta-da suddenly the full name is inserted. If you happen to have another package that has multiple possible endings say you want to run lstopo but you have ls, lsusb, lstopo all on your system, most shells will display a menu underneath with all the possible options. This is nice for commands, but the true power comes in file names, say I want to run cat /etc/pacman.d/mirrorlist while that\u0026rsquo;s not too awful to type out, you could easily type cat /e press tab, get cat /etc/ add pac to get cat /etc/pac press tab, get cat /etc/pacman.d/ type mir and tab and get the full command, while that sounds complicated it actually speeds using the command line up rather significantly and prevents spelling mistakes\nNext up for navigation is directory shortcuts, these can be massive time savers, the most obvious is ~ which is just short hand for the location of the current shell users home directory, so in my case ~ is the exact same as typing out /home/vega. The next two have already been touched on which are . for the current directory and .. for the previous directory. Depending on the shell and arbitrary number of dots may take you back and arbitrary number of directories. Give it a shot! If nothing else you can always use ../../.. to navigate back as necessary. Finally, - represents the last directory you were in so if your in ~/Downloads and then cd /etc/pacman.d/, running cd - will bring you back to downloads.\nThe most advanced form of built in linux navigation comes in the form of pushd and popd, which as their names imply push and pop directories to a stack (a special kind of list) of directories. Like a stack of any item you can put or \u0026lsquo;push\u0026rsquo; an item on top, and take or \u0026lsquo;pop\u0026rsquo; an item off. Running dirs -v will show you a numbered list of the stack, you can navigate to the top item with popd or and arbitrary item with cd ~# where # is the number as shown by dirs -v.\nFinally, there\u0026rsquo;s one more super handy way to get around your file system but it\u0026rsquo;s a non-standard tool so most systems or servers you use other than your own will not have it installed, and that\u0026rsquo;s autojump. Put simply it takes a good guess about where you want to go by only typing part of the name of a folder you\u0026rsquo;ve navigated to before, so say you have a long file path /mnt/data/archived/january2000/pictures/family/vacation/ you can get back to it again by simply running j vac which is obviously much simpler. It works the vast majority of the time in practice, only having issues if you don\u0026rsquo;t include enough letters leading to ambiguity.\nI/O redirection #  for the hard core, you can read good documentation here: https://www.tldp.org/LDP/abs/html/io-redirection.html\n stdin (\u0026lt;) (\u0026laquo;)  [TODO]\n stdout (\u0026gt;) (\u0026raquo;)  [TODO]\n stderr (2\u0026gt;) (2\u0026raquo;)  [TODO]\nNote, \u0026amp;\u0026gt; redirects both stderr and stdout\n pipes ( | ) and nammed pipes  pv - Pipe Viewer\nFinally, the weirdest and rarely used \u0026lt;\u0026gt; operator can be used to directly attch file descriptions and read/write files dirctly, this is rearely used as it\u0026rsquo;s kind of a pita, but if you need to script something advanced it\u0026rsquo;s available. Stollen from the above advanced link:\n [j]\u0026lt;\u0026gt;filename\nOpen file \u0026ldquo;filename\u0026rdquo; for reading and writing, and assign file descriptor \u0026ldquo;j\u0026rdquo; to it. If \u0026ldquo;filename\u0026rdquo; does not exist, create it. If file descriptor \u0026ldquo;j\u0026rdquo; is not specified, default to fd 0, stdin.\nAn application of this is writing at a specified place in a file.\necho 1234567890 \u0026gt; File # Write string to \u0026ldquo;File\u0026rdquo;. exec 3\u0026lt;\u0026gt; File # Open \u0026ldquo;File\u0026rdquo; and assign fd 3 to it. read -n 4 \u0026lt;\u0026amp;3 # Read only 4 characters. echo -n . \u0026gt;\u0026amp;3 # Write a decimal point there. exec 3\u0026gt;\u0026amp;- # Close fd 3. cat File # ==\u0026gt; 1234.67890\nRandom access, by golly.\n Wild Cards \u0026amp; Regex #  Regular Expressions or \u0026lsquo;Regex\u0026rsquo; are an incredibly powerful tool used to match strings in a logical way. For example, say you wanted to find all the phone numbers on page that started with the area code 555, the next three digits were any number, and the last four digits could be represented as either numbers or letters, and \u0026lsquo;-\u0026rsquo; separating each group. With regex that\u0026rsquo;s easy, the regular expression for this looks like:\n5{3}-[0-9]{3}-[a-zA-Z0-9]{4}\nWhich while I could explain, I think just staring at that a little while should make it obvious and ideally the mental effort will lead to a better understanding. Regex can do a lot more than this though. Go ahead and checkout https://regex101.com and give it a shot.\nregex can be used with a bunch of common tools like awk, sed, and grep. This means you can do fancy things like chain ls and grep together with a pipe to find any file matching a pattern or chain commands to rename any file containing characters which may be invalid in NTFS ( The file system used by Windows) to be valid before doing a transfer.\nAlso, you may find The Regular Expression Visualizer, Simulator \u0026amp; Cross-Compiler Tool useful.\nIf you\u0026rsquo;re really lazy, Grex is \u0026ldquo;[automatically generates] a single regular expression from user-provided test cases. The resulting expression is guaranteed to match the test cases which it was generated from.\u0026rdquo;\nNote that not all things that seem like a good fit are a good fit for regex, for example, email.\n[TODO] https://www.debuggex.com\nRegular Expressions - Enough to be Dangerous (YouTube, Engineer man)\nCrex (Octobanana git repo) - \u0026ldquo;Explore, test, and check regular expressions in the terminal.\u0026rdquo;\nJob Control #  [TODO]\n  fg: brings a specified suspended job from the background to foreground.\n  bg: send a specified job to the background or lists background jobs if no jobs are specified\n  jobs: list all running jobs\n  \u0026amp; operator: when added after a command, it runs the job in the background and outputs its PID.\n  Shortcuts #  Jobs #   Ctrl+z: suspend a job to the background. Ctrl+c: sends a SIGNINT to the current running job and kills it; if sent before entering a command, it clears the current line in the prompt Ctrl+d: sends a quit signal - can be used to exit certain applications or exit a terminal jobs -l or ps -a: see jobs  Screen #   Ctrl+l: clear screen except current line Ctrl+u: clear current prompt line  Command History #   Ctrl+r: search through command history in reverse  Directory Navigation #    cd -: to last dir\n  cd: go to home if entered without arguments\n  reptyr to move\n  pushd/popd \u0026amp; dirs to use path stack\n  history, and !‚Ññ to run that cmd\n  ctrl-left/right to nav args\n  expansion with mv /path/meh.{md,txt}\n  Aliases and customization #  Aliases #  Aliases are custom names assigned to commands. The command alias will display the current aliases set in your shell. An alias maps to a specific command which is run when the alias in entered. Aliases are useful if you have long commands that are used often. Entering alias suinstall='sudo apt-get install' will temporarily allow you to use suinstall instead of typing sudo apt-get install. Any switches and arguments the command takes can be used with the alias. The alias is lost when the current terminal session is closed.\nTo make aliases permanent, add them to your shell\u0026rsquo;s configuration file (.bashrc or .zshrc).\nCustomization #  Aliases are one way to customize your shell. Most shell customization occurs in the shells configuration file, usually stored as a hidden file in the home directory. .bashrc and .zshrc are the configuration files for bash and zsh. The files are loaded every time a terminal is started up and can set up its environment by loading aliases and custom functions and setting terminal colors and variables like PATH and EDITOR.\n[TODO]\nShell Scripting #  [TODO] xargs, sed, awk, fzf, grep,\nhttps://shellmagic.xyz/\nhttps://wiki.bash-hackers.org/\n[TODO] text on what shell scripting is  source: b0rk on Twitter, check out https://wizardzines.com for more   Minimal Safe Bash Script Template (Maciej Radzikowski)\nAlternative Shells #  When we installed arch we actually changed the default shell from bash to zsh, but there are other options such as fish, csh, and xonsh among others\n[TODO]\nAlternative commands #   bat  alternative to cat, capable of syntax highlighting and line numbering   exa, lsd  alternatives to ls, eaiser on the eyes You could also use ranger or nnn two fully featured terminal file browsers   fd  altertnative to find, doesn\u0026rsquo;t suck   htop, gtop  alternatives to top, doesn\u0026rsquo;t suck   prettyping  alternative to ping, pretty   diff-so-fancy, icdiff, Delta  alternative to diff, but better   ncdu and dust  while much slower than du it\u0026rsquo;s great for finding out what\u0026rsquo;s eating storage space   choose  user friendly, simple alternative to awk/cut   ripgrep  \u0026ldquo;ripgrep is a line-oriented search tool that recursively searches your current directory for a regex pattern. By default, ripgrep will respect your .gitignore and automatically skip hidden files/directories and binary files. ripgrep has first class support on Windows, macOS and Linux, with binary downloads available for every release. ripgrep is similar to other popular search tools like The Silver Searcher, ack and grep.\u0026rdquo; TLDR: Search into your text files really fast with regex support. RGA is like ripgrep on steroids- seaches though PDFs, ebooks, office docs, compressed files, etc.   echowo  alternative to echo, but significantly furrier    Useful Non-Stock CLI Tools #    tldr\n tldr, \u0026lsquo;for too long didn\u0026rsquo;t read\u0026rsquo; provides a quick, easy to read version of the man page for many common linux commands. Forget how to use tar ? just run tldr tar    autojump\n refrence above description in faster navigation    mpd + ncmpcpp\n \u0026lsquo;music player daemon\u0026rsquo; and \u0026lsquo;ncurses music player client plus plus\u0026rsquo; are two cli tools that work in tandem to provide an experiance that I presonally find superiour to any graphical music player    irssi\n full featured IRC client, chat right from your terminal    screenfetch\n get some nift stats about your terminal, add to your shell\u0026rsquo;s RC file to be one of the cool kids    moreutils\n \u0026ldquo;moreutils is a growing collection of the unix tools that nobody thought to write long ago when unix was young.\u0026rdquo;    hr\n Need some way to visually seperate things, this literally just makes a horizontal line in the terminal    fltrdr\n Wanna read at 1000wpm, this is the tool for you.    crex\n test regular expressions in the terminal    lynx, w3m, browsh\n Browse the web from a terminal (not a joke and actually useful)    entr\n monitor file system for changes    noti\n send a graphical system notification when a command finishes    progress\n start a command and have no way to see what its doing (rsync, cp, etc)? This is your tool    figlet, toilet, banner\n makes big text, run figlet Your Text Here and see your text in big, ascii letters    no more secrets\n reveal text in a martix effect.. I\u0026rsquo;m streching the meaning of useful here    stress-ng\n stresstest your system in pretty much any super specific way you can think of, or hammer your cpu to test an overclock    pandoc\n convert between damn near any text format to any other format    taskwarrior\n keep track of To-Do\u0026rsquo;s and tasks, can also be paired with timewarrior for timetracking    waifu2x (many forks available)\n Upscale and de-noise images zoom-and-enhance style but for real- this ones' a bit GPU intensive because it uses AI    youtube-dl\n despite the name this tool can download videos or audio from almost any page on the internet, even supporting playlists in many cases too.    gallery-dl is good for grabbing albums from photo hosting websites\n  rat\n \u0026ldquo;Compose shell commands to build terminal applications\u0026rdquo;    magic-wormhole\n tool for getting a file between two systems easily and secure, just run wormhole send and wormhole recive on the respective systems    Ix, Gist\n Paste tools, like pastebin    DMIDecode\n get info from BIOS    hexyl\n pretty terminal based hex viewer    UXY\n  \u0026ldquo;UXY tool also wraps some common UNIX tools and exports their output in UXY format.\u0026rdquo;\n\u0026ldquo;UXY is a tool to manipulate UXY format, which is a basically a two-dimenstional table that\u0026rsquo;s both human- and machine-readable.\u0026rdquo;\nThis gives a nice format for manipulation of commands though pipes for super complex shell scripting\n    lsof\n list what files a runnig process has open    glow or mdcat\n display markdown files in the terminal    While some of these may be included, they\u0026rsquo;re some of the OG addons or tools to make included things better:\n  tmux\n multiplex your termianal, open multiple terminals in your terminal, usefull in non-graphicas ttys espically    vim + extensions (neovim, spacevim, etc)\n the old school text editor meets new school    GDB + gef\n GDB, the original debugger, has it\u0026rsquo;s faults. GEF, a config file for GDB on steroids, fixes many of them. While originally made for exploit developers, many people use it for everyday debugging    resh\n replacement for ctrl+r history seach    optipng, jpegoptim\n Each works with it\u0026rsquo;s respective image format and does some trial-and-error magic to re-compress the file no-lossy-er than it was to save space. No info loss but often a large file size reduction!    Displaying Data in the terminal #  [TODO] info about various librarier and tools that show data using text based graphics or via terminals that can render SVGs/images  üí°FAQ about displaying stuff in a terminal pic.twitter.com/XQBOezyJAx\n\u0026mdash; Kate (but with plastic reindeer antlers on) (@thingskatedid) October 13, 2020  graphviz provides dot among other tools, this thread also mentions libsixel, plot.awk, KGT (Kate\u0026rsquo;s Grammer Tools), libFSM for turning regex into FSMs.\n  A note on Graphical-ish terminal programs #  like brow.sh [TODO]\nCommon Graphical Linux Utils #  [TODO]\nMostly taken from https://wiki.archlinux.org/index.php/List_of_applications and https://github.com/Kickball/awesome-selfhosted\nGraphical Enviroments++ #  Gnome, KDE, Pantheon,\nRofi, Polybar, j4,\nCompton\nNitrogen, pywal, (feh),\nFree Graphical Utilities #  Office \u0026amp; Daily #  Libreoffice, Xournal++,\nthunar + bulk rename, nautilus, Filezilla, Deluge, qBitTorrent,\nFirefox, Min, Vivalidi,\nMarktext, Typora, Notable\nGeogebra\nEvolution\nEvince\nA/V #  Feh, Nomacs\nRawtherepee, Krita, Gimp, Darktable\nInkscape,\nBlender, Pencil2D, OpenToonz\nGoxel,\nPithos, Gnome-Music,\nCadence (jack2)\nAudacity, Ardour, LMMS, non, Radium\nGiada\nVCV Rack\nGuitarix\nPureData, SonicPi, ORCA\nProcessing, VVVV,\nVLC\nDaVinci Resolve\nCheese, Motion, OBS\nSocial #  Thunderbird\nLBRY\nDiscord, Telegram, qTox, HexChat, SRain, Riot/Fractal ,\nProgramming #  Okteta\nGitkraken\nCode, Atom, Sublime, Code::Blocks, Eclipse, Netbeans, IntelliJ, Sublime\nPyCharm, Spyder\nCutter, Node-Red\nEtherape/cap, Wireshark\nEngineering #  FreeCAD, LibreCAD, KiCad, CircuitSim, Fritzing\nPulseView, Arduino, PlatformIO\nSystem #  Alacritty, urxvt, Deepin-Terminal, Hyper,\nBaobab, Filelight, GParted, VeraCrypt\nSyncthing\nEtcher\nlsusb, lshw, lstopo, usbview,\nFirewall frontend?\nClamAV\ndeepin-screesshot, scrot\nIRL #  Gnome-Maps\nGnome-Weather\nCelestia\nStellarium\nOther #  GnuRadio, SDRAngel\nPaid Graphical Utilities #  Renoise, Bitwig\nSelf hosted / Services #  Netdata\nVPN (Wiregaurd)\nSnort, Suritica\nGitea, Gitlab\nMathics\nLAMP stack\nCouchpotato, headphones\nmpd, ampache\nOwncloud, NextClound\nSamba\nDAT, IPFS\nConvos.by\nIx , 0bin (pastebin)\nMathics\nTaskWeb (TaskWarrior)\n"});index.add({'id':46,'href':'/engineering/a2-cheat/','title':"A2 Cheat",'section':"Engineering",'content':"Appendix B - Cheat Sheets and quick info #  Electrical Part Tables #  [TODO]\n  package types\n  reading specs\n  datasheets\n     Markdown #  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50  # heading1 ## heading2 ### heading3 --- on it\u0026#39;s own line will give you a diveder line * for a bulleted list * alternatively, - works too - ~~The world is flat.~~ for a strike though, **to bold** *to itilicize* 1. for a numbered list 2. ‚Äã```python ‚Äã``` for a code box, where \u0026#39;python\u0026#39; can be whatever language you want syntax highlighting for `single backticks (note, these aren\u0026#39;t apostrophes) for in line code too` \u0026gt; lets you make a block quote markdown also lets you use inline HTML, so, depending on the intent to render out to a pdf or webpage, you may be able to embed YouTube Videos or Tweets or whatever like I have through out this guide. [title](https://www.example.com) for links ![alt text](image.jpg) for images | Tables | Can | | ------ | ------- | | Be | Made | | Like | This | Here\u0026#39;s a sentence with a footnote. [^1] [^1]: This is the footnote. - [x] This is a task list - [ ] As we go down this page - [ ] Some of this syntax may not be supported $ may let you type inline math in \\LaTeX $, and $$$ for blocks, same as the code syntax 1^2 or 1~2 may let you write super and sub-script text as well.   Nice Libraries #  Multi-Language #  Ultralight - \u0026ldquo;Next-generation HTML renderer for apps and games\u0026rdquo;\n Bit like Electron, but less shit. Supports C, C++, C#, Rust, Java, and Go\n C #  Awesome-C - \u0026ldquo;A curated list of awesome C frameworks, libraries, resources and other shiny things. Inspired by all the other awesome-\u0026hellip; projects out there.\u0026rdquo;\nNuklear - A single-header ANSI C immediate mode cross-platform GUI library\nGuiLite.h - \u0026ldquo;!The smallest header-only GUI library (4 KLOC) for all platforms\u0026rdquo;\nC++ #   Keep in mind everything from the above should still work\n https://github.com/alandefreitas/matplotplusplus\nRang - \u0026ldquo;A Minimal, Header only Modern c++ library for terminal goodies\u0026rdquo;\nNanoGUI - \u0026ldquo;Minimalistic C++/Python GUI library for OpenGL, GLES2/3, Metal, and WebAssembly/WebGL\u0026rdquo;\nMidifile - C++ classes for reading/writing Standard MIDI Files\nElements - \u0026ldquo;lightweight, fine-grained, resolution independent, modular GUI library.\u0026rdquo;\nFast IO - \u0026ldquo;a new C++20 library for extremely fast input/output and aims to replace iostream and cstdio. It is header-only\u0026rdquo;\nInteractive C++ for Data Science - Like Jupyter Notebooks\nRust #  Nannou - Creative Coding Framework for Rust\nGo #  Lorca - \u0026ldquo;A very small library to build modern HTML5 desktop apps in Go. It uses Chrome browser as a UI layer. Unlike Electron it doesn\u0026rsquo;t bundle Chrome into the app package, but rather reuses the one that is already installed.\u0026rdquo;\nPixel - \u0026ldquo;A hand-crafted 2D game library in Go\u0026rdquo;\nPython #  NumPy Illustrated: The Visual Guide to NumPy (Lev Maximov)\nPampy - Pattern Matching for Python\nRich - library for rich text and beautiful formatting in the terminal\nManim - \u0026ldquo;Animation engine for explanatory math videos\u0026rdquo; used by 3Blue1Brown\nhttps://github.com/mitsuba-renderer/nanogui\nPyNuklear - Nuklear (see above) binding for python\nGuietta - \u0026ldquo;A tool for making simple Python GUIs\u0026rdquo;\nKivy - GUI framework\n"});index.add({'id':47,'href':'/engineering/a3-bom/','title':"A3 Bom",'section':"Engineering",'content':"Appendix C - BOM #  As the guide isn\u0026rsquo;t anywhere near a usable state yet, this page should be ignored for the most part. OpGuides is free. Unfortunately all the tools and programs you\u0026rsquo;ll need to follow along aren\u0026rsquo;t necessarily. While you probably could do everything in this guide without getting the things in this Bill OF Materials (BOM) it will massively help to have it.\nI\u0026rsquo;ll do my best to keep the cost as low as possible though. If you need help confirming something in your cart is correct just hit me up.\n   Item Price/item (approx, in USD) Quantity     Backup Hard Drive 40/Tb optional   Thumb Drive 8 1   Arduino nano 5/board 2   ESP8266 5/board 2   STM32F103C8T6 w/ programmer 8 Optional   ICE-Breaker FPGA 80 Optional   74-series logic IC\u0026rsquo;s 25 Optional   Assorted Resistors 10    Assorted Potentiometers 5    Assorted Capacitors (Ceramic) 10    Assorted Capacitors (Electrolytic) 10    Assorted Inductors 5    Assorted transistors 8    Assorted Diodes 10    Op-Amps (UA741) 5/10    Assorted LEDs 5    Assorted Crystal osc     555 Timers 4/10    Hook up wire     jumper wire     Solid Core wire  Optional   Breadboard 10/3pcs, dont cheap out. Cheap ones super suck. These are decent. 3 should be plenty, but more if you\u0026rsquo;ll have more in-progress projects   Proto PCB 12 ish, but varries Something like this, which has pre connected lanes like a normal breadboard is nice ‚ïÆ(‚îÄ‚ñΩ‚îÄ)‚ï≠ depends on how many projects you want to keep   Buttons 7/50pcs ~32 (They break easily)   DIP Switches 8/5pcs ish, get 4 or 8 switch blocks or a variety pack at least 32 total switches   7-segment display 1.5/IC For learning, get the raw pins, not the multi modules.  Optional   tiny OLED display 6 ish, varries by size and pixel count. Optional   Accelerometer 4 ish, varries by accuracy and other features Optional   Servo Depends on size and what you want to do with it. Just to learn, a 2 \u0026lsquo;micro servo\u0026rsquo; is fine. Optional   Relay board 6 ish for a 4 relay traditional relay board  not a significant difference to go for Solid State relays, which are much quieter and faster switching Optional   Lab Power Supply 35 for a shit, 300ish for something multi channel and nice  As with the OScope, it\u0026rsquo;s up to you on the investment 1, 2 optional   Soldering Iron (TS100) 75 (full kit)    Solder 9/spool. Varies in quality, you get what you pay for.  You\u0026rsquo;ll want to make sure it\u0026rsquo;s pretty thin.    Flux 10 or so. Varies in quality, you get what you pay for.    Osciliscope 30 for a shit, 350 for a good one, not really an in between :( Optional-ish   Multimeter 35    Logic Analyzer 10 for a cheap Saleae logic clone, ~65 for a good one  obviously you can spend as much as you want for  more channels or faster reads 1   Software Defined Radio 150ish for a HackRF or Lime Mini optional   Proxmark3  very optional             TOTAL BASE ;OPTINONAL     Also we\u0026rsquo;re going to be building a little server, for this you\u0026rsquo;ll want\n   Item Price Quantity     ASRock J3455-ITX 75 1   ITX, SFX case (APEX MI Series MI-008, with power supply) 50    DD3L 40/8Gb 1   1Tb 2.5\u0026quot; hard drive (Redundant Storage) 55/dive 2   120Gb SSD (OS) 20    Extra Network interface card 25 Optional   Total (Barebones)     Total (Optional)      OR\nYou can find a used Dell Poweredge r610 or poweredge 1950. Many of these will come with out drives, but this option is probably cheaper than the above for better specs. However; these servers are LOUD, loud enough to not be comfortable in the same room and absolutely drink power. As mentioned in the server section, the hardware you use really doesn\u0026rsquo;t matter, you\u0026rsquo;ll just want at least two hard drives, an OS drive, and multiple network interfaces are encouraged. These things can all be added to just about any desktop though, so going to electronics thrift stores or auctions and finding a desktop works too.\nGetting things for cheap #  salvage, auctions\n"});index.add({'id':48,'href':'/engineering/a4-politics/','title':"A4 Politics",'section':"Engineering",'content':"Appendix D - Ethics and Engineering #  While I talked about it briefly in Chapter \u0026ldquo;7¬Ω - Consequences\u0026rdquo;, I\u0026rsquo;d like to devote this page to just how big of a deal ethics can be in engineering.\n[TODO] self driving car choices example, https://www.moralmachine.net, AI being racist, deepfake loods, The Code I\u0026rsquo;m Still Ashamed Of.\nAmazon Demands Echo not be referred to as a Microphone (Jason Koebler on Twitter, from Vice.com) \n"});index.add({'id':49,'href':'/engineering/a5-fixxingissuses/','title':"A5 Fixxingissuses",'section':"Engineering",'content':"Appendix E - It Was Working Just A Second Ago\u0026hellip; #  Alright, so your code/electronics/computer/life was working fine just a second ago, and now it\u0026rsquo;s just not working at all. Take a deep breath, and relax. Let\u0026rsquo;s work though this.\nGrab a rubber duck #  This won\u0026rsquo;t always be applicable, but assuming it\u0026rsquo;s a system- code, or electronics, or a math problem, something that can be analyzed - explain it. Out loud. To a rubber duck. If it\u0026rsquo;s code, do so line by line. if it\u0026rsquo;s electronics, go connection by connection. Don\u0026rsquo;t assume anything is working, just drop all assumptions and find the problem.\nCheck your assumptions again. #  Did you actually check all of your assumptions? Compilers aren\u0026rsquo;t always perfect. Your oscilloscope probe might need calibrated. Don\u0026rsquo;t dive into the weeds until you\u0026rsquo;ve double checked everything first, but if you still can\u0026rsquo;t figure it out, dig for what assumptions you\u0026rsquo;re making. Did something actually change between now and when it was last working? Is something else giving you false readings?\n\u0026hellip; just make sure to stop short of questioning your own sanity.\nFix by working comparison #  Yeah, not always applicable advice, but if you have something that\u0026rsquo;s even similar, first check that it still works, then check for what the differences are between what you\u0026rsquo;re doing and the reference you have.\nCheck your Test Cases are Valid #  What are your conditions for success? Are you even testing for these conditions correctly?\n[TODO]\nPeople expect technology to suck because it actually sucks\n"});index.add({'id':50,'href':'/engineering/a6-resources/','title':"A6 Resources",'section':"Engineering",'content':"Appendix F - Other Great Resources #  https://news.ycombinator.com/\nhttps://slashdot.org/\nhttps://hackaday.com/\nhttps://lobste.rs/\nhttps://snapzu.com/\nhttps://serializer.io/\nhttps://stackoverflow.com/\nhttp://textfiles.com/\nhttps://www.alchemistowl.org/pocorgtfo/\nhttps://n-o-d-e.news/\nhttps://glitch.com/\nhttps://media.ccc.de/\nhttps://media.ccc.de/\nCrash Course: Comptuer Science, from PBS\nLearning Linux #  https://linuxjourney.com\nYoutube ElectroBoom\nCNLohr\nN-O-D-E\nLiveOverflow\nTom Scott\nbigclive\nAdoredTV\n3Blue1Brown\nBryan Lunduke\nLevel1Techs\n Podcasts https://theamphour.com/   Github info pages #  https://github.com/dwmkerr/hacker-laws\nhttps://github.com/lorin/resilience-engineering\nhttps://github.com/alex/what-happens-when\nhttps://github.com/Awesome-Windows/Awesome\nhttps://github.com/dwmkerr/hacker-laws\nhttps://github.com/cirosantilli/x86-assembly-cheat\nhttps://github.com/kozross/awesome-c\nhttps://github.com/rby90/Project-Based-Tutorials-in-C\nhttps://github.com/trimstray/the-book-of-secret-knowledge\nhttps://github.com/terkelg/awesome-creative-coding\nhttps://github.com/toplap/awesome-livecoding\nhttps://github.com/sindresorhus/awesome\nhttps://github.com/apsdehal/awesome-ctf#readme\nhttps://github.com/carpedm20/awesome-hacking#readme\nhttps://github.com/sdnds-tw/awesome-sdn#readme\nhttps://github.com/jagracey/Awesome-Unicode#readme\nhttps://github.com/netspooky/Simple-Virtual-CPU\nBooks and Papers #  https://github.com/EbookFoundation/free-programming-books#readme\n!\u0026gt; You may want to use a VPN for the following:\nhttps://scihub.org/ \u0026amp; http://libgen.rs\nBlogs #  http://blog.cleancoder.com/\nDIY Pages #  https://www.instructables.com/circuits/\nNon-Technical #  https://longform.org/ https://www.metafilter.com/ https://relevant.community/relevant/top\nSome really cool, inspirational people #  Security #  Netspooky @ https://twitter.com/netspooky , https://twitter.com/netspooky LiveOverflow @ https://twitter.com/LiveOverflow https://twitter.com/ANDnXOR https://twitter.com/DCFurs https://twitter.com/gynvael https://twitter.com/ZonkSec https://twitter.com/Viss https://twitter.com/hacks4pancakes https://twitter.com/malwareunicorn https://twitter.com/da_667 https://twitter.com/0xCODEs https://twitter.com/zerosum0x0 https://twitter.com/x0rz \u0026ndash; https://discord.0day.rocks/\nProgramming/Live coding #  RavenKwok @ https://twitter.com/RavenKwok Neauoire \u0026amp; RekkaBell @ https://merveilles.town/@neauoire , http://100r.co/ https://twitter.com/RavenKwok https://twitter.com/generateme_blog https://twitter.com/manoloidee\nJust generally nerdy #  https://twitter.com/Level1Techs / https://twitter.com/tekwendell https://twitter.com/Snowden https://twitter.com/oshpark https://twitter.com/climagic https://archive.org/ https://media.ccc.de/v/31c3_-_6373_-_en_-_saal_6_-_201412291600_-_the_only_thing_we_know_about_cyberspace_is_that_its_640x480_-_olia_lialina#t=621\nAndroid Apps #     Name \u0026amp; Link Description Screenshot/Demo     Wolfram Alpha app for https://www.wolframalpha.com, gives unlimited access to some of the paid features from the website.    SensorLab     Spectroid     BusyBox     ConnectBot     IP Tools     Intrace     zANTI     Wifi Analyzer      "});index.add({'id':51,'href':'/engineering/a7-history/','title':"A7 History",'section':"Engineering",'content':"Appendix G - History #  Adam Savage\u0026rsquo;s Computer History Collection! (Youtube)\nPreserving data #  https://media.ccc.de/v/31c3_-_6373_-_en_-_saal_6_-_201412291600_-_the_only_thing_we_know_about_cyberspace_is_that_its_640x480_-_olia_lialina#t=3641\nPreserving hardware #  "});index.add({'id':52,'href':'/engineering/a8-oddthings/','title':"A8 Oddthings",'section':"Engineering",'content':"Appendix H - Other odd things #  // Potentially move these elsewhere\nPolygot Files #  elf hacking, POC||GTFO\nStrange thought #  Main not fn\norder of variable declaration (paged out 001 pg 33)\ngeneric midi use (paged out 002 pg 24)\nrop\nBlog posts that don\u0026rsquo;t fit anywhere else but that you should totally read #   https://hackaday.com/2020/02/20/we-ruined-status-leds-heres-why-that-needs-to-change/ Foone one weird adapters (Twitter Thread) Building the World\u0026rsquo;s Weirdest Fan (YouTube) Minetest Circuit Challenge (YouTube) A post by the guy who made Task Manager https://n-o-d-e.live/zine/NODE_VOL_02.pdf  "});index.add({'id':53,'href':'/engineering/engineering/','title':"Engineering",'section':"Engineering",'content':"Hey there, #  My name is Vega. I know there are plenty of tutorials and ways to learn online be it on YouTube, SkillShare, or online classes provided for free by various universities. The difference here is there is no content you\u0026rsquo;ll never use, no babysitting, and lots of bias as a result of personal experience. My views of things like what programming languages are bad or what hardware you should buy to learn on will be expressed directly and bluntly. This isn\u0026rsquo;t to say I won\u0026rsquo;t explain my reasoning, just that I\u0026rsquo;m not going to be apologetic when I say Javascript, PHP, Java, Arduino (at least the 328p), and Windows 10 are trash - though I will still likely talk about all of these things.\nI by no means expect you to share my same biases, in fact, I hope you do not and that at one point or another we can discuss why you think I am wrong, as that is the only way I can learn.\nWith that said, what is this exactly?\nThis is a guide for understanding the power the humble electron has in our lives. Electricity, digital logic, code, computers, embedded systems, these things are all around us every second of everyday. As I type this I\u0026rsquo;m wearing a smart watch, I have a smart phone in my pocket, and I\u0026rsquo;m using a desktop computer. Each of these devices contains dozens of smaller computers, power supplies, wireless interfaces, etc. My goal with this is to teach you how all of this works and how to use it from transistors to high level code to useful user applications.\nI will be assuming you are of reasonable technical ability already- that is the concept of how to proficiently use most types of generic software like text editors, navigation of a file manager, etc- furthermore, I will avoid going into high level math, chemistry, and physics as much as is practical- mostly because knowing these things is typically not actually useful in the daily life of someone who works on any of this beyond those that are doing cutting edge research or are planning to teach, in which case you should actually go to college instead of reading this. For everyone else, welcome. This is the document which can save you going to college and taking classes full of useless information you will inevitably forget and for which employers don\u0026rsquo;t care about to begin with.\nFollowing along will require a few things. The first of which is dedication and time. If you don\u0026rsquo;t have the desire to put in at least a little bit of work there is simply no way I can help, that said, if you\u0026rsquo;re reading this instead of watching Netflix I believe that\u0026rsquo;s already proof enough you want to learn. Next is hardware and software, namely you\u0026rsquo;ll be needing a few development boards and linux, but I\u0026rsquo;ll get into those with time; however, for convince, everything referenced to be downloaded or physical items to be purchased are all listed in Appendix C\nBefore we get started there are a few things I recommend reading and watching first. These should give you a bit of an overview of some of the things that will be covered to give you at least a tiny bit of familiarity as each concept comes up.\n I recommend this overview of the topics covered in CS: Map of Computer Science by Dominic Walliman\nAlso by Walliman, a video on How to Read Math and the cheat sheet from it:\nHow To Read Math, Cheat Sheet\nIf you want to go though a really gentle introduction to a lot of what this guide will cover, This Crash Course: Computer Science series on YouTube is pretty good.\n"});index.add({'id':54,'href':'/engineering/ep1-community/','title':"Ep1 Community",'section':"Engineering",'content':"‚Ö† - Community #  The only way to be successful in this journey is to make friends along the way. Some of this gets really, really difficult. You will get stuck. Having friends to help makes it possible. Find group chats on telegram, join IRC channels, get on some forums, and ask questions on Reddit. Working with people is a lot more fun and you\u0026rsquo;ll learn so much more.\nBeyond that, having inspiration each day can be a huge booster shot to your motivation and creativity. Some sites I use nearly daily to finding good new material are:\nHacker News\nHackaday.io\nHackster.io\nBleeping Computer\nMorning Cup Of Coding\n While much less active, I\u0026rsquo;ve found some of these to have great information as well:\nN-O-D-E\nPOC||GTFO\nDefcon Videos on YouTube\n  (There are many more links in Appendix A6 - \u0026lsquo;Other Great Resources\u0026rsquo;\nOh, and to mention it now\nxkcd #1954 Yes, there is always a relevant XKCD, and yes, you will always feel like everyone knows more than you. Don\u0026rsquo;t stress about asking stupid questions:\n Frequently in chats, whether telegram, IRC, slack, or discord, someone says something like this:\n Anyone know rust? Having an issue.\nHow that question is often read:\n Can someone to commit to being able to solve my problem with rust, spending as much time as necessary, without them even knowing what the actual problem is or if it\u0026rsquo;s even a rust problem?\nHopefully it\u0026rsquo;s clear why questions like this rarely result in direct answers.\n There are very few people who could be called experts in every facet of whatever is being asked Imposter syndrome is common Most people won\u0026rsquo;t write that blank check for time/help commitment  Instead, share:\n The goal - \u0026ldquo;Trying to query for a list of tags on a post\u0026rdquo; - See The XY Problem The problem - \u0026ldquo;I\u0026rsquo;m getting back these results\u0026rdquo; The expectation - \u0026ldquo;but it should be these results\u0026rdquo; Any context or previous research you\u0026rsquo;ve done If possible, a simplified example. 3v4l for php, jsfiddle for html/js/css, etc. are great, otherwise a paste site. What you\u0026rsquo;ve already tried  This allows anyone there to try to help. Many skills transfer well to other languages or platforms. At minimum, you might get an idea for something you haven\u0026rsquo;t tried yet. Sometimes you\u0026rsquo;ll even solve your own problem while narrowing down the simplest possible test case.\nOh, and don\u0026rsquo;t snark at well-intentioned answers. It\u0026rsquo;s rude and discourages participation.\n \u0026ndash;from https://bad.pet/q/\nThe technical community can be ruthless with it comes to expecting people to have \u0026lsquo;basic\u0026rsquo; knowledge sometimes, but don\u0026rsquo;t let it get to you. I do want to provide some general ideas that, while not universally, are generally shared among the engineering and surrounding community:\n‚Ö† - Any good solution is fast, easy to understand, and above all elegant.\n‚Ö° - Any task which can be automated should be - if a computer can do it faster than you then you shouldn\u0026rsquo;t do it by hand\n‚Ö¢ - Any problem that has been solved in a way that satisfies the above two rules should be looked at for reuse before reinventing the wheel\n‚Ö£ - Any question which has already been answered should not be left to a human to answer again.\n‚Ö§- All knowledge should be free‚Ä†\n‚Ä† within practicality, trade secrets are obviously a thing, and I\u0026rsquo;m not crazy. I mean like publicly funded research and what not. While the specifics of this rule vary amongst engineering types it is generally a core belief.\nOn the note of point ‚Ö¢\u0026hellip;\nThough the one I was stressing here was really ‚Ö£, you should always check the internet before asking in chat. It\u0026rsquo;s not that we\u0026rsquo;re being rude, it\u0026rsquo;s just a matter of courtesy. If you\u0026rsquo;re unsure of the answer or it\u0026rsquo;s validity in your case, by all means ask, but asking good questions, and only when necessary, will quickly help you make friends in chat much faster. Note, there is one exception: if chat is currently talking about something that you know don\u0026rsquo;t know about and it\u0026rsquo;s already relevant to the conversation, it\u0026rsquo;s totally reasonable to interject and ask for a super quick primer on what\u0026rsquo;s going on or a relevant link. This may seem obvious, but a good number of technical chats die because of exactly the aforementioned problems. (or gatekeeping, but that\u0026rsquo;s a whole different matter\u0026hellip;) so please don\u0026rsquo;t ask things a search engine can already answer (but don\u0026rsquo;t feel bad asking a question when the all mighty Google can\u0026rsquo;t)\nTLDR: RTFM \u0026amp; STFW http://www.catb.org/esr/faqs/smart-questions.html#rtfm\nFinally, and I can\u0026rsquo;t stress this enough, I think balancing your creativity among other interests and looking for ties between them can lead to more good than any of thing mentioned above. I enjoy playing music, reading, and writing, so I find inspiration in these media. There are countless electrical hardware and software tools that use hands on programming when playing music. In books I find ideas for what an author may have thought only futuristic when written. I never know when my mind will strike similar gold when writing for myself. Find a hobby and bend it to this as you go along. Like photography? Lean about the internals of a camera. Like cars? Look up how the ODB2 interface actually works. Nothing is magic and the internet will likely have answers and give you ways to apply this knowledge that you care about.\nIn general I\u0026rsquo;ve found site specific forms and Reddit to be the best platforms for most things, with some others finding their main following in other places though. For example I\u0026rsquo;m in a large technical chat group with Furries on Telegram and some open source tools still thrive on IRC. Also, if your reaction to that is \u0026ldquo;Furries? How can that be relevent?\u0026rdquo; Well, normally it\u0026rsquo;s not. Most of what we talk about is just normal engineering-y topics, but having something else in common helps. That said, there\u0026rsquo;s more cross over in any community than you might think:\nCustom protogen commission auction Now up ! watch the video for more detailshttps://t.co/TAeAPNtVEB\nauction link:https://t.co/Q7ZxERjZW5 pic.twitter.com/aq5iM2nOVE\n\u0026mdash; Expensive black cheese (@JtingF) January 11, 2020  No matter what you care about, know there\u0026rsquo;s a wide range of communities that would be thrilled to have you, and you can always combine what you learn here with any of the other interests you have to make the things your passionate about better!\n The maker and hacker communities tend to focus a lot on popularity and getting your name out there. While obivously it\u0026rsquo;s cool to do so, don\u0026rsquo;t let likes and followers be your motivation. Make cool things to make cool things, and people will come. The number one best thing to see on the internet is someone that is passionate about something sharing those passions. It\u0026rsquo;s better to have a dozen good friends that share those passions, than 25k followers that just go \u0026lsquo;oh, neat\u0026rsquo; anyway.\nPopularity doesn\u0026#39;t matter (1/2) pic.twitter.com/ae1VV2uocc\n\u0026mdash; üùß Wolfy Vero üùß (@Wonivero) October 17, 2020  Further reading #  (Seriously all of these are very good)\nHacker Spaces are Awesome! (YouTube, LiveOverflow)\nAssholes: A Probing Examination\nDeath to Bullshit (mirror)\nHacker-Laws (Github)\n"});index.add({'id':55,'href':'/engineering/ep2-howtolearn/','title':"Ep2 Howtolearn",'section':"Engineering",'content':"‚Ö° - Learn how to learn #  I\u0026rsquo;m going to keep this short and sweet: Nobody learns (effectively) by being shown what to do. You can watch hundreds of hours of people playing guitar, even explaining how they do it, but you wont be able to randomly pick one up and play if you never have before. Furthermore, as much as you can learn from direct reading and instruction, it has it\u0026rsquo;s place and limits. This guide, book, whatever you want to call it, was never meant to be followed like instructions. You should go out on your own and poke around, get lost in the weeds as you go. If you find a topic dull, don\u0026rsquo;t read it as in depth. I don\u0026rsquo;t want you wasting your time.\nBreak things. Make mistakes. By the end of this you should know what a burning resistor smells like, what it\u0026rsquo;s like to try to recover from a Linux system that just won\u0026rsquo;t boot, and how it feels when a bug has been eluding you for hours and your code still doesn\u0026rsquo;t work. The only way that happens (unless I made a mistake which is also probable) is if you try ideas when you get them and do more than what\u0026rsquo;s in this book.\nThis struggle is part of learning and proof that you\u0026rsquo;re doing well. These experiences should teach you things in their own right. The smell of burning electronics may help you diagnose a future circuit, the lesson to not fall into a pit of technical debt may help when a bug has engulfed your code, and the late night of terminal only based work as you try to get your computer working again will teach you more than this book ever can.\nTo quote someone much smarted than myself:\nTips to really Master Something\n1. Move away from basics as quickly as possible\n2. Constantly expose yourself to stuff you don\u0026#39;t understand and later revisit what you thought you understood (but actually didn\u0026#39;t)\n3. Do cross-disciplinary research to develop a deeper understanding https://t.co/vHm223qoYe\n\u0026mdash; LiveOverflow üî¥ (@LiveOverflow) September 5, 2018  You should also constantly be looking for how to break, modify, or look into how things work. For example, try right clicking on this sentence and select Inspect, like this:\n OwO, What's this?   You should see a \u0026lt;p hidden\u0026gt; element, try editing it to remove the word hidden, then the text from that elment should appear above this. (this sometimes doesn\u0026rsquo;t work correctly right away, so you might have to right click and inspect twice, but then you should see the HTML source for this section of the page)\nBut try to take this lesson elsewhere, try renaming a .docx (word) file to a .zip and extracting it, or looking though the ventalation of your electronics to see if you can see what makes them tick, whatever. Curiosity is my primary incentive to learn, and often taking a peak into the innards of electronics or code or machines can reveal a lot.\nFinally, there\u0026rsquo;s\n Cunningham\u0026rsquo;s Law states \u0026ldquo;the best way to get the right answer on the internet is not to ask a question; it\u0026rsquo;s to post the wrong answer.\u0026rdquo; (source)\n but note, you should keep in mind the standard warning that comes when first using sudo if you plan to use Cunningham\u0026rsquo;s law to your advantage:\n We trust you have received the usual lecture from the local System Administrator. It usually boils down to these three things:\n Respect the privacy of others. Think before you type. With great power comes great responsibility.   Other things:\nHow to learn things at 1000x the speed (Pranay Prakash)\nMy Engineering Axioms (Martin Rue\u0026rsquo;s Blog)\n"});index.add({'id':56,'href':'/other/coolhardware/','title':"Coolhardware",'section':"Others",'content':"Cool Hardware #    LTP-305G/HR 5x7 LED Matrix displays \u0026amp; Driver, article on (Hackaday)\n     Core Memory Shield for Arduino by Jussi Kilpelainen on Tindie\n     "});index.add({'id':57,'href':'/other/funlinks/','title':"Funlinks",'section':"Others",'content':"Other cool things that I want to promote but don\u0026rsquo;t fit elsewhere so I\u0026rsquo;m making this list here: #    Brimestone Valley Mall\n The year is 1999. Lurking somewhere between Hot Topic and the food court, five misfit demons from Hell kill time inciting sin in a suburban shopping mall. When the lead singer of their band goes mysteriously missing, the demons only have two weeks to find him before they play the biggest gig of the millennium - or face the wrath of Satan herself.\n   17776\n I, uhh, don\u0026rsquo;t know what to tell you what this is\u0026hellip;\n   Spacebuckets\n \u0026ldquo;A Space Bucket is a DIY indoor garden that is made by stacking plastic containers alongside lighting (CFL or LED) and airflow (PC or other fans). It is an enclosed growth chamber that can be used to garden many kinds of plants\u0026rdquo;\n\u0026ldquo;The /r/SpaceBuckets subreddit is our main forum\u0026rdquo;\n   Stones on are.na (idk, I just like them okay\u0026hellip;)\n  Hey, and while we\u0026rsquo;re at it how about growing Moss too\n  Neat (furry) Visual Novel.\n It\u0026rsquo;s super cheesy, it\u0026rsquo;s furry, but it made me think and honestly I\u0026rsquo;m really glad I played it.\n   Durden and Arcan\n A new take on the display server and desktop environment, not production ready, but super weird and interesting\n   The blog of Szymon Kaliski\n Tons of cool projects involving creative code, art, music, etc.\n   Gear Cutting\n \u0026ldquo;The gear template generator program is a program for printing paper templates for cutting out gears\u0026rdquo;\n   Killing Hitler (Reddit Writing Prompt Response)\n  \u0026ldquo;No 0 Days\u0026rdquo; (Reddit)\n  Video about Anime and the blending of cultures (YouTube)\n  Geological Phonograph\n  Hemmingway App\n Don\u0026rsquo;t take what this says as a hard truth, but it does a decent job of \u0026lsquo;grading\u0026rsquo; your writing for readability and complexity.\n   Instantly Age Alcohol - Ultrasonic Treatment (Though Emporium on YouTube)\n  The Egg - A Short Story (Kurzesaght on YouTube)\n  Quiz from AV Husky on weird connectors\n Answers    A WiFi-enabled power supply in a AA battery form factor, designed for sex toys\n  I Spent 11 Years Working on This Line Rider Track by David Lu\n  LIFE BEYOND II: The Museum of Alien Life (Youtube, MelodySheep)\n A weird video with really good CGI about potential alien life\n   Wild House Pilot\n \u0026ldquo;A Wolf, a Panther and a Tiger are the friendly roommates of this Wild House. They live in a wicked world with ambiguous moral codes, in which everyone is an idiot and nothing really works\u0026rdquo;\n   The Complete Guide to Magnet Implants (YouTube, The Thought Emporium)\n  You Are Two (YouTube, CGP Grey)\n This is about people that have had the link between each half the brain split\n   Tech Icons: Cliff Stoll (YouTube, AT\u0026amp;T Tech Channel)\n I love Cliff Stoll, he\u0026rsquo;s like the ultimate cute grandpa that\u0026rsquo;s also obsessed with Klien Bottles.\n   Jsting-F\u0026rsquo;s awesome electronic Fursuit\n  Cyberdecks for High-Tech Low-Lifes (Tales From The Dork Web)\n and ARM \u0026amp; x86 Team Up in No Compromise Cyberdeck (Hackaday, Tom Nardi)    A mix between Minesweeper and a Bullethell (tic-80, Artemis Minesweeper)\n  Hexagonal Chess (tic-80, HexChess)\n While I\u0026rsquo;m at it, there 5D Chess With Multiverse Time Travel too.\n   A weird astroids clone (tic-80, Ship\u0026rsquo;em up)\n  I thought I made a hard game and then speedrunners totally destroyed it. Here is what that feels like. (Zukalous, Imgur)\n  TEXTREME - a juicy text processor, with a rythm mode (Itch.io)\n  An Orbit Map of the Solar System (Tabletop Whale)\n  A Thread from @foone about how cat girls can weard headphones\n  A Twitter Thread about PayPal blocking all transactions with the word \u0026ldquo;Tardigrade\u0026rdquo;\n  Operation Mindfuck Vol. 4, a video from rC3 (YouTube)\n Isomorphic keyboards, Truchet Tiles, and much much more.\n   The Best Things and Stuff of 2020 (Fogus' Blog)\n  uwu, are you looking at my source https://www.youtube.com/watch?v=o9l4EiYFZjg\n"});index.add({'id':58,'href':'/webdev/','title':"Webdev",'section':"Home",'content':"https://excalidraw.com\nAs a sort of key for navigating this site you\u0026rsquo;ll probably see things like this:\n Bulleted lists like this  dividers,\n headings #  subheading #  sub-subheading #  how far does this gooo? #   task lists (that you can\u0026rsquo;t interact with) like this   Quote boxes like this\n ?\u0026gt; extra information boxes like this\n!\u0026gt; WARNINGS like this\nexpandable footnotes- click the number \u0026ndash;\u0026gt; (1) (currently there\u0026rsquo;s a bug where these may not always work(2))\nLike This From what I can tell this bug is related to the white space in the document around the hidden html element that this text is contained in  tables\n   that look     a bit   like this    $\\LaTeX \\ math \\ blocks \\ like \\ this \\frac{1}{\\sum_{n=1}^{10}n}$\nunderlined, bold , and italics\ninline code\nand code blocks\n1 2 3 4  for i in range(1, 10): # code blocks like this sum = sum+i return 1/sum   Added stuff mostly useless to users of this site: #  Static Site Generators vs Docsify #  Useful HTML snippets and ideas #  iframes #  Summary #  Using embeds #  ?\u0026gt; reddit embeds seem to be particularly fucky ¬Ø\\(„ÉÑ)/¬Ø\n !\u0026gt; note, youtube \u0026ldquo;copy embed code\u0026rdquo; depends on current size on screen of the embed, this can be fixed a bit by changing the start to \u0026lt;iframe width=\u0026ldquo;100%\u0026rdquo; height=\u0026ldquo;450\u0026rdquo;\nThe ULTRA spicy pillow (normal battery for comparison) pic.twitter.com/yS1OUW7YJD\n\u0026mdash; techsupportgore (@techsupgore) August 18, 2020    listitem listitem listitem  Markdown can be wrapped in html to apply theming or do other things:\n  Click to expand  Abc Abc   cinwell website\nhttps://vincentgarreau.com/particles.js/\nhttps://codepen.io/alexzaworski/pen/mEkvAG\nhttps://codepen.io/P1N2O/pen/pyBNzX\nhttps://codepen.io/saransh/pen/BKJun\nhttps://codepen.io/fabiowallner/pen/ozkoYo\nhttps://codepen.io/lbebber/pen/EVxvWN\nhttps://codepen.io/wagerfield/pen/wftcE\nhttps://medium.com/chingu/decrypting-effect-c5fc2a071354 \u0026amp; https://github.com/bartobri/no-more-secrets#the-nms-library\n"});index.add({'id':59,'href':'/design/analog-design/','title':"Analog Design",'section':"DESIGN",'content':"[TODO]\nWhat makes it \u0026lsquo;analog\u0026rsquo; #  Pen/Pencil and Paper #  Charcol #  Paints #  Scupting #  Fabrics #   Source: https://www.reddit.com/r/LongFurbies/comments/iqwhsd/this_is_my_very_long_daughter_calliope_crayon/\n "});index.add({'id':60,'href':'/phil/arguments/','title':"Arguments",'section':"PHIL",'content':"Philosophical Arguments #  [TODO]how to construct a phil argument\nNot simply accepting \u0026ldquo;Because that\u0026rsquo;s how it is\u0026rdquo; #  I\u0026rsquo;m writing this at @292.78 on Day 132 of 12,020. I\u0026rsquo;m typing on a Dvorak, split, ortholinear keyboard in a markdown document using Arch Linux instead of M$ Word on Windows, and if you\u0026rsquo;d like you could view this document using DAT or IPFS or LBRY. I find music off the 12 tone scale interesting, and while I know 432 vs 440hz, isn\u0026rsquo;t going to open my 3rd eye, listening to microtonal or music made with just intonation is still something interesting to me.\nAlright, so maybe I was being a bit cheaky. I don\u0026rsquo;t actually use that weird time format (though I do use the year part semi-regularly). The rest though, yeah. And honestly, it\u0026rsquo;s a lot of putting my money where my mouth is, so to speak. You see, I think we live in a world that is unfortunately resistive to change. While we as a species are creating technology that allows us to exchange ideas at a rate that was unfathomable even when I was born in \u0026lsquo;98, were still resistant to actually accepting that many of the things we do are rooted in ideas that just don\u0026rsquo;t really make sense anymore. We\u0026rsquo;re artificially limiting ourselves and our culture because we\u0026rsquo;re scared. Because at the root of things our monkey brains are shouting at us \u0026ldquo;What we\u0026rsquo;re doing works! Don\u0026rsquo;t touch it! You might break it! Then what would we do!\u0026rdquo;. Because of this we\u0026rsquo;ve done a lot more harm than just causing more RSI from bad keyboard layouts or using crappy calendars. We reinforce values in each generation that are done because that\u0026rsquo;s how it is, from the prevalence of circumcision to the tenancy for women to get custody. I\u0026rsquo;m not even making an argument for or against either of those things 1. Rather, I\u0026rsquo;m trying to make clear that as a society we tend to have values and practices that are passed from generation to generation with no thought as to why we do things the way we do or how we may improve them.\nThis is probably the primary motivating factor behind many of my political beliefs. In this section of OpGuides, various philosophical frameworks will be at play, often conflicting with one another as, unfortunately, I think the world is too complicated for one core idea to govern right from wrong. These will likely include ideas that support equality, drawing upon ideas such as Rawl\u0026rsquo;s \u0026lsquo;Veil of Ignorance\u0026rsquo;2. In general, I think this stance is quite literally the opposite of Conservatism in both the definitional and practical sense that we see it today. If you view yourself as a conservative I ask that you do please stay and read though. While I will likely primarily disagree with your ideas I still think we could both stand to learn from each other and that we both stand to benefit by having our respective views challenged where we do disagree.\nWhat we should do about this:\n     Though I think you can pretty much guess that I think given the Kellog\u0026rsquo;s Fueled, anti sexual liberty history of Circumcision in the US I think it\u0026rsquo;s bull shit. Further, I think prioritizing women for custody does make some sense as there is some biological context, but I\u0026rsquo;ve also seen, as the son of a family law attorney, how frequently this is the default even when the mother is most certainly not the most capable or loving parent. \u0026#x21a9;\u0026#xfe0e;\n Rawl\u0026rsquo;s idea here is sorta kinda close to The Egg, a video from Kurzgesagt. \u0026#x21a9;\u0026#xfe0e;\n   "});index.add({'id':61,'href':'/phil/basic-phil/','title':"Basic Phil",'section':"PHIL",'content':"  OPINION          Before anything else, I think it\u0026rsquo;s necessary to point out this is opinionated guides. Philosophy involves looking at the world around us and asking ourselves \u0026lsquo;why\u0026rsquo;, then making arguments for how things should be different and what moral frameworks work best to come to conclusions that optimize for something like happiness or \u0026lsquo;goodness\u0026rsquo; in the world. Given that both morals and \u0026lsquo;goodness\u0026rsquo; are not absolutes, the best way for me to write this guide and actually be of service to you as a reader is to provide my opinion and talk about why I believe what believe both from a researched \u0026lsquo;here are the facts\u0026rsquo; sense and from a \u0026lsquo;here is the moral framework that, with these facts, brought me to this conclusion\u0026rsquo; sense. You don\u0026rsquo;t have to agree with my opinions, I\u0026rsquo;d rather you didn\u0026rsquo;t actually, as agreement means talking to you doesn\u0026rsquo;t expose me to new ideas.(1) Instead it\u0026rsquo;s my hope that reading my opinion, seeing how I present arguments, and seeing the research that goes into them will show you how to think about how to apply facts to moral frameworks. I also want to toss up a content warning, for, like, everything. We\u0026rsquo;re gonna get messy. This means assisted suicide, abortion, religion, gun rights, war, labor rights, etc. Just look at the chapters on the left and it reads as a shopping list of topics not to bring up at a family gathering. Basic Philosophy #  First, let\u0026rsquo;s start really simple- what is philosophy. Well, for one, Basically all pages on Wikipedia link back to it, so it\u0026rsquo;s obviously pretty fundamental. But, why would that be?\nHere\u0026rsquo;s the head of the Wikipedia entry on Philosophy:\n Philosophy (from Greek: œÜŒπŒªŒøœÉŒøœÜŒØŒ±, philosophia, \u0026lsquo;love of wisdom\u0026rsquo;) is the study of general and fundamental questions about existence, knowledge, values, reason, mind, and language\n Alright, so it\u0026rsquo;s the study of knowledge? wouldn\u0026rsquo;t that make it pretty much the study of everything? Well, yeah. Pretty much. Before each branch of the sciencies had enough of a foundation in it\u0026rsquo;s own right to, well, branch off it was just called \u0026lsquo;Philosophy\u0026rsquo;.\nThis pretty much means that today Philosophy is what\u0026rsquo;s left- the questions for which there are no concrete or provable answers. This can often be incredibly frustrating. But, what Philosophy as a modern study really gives us is a framework to approach and talk about these tough problems. In general this gives the three big branches of philosophy today. Natural, Metaphysical, and Moral Philosophy. Honestly, I find the first two mostly consist of people trying to look smart and are mostly not applicable to anyone, unless you\u0026rsquo;re really into debating the existance of (a) God(s). (2)(3)\nTo be transparent and tell you my biases up front, I'm WEIRD, that is I'm from a Western, Eduated, Industrialized, Rich, \u0026 Democratic Country- The US. I'm also white, bisexual, liberal with a tinge of libertarian, and Gen Z. Yes, I know I'm throwing shade here. This isn't to say Metaphysical and Natural Philosophy are useless. I really enjoy watching videos on YouTube of people pointing out the many, many logical issues that aries when you try to make a Omnipotent (all-powerfull), Onmiscincent (all-knowing), Onmi-present (in all places), Omnibenevolent (all good) being. My favorite argument being the 'If God is all knowing does he know what it's like to feel lust, if he does how is he all good?' or 'If god is all powerful can he microwave a burrito so hot that he can not eat it?' ... you get the idea. This is turning into a massive tangent. Here, have a link (The Problem of Omnipotence - YouTube)  Okay, I also have to concede, there's a lot of really thought provoking stuff in the relm of metaphysics. I espically love Exurb1a's YouTube Channel as well as a lot of video games, short stories, and other works that dabble in this. For example, I recently read 17776 Football, and I keep thinking about it. That's what makes metaphysics cool. It keeps you thinking and can inspire you in interesting ways - espically for being creative with writing, art, or music. I just don't see direct value in going in to it in this guide. Please do actually check out some of the amazing content on the subject though!  Alright, so, let\u0026rsquo;s stick to (mostly) moral philosophy (often just called Ethics) then. What does that entail?\nUtilitarianism #  Consequentialism #  Kantianism #  Moral Relativism #  Trolley Problem, common arguments\n Some other terms you might hear #  BreadTube\n[TODO] Ask HN: Learning Philosophy (Hacker News)\n"});index.add({'id':62,'href':'/design/basics/','title':"Basics",'section':"DESIGN",'content':"The Basics of Art and Design #  Hue, Saturation, Value #  Something strange you should know about color (YouTube)\n[TODO] - rule of thirds, contrast, etc.\nPerspective #  https://twitter.com/miyuliart/status/1337423295814176768 (NSFWish I guess?)\nSome good advice, #   reuploading a few \u0026quot;furgonomic\u0026quot; tutorials ive made in the past pic.twitter.com/85resjONab\n\u0026mdash; sketch (@skexchs) November 3, 2020  Things like digi shoes, tail holes in clothing, tail bags, etc. really help make characters feel like they\u0026rsquo;re part of an actual world.\nCat Girl Headphones (Twitter, @foone)\n"});index.add({'id':63,'href':'/phil/community/','title':"Community",'section':"PHIL",'content':"Community #  Adopting new societal values of acceptance #  Furries, internet culture, LGBT, Gender Identity vs need for legal identity\nUnderstanding the common good #  Encryption, Tradgedy of the commons\nCommunity #  Small and connected #  You May be Using Mastodon Wrong (Carlos Fenollosa Blog)\nEcho Chambers #  Data and fact driven sharing #  Moderation #  ensuring that we\u0026rsquo;re self moderating one another\nSomething I\u0026rsquo;ve written while thinking about this #   As I walked to my car after class I could smell the ashes of a cigarette and hear the echos of a train scraping on its tracks. The cool foggy air held still beams of light. It looked like a scene from Blade runner, but I couldn\u0026rsquo;t help but feel like the Android\u0026rsquo;s of it\u0026rsquo;s inspiration, lusting after something to make me feel alive.\nThe drive home was mentally taxing. The fog so dense that cars ahead seemed to be balls of light floating in the distance and keeping sight of the lines to stay in my lane took a constant effort. After a little over half an hour of focus and 80\u0026rsquo;s synthwave music I pulled into my driveway.\nMy day had been long, and I hadn\u0026rsquo;t had a good meal to speak of so I heated up some leftovers and talked with my parents as I ate. My mom was distracted by writing her next book and my dad was lost in a sea of Facebook memes, which he was showing us between intermittent laughter. I wasn\u0026rsquo;t really amused, in fact I was irritated.\nI ranted to him about something I know he\u0026rsquo;s heard from me before, the spheel of how Facebook is evil. How computers deprive us of our privacy and we willingly feed a machine that is well documented in its atrocities, and as usual he failed to see the point.\nHe used the same defense everyone does \u0026ldquo;All of my friends are on Facebook\u0026rdquo;\nHow many of those \u0026lsquo;friends\u0026rsquo; do you really talk to? How many of them just repost meaningless memes and jokes, while providing no insight, let alone basic updates on their life.\nSome of my absolute best friends are people I\u0026rsquo;ve met online or only know online, but none of them are people I stay in contact with though Facebook.\nThis isn\u0026rsquo;t a Facebook rant though, its a personal connection rant. So many of my friends and family consume social media to the point they don\u0026rsquo;t want to admit it but don\u0026rsquo;t even take the time to maintain the relationships they do care about. That stereotype about calling your mother? Yeah, there\u0026rsquo;s a point of reality in it. I dont know what it was like before Facebook, honestly, I really don\u0026rsquo;t. But I think we valued the connections we did have a lot more. Our friends may have been those from high school sure, but I know there used to be more tight night local communities that shared interests, but now the convince of social media has devalued the local meeting of friends. Which is ironic in a way. I\u0026rsquo;ve been in communites which would have never stood a chance of existing without social media to bring together the band of misfits but Ive also seen social media start massive amounts of drama that spiral out of control and destroy the local community.\nWorst of all though, I\u0026rsquo;ve seen social media devalue the importance of what people do. I figure maybe one or two people will read to this point, having lost interest long before now, and the same goes for much of the honestly great long form reporting I find online, or the longer stories people post for free for our entertainment. Creativity is becoming devalued as memes and short \u0026lt; 100 word posts become our new limits. Works of art that take time to digest and see meaning it get overlooked, poetry is dead, and heaven forbid you want to discuss politics in a civil matter. Hell, for many even the idea of playing a videogame or watching a movie is second to the instant gratification of short form content like Youtube, Reddit, or Facebook.\nIm not innocent in this, not by a long shot but I have two rules for myself which have helped:\n  For every two hours consuming content, I should spend at least an hour making something\n  At least 1/2 of my time consuming should be longer form content: be it full stories, books, movies, etc. Not YouTube, Reddit, Facebook, etc.\n  But when much of what I make, be it writing, music, or whatever is ignored because it\u0026rsquo;s not a viral meme or it\u0026rsquo;s too long to hold someone\u0026rsquo;s attention it seriously hampers my motvation, and I find it easier and easier to break my two rules. I\u0026rsquo;ve been doing a decent job, and as with any addiction it takes time to get out of and falling back is easy, but the reward of creating and consuming more filling content is much like having a nice home cooked meal instead of a super sugary diet.\nI just wish more people would appreciate each other\u0026rsquo;s cooking instead of eating candy all day. I want to work with people on these things, but if everyone else just stays addicted it\u0026rsquo;s hard to keep going. We\u0026rsquo;re inevitably social creatures and we do what our friends do, and doing things with friends is always better. Being on Facebook or Reddit, watching YouTube videos- these may trick your brain into thinking you have what you want, but being on the other side I really wish some of you would join me.\nI\u0026rsquo;m always down to hang out, to wonk together on making something cool, or talk about life, you just have to reach out not wait for me to post a funny meme for you to comment on. Lets talk about your hobbies and projects and what you care about and stop posting memes and Tumblr screenshots.\n "});index.add({'id':64,'href':'/phil/consumerism/','title':"Consumerism",'section':"PHIL",'content':"Consumerism #  We buy too much shit #  TODO: individually wrapped wastes of money for holidays makes me feel gross\nEnforcing Protections #  Planned obsolescence, Right to repair #  Anti-consumer practices #  https://dvt.name/2020/02/24/rfc-lets-disrupt-dating-apps/\nAdvertising #  Native Ads #  Dangerous ads #  Sugar Drugs\nCredit #  App lets banks lock your financed phone if you default on payment\nAccelerating Change and Information Overload #  The world is getting faster. Things are moving, flashing at us, blinking with neon colors and screaming at us in increasing attention grabbing, addicting ways. There\u0026rsquo;s now the attention economy, where time in front of your eyes is evaluated to be worth an increasing amount. An ephemeral cloud of mist, lurking in the air that has been given the moniker The Algorithm influences our choices more and more each day.\nThis sounds like some sort of plot to an 80\u0026rsquo;s scifi thriller set in the far future, but instead it\u0026rsquo;s just part of our /r/ABoringDystopia/ . I know I\u0026rsquo;m addicted, but that\u0026rsquo;s the funny thing about true addiction, you don\u0026rsquo;t really want to stop. I know that speed of things, the ever increasing nightmare of [political shit slinging](political shit slinging) and the amount of news on it is bad for me. That being only a click away from something more interesting has rotted my attention span. That a culture of consumption has made it harder for me to spend time creating. I know that I could make a conscious decision to limit my time on reddit, or to spend more time outside, but sitting in the same spot is comfortable. I\u0026rsquo;ve dug my own little hole and surrounded it on all sides with walls a mile high to protect me from the advertisements and dissenting views, but in the process I\u0026rsquo;ve lost so much. I try to read an article on Fox or anything on r/conservative and I get irrationally angry. So instead I keep to browsing my Algorithmically Tailored home page, but after seeing things that interest me I get on a bind of just one more page or I\u0026rsquo;ll only scroll to one more post or I\u0026rsquo;ll read after this video and then, even if I do manage to break free and escape into a book, I\u0026rsquo;m one ~Binng~ of a Telegram notification away from being brought out of my book for something that I find more immediately gratifying.\nThen, to add onto that, the censorship, not only are we algorithmically bound to see some content over others, but because of strange advertisement, government, and platform policies and the increasing stupid fact that we still use centralized services, the ever increasing amount of excess photons that we didn\u0026rsquo;t even ask for that we get blasted into our retinas is filtered in a way that discourages actual free speech because some people\u0026rsquo;s speech is prioritized.\nBut, I\u0026rsquo;m getting off topic, the point of this was to discuss and propose a solution to the issue of being bombarded with information, ads, physical and digital, and content that was not requested.\n[TODO\u0026hellip;]\n[TODO] [TODO] The Dark Reality Behind America‚Äôs Greatest Thrift Store Empire\nSomething I\u0026rsquo;ve written while thinking about this: #   I\u0026rsquo;ve posted things like this here before, but I feel like I need to again in light of recent conversations with friends: On Facebook, you are the product and you are you should know what you are funding. I think at this point the Cambridge Analytica scandal[1] is pretty well known, but that is nothing compared to the other things in Facebook\u0026rsquo;s past. At one point Facebook targeted teenagers and filtered their news feed to be mood based which was found to lead to real world mood changes [2]. But even if these things don\u0026rsquo;t bother you, you think Facebook just made a mistake, there\u0026rsquo;s the case of Facebook\u0026rsquo;s content moderation team being paid less than a living wage and being exposed to situations which lead to severe mental illness [3]. Speaking of mental illness, Facebook owned Instagram\u0026rsquo;s recommendation algorithm has been found to recommend pro self-harm content to those most vulnerable, which has actually lead to deaths [4].\nThink about who you\u0026rsquo;re giving your data, money, and views to and on what platform you do so. There are alternatives. You don\u0026rsquo;t have to sell all your data to big organizations to stay in touch. I use Mastodon [5] instead of Twitter, Telegram instead of messenger [6] and a combination of Reddit and the things above instead of Facebook. You do have a choice. If nothing else you can use Facebook in a separate browser or in a container [7] so you\u0026rsquo;re at least not funding them in full.\nJust like voting and contributing to your community, having digital responsibility is important too.\nThanks for reading this, if you want to talk about digital privacy or security you can shoot me a message here and I\u0026rsquo;ll get back to you next time I log in, or you can message me on Telegram and I\u0026rsquo;ll get back to you right away.\n[1] https://www.nytimes.com/‚Ä¶/facebook-cambridge-analytica-expl‚Ä¶ [2] https://www.nytimes.com/‚Ä¶/facebook-tinkers-with-users-emoti‚Ä¶\n[3] https://www.theverge.com/‚Ä¶/cognizant-facebook-content-moder‚Ä¶ [4] https://www.wired.com/‚Ä¶/when-algorithms-think-you-want-to-‚Ä¶/\n[5] https://joinmastodon.org/ [6] https://telegram.org/ [7] https://addons.mozilla.org/‚Ä¶/fire‚Ä¶/addon/facebook-container/\n "});index.add({'id':65,'href':'/cooking/cooking/','title':"Cooking",'section':"COOKING",'content':"Hey there.\nMy name is Vega, and I can\u0026rsquo;t cook, so I\u0026rsquo;ll be letting my friends take this one over.\nWhy you should take the time to be a functional adult: #  !\u0026gt; I had a few friends interested in fleshing this page out, but they got busy, lmk if you want to take it over or just sumbit a pull request ^-^\n"});index.add({'id':66,'href':'/phil/copyright/','title':"Copyright",'section':"PHIL",'content':"Letting Society Advance Though Art and Innovation #  This video from Tom Scott on YouTube is a very good intro to everything I\u0026rsquo;ll be talking about on this page, I\u0026rsquo;ll assume you\u0026rsquo;ve watched it so that I don\u0026rsquo;t have to repeat everything that he says here.\n What is Copyright? #  [TODO]\nWhat\u0026rsquo;s Wrong With that? #   How do we fix it? #  I think to further address any issues we first need to look into how these issues have come to exist. In general, as a society advances new issues will arise. Computers and the Internet have shown us just how incredibly things can progress and how amazing un-hindered, open information flow can change the world. The Internet has served as an educational tool of unparalleled utility to my generation and has allowed me to learn things that I otherwise would have never had access to. Of course this also means the same for bad actors. Though acting in bad faith also now have the same unparalleled access to personal information of the masses and individuals can now use their anonymity and an Internet connection to do harm both to individuals via cyberbullying and trolling, but also to businesses as we move to a world that more heavily relies on ecommerce and the digital information they store becomes increasingly sensitive.\nUnfortunately, the law is often far to slow or far to fast to react, leading to laws that simultaneously fail to protect our rights as smaller creators and punish many to harshly.(1)\n\u0026hellip;\nToday, the most obvious example of this is the Right to Repair movement, a movement that has computer hackers and farmers fighting side by side to protect consumer rights.\nCopyright, DMCA\nPatents\n HEVC is heavily patented. There are no less than 7,200 patents covering this compression method. This includes 39 patents from Apple: CN 03816739.5, 200810082232.0, 201210009977.0; DE 603 34 804.1, 603 41 992.5, 603 41 994.1; FR 1532746, 2326019, 2328283; GB 1532746, 2326019, 2328283; IT 1532746, 2326019, 2328283; JP 5385233; KR 850,810, 1,210,015; and US 7,292,636, 7,339,991, 7,551,674, 7,769,084, 8,090,023, 8,090,026, 8,094,724, 8,094,729, 8,630,339, 8,711,924, 8,737,462, 8,737,468, 8,737,484, 8,743,951, 8,817,883, 8,831,106, 8,837,580, 8,837,597, 8,934,546, 8,934,551, 8,942,287. This should be enough to discourage any company from using HEIF, even if it does offer a better compression versus file size ratio\nhttps://www.hackerfactor.com/blog/index.php?/archives/833-HEIC-Yeah.html\n Patent trolls\nSocietal standards of art, making fun of something because it\u0026rsquo;s different\nWhat we should do about this:\n[TODO] Marvel, Pink Floyd, and Minecraft Vs Web comics, indie, and Minetest.\nBy 'slow' I'm primarily referring to the lack of or incompetence of consumer data protection law. GDPR is definitely a step in the right direction on this; however, that is both only for the EU and was implemented far too late. By 'fast' I had the DMCA in mind, which is wildly considered to be both overreaching and to harsh. Simultaneously, we lack real power as consumers, copyright is a game the rich can play with expensive laywers and the small creator can't afford to defend.  "});index.add({'id':67,'href':'/design/design-intro/','title':"Design Intro",'section':"DESIGN",'content':"Inspirational Artists #  Added a lot of minor improvements, like camera limits, subtle lighting, dust particles and more #gamedev #pixelart #screenshotsaturday pic.twitter.com/KmSYW3iHml\n\u0026mdash; Luis Moreno Jimenez (@more8bit) September 2, 2017  Teenage Engineering\u0026#39;s OP-1 Synthesizer modules: pic.twitter.com/Jx5FEkiGK9\n\u0026mdash; Shadow Drop - R\u0026amp;D (@ShadowDropDev) August 18, 2017  Some really cool pixel art gifs by Mark Ferrari\n/// Caution some are NSFW /// https://twitter.com/halphelt (NSFW) https://twitter.com/Hushabye_Valley (NSFW-ish) https://twitter.com/koidrake (Like kinda lood I guess?)\nÊèè„ÅÑ„ÅüË¨é„Ç¨„Ç∏„Çß„ÉÉ„Éà„Åæ„Å®„ÇÅ pic.twitter.com/vWd4comxex\n\u0026mdash; „Ç¢„Ç´„Çµ„Ç´„Éè„É´ (@Akasaka_haru) April 6, 2020  üõ∞Ô∏è#pixelart #„Éâ„ÉÉ„ÉàÁµµ #animation pic.twitter.com/3UU12mfkoW\n\u0026mdash; 6VCR (@sixveeceear) May 15, 2020  proudly presenting BREAKER, an arcade game inspired by breakout, space invaders and ikaruga\n\u0026gt;\u0026gt; https://t.co/TaSGdkCslO \u0026lt;\u0026lt; pic.twitter.com/wlLJmhTY9A\n\u0026mdash; Daniel Linssen ü¶ä (@managore) April 6, 2019  i sell #generative plotter drawings. in the unlikely event that you haven\u0026#39;t noticed before. https://t.co/1FuhPZHNt3 #art pic.twitter.com/uaVcTGSPkk\n\u0026mdash; inconvergent (@inconvergent) May 20, 2020  not only is jazzpunk hilarious but its also super stylish? like i could share screenshots of this game forever just go buy it right now ok pic.twitter.com/GJheQKQoBA\n\u0026mdash; ·ïï( ·êõ )·ïó Tomality! @ Animal Crossing (@tomality) June 15, 2017  (Already made a key font based on @djrrb‚Äôs excellent Output Sans.) pic.twitter.com/udO7z4bRM6\n\u0026mdash; Marcin Wichary (@mwichary) August 18, 2017  hi, i draw things occasionally and do not exist #NobodyArtistClub #under10kgang pic.twitter.com/8X6nDbLOmN\n\u0026mdash; awr (@awr_hey) July 13, 2020  #OriginalContentArtist Showing off my series of cyberpunk vending machines #pixelart pic.twitter.com/imSqI0TDW2\n\u0026mdash; Kenze Wee (@Seppuku_Doge) July 14, 2020  Quick lay out of Sprout! There\u0026#39;s much that\u0026#39;s not included, but it covers the most basic stuff. I need to do more detailed close-ups later, but I\u0026#39;m alright with this for now. I love my weird futuristic alien seal! A reminder, Xyx is a /CLOSED/ species! pic.twitter.com/pk0kVdBOWt\n\u0026mdash; ÀóÀèÀã Kita ÀäÀéÀó @Homeüè≥Ô∏è (@KitaKettu) June 14, 2019  Blue wiggles pic.twitter.com/VUuc9WCLaQ\n\u0026mdash; Aki (@lethalbit) July 5, 2020  Work ‚Üì https://t.co/P6AwlNJGcU\nUsing only the pixels from the rendered to text to render the image pic.twitter.com/FYR6OIfouQ\n\u0026mdash; grant (@GrantCuster) July 6, 2020  movie night pic.twitter.com/7CAxDbSyzb\n\u0026mdash; picolo (@_gabrielpicolo) July 6, 2020  https://assetstore.unity.com/packages/tools/particles-effects/shapes-173167\n"});index.add({'id':68,'href':'/design/design-other/','title':"Design, Other",'section':"DESIGN",'content':"Mobile Apps for Art \u0026amp; Design #     Name \u0026amp; Link Description Demo/Screenshot          Pixlr phone version of https://pixlr.com    Fragment Add some neat geometric reflections into your art    Mirror Lab ^         Spiro, Tilemaker Makes some interesting tiled patterns    Easyposer, plenty of other alternatives Decent app for posable character models. Some presets and models require a $5 pro version    Fraksl, Fractal Eye, MandelBrowser Neat Fractal Explorers    Glitch Lab Tons of glitch effects, including some really nice pixel sorting         Euclidea Not sure this one counts. It\u0026rsquo;s a game about making various geometric shapes using circles. It\u0026rsquo;s useful for learning some art techniques though.          Working with other artists #  Orions Arm Universe - Collective, shared setting for art and stories\nEvents that can help you with art #  Inktober, Swordvember, Smaugust\nGame Design #  https://www.gameuidatabase.com/index.php\nhttps://www.riotgames.com/en/urf-academy/curriculum-guide\nEngines \u0026amp; Frameworks #  Both 2d and 3d #  Godot\nLuxe\nfine. I\u0026rsquo;ll mention Unity and Unreal, but, like, I hate that the two make up such a huge chunk of the market\nUnreal Engine\nUnity\n2d #  LEd engine - \u0026ldquo;LEd is a modern and open-source 2D level editor, specifically designed for indie devs\u0026rdquo;\nOGMO Editor - \u0026ldquo;OGMO Editor is a free, open source 2D level editor built by indie game developers for indie game developers.\u0026rdquo;\nLOÃàVE - \u0026ldquo;Hi there! L√ñVE is an awesome framework you can use to make 2D games in Lua. It\u0026rsquo;s free, open-source, and works on Windows, Mac OS X, Linux, Android and iOS.\u0026rdquo;\nPyxel - Pyxel is a retro game engine for Python.\n3d #  pwnfps engine - \u0026ldquo;An incomplete game engine I made for 7DFPS 2014 using C and a bit of Lua. It\u0026rsquo;s a realtime raytracer that happens to be pretty shiny.\u0026rdquo;\nnoeuclid by CNLohr - A Non-euclidean GPU Raytraced Engine\neuclider - A higher-dimensional \u0026ldquo;non-euclidean\u0026rdquo; ray tracing prototype written in Rust.\nBevy - \u0026ldquo;A refreshingly simple data-driven game engine built in Rust Free and Open Source Forever!\u0026rdquo;\n\u0026lsquo;Non Euclidian\u0026rsquo; is a super mathy term and I\u0026rsquo;m really into it, basically it just means that space doesn\u0026rsquo;t quite work as you expect. The shortest distance between two points doesn\u0026rsquo;t have to be a line, portals connecting spaces, walking in circles takes you new places, etc. Here\u0026rsquo;s a decent blog post about some.  Heads up, not all 3d systems use the same coordinate systems. It\u0026rsquo;s a bit of a pain. Heres a good chart for that (source - @FreyaHolmer on Twitter)  Interesting ideas #  Procedural Animation: #  Did you like it?\nAnother creature made using only Procedural Animation\nwith a focus on 3D Navigation. We call it the Tetrad.\nBig Stuff Coming SoonüëÄüëÄ\nüß¨Follow us here for moreüß¨: @SynthSelection#madewithunity #unity #indiegamedev #gamedev #indiedev #SyntheticSelection pic.twitter.com/FatzMuyyc6\n\u0026mdash; Makan Gilani (@Makan_Gilani) October 28, 2020  RougeLikes #  What \u0026ldquo;Rougelike\u0026rdquo; Meant\nTons of Simulation #  Notia - Rougelite where every pixel is simulated\nCogmind - Ascii art game with a similarly extreme amount of enviroment destructivity\n"});index.add({'id':69,'href':'/design/digital-design/','title':"Digital Design",'section':"DESIGN",'content':"Digital Art #  Raster, Vector, Pixel, Voxel, ASCII, Mesh, Fractal, Generative, #  Projection Mapping, Creative Code, \u0026hellip;\nRaster Art #  Pixel Art #  Vector Art #  inkscape\ndotgrid\nSVGPathEditor (Github)\n3D Art #  Meshes #  Meshlab\nblender\nVoxel Art #  magicavoxel, minecraft\nGenerative Art #  Fractals #  Creative Code #  Ascii Art #  Projection Mapping #  Screen Considerations\nhttp://rainworldgame.com/\nPixel Art \u0026amp; Ascii art #  Pixel Art Tutorial from @saint11 https://saint11.org/blog/pixel-art-tutorials/\nJPixel - editor for pixel art animation and tilesets\nHexels ($49)\nParticle FX Designer\nPixatool\nTilesetter\nRexpaint\nDither Machine\nStrike - 1-bit paint tool, primarily for quick sketching or line-drawing.\nNoodle, 1-bit browser based art tool\nWobblepaint on the Pico-8, by Zep\nVoxel Art #  MagicaVoxel\nMinecraft??\nColor Palette Tools #  https://colors.lol/\nColorTool ($15 Steam)\nhttps://lospec.com/palette-list\nThe Nerdy bits #   Source\n Why Dark Video Is A terrible Blocky Mess (YouTube)\nDemo of how Fourier Filtering works\nColor Emulation of the GameBoy\nHello hsluv - blog post about how hsluv works\nGraphics \u0026amp; Palettes - Super Nintendo Entertainment System Features Pt. 01 (YouTube)\nDigital Video Introduction (Github) - \u0026ldquo;A hands-on introduction to video technology: image, video, codec (av1, vp9, h265) and more (ffmpeg encoding).\u0026rdquo;\nOklab - \u0026ldquo;A perceptual color space is desirable when doing many kinds of image processing\u0026rdquo;\nCompression #      "});index.add({'id':70,'href':'/phil/duties/','title':"Duties",'section':"PHIL",'content':"Personal Duties #  Maintaining health #  Physical #  Working out #  Air quality #  Mental #  Socialized healthcare #  "});index.add({'id':71,'href':'/phil/education/','title':"Education",'section':"PHIL",'content':"Education #  Freedom of Information #  Cariculum Changes #  Basic Aid #  Philosophy #  Individualized, shared, and student led #  [TODO] Faster, lower standards #  Better testing #  Fuck Respondus And Proctorio\nFree College #  The Following is from \u0026lsquo;Modern Universities Are An Exercise in Insanity\u0026rsquo; on The Scholar\u0026rsquo;s Stage Blog:\n The average tenure hopeful adjunct makes $40 an hour. If you were to employ her as a private tutor at the cost of $60 an hour, and had four hours with her a week, and did that for 14 weeks (that\u0026rsquo;s the length of an average college course folks) that is about $3,400.\nWere you to employ three such professor-tutors, that would be about $10,200, or a bit over $20,000 a year. In four years you would have racked up $80,000 in costs. But this is still $30,000 less than the total for the \u0026lsquo;cost conscious\u0026rsquo; universities. It is a quarter of what you would pay for Trinity.\nRemember: this $80,000 is for private tutoring, where individual attention would give you far and away a better and more thorough education than the 300-kids-in-a-lecture-hall style of classes that dominate undergraduate education today.\nBut it can get even cheaper. Let\u0026rsquo;s say you take the general principle of group classes from the university. Say you can find four other people to take all of these other classes with you. Just four. Well that equals out to $680 per class, or $16,000 a person for four years of classes.\n Bullying #  School or Prison (Comments on Hacker News)\n"});index.add({'id':72,'href':'/music/effects/','title':"Effects",'section':"MUSIC",'content':"Audio Effects #  Tremolo #  This is probably the easiest to understand audio effect. Put simply, fade the volume in and out automatically, usually pretty fast and with a bias so that the volume never completely cuts. It can also refer to a playing style where the same note is struck rapidly, leading to a similar effect. In VCV this can be done as simply as hooking up an LFO to a VCA\u0026rsquo;s CV input like we did here, but turning up the frequency of the LFO-2 module (note, that here there is no bias so the volume does actually cut out):    Vibrato #  Vibrato as an effect requires pitch shifting, which I suppose actually makes it akin to FM synthesis as in Chapter 2, regardless, it\u0026rsquo;s as simple as applying a, typically subtle, pitch \u0026lsquo;wobble\u0026rsquo; into the sound. On a guitar this may be done with a pedal but more simply just by bending the string back and forth with the fingers.\nDelay #  Delay is basically echo. Take a sound in, and repeat it it it. Normally the main controls on a delay are \u0026lsquo;Time\u0026rsquo;, which controls how long of a delay there is before each repeat, \u0026lsquo;Feedback\u0026rsquo; which controls how much the level is reduced each time the delay repeats (and in turn, how many audible repetitions there are), and \u0026lsquo;Dry/Wet\u0026rsquo; which controls how the signal is blended, entirely dry will have no delay, entirely wet may even miss the initial sound adding a weird latency before you hear what you\u0026rsquo;re playing. Some delays have additional controls, obviously I can\u0026rsquo;t cover every possible delay, but I\u0026rsquo;ll try to cover most:\nSome delays instead of letting you set a delay time or \u0026lsquo;tap\u0026rsquo; a delay tempo in actually synchronize to a clock signal input which lets the delayed repetitions always be in time with the rest of the song.\nStereo delays many have additional controls as well, most commonly offering a different delay time for the left and right channels. often a \u0026lsquo;Ping Pong\u0026rsquo; mode will also be available where the left and right speaker alternate for the echo\u0026rsquo;d sound- \u0026lsquo;ping\u0026rsquo; and \u0026lsquo;ponging\u0026rsquo; out each side until the sound cuts out.\nSome delays may also allow for unity or higher feedback, which will cause the delay to be infinite or, if above unity, infinitely grow in volume until it\u0026rsquo;s just a distorted clipping mess. This can actually be a lot of fun to play with.\n Quick Reference Card for the Chronblob^2 from Alright Devices, http://docs.alrightdevices.com/chronoblob2-manual.pdf\n Some delays let you also insert other things into the feedback path. This means you could do things such as having each repetition be progressively more filtered, cutting out more and more high end each time or putting a delay in the delay. (yo dawg, I heard you like delay?).\nSome digital delays and most analog delays (especially bucket brigade delays1) can produce interesting sounds if you change the delay time while audio is going through the buffer, resulting in a sort of pitch shift whip sound as the delay catches up or slows down.\nIt\u0026rsquo;s also worth noting that by making delay time very short and having gain near unity, sending a brief trigger (impulse) can make a sound that sounds like a string being plucked. This is called Karplus-Strong Synthesis. To the right I\u0026rsquo;ve shown a way to do this in VCV Rack.    Finally, it\u0026rsquo;s worth noting that there are a few interesting features some delays may have, such as letting the delay buffer be frozen to infinitely repeat what was playing at the time (unity gain, ignore input), reverse\u0026rsquo;d delay - having the initial sound play forward but each repeat play in reverse, pitch shifted delay- having each delay affected by a pitch shift, often done with octave up/down. Often, this pitch shifting is done via Granular Synthesis, as mentioned above. Using granular synthesis does allow for some other interesting options though, such as Unfiltered Audio\u0026rsquo;s Sandman Pro VST.\n Screenshot of Eventide\u0026rsquo;s Quadravox VST, with pitch shifted delays\n Loopers #  Loopers are most commonly seen in hardware and can be seen as a sort of mix between samplers and delays. Essentially you just tap in when you start playing, play what you want, then tap out, then, the loop of whatever you played will play back to you. There may be additional settings, such as a half speed effect.\nFilters (LP, HP, BP, Notch) #  https://www.perfectcircuit.com/signal/learning-synthesis-filters\nLow Pass Filters #  Low Pass filters do what you think, they let the low frequencies pass and cut out the high frequencies. As with most filters, this will typically not be a sharp cutoff but instead be a gradual fading of the higher frequencies. Despite this, there is still a point called the cut off frequency, which is defined as the point where the signal is cut by 3db (what this means is discussed below). It\u0026rsquo;s also pretty common for Low pass filters to have some resonance, where the frequency right at the cut off has a bit of a bump, as can be seen in this gif:\nSlew Limiting #  Effect on Square Waves #  Low Shelf Filters #  High Pass Filters #  High pass filters act pretty much the same as low pass filters, except they do they cut the lows and pass the highs. High pass filters are ironically often actually used to give a bump in the bass using the resonant peak.\nBand Pass Filters #  There\u0026rsquo;s two kinds of bandpass filters, one, is a Lowpass and Highpass filter in series, where there\u0026rsquo;s only a band left that can pass giving two potential resonant peaks, and then theres band pass filters which are more \u0026lsquo;true\u0026rsquo; band pass filters that have a resonant peak in the middle.(need to confirm this)\nNotch Filters #  Again, as the name implies, notch filters create a notch in the sound. Often used to correct for an issue in the sound, such as removing a 60hz hum. In Notch filters the resonance control actually changes how steep the notch is, so low resonance (Low Q) will cause the notch to be wider as the slope isn\u0026rsquo;t very steep, but a high resonance (Q) will let you really pick out a specific frequency.\nComb Filters #  All-Pass Filters (Phaser) #  Types of Filters #  State Variable (Steiner-Parker) #  Transistor Ladder #  Diode Ladder #  Sallen-Key #  Operational Transconductance Amplifiers (OTA Filters) #  CEM3320\nChebbychev #  SEM #  Wasp #  Formant Filters #  Polivoks #  Slope, Pole-Zero plots, dB #  different analog models\nFilter Resonance (Q) #  Pinging Filters #  Self Oscilation #  AutoWah #  Equalizers #  Parametric #  Fixed Filter Banks #  Phaser #  Flanger #  Flanger works by taking a very short delay* which slowly modulated delay time and mixing this back with the original signal. This will result in some phase cancellation effects and give a similar sound to a phaser. The delay time modulation rate and depth, and delay feedback are the most commonly exposed controls. Flanger is probably most commonly used as an effect on guitar.\n*note, that delay, in this context, means an actual time delay, just a buffer that makes sound take longer to get through if that makes sense. Of course, with feedback and mixing the original this will have the same effect as a delay in the \u0026lsquo;echo\u0026rsquo; sense.\n Flanger sort of makes a comb filter sound too, as you can see in the Spectrum Analyzer on the bottom.\n  The \u0026lsquo;Pyramids\u0026rsquo; Flanger pedal from Earthquaker Devices.\n Chorus #  Reverb #  plate, room, spring, gated, erbe verb video, convolutional, delay line + allpass, hearing comb filters\nDistortion #  How Distortion Works in Music (Ben Sheron\u0026rsquo;s Blog)\nClipping (Soft \u0026amp; Hard) #  Waveshaping #  Wavefolding #  Parallel V Serial Wavefolding #  Drive, and Tubes #  Bitcrushing \u0026amp; Comparators #  [Todo, fabfilter distortion video]\nStereo Effects #  Panning #  Widening #  Noise Gating #  Gating other effects with a mix #  gated verb, gated distortion\nLimiting #  Compression #   The above is a 3 part series that explains compressors better than anything I can really write here  Compression can mean multiple things when talking about music and sometimes this makes talking about it sometimes confusing. Usually, when talking about compression the meaning is for compression that changes the dynamics of the audio, making loud sounds quieter and quiet sounds louder sort of ~squishing~ the sound. The other, unrealetd, definiton of compression is data compression, for example .mp3 vs .wav. We\u0026rsquo;ll go into that later.\nOkay, this is sort of a lie. Compressors don't technically make anything louder. Only quieter. It's just that usually there's some input and/or output gain that makes it seem this way. If you first boost all your signals, then lower louder parts that's nearly the same thing as making the quiet stuff louder and louder stuff quiter. The reason this is worth bringing up is because not all compressors actually have that gain stage, so they will literally only make the loud sounds quieter and assume the user knows they need to compensate\nUsually compression has a few basic attributes that are relevent:\nThe \u0026lsquo;Threshold\u0026rsquo; is what level the compressor has to be over to do anything at all. \u0026lsquo;Attack\u0026rsquo; is the time it takes for the signal to be affected. All compressors will have some minimum attack time if they\u0026rsquo;re happening live (there are some compressors with \u0026lsquo;Lookahead\u0026rsquo; that solve this problem) which lets the transients (sharp changes) of louder sounds, like the start of a drum hit, get through to some extent, but more attack will let more of the drum transient through. Tune to taste, release is similar idea, but controls how the compressor behaves as it falls below the treshold, letting the compressor fade out with a given time instead of having a sharp cut. Compressors can be used to make drums really stand out, give guitars a longer sustained sound, or just glue the mix together better.\n[TODO knee, sidechain]\n[TODO, Dynamic range compression, Parallel Compression, Miltiband compression, different analog models (ie Fets v tube v optical)]\nreverb, delay, pan, tremello, overdrive, distortion\n WTF is a Compander? (YouTube, Dan Worrall)\n[TODO] parallel Compression\nVocoders #  Ableton Live VOCODER Tutorial (YouTube, Once Upon A Synth)\n[TODO] all of it\u0026hellip; but also mention how a lot of vocie effects use a combo of autotune, vocode, and pitch shifting\nGlitch, Granular, and Pitch #  Neat tricks with effects #  My first WET / DRY / WET Guitar Pedal Rig (YouTube, Mark Johnston)\n  Bucket Brigade Delay is essentially a bunch of capacitors acting as the \u0026lsquo;buckets\u0026rsquo; that are figuratively passed down the chain, moving from one bucket to the next each clock cycle, of course, this clock rate can be changed while it\u0026rsquo;s running. The number of stages in a BBD determines how long of a delay you can get without having a massive determent to quality. \u0026#x21a9;\u0026#xfe0e;\n   "});index.add({'id':73,'href':'/phil/fallacies/','title':"Fallacies",'section':"PHIL",'content':"Logical Fallacies (and a bit more) #  If you\u0026rsquo;ve been on the internet for more than about a quarter of a second, you\u0026rsquo;ve likely been accused of a whole host of logicall fallacies. Unfortunately, most people really don\u0026rsquo;t understand what they\u0026rsquo;re saying and often use a lot of these incorrectly. On the other hand, you also likely encounter politicians people using these fallicies on a regular basis as well, and it\u0026rsquo;s nice to be able to call them out on it. This page is going to cover a fair amount of the most common and attempt to give you examples of when they apply and when they don\u0026rsquo;t: (sources are at the bottom of the page)\n Argumentum ad populum\nArgument to moderation\nInflation of conflict ‚Äì arguing that, if experts in a field of knowledge disagree on a certain point within that field, no conclusion can be reached or that the legitimacy of that field of knowledge is questionable.\nSlippery slope\nBegging the question\nCherry picking\nSurvivorship bias\nAd hominem\nAppeal to authority\nI\u0026rsquo;m entitled to my opinion\nStraw man\nwhataboutism\nFalse Dichotomy\nAppeal to Ignorance\nBandwagon\nThe Texas Sharpshooter\nDog Whistle\nQueerbaiting/Racebating\nSelf-Censorship\nIdentity Politics:\nSource: https://www.instagram.com/p/CEpI20ps5wE/ Doomscrolling\nChilling Effect\nSources:\nhttps://en.wikipedia.org/wiki/List_of_fallacies\n"});index.add({'id':74,'href':'/phil/foriegn/','title':"Foriegn",'section':"PHIL",'content':"War and Foreign Involvement #  Denuclearization #  Localization #   Falsehoods Programmers Believe About Name The Problem with Time \u0026amp; Timezones (YouTube) Google Maps is Different in Other Countries (YouTube)  "});index.add({'id':75,'href':'/phil/freedoms/','title':"Freedoms",'section':"PHIL",'content':"Freedoms and Rights #  Freedom of Speech #  Freedom of Press #  Everyone is press, https://www.eff.org/bloggers\nThe Trump Administration Is Trying To Force BuzzFeed News To Divulge Its Sources With A Subpoena\nanti-SLAPP laws\nWhistle Blower Protections #  Search and Seizure #  Fair Trial #  Court of Public Opinion #  Freedom of Body #  Marital Rape, Euthanasia, Abortion, AI recognition and usage, gene ownership\nFreedom of environmental concern #  Vaccination, local pollution\nFreedom of Travel #  Immigration, Citizenship testing\nPersonal Armament #  Right to record, Right to know #   if it is public, there\u0026rsquo;s reason to expect you may be if it is private, person to person, (not b2b or p2b) there\u0026rsquo;s an exception for if it only for personal or judical (to be used in trial) use.  I.E, can\u0026rsquo;t post it online if it\u0026rsquo;s unreasonable to expect being recorded    Promise of Ownership #  Drm, General Purpose Computation, Right to Repair, etc. https://www.youtube.com/watch?v=HUEvRyemKSg\n"});index.add({'id':76,'href':'/design/generative-art/','title':"Generative Art",'section':"DESIGN",'content':"Generative Art #  https://www.reddit.com/r/proceduralgeneration/\nhttps://www.reddit.com/r/generative\nhttps://www.reddit.com/r/PlotterArt/\nGenerative World Building #  World generation #     Name \u0026amp; Link Purpose / Description Screenshot     roberthodgin - meander Generative maps of how rivers meander, not the tool, but at least it\u0026rsquo;s the process    Map Generator A tool for building custom maps, envisioned for use in tabletop roleplaying games.    One Page Dungeon     Dungeon Map Doodler \u0026ldquo;Dungeon Map Doodler is a new, free to use drawing tool accessible from any web browser. Easily create maps for your favourite tabletop RPGs in minutes!\u0026rdquo;    Dungeon Scrawl https://dungeonscrawl.com/docs/#/    Fantasy City Generator This application generates a random medieval city layout of a requested size. The generation method is rather arbitrary, the goal is to produce a nice looking map, not an accurate model of a city.    Fantasy Map Generator make a map with tons of customization options including some about the culture and regions    Space Creator Make a lil' solar system    Genbrush ~15 USD     Random Country Generator     World Machine NOTE: This is only free for non-commercial use    World Painter This one is for Minecraft, but still potentially useful SOURCE: https://www.reddit.com/r/ArdaCraft/comments/jaaw0v/a_lake_in_the_ered_luin/   DataCombs \u0026ldquo;3D Map editing utility for use with tabletop games like Dungeons \u0026amp; Dragons and Pathfinder\u0026rdquo;     Dungeon Generation in Enter The Gungeon (Boris The Brave)\nLanguages #     Name \u0026amp; Link Screenshot     Procedural Runes    Glyph    Glyph Generator     \rHuge Playlist on Constructed Languages ( Conlang Critic on YouTube)\nSome more cool examples, but lacking code:\nhttps://www.reddit.com/r/generative/comments/d5284l/pentagonal_glyphs/ https://www.reddit.com/r/generative/comments/d5zeca/generative_glyphs/\nGenerative Textures and Geometry #     Name \u0026amp; Link Purpose / Description Screenshot / Demo     Forsynthia Check out these(1) pages (2) for more information    Noisemaker Noise maker can make a ton of generative art pieces, as you can see at the right, this is a small sampling using a few of the included presets. Can be a pain to get to run as it needs Tensorflow    Noisey-Shapes (Github) \u0026ldquo;Making the computer draw weird shapes using basic trigonometry and different species of randomness(noise)\u0026rdquo;    Superformula SVG Github repo     Pixel Sorting #   Source - u/Hunter_timeFR on Reddit\n r/pixelsorting (Reddit)\nPixelSorting using Processing (Github)\npython pixelsort, with masks (Github)\nPython again, but with animation support (Github)\nPixsort for Adobe After Effects (15 USD)\nGenerateMe (Github) - lots of glitch effects\nFractal Art #     Name \u0026amp; Link Purpose Screenshot     Apophysis Fractal Flames [TODO]   Mandelbulber     Mandelbulb3D  [TODO]   ifs Fractal Generator     Fractorium A GPU-Accelerated Fractal Flame Edito    Chaotica *       Chaotica is free for noncommercial use, and can render up to 1.23 megapixel images (e.g. 1280x960 resolution) and up to 30 second 480p animations without a licence. A Chaotica HD (45 USD) licence for casual users who want to create high quality desktop wallpapers up to 4 megapixels (e.g. 2560x1600) and 720p animations up to 3 minutes long is available at a very low price point. The professional Chaotica Studio (109 USD) licence has no still image or animation limitations at all. *prices are from time of writing\n Generative Eyes #  https://www.reddit.com/r/generative/comments/j4uati/iris/ https://www.reddit.com/r/generative/comments/jabwl8/greye/ https://www.reddit.com/r/generative/comments/epja3d/mycelium/\n\rLivecoding visuals #  r/livecoding (Reddit)\nToplap.org - a site all about live coding\nThe Book of Shaders - \u0026ldquo;A gentle step-by-step guide through the abstract and complex universe of Fragment Shaders.\u0026rdquo;\n   Name \u0026amp; Link Purpsoe Screenshot / Demo     Tidal Cycles     Praxislive     Rectitude     Mosaic     p5-live (Github) live coding for p5.js - you\u0026rsquo;ll probably want the VS Code Extension    hydra (Github) \u0026ldquo;Set of tools for livecoding networked visuals. Inspired by analog modular synthesizers, these tools are an exploration into using streaming over the web for routing video sources and outputs in realtime. Hydra uses multiple framebuffers to allow dynamically mixing, compositing, and collaborating between connected browser-visual-streams. Coordinate and color transforms can be applied to each output via chained functions.\u0026rdquo;    LiveCodeLab \u0026ldquo;Livecodelab is a special secret place where you can make fancy \u0026ldquo;on-the-fly\u0026rdquo; 3d visuals and play awesomely offbeat (literally) sounds. \u0026ldquo;On-the-fly\u0026rdquo; meaning: as you type. Type just three letters: \u0026ldquo;box\u0026rdquo;, and boom! a box appears. No clicking play, no waiting, no nothing.\u0026rdquo;    Thixels by Ramsey Nasser (Github, Linux Only) \u0026ldquo;PICO8 inspired live coding visual instrument.\u0026rdquo;    Gibber.cc \u0026ldquo;Gibber is a creative coding environment for audiovisual performance and composition. It contains features for audio synthesis and musical sequencing, 2d drawing, 3d scene construction and manipulation, and live-coding shaders.\u0026rdquo;    Ronin (Github) \u0026ldquo;Ronin is a procedural graphics tool designed to automate simple graphical tasks, like resizing, cropping, coloring, and generating algorithmic images. It interprets a minimal dialect of LISP, look at the examples to better understand how this all works.\u0026rdquo;    The Force (Github) \u0026hellip; this one basically lacks all description. Best you\u0026rsquo;ll get is the api docs in the wiki    Tooll.io node-basde tool for interactive realtime content on the web    Kodelife Realtime GPU shader editor    Cables.gl (beta) \u0026ldquo;Cables is a tool for creating beautiful interactive content. With an easy to navigate interface and real time visuals, it allows for rapid prototyping and fast adjustments.\u0026rdquo; \u0026mdash; Because this seems to be so \u0026lsquo;beta\u0026rsquo; and I don\u0026rsquo;t see code or any indication on future pricing it\u0026rsquo;s probably not the best option at the moment    Nimp (Github) \u0026ldquo;Node-Based Image Manipulation Program\u0026rdquo;    vvvv - Heads up VVVV requires a licence for comercial use that is rather expensive \u0026ldquo;vvvv is a hybrid visual/textual live-programming environment for easy prototyping and development. It is designed to facilitate the handling of large media environments with physical interfaces, real-time motion graphics, audio and video that can interact with many users simultaneously.\u0026rdquo;    TouchDesigner (Free, but 600 USD for Commercial licence) \u0026ldquo;TouchDesigner is a visual development platform that equips you with the tools you need to create stunning realtime projects and rich user experiences. Whether you\u0026rsquo;re creating interactive media systems, architectural projections, live music visuals, or rapid-prototyping your latest ideas, TouchDesigner is the platform that can do it all.\u0026rdquo;   Video courtesy of Neurotypique    Nodes Not Yet Publiclly Released    Cyril (Github), Main site The Cyril programming language is designed for fast prototyping of visualisations and live coding visuals.     Creative Coding (Non Live) #  HackadayU Creative Code with Casey Hunt (YouTube)\n   Name \u0026amp; Link Purpose / Description Screenshot / Demo Link     Processing Language \u0026ldquo;Processing is a flexible software sketchbook and a language for learning how to code within the context of the visual arts.\u0026rdquo;    Hype Framework \u0026ldquo;This is a collection of processing.org classes that performs heavy lifting tasks while using a minimal amount of code writing\u0026rdquo; This site is really weird? It seems to be emedding vimeo videos of static images, regardless, still worth checking out   P5.js \u0026ldquo;p5.js is a JavaScript library for creative coding, with a focus on making coding accessible and inclusive for artists, designers, educators, beginners, and anyone else!\u0026rdquo; \u0026mdash; Processing can run P5.js scripts, you can also live code p5.js with some VSCode extensions as mentioned above    three.js \u0026ldquo;Three.js is a lightweight cross-browser JavaScript library/API used to create and display animated 3D computer graphics on a Web browser. Three.js scripts may be used in conjunction with the HTML5 canvas element, SVG or WebGL.\u0026rdquo; Three.js examples from Free Frontend and on the Three.js site itself   paper.js \u0026ldquo;Paper.js is an open source vector graphics scripting framework that runs on top of the HTML5 Canvas\u0026rdquo; Paper.js examples   rune.js \u0026ldquo;a JavaScript library for programming graphic design systems with SVG in both the browser or node.js\u0026rdquo; Move your mouse over the image on the homepage   rough.js \u0026ldquo;a small (\u0026lt;9kB gzipped) graphics library that lets you draw in a sketchy, hand-drawn-like, style.\u0026rdquo;    StructureSynth \u0026ldquo;Structure Synth is a cross-platform application for generating 3D structures by specifying a design grammar\u0026rdquo;    OpenFrameworks openFrameworks is an open source C++ toolkit for creative coding.    openrndr \u0026ldquo;In short, OPENRNDR is a tool to create tools. It is an open source framework for creative coding, written in Kotlin for the Java VM that simplifies writing real-time interactive software\u0026rdquo; pleanty of examples on the site   Cinder \u0026ldquo;Cinder is a free and open source library for professional-quality creative coding in C++.\u0026rdquo; pleanty of examples on the site   Context Free \u0026ldquo;Context Free is a program that generates images from written instructions called a grammar. The program follows the instructions in a few seconds to create images that can contain millions of shapes.\u0026rdquo; Agneya by thijs   Nannou a creative coding frame work for Rust, you may want to look at the work by MacTuitui (Twitter)    Valora Another creative coding framework for Rust curtain by turnage, 2020   immense A Rust library for describing 3D meshes with simple composable rules. rule![ tf![ Tf::saturation(0.8), Tf::hue(160.0), Replicate::n(36, vec![Tf::rz(10.0), Tf::ty(0.1)]), Replicate::n(36, vec![Tf::ry(10.0), Tf::tz(1.2), Tf::hue(3.4)]), ] =\u0026gt; cube() ] is all that\u0026rsquo;s needed to generate the example on the right    ANSIedad     ASCII Generator     ShaderGif You can make gifs with shaders (glsl) and Javascript (either with raw canvas or with the coder-friendly p5.js library).    ShaderView \u0026ldquo;Shaderview is an app for creating visuals using OpenGl Shaders and it uses OSC messages to communicate changes in state. For example when live coding music you could send an OSC message when the drum sample played and in turn your shader could do something with that signal, like flashing of white.\u0026rdquo;     Data Visulization #     Name \u0026amp; Link Purpose / Description Screenshot / Demo     Nodebox \u0026ldquo;NodeBox makes it easy to do data visualisations, generative design and complex production challenges.\u0026rdquo;    d3js \u0026ldquo;D3.js is a JavaScript library for manipulating documents based on data. D3 helps you bring data to life using HTML, SVG, and CSS.\u0026rdquo; The homepage has a ton of live demos   Apparatus a hybrid graphics editor / programming environment for creating interactive diagrams    Vega-Lite \u0026ldquo;Vega-Lite is a high-level grammar of interactive graphics. It provides a concise, declarative JSON syntax to create an expressive range of visualizations for data analysis and presentation.\u0026rdquo;     Scripting/Generative tools IN other tools #     Name \u0026amp; Link Purpose Screenshot     Blender python API     Sorcar for Blender procedural modeling node-based system for Blender    Adobe Extend Script \u0026ldquo;A script is a series of commands that tells an application to perform a series of operations. You can use scripts in most Adobe applications to automate repetitive tasks, perform complex calculations, and even use some functionality not directly exposed through the graphical user interface.\u0026rdquo;    Krita SeExpr Fills the layer with a pattern specified through Disney Animation‚Äôs SeExpr expression language. - note that this is for FILL layers in krita     Super resolution, frame interpolation, and other effects #     Name \u0026amp; Link Purpose Screenshot / Demo     Waifu-2x \u0026ldquo;Image Super-Resolution for Anime-style art using Deep Convolutional Neural Networks. And it supports photo.\u0026rdquo; - Works well on most things, not just anime art. The link is for a site where you can try it out online, but if you need to run it a lot you should probably run it locally. If you do I recomend this version is it\u0026rsquo;s compatible with basically any modern GPU. You may also want to check out Waifu2x-Extension-GUI.    Drain-App Dain-App is a free app that let you take any form of media like movies, stop-motion, anime, cartoons, sprites, etc and interpolate new frames, generating a bigger frame-rate from the original file. NOTE: drain-app only runs on systems with an NVDIA GPU    Neat auto lighting/shading software (Github pages site) \u0026ldquo;[\u0026hellip;]. Based on this observation, we design an algorithm to both estimate the density of strokes in a digital painting using color geometry, and then generate novel lighting effects by mimicking artists' coarse-to-fine workflow.\u0026rdquo; artwork traced by ToS2P from an artwork by David Revoy under CC-BY license, www.peppercarrot.com   Pixatool (15 USD) convert \u0026lsquo;normal\u0026rsquo; art into pixel art    picbreeder \u0026ldquo;Picbreeder is a collaborative art application based on an idea called evolutionary art, which is a technique that allows pictures to be bred almost like animals. For example, you can evolve a butterfly into a bat by selecting parents that look like bats\u0026rdquo;    Geon FX (10 USD) Particle effects generator/editor     For Plotters #  vpype - aims to be the one-stop-shop, Swiss Army knife for producing plotter-ready vector graphics. Here are, for illustration, a few examples of what it can do:\nOther tools #  Sound Design #  !\u0026gt; There\u0026rsquo;s a LOT more tools listed in the music chapters, but there\u0026rsquo;s some more \u0026lsquo;for animation\u0026rsquo; tools here:\nrfxgen\nSome inspiration #  Python + Quantum Research = Art + Saving 1000s hours of CPU time (Reddit)\nGenerative Constellations (Reddit)\nIndra\u0026rsquo;s Net (Reddit)\n Seriously, the three above pieces are some of my absolute favorite pieces. I think about them a lot.\n Grant Custer\u0026rsquo;s Feed + Constraint.systems\nShadertoy\ngenerated.space\nEcho/printf to write images in 5 LoC with zero libraries or headers (Vidar\u0026rsquo;s Blog)\n10 innovative creative coding examples that are redefining programming (Shaping Design - Editor X)\nMETA: Hacker News Submission on this page, with a bit of discussion\n"});index.add({'id':77,'href':'/phil/idea-labs/','title':"Idea Labs",'section':"PHIL",'content':"Communal Efforts #  [TODO] Shared Spaces #  Hacker Spaces Community Garden\nOpen Source hardware and software #  "});index.add({'id':78,'href':'/phil/infrastructure/','title':"Infrastructure",'section':"PHIL",'content':"Infrastructure #  Eco Friendly #  Carbon Tax?\nGeoengineering: A Horrible Idea We Might Have to Do (YouTube, Kurzgesagt)\nA Strange New Blend of Rock and Plastic Is Forming on a Portuguese Island (Gizmodo)\nNetworking (Mesh) #  Land Value Tax? #  "});index.add({'id':79,'href':'/music/instruments/','title':"Instruments",'section':"MUSIC",'content':"Drums #  TR808, syth, short ADSR, noise, snare, tom, kick, hat, clap, bell,\nGuitar Pedals For Drums (YouTube, JHS Pedals)\nStrings #  guitar, lute, dulcimer, dual/single string, acoustic, electric, electroacoustic\nguitar pickups, slides, kapo, tuning (equal v just), wound, physical modeling (Kurplus Strong)\nThe History Of Guitar (Youtube, Rob Scallon)\nTuning a Floyd Rose Guitar (YouTube)\nMy New 18-String Hurdy-Gurdy (YouTube, Patty Gurdy)\nSynths #  Modular, semi-modular, software\nThe Design of the Roland Juno oscillators (Stargirl Flowers' Blog)\n  The Esoteric #  feedback only, no input. i love this instrument. pic.twitter.com/IR6lmxZGHJ\n\u0026mdash; ùíÜùíéùíéùíÇ (@HECKSCAPER) July 31, 2020  ùê°ùê®ùê∞ ùê¢ùê≠ ùê∞ùê®ùê´ùê§ùê¨: pedal rig rundown \u0026amp; building a sound (Emma Essex)\n    Why To Modular With Guitar (YouTube, Knobs)\nOtamatone Metal - Rob Scallon\nTheorbo - The enormous 14 string lute (YouTube)\nDouble-sided Guitar Jam (YouTube)\nOctobasse: A really, really big upright bass (YouTube)\nAwesome Japanese Electric Harp!\nUsing a Violin Bow on a Guitar Sounds Incredible (YouTube, Music Is Win)\nCrazy Fast Robot Drummer (YouTube, Andrew Huang)\nShow Us Your Junk! Ep. 25 - Sylvia Massy of Studio Divine (YouTube, EarthQuaker Devices) \u0026hellip; She uses a pickle as a guitar effect\u0026hellip;\n"});index.add({'id':80,'href':'/interviews/interviews/','title':"Interviews",'section':"INTERVIEWS",'content':"If you would like to be interviewed #  Well, first of all I\u0026rsquo;d like to know what makes you interesting - so shoot me a message or open an issue on github.\n"});index.add({'id':81,'href':'/phil/labor/','title':"Labor",'section':"PHIL",'content':"Labor and Compensation #  Please Consider My Application to Give You Labor So I Can Stay Alive\n Economic Inequality #  Wage Theft is a Much Bigger Problem Than Other Forms of Theft‚ÄîBut Workers Remain Mostly Unprotected\nEx-Google Employee Exposes Unequal Pay With Spreadsheet (Wall Street Journal)\n[TODO] historical tax rates (the 91% tax bracket? Need to do more research on this\u0026hellip;), wealth tax\nA Megacorp is not your dream job (Drew DeVault\u0026rsquo;s Blog)\n Universal Basic Income #   Monopolies #  Unions #  Consumer protections #  best interest - Fiduciary TOS simplification\nHomelessness #  Job Obsolescence #  "});index.add({'id':82,'href':'/phil/law-and-order/','title':"Law And Order",'section':"PHIL",'content':"Law Enforcment and Judgment #  Trial of educated peers\nCriminal Rehabilitation #  end mandatory sentencing end bail no debters prision\nDivorce, Child Support #  "});index.add({'id':83,'href':'/phil/medical/','title':"Medical",'section':"PHIL",'content':"Healthcare Costs #  Why is life expectancy in the US lower than in other rich countries?\nWhite House wins ruling on disclosing health care prices (AP)\nDrugs #  Most drugs and prostitution should be legal at the age of 18. However, trafficking obviously not, and drugs must be sold by an individual with a licence to deal and said licence may be revoked if the product is sold with a false label or is tainted.\n"});index.add({'id':84,'href':'/music/mix-and-master/','title':"Mix and Master",'section':"MUSIC",'content':"Mixers #  mixer front ends, preamps, etc. Software mixing, etc.\nLoundness Monitoring #  https://youlean.co/youlean-loudness-meter/\ntalk about loudness and spotify\nMixing and Mastering #  eq, pan, quadraphonic+\nDelay Always Means Phase Shift But Phase Shift Does Not Always Mean Delay (YouTube, Dan Worrall)\n@Tirrelous on Twitter  Studio Monitors and Headphones Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam accumsan orci quis sollicitudin tincidunt. Curabitur vitae quam in tortor sodales condimentum. Donec iaculis lacus eros, nec cursus sapien fringilla non. Nunc a dolor felis. Donec id neque et tortor ultricies rhoncus vitae at elit. Suspendisse molestie neque iaculis erat semper, a pharetra purus aliquet. Morbi sit amet mollis purus, eu semper arcu. Mauris eros dui, eleifend eget facilisis et, commodo ut dui. Aenean aliquet, nulla id placerat dapibus, nulla felis tempus ex, quis fermentum tortor purus et augue. Aliquam at arcu elit. Aenean efficitur luctus felis a laoreet.\nPraesent tortor odio, varius at urna vitae, consectetur vulputate metus. Curabitur tempor, mi ut lobortis condimentum, libero eros auctor arcu, nec blandit nulla nunc vitae ante. Donec quis ipsum eu justo congue auctor a ut purus. Nullam quis nisl interdum, scelerisque dolor at, vehicula enim. Phasellus tempus sit amet neque et condimentum. Cras venenatis nisl id arcu vestibulum fermentum. Vivamus sollicitudin lectus non dignissim cursus.\n  "});index.add({'id':85,'href':'/music/music-getting-started/','title':"Music Getting Started",'section':"MUSIC",'content':"Getting Started #  Here\u0026rsquo;s the part where I\u0026rsquo;m supposed to explain how to read music or something boring like that. Really though, that\u0026rsquo;s not why you\u0026rsquo;re here. So let me start by giving you a bit of motivation. In a bit I\u0026rsquo;ll be going though how to use VCV Rack, a free (with paid addons, but those aren\u0026rsquo;t necessary) program for making music. But as we go though each bit is going to look so -basic- that it\u0026rsquo;s hard to see the bigger picture. So, here\u0026rsquo;s that bigger picture: This track was made entirely with VCV rack:\nContent by Vega Deftwing Alright, with motivation out of the way, let\u0026rsquo;s make some noise! To do that though we\u0026rsquo;re gonna need just a few things: Go download VCV Rack from https://vcvrack.com/ and depending on your OS you\u0026rsquo;ll need some sound drivers, MAC guys, sorry, no idea. On Windows you\u0026rsquo;ll want to use ASIO, if you don\u0026rsquo;t know what that is just go grab http://www.asio4all.org/ and use that, on Linux you\u0026rsquo;ll want to use Jack https://wiki.archlinux.org/index.php/JACK_Audio_Connection_Kit. On Linux you may need to use a tool like Catia to actually connect the jack devices together (VCV to System Out)\nGo ahead and fire up VCV and a template patch should have opened up that looks some thing like this: Windows guys, set your sound device to ASIO and fiddle around until you have sound working, Linux people RTFM, Mac people \u0026hellip; Something something CoreAudio I think? IDK. Ask someone that knows apple I guess. That default patch should respond to input when you mash keys so you can test your sound settings (assuming the MIDI-CV module is set to QWERTY keyboard as in the above screenshot and an audio device has been selected)\nFinal note on that, sound cards and their drivers/software (asio/jack/etc.) have a few important settings you should know about. First, is the \u0026lsquo;buffer size\u0026rsquo;. Frankly, this isn\u0026rsquo;t all the important to understand from a technical perspective but the gist is the lower the buffer size the lower the latency, and higher the higher the latency (latency is how long it takes for sound to come out after you hit a key and is bad); however, the lower the buffer size the more likely you are to have audio under runs, this makes your sound do this weird robotty sound like it was recorded on an Atari2600, make nasty beeps, or cut out entirely. The size you can set your buffer to will vary depending on the hardware you have in your computer, but generally I can get away with 128 and I\u0026rsquo;ll bump it up to 256 when working on large projects if I notice the above issues. You may need to try up to 512 or 1024 though.\nAlright, that pita outa the way, lets actually make some noise.\nThe reason we\u0026rsquo;re starting in VCV rack is it exposes a lot of the raw ideas and fundamentals of how music works behind the scenes, raw frequencies and modulation open to see. In that default patch there we start with a MIDI (Musical Instrument Digital Interface) input which outputs a \u0026lsquo;voltage\u0026rsquo; from the V/oct (Volt per Octave) output, which is fed into an VCO\u0026rsquo;s (Voltage Controlled Oscillator) V/oct input.\nWait. Big words. Stapphh.\nAlright. I\u0026rsquo;ll backup So VCV rack actually emulates real hardware systems called modular synthesizers. VCV emulates the Eurorack standard of modular synths in particular. Skipping some finer details for a moment, the standard defines one nice thing, and that\u0026rsquo;s the idea of 1 Volt per Octave note control. (If you don\u0026rsquo;t know anything about electronics that\u0026rsquo;s fine, but it might help here) In a real eurorack system the voltage running though the wires can range from -10 to +10Volts. Any wire can really be patched into any hole to get surprising results and all the signals are technically interchangeable, but generally in eurorack there are two categories of signals CV or \u0026lsquo;Control Voltage\u0026rsquo; and \u0026lsquo;Audio Rate\u0026rsquo; signals. The most common form of CV is this V/oct signal, where each volt represents a one octave change. A stable 0v (the same as no input) signal is \u0026lsquo;Middle C\u0026rsquo; or C4 where \u0026lsquo;C\u0026rsquo; is the note and \u0026lsquo;4\u0026rsquo; is the octave number. This is only \u0026lsquo;generally\u0026rsquo; the case, but just stick with it for now. When you strike a key on your keyboard VCV is interpreting that keypress as a MIDI event, and converting that MIDI signal to a virtual CV signal. So, if you happen to press the C note on the 4th octave, you\u0026rsquo;ll get\u0026hellip; 0v, no change, but if you were to hit the C note one octave higher (C5) the note should be noticeably higher pitch and the output from the V/oct port would be 1V. In fact because of how our music system works, an octave is exactly a doubling in frequency so while \u0026lsquo;C4\u0026rsquo; is 261.63Hz \u0026lsquo;C5\u0026rsquo; is 523.25Hz). If you hit a C#5 note though the output voltage will be 1.08333V because there are 12 notes per octave (A, A#, B, C, C#, D, D#, E, F, F#, G, G#) and 1/12 is .08333 which is added to the 1V from being up one octave from from middle C (C4)\n This is Stinkbomb\u0026rsquo;s hardware Eurorack. Real Eurorack hardware is incredibly expensive!\n Alright. Fuck that\u0026rsquo;s complicated. So, to boil that into a digestible chunk, you press a higher key, a higher voltage comes out, lower key, lower voltage. Keys above C4 will output a positive voltage, keys below a negative voltage.\nSo we hit a key, voltage comes from V/oct on the MIDI-\u0026gt;CV interface and goes to the Voltage Controlled Oscillator, which, as it\u0026rsquo;s name suggests uses these voltages to control how it oscillates (moves). The V/oct input directly manipulates the frequency, but there\u0026rsquo;s also this big honking frequency knob just begging to be twisted. That knob can be used to make it so 0V corresponds to a different note. For example, if we right click the frequency knob to enter a value directly, and enter \u0026lsquo;440\u0026rsquo; Hz that would make 0V into an \u0026lsquo;A4\u0026rsquo; note (A is a common reference pitch, as it\u0026rsquo;s just multiples of 110Hz so it\u0026rsquo;s easy to remember) Now each key will just be \u0026lsquo;transposed\u0026rsquo; that is they\u0026rsquo;ll all be shifted over a few notes.\nYou can also turn this knob to something out of tune to get things completely out of the classical scale. The fine knob below does the same thing, but gives you fine control (obviously)\nAlright, we\u0026rsquo;ll come back to the VCO later, but let\u0026rsquo;s follow the signal path a bit further. The VCO has a wire coming from the Saw wave output into a VCF or \u0026lsquo;Voltage Controlled Filter\u0026rsquo;.\nFilters are a huge part of making good sounding music as often you\u0026rsquo;ll have a good sound but it\u0026rsquo;ll have too much low or high end and you just want to cut it out. This filter actually has 2 outputs, one for a \u0026lsquo;High Pass Filter\u0026rsquo; (HPF) and one for a \u0026lsquo;Low Pass Filter\u0026rsquo; (LPF) as the names imply, a HPF lets high frequencies though and cuts the low end and a LPF cuts the high end but lets the low though. LPFs are generally used more as usually it\u0026rsquo;s more desirable to cut the harsh highs out of a sound than the humming, thumping lows. This is exactly what has been done in the default patch here. The final basic (filters get really complicated) thing you should know about a filter is how they have have a cut-off frequency. That is the point at which the filter starts cutting the sound. This is adjustable, so say with a Low Pass Filter we could set the frequency really low and only let though the lowest frequency sounds or set in nice and open to just cut out the really hissy stuff. We\u0026rsquo;ll talk about more complex stuff like resonance in a bit.\nThe need for this may seem a bit weird at first, as if we\u0026rsquo;re playing a note at exactly one frequency, say A at 220Hz, then why would we need to filter out anything? Well, most oscillators and real instruments alike will actually have multiple \u0026lsquo;harmonics\u0026rsquo;, that is it will play an A at 220, 440, 880, and so on with decreasing amplitude or even on other frequencies entirely that still have a musical influence on the signal. On the \u0026lsquo;VCO-1\u0026rsquo; Oscillator loaded into the default patch here you can lessen these harmonics by switching the ANLG (Analog) and DIGI (Digital) switch on the right. This is because this oscillator can emulate either an \u0026lsquo;ideal\u0026rsquo; digital oscillator which outputs a clean, sharp signal with less harmonics or an analog signal oscillator which includes a subtle amount of pitch drift and some smoothing of the output wave- of note, usually the analog characteristics, while technically flaws, are desirable.\n The top VCO is outputting an \u0026lsquo;analog\u0026rsquo; emulating signal while the bottom is in digital mode. Look at how the Triangle output shape on the analog mode is smoothed out compared to the digital mode\u0026rsquo;s sharp edges\n You\u0026rsquo;ll also notice there\u0026rsquo;s a third wire running into the filter though- into an input labeled \u0026lsquo;freq\u0026rsquo;. This input modulates the filter\u0026rsquo;s cut off frequency. You wont visually see the knob change but you will hear the filter\u0026rsquo;s cut off change based on the signal applied to this input but only if the \u0026lsquo;Freq CV\u0026rsquo; knob is turned up. The \u0026lsquo;Freq CV\u0026rsquo; knob is what\u0026rsquo;s known as an attenuverter (a portamento of \u0026lsquo;Attenuator\u0026rsquo; and \u0026lsquo;Inverter\u0026rsquo;). This knob, when facing dead center says \u0026lsquo;let nothing though\u0026rsquo; while all the way right lets the full signal (from the freq input) though, and all the way left lets the full signal though but inverts it first. Leaning right but not all the way will \u0026lsquo;Attenuate\u0026rsquo; or weaken the signal first. I think you get the idea.\nSo say we put the big \u0026lsquo;FREQ\u0026rsquo; knob dead center, and give the \u0026lsquo;FREQ\u0026rsquo; input jack wire carrying a very slow sine wave that goes between 0 and 10V, and set the \u0026lsquo;FREQ CV\u0026rsquo; knob all the way right: This will bring the cut off higher and higher from it\u0026rsquo;s starting position, and then bring it back to the starting level. If we instead turn the \u0026lsquo;FREQ CV\u0026rsquo; knob all the way left, it\u0026rsquo;ll bring the cut off frequency lower before turning back around and coming to it\u0026rsquo;s starting position. Putting it at a slight lean right will still do the same as we started with, but will have less of an impact, making the sound much less \u0026lsquo;jumpy\u0026rsquo; and tame. Really, that\u0026rsquo;s what attenuverter\u0026rsquo;s are for, taming an input signal.\nHere, I\u0026rsquo;m showing modulating the filter frequency manually as well as showing what resonance is- it boots the signal right at the cut off frequency\nHere, the input to the cut off frequency is modulated with an \u0026lsquo;LFO\u0026rsquo; or Low Frequency Oscillator, which much like the VCO outputs a simple signal, but in this case the signal is low frequency, usually below human hearing range:\nAlright, that\u0026rsquo;s fine and all, but the cable going input to the \u0026lsquo;FREQ\u0026rsquo; control on the VCF is coming from something called an \u0026lsquo;ADSR\u0026rsquo;\nSo the adventure continues. \u0026lsquo;ADSR\u0026rsquo; stands for \u0026lsquo;Attack, Decay, Sustain, Release\u0026rsquo; and it does exactly that. But before we understand the output of an ADSR we have to look at it\u0026rsquo;s input- \u0026lsquo;Gate\u0026rsquo; and \u0026lsquo;Retrig\u0026rsquo;\n\u0026lsquo;Gates\u0026rsquo;, in modular, are simply a positive (sometimes needing to be 5V or higher) signals that represent that something is happening. Usually, that a key is being held. And that\u0026rsquo;s exactly what\u0026rsquo;s going on here. When you hold a key the \u0026lsquo;Gate\u0026rsquo; output of the MIDI-\u0026gt;CV module is active. When you release it, the output goes off. You can see this by looking at the green indicator light where the gate output is on the MIDI-\u0026gt;CV module when you hold or release a key. \u0026lsquo;Retrig\u0026rsquo; is similar, though it only outputs a short pulse every time you press a key. This is handy because you may press a second key while already holding one key, meaning the gate output should stay on, but the retrig output will have sent a pulse each time you pressed a key (once when you pressed the key your holding, another time when you press a different key while still holding the original key).\nSo, back to the \u0026lsquo;ADSR\u0026rsquo; an ADSR generates a signal that looks like this:\nThat is, voltage will follow this shape over time. The \u0026lsquo;Attack\u0026rsquo; knob sets how long it takes to reach the peak point, the Decay knob set\u0026rsquo;s how long it will take to reach the sustain level, the sustain knob set\u0026rsquo;s at what level the sustain should be held at, and the release knob set\u0026rsquo;s how long the note should take to fade out from the sustain level after the key is released. Take note, the sustain knob controls a level, while the other three control time:\nAlright, so when the ADSR get\u0026rsquo;s a gate signal it\u0026rsquo;ll go though the Attack and Decay stages and wait at the Sustain level until the Gate is released or a Retrig signal is sent telling the ADSR to repeat the Attack and Decay stages.\nSo, this output signal is fed to two places, the first is the frequency knob we saw before. This will result in the frequency cutoff going high then coming down to a reasonable level, then cutting down to just low frequencies as a note is released. The other place the signal goes is into the mixer:\nThe mixer in this demo patch is super simple. It has 4 inputs, with one output. The sliders let you set the level of each input, and the \u0026lsquo;CV\u0026rsquo; input of each slider let\u0026rsquo;s you externally control the slider. Because the ADSR is fed into this input and the ADSR output is at 0V unless you hit a key the mixer actually mutes the signal until a key is pressed and then lets it play, fading out over the release period. The mixer also has one big volume knob ontop to set the master output volume of all 4 channels combined. Essentially the volume follows this shape of the ADSR signal over time. In times like this, the ADSR signal is called the \u0026lsquo;envelope\u0026rsquo; for the sound. Really, the mixer is just a combination of multiple of a simpler component though, the VCA or Voltage Controlled Amplifier. This name is a bit misleading though, as really VCAs are usually used to bring a sounds volume down, like an attenuator. To show the simplest case I\u0026rsquo;ll hook up a LFO to control a VCA\u0026rsquo;s level, in turn changing the level of the signal passing though:\nAlso, above you\u0026rsquo;ll see I used a 3rd party oscillator instead of the VCO-1 you\u0026rsquo;ve seen so far. Pictured is \u0026lsquo;Basal\u0026rsquo; from the \u0026lsquo;Vult-Free\u0026rsquo; collection of modules available on the VCV library page.\nFinally, the output of just the first channel of the mixer is fed into the scope so that when you press a key you can see the signal your generating. To understand this it\u0026rsquo;s easiest to just drag the cable coming out of the VCO\u0026rsquo;s \u0026lsquo;SAW\u0026rsquo; output to the VCO\u0026rsquo;s \u0026lsquo;Sine\u0026rsquo; Output. Now when you press a key instead of seeing a saw wave you should see a sine wave.\nFinally, I want to mention that at least by default this setup is \u0026lsquo;Monophonic\u0026rsquo; (Mono = One , Phonic = Voice) meaning that even if you hit 2 keys at once you\u0026rsquo;ll only hear the note from the last key you pressed. We\u0026rsquo;ll explore Polyphonic (Many Voice) and Paraphonic (Para = beside, or side by side) systems later.\n Now that we have that mess out of the way let\u0026rsquo;s talk shop and drop back into our rack. This time Let\u0026rsquo;s start with a mostly clean slate. Make sure you can still get sound out, then remove every module except the Audio module. Alrighty, now we can get to business.\nLet\u0026rsquo;s make a simple generative track, to start with we\u0026rsquo;ll need some drums. Here\u0026rsquo;s what we\u0026rsquo;ll be setting up:\nSo first, let\u0026rsquo;s break each module down by function. The uGraph module (2nd on left) is a generative trigger sequencer, it generates drum rhythms for us. It has it\u0026rsquo;s own built in clock, but an external clock signal can be provided (turn the clock knob left until it says Ext. then provide a clock input that\u0026rsquo;s multiplied by the rate specified in the clock res box, in this case it wants 4ppqn or peaks per quarter note, so, if you want to a 120 bpm drum line, you\u0026rsquo;ll want to send a clock signal that\u0026rsquo;s multiplied by 4. Some modules will sync on 1ppqn or 24ppqn, etc. So, just be aware that you may need to multiply your clock signal some times.) though here we\u0026rsquo;ll use the internal clock. This module sends out 6 triggers, where the three \u0026lsquo;accent\u0026rsquo; (Acc) triggers are a strict subset of the main trigger outputs, that is there will only be an output on Acc when there is an output on Trig, but not always. uGraph will generate the three trigger sequences such that the left most trigger output \u0026lsquo;fires\u0026rsquo; the least often and the right most the most often. This works well for setting up a common drum machine with kick, snare, and hat sounds so that the hats are frequent, the snare less so, and the kick a steady beat, but not overpowering. Of course, this isn\u0026rsquo;t how you have to use it, and you can always add more trigger output patterns in VCV simply by sending two uGraph modules the same clock. Again, for now one module is fine. Finally, it\u0026rsquo;s notable that this pattern will repeat, but a new pattern can be selected with the Map X and Map Y knobs.\nAlright, so uGraph is generating the drum triggers, think of it like the human swinging the drum sticks, but with only uGraph in there\u0026rsquo;s nothing to hit. so let\u0026rsquo;s add the basics. Grab a small Nysthi Mixers as pictures 2nd to last above and hook it up to an audio module as well. Then, grab the Erica PicoDrums module and place it in. Now, hook up two of the trigger outputs to the picoDrum\u0026rsquo;s TR1 and TR2 trigger inputs, take the PicoDrums output to the mixer. After turning down the mixer module\u0026rsquo;s master out a bit to make sure you don\u0026rsquo;t play too loud of a sound, hit \u0026lsquo;run\u0026rsquo; on the uGraph module. Currently, both of the drum sounds on the PicoDrum are set to the same sample, so you\u0026rsquo;ll want to move the big \u0026lsquo;ctrl\u0026rsquo; knob at the top to select a different sample on drum1, then switch to drum2 with the switch, and pick a good sample for drum two as well. You should now have a good drum pattern started!\nThe problem with the PicoDrum module is that it has some baked in drum sounds that can\u0026rsquo;t be changed (well, okay, the real eurorack version they can be, which actually makes it a good value, but I digress) but the sounds are still samples, that is they\u0026rsquo;re just audio files being trigged to be played back. So, why not use something where we can pick our own sample?\nYou\u0026rsquo;ll need some drum samples to get started, so just to get you started here\u0026rsquo;s a decent sample pack: https://soundpacks.com/free-sound-packs/nyc-drum-kit/\nDownload, extract, etc. that folder and in VCV place the \u0026lsquo;Player\u0026rsquo; module as pictured above. Right click the module, select \u0026lsquo;Load Sample\u0026rsquo;, and use one of the sounds in the folders. You should now be able to trigger the player module and get sound out of it the same as the PicoDrum module. You can mess with some of the controls to get a feel for what you can do with the player Module. If you\u0026rsquo;re having fun with that, you may want to look at the \u0026lsquo;Simpliciter\u0026rsquo; module from Nysthi for an even more advanced sampler (also check the \u0026ldquo;samples\u0026rdquo; section below).\nAll of this is cool and all, but we\u0026rsquo;re just playing back and manipulating sound files so far, so, let\u0026rsquo;s look at the next type of drum: synthesized drum. Synth drums can be made to sound very close to real drums (this is generally called physical modeling, you\u0026rsquo;ll hear the term a lot more for string synth sounds though) but can give sounds that no real drum would be capable of either. In the patch above I have \u0026lsquo;Meta\u0026rsquo; from starling generating a low bass drum sound, but you can generally tweak synth drums into whatever sound you want, albeit some module will be better at different sounds, for example Vult\u0026rsquo;s \u0026lsquo;Trummor\u0026rsquo; modules excel at kick and bass drums. You can also make synth drums from basically anything just by thinking about the sound a drum makes. Generally, a drum is just a sound with a really sharp attack and a pitch that changes at it releases, so, this, while not the best, is a decent drum sound:\nanyway, so now the last relevant part of the above patch worth understanding is the slew is just making it so we get a nice envelope generated by the Acc output, that slew is changing the pitch decay time on the synth drum (Meta) so that on accent outputs the low drum lasts a bit longer and has a slightly different sound. Just look at the signal on a scope in VCV if you don\u0026rsquo;t fully get it.\n"});index.add({'id':86,'href':'/music/music-hardware/','title':"Music Hardware",'section':"MUSIC",'content':"Music Hardware #  MIDI #  [TODO] Building a MIDI Controller Using Arduino (YouTube, Switch \u0026amp; Lever)\nMPE, aftertouch, vel, virtual midi, midi cc v pb v mod v note on/off v sysmsg v OSC v midi2.0\nNote, there\u0026rsquo;s a pretty limited number of MPE capable instruments, thankfully there\u0026rsquo;s stil a decent price range between them. This list is not exhaustive, but I think gives a good sampling:\nSmall:\nArtiphon Orba\nRoli Lightpad Blocks\nHaken Audio ContinuuMini\n Big:\nExpressive e - Osmose (Demo)\nRoli Seaboard (Block, Rise)\nLinnStrument\nHaken Audio Continuum\n  Audio Interfaces #  [TODO, ADAT, preamps, headphone amps, phantom48]\n Weird side note:\nSome VOIP software (Discord, Zoom, etc.) may want you to use a Sample rate of 48Khz and a Buffer size of 192. No clue why.\n Headphones/speakers #  [TODO studio headphones V regular]\n[TODO openback v Closed]\n[TODO Planar magnetic]\n[TODO Quadraphonic, Atmos, 5.1, etc]\nEurorack #  Modular Grid an online tool for dreaming about hardware setups (Eurorack, Guitar Pedals, and a few other modular formats)\nCool Hardware #  Blokas Midihub\nNovation LaunchPad X\n launchpad.py - python library for the Novation Launchpad Line r_cycle for Pure Data Library *most Launchpads  T1 Algorithmic Midi Sequencer\nSixtyfour pixels MIDI controlled relay\nSixtyfour pixels \u0026lsquo;Noodlebox\u0026rsquo; sequencer\nSleepy Circuit\u0026rsquo;s \u0026ldquo;Hypno\u0026rdquo; CV live visuals box\nNotes on Hardware NOT to buy #   The Teenage Engineering Pocket Operators are cool, fun, etc. But they\u0026rsquo;re pretty fragile and have some issues. Generally, I don\u0026rsquo;t think they\u0026rsquo;re worth it. Here\u0026rsquo;s Some alternatives  Analogue Pocket DityWave M8 or, if you\u0026rsquo;re feeling spendy, the OP-1 and OP-Z are options. Each have their own quirks though, so be sure to do your research. Regardless, I really don\u0026rsquo;t recomend the TE PO\u0026rsquo;s    Notes on how your hardware will be more expensive than you think #  [TODO] Balanced audio, group loop isolation, impedance matching, isolated power supplies, cables \u0026hellip; so many cables\nDAWless? #  DAW-less just means not using a Digital Audio Workstation to make your music, usually though this means not using a typical computer at all. Here\u0026rsquo;s a good example of a DAWless performance:\n 10 Things You NEED to know before Building a Dawless Synthesizer Setup (YouTube, BoBeats)\n"});index.add({'id':87,'href':'/music/music-software/','title':"Music Software",'section':"MUSIC",'content':"Music Software #  Live Coding Tools #     Name \u0026amp; Link Description Screenshot / Demo     SonicPi     ORCŒë Learn Orca Extra Tools for ORCA:  Cassetter for ORCA Aioi - UDP to complex OSC for ORCA  Pilot - 16 voice synth for ORCA    Noton A minimal logic gates playground, written in ANSI C. Made by the same developers as ORCŒë    Chuck \u0026ldquo;Chuck is a programming language for real-time sound synthesis and music creation. It is open-source and freely available on MacOS X, Windows, and Linux. Chuck presents a unique time-based, a concurrent programming model that\u0026rsquo;s precise and expressive (we call this strongly-timed), dynamic control rates, and the ability to add and modify code on-the-fly. In addition, ChucK supports MIDI, OpenSoundControl, HID device, and multi-channel audio.\u0026rdquo;    Mutateful Requires Ableton Live \u0026ldquo;enables live coding in Ableton Live\u0026rsquo;s session view. Set up transformations that trigger whenever a source clip is changed, including arpeggiation, shuffling, and ratcheting/retriggering.\u0026rdquo;    Pure-Data and Purr Data (a better fork)     Zerobrane Studio and Moonlet     Krill Krill is a livecoding environment inspired from TidalCycles.    TidalCycles     Mosaic     Overtone - Live Code     Tweakable     Siren (Github) Tracker meets livecode    FoxDot Livecoding with Python    Extempore Lang \u0026ldquo;Extempore is a programming language and runtime environment designed to support cyberphysical programming\u0026rdquo;     DAWs and almost-daws #     Name \u0026amp; Link Description Screenshot / Demo     VCV Rack     Reaper     Bitwig-Studio Bitwig is a lot like Ableton, but has the neat idea of \u0026lsquo;The Grid\u0026rsquo;- basically a little built in modular synth system. It\u0026rsquo;s not like VCV, as it\u0026rsquo;s a bit lower level but it can still be used for Generative Music or doing complex routing, like fading between effects. It also has really easy to use routable modulation, basically letting you drop an LFO, envelope, etc. onto any parameter of a VST. It also has good MPE support, which can be abused to do rhythmic drums as well:  https://www.bitwig.com/overview/   Audacity Not a full DAW, but super useful for trimming audio and quick fixes    Renoise     Deflemask     Sunvox     FL-Studio     Oscistudio     Ableton Live     Reason     GarageBand     Pro Tools     Marabu \u0026ldquo;Marabu is a free and open-source music tracker built from Soundbox.\u0026rdquo;     NOTE: this list is far from exhaustive. Instead, I\u0026rsquo;ve tried to list the main ones and some that I think are particularly cool.\nDigital Audio Workstations or \u0026lsquo;DAWs\u0026rsquo; come in many flavors, so let\u0026rsquo;s look at the differences between the above in depth [TODO]\nTrackers, vs non liner, vs modular, etc.\nHow To Ableton Like a Pro (YouTube)\nVSTs and other Plugins #  [TODO] Daws usually have built in instruments and effets I Made A Song Using Only Ableton Stock Plugins (YouTube, Composerily)\nThis is probably where the most bias of any of the lists on this page will show as I obviously can\u0026rsquo;t list every possible VST. Instead, I\u0026rsquo;ll list those that I think are particularly good both in terms of value and function.  VSTs are a really weird standard, for one, unlike most standards that are ratified by a collection of involved interests, VST is the child of a single company - Steinberg.\nGenerally, there are a few things you need to know:\n Some VSTs are distributed as VST2 others as VST3, obviously one is newer than the other. Unfortunately, not all DAWs support VST3 and worse, new applications by new devs have to be VST3 due to Stienberg no longer issuing new licenses. Generally, VST2 will be downloaded as .dll files while vst3 will be .vst3  VST3 does support a few extra features, and tend to perform better Some VST3\u0026rsquo;s can do neat stuff so that if multiple instances are loaded they can communicate together, this is useful for some mastering plugins.   Some VSTs are 64 bit, some are 32 bit. Not all modern DAWS support running 32bit VSTs VSTs can do 1 (or a mix of) three things  act as a virtual instrument (guitar, synth, etc.) act as a virtual effect (delay, reverb, etc.) act as a midi effect (arpeggio, quantizer, etc.)    There are some other, not-VST plugin formats you may encounter, namely LV2 and Apple\u0026rsquo;s Audio Units, as well as the various plugins for particular DAWs, like Reason\u0026rsquo;s \u0026lsquo;Rack Extensions\u0026rsquo; or Ableton Live\u0026rsquo;s M4L (Max For Live) Devices.\nWhile VST3 does have a linux SDK, most plugins aren\u0026rsquo;t released for Linux. You may still be able to make it work using a bridging program like Yabridge.\nYou may also see VSTi or VSTfx, these aren\u0026rsquo;t anything new, \u0026lsquo;i\u0026rsquo; or \u0026lsquo;fx\u0026rsquo; just denote if the plugin is an instrument or effects plugin.\nFree (But might have better paid version) #  Audio Sources #     Name \u0026amp; Link Description Screenshot     Ample Percussion Cloudrum Steel Tongue Drum    Alter Ego Virtual Singer, Text to Speech    Dexed Yamaha DX-7 Emulation    Surge Synthesizer FOSS hybrid synth    Daichi Synth 1 Emulation of Nord Lead 2, but better. You\u0026rsquo;ll probably want the preset pack    Distocore Bazz::Murda Bass Drum maker, looks like it fell right out of 2004.    Kairatune     Lord Of The Springs Physically modeled synthesis with a bunch of Springs    Helm     Vital Spectral warping wavetable synth (Free and Paid tiers)     Effects #     Name \u0026amp; Link                                           Other #     Name \u0026amp; Link Description Screenshot     Signalizer VST An amazing VST Oscilliscope, Vectorscope, and general analysis tool                                   Paid (But might have limited free version) #  No prices are listed below because they can fluctuate so much. VSTs and other music software tends to go on sale a lot, and usually quite good sales at that. You probably shouldn\u0026rsquo;t pay full price!  Audio Sources #     Name \u0026amp; Link Description Screenshot     ABL3 Emulation of the classic TB303. You can buy a Behringer hardware clone for not much more, but this is easier to use imho, and Behringer is a horrible company so please don\u0026rsquo;t support them.    Various from SugarBytes I really like Consequence - Chord GroveboxFactory - Mod Matrix PolysynthGuitarist - Guitar Emulation, easy to programDrum Computer - Drum SynthObscurium - I don\u0026rsquo;t even know, but it\u0026rsquo;s cool.Cyclop - Neat Synth, good for bassEgoist - Weird audio stem re-groover?Thesys - MIDI Sequencer     Various from Artuira (Go to Software Instruments) CS-80 V - CS-80 EmulationDX7 V - DX-7 Emulation, better UI than the free \u0026lsquo;Dexed'SEM V - Oberheim Sem EmulationModular V - Moog Modular Emulation (Could just use VCV)Pigments - Artuira\u0026rsquo;s take on a modern digital VST synth it\u0026rsquo;s pretty awesome                         Effects #     Name \u0026amp; Link Description Screenshot                                         Other #     Name \u0026amp; Link Description Screenshot                                         Kontakt Libraries #  Visualization Software/Tools #     Name \u0026amp; Link Description Screenshot/Demo     music_visualizer (Github) Shader viewer / music visualizer for Windows and Linux Too many variations to easily show, look at the github repo.   Soundshader (Github) Uses fancy \u0026lsquo;AutoCorrelation\u0026rsquo; - info on the github page https://soundshader.github.io   Metagroove (Itch.io)     Signalizer VST Listed above in Free VSTs, but it\u0026rsquo;s so good I\u0026rsquo;m listing it here again. An amazing VST Oscilliscope, Vectorscope, and general analysis tool, looks very good too. Has full screen modes.     Note that most of the fancy music animations you see on YouTube are probably made in Adobe After Effects, with the exception of some that are done in programs like TouchDesigner or other node-based programming environments. You can read more about these in Design Chapter 5 - Generative Tools\nSome people also use hardware such as the Sleepy Circuits \u0026lsquo;Hypno\u0026rsquo; or Critter \u0026amp; Guitari \u0026lsquo;Eyesy\u0026rsquo; - though both of these platforms are really just running a Raspberry Pi (a lil\u0026rsquo; computer) under the hood.\nOn very rare occasion you may also see some outright analog video synthesis, but this is generally very, very expensive. Just search YouTube for \u0026lsquo;Analog Video Synthesizer\u0026rsquo;.\nI also recomend making your visuals in weirder ways. Here are some videos with visuals I really like:\n Max Cooper - Aleph 2 (Official Video by Martin Krzywinski)  Music Apps (Android) #     Name \u0026amp; Link Description Screenshot/Demo     FractalBits     Sunvox     Grainstorm     WaveEditor     Kaossilator     Hexpress     SynprezFM     NodeBeat     OSCSurface     Spectroid      Max4Live Devices #  These devices only work inside of Ableton Live using Max For Live\nlil' pup\nNorns Devices #  These \u0026lsquo;plugins\u0026rsquo; only work on Monome\u0026rsquo;s Norns hardware\nSegments Audio Looper\noooooo - 6x digital tape loops (demo below)\n   View this post on Instagram         A post shared by infinitedigits (@infinitedigits) on Aug 29, 2020 at 4:35am PDT\n  euclidigons - euclidian sequencer but not like that‚Ñ¢\nMaking your own Music Software #  Awesome MusicDSP (Github)\nAwesome Audio Visualization (Github)\nKord (Github) - a music theory development framework in python\nTutorial: Programming Modules for VCV Rack - Part 1 (YouTube, Leonardo Laguna Ruiz) (This might be out of date)\nTutorial: Virtual Analog Modeling Basics, the Vult way (YouTube, Leonardo Laguna Ruiz)\n"});index.add({'id':88,'href':'/phil/opphil-old/','title':"OpPhil Old",'section':"PHIL",'content':"Old Version, needs migrated: #  Because you\u0026rsquo;re now somebody in the know about topics relating to technology and have a deeper understanding about issues that may effect the public, such as The FBI V Apple encryption case, Issues regrading internet speed and infrastructure, or The Government/NSA spying on people. There are plenty of issues that weather you like it or not you\u0026rsquo;re one of the few with enough information to truly understand and inform your peers. A well known digital writes and freedom advocacy group you may consider supporting is the Electronic Frontier Foundation or EFF, as they do some absolutely incredible work making sure we maintain our digital rights both in the role of consumers as well as hackers, tinkerers, security researchers and nerds. You may consider checking out Free press as well, though above all else educating yourself and others about issues to end ignorance and fear when it comes to these issues is more valuable than anything else.\nFurthermore, there\u0026rsquo;s a general view in the technical community that we should help push adoption of superior platforms. This is usually either for a push for decentralized services like Mastodon or Dat, or a push for FOSS (Free and Open Source) software like Linux or LibreOffice.\nMost in the technical community believe that you should have full control over the devices you own. This is a major factor in why so many technical people host their own servers and build a lot of the crazy things they do. As a result you\u0026rsquo;ll hear a lot about rooting or getting superuser or root on various devices as well as Right to Repair.\nMany in the tech community are on the heartbeat of issues surrounding copyright, fair use, and the Digital Millennium Copyright Act or DMCA as without exceptions, a lot of security research would not be legal and it\u0026rsquo;s of direct importance to issues like software piracy and issues surrounding YouTube\u0026rsquo;s automated ContentID [TODO: add links]\nMoving on from that though, there is increasingly a concern about energy consumption and environmental consequences of technology use. Data centers alone are already consuming over 2% of the worlds electricity and that number is set to grow exponentially in the coming years. Because of this having a light, fast, http://motherfuckingwebsite.com/ instead of a bloated, JavaScript heavy page actually matters. http://gauthierroussilhe.com/en/posts/convert-low-tech as well as https://solar.lowtechmagazine.com/2016/05/how-to-go-off-grid-in-your-apartment.html are good sites that go more in depth on this issue. Now, at the same time, I\u0026rsquo;m not going to act all high and mighty, my desktop and monitors use in excess of 300w, but it is still something to be mindful of.\nFinally, I\u0026rsquo;d like to make a few notes about online communities, trolling, hate speech, and the like. Clearly the tech industry leans significantly on the liberal/libertarian side; however, most of us also strongly support your right to say whatever you like even if we don\u0026rsquo;t support it. This is particularly frustrating when it comes to large, non-grouped online communities like Twitter or Tumblr where except by blocking, everyone is in the same public sphere instead of isolated. While the isolation can have negative effects too, like echo chambers where false information and hate breed, the smaller communities are also beneficial as they allow for a better sense of community and for individual moderation policies decided by the users instead of awkward rules like Tumblr\u0026rsquo;s NSFW ban and the chaos that ensued. Clearly the lines between hate speech and trolling and free speech are a problem online, and frankly the internet is young. We haven\u0026rsquo;t really figured out the right way to handle it yet. Should Twitter have the right to remove the Alt-Right or are they to important of a political forum to deny freedom of speech despite being a public company? Is it ethically okay to use services like Tor for privacy when by doing so you\u0026rsquo;re indirectly helping people get away with things like child \u0026hellip; abuse (I don\u0026rsquo;t want this document getting flagged by something, ironically). Or because the tools are going to exist regardless and criminals will always find another way is it okay? The truth is, it\u0026rsquo;s not black and white, and it\u0026rsquo;s well worth your time to sit down and consider what you are personally okay with and what you think, as a society, we need to change and how we might go about doing that. Personally, I think services like Mastodon which offer security and privacy while keeping individual communities free to handle themselves are the best option, but they\u0026rsquo;re also more complicated. Just know that decision you make online can have real world consequences, and that at the end of the day, there\u0026rsquo;s a human on the other side of that screen.\nOther interesting Case Studies #  https://www.nytimes.com/2017/04/30/business/traffic-light-fine.html https://arstechnica.com/tech-policy/2018/08/verizon-throttled-fire-departments-unlimited-data-during-calif-wildfire/\nFinally, a little less NSFW, the Maker and engineering communities also tend to overlap rather heavily with more artistically minded and sub-culture heavy groups, ranging from those obsessed with comics to anime nerds or furries. I really recommend you do at least a little research into various sub cultures and geek culture to better understand some of the people you\u0026rsquo;ll probably interact with. You might just find something new you enjoy while you\u0026rsquo;re at it.\n[TODO, add info about digital sex toys]\nAlso, because this got a bit heavy for a bit, let\u0026rsquo;s touch on Rule 34. We all know it, but where does it come from? 4Chan of course. Here\u0026rsquo;s the full set:\nTODO #  Education, college, prices, highschool homework and personal time, Drugs,\nShould I block ads?\nAlexa without the creep\nRationalWiki\nInteractive Media Bias Chart (Javascript heavy)\nr/TheMotte (Reddit) - Seems like a good place to test ideas,haven\u0026rsquo;t looked into it yet\nsocial networking: re: mastodon, tilde.club/town , webrings, IRC, Telegram, etc.\nmisc todo:\nhttps://www.reddit.com/r/politics/comments/hgt81r/outrage_mounts_over_report_russia_offered/fw6ereb\nhttps://www.reddit.com/r/ThatLookedExpensive/comments/gptu7t/john_connor_doing_his_part_fighting_for_the/frqo31d?utm_source=share\u0026amp;utm_medium=web2x\nhttps://www.reddit.com/r/politics/comments/ff54xc/trump_flatly_admits_hed_leave_americans_stranded/fjwpqub?utm_source=share\u0026amp;utm_medium=web2x\nhttps://www.reddit.com/r/news/comments/eyd0mb/rush_limbaugh_announces_he_has_lung_cancer/fggkmdg?utm_source=share\u0026amp;utm_medium=web2x\nadd critism of tiktok, grubhub, Behringer, etc, and avoiding assholes the \u0026ldquo;A bag of dicks\u0026rdquo; argument\n"});index.add({'id':89,'href':'/music/other-resources-music/','title':"Other Resources, Music",'section':"MUSIC",'content':"Cool People #  https://twitter.com/RichardDevine https://twitter.com/LOOKMUMNOCMPUTR\nhttps://twitter.com/electricdahliia\nhttps://t.me/vcvrackchat\nNeurotypique https://www.youtube.com/channel/UC4oBI5piGMznFMZdtEC0FhA\nOmri Cohen, a Rack Master\u0026rsquo;s YouTube Channel\nLoopop RedMeansRecording AdamNeely AndrewHuang Rob Scallon Pipe Organ Video (YouTube), Theorbo Video (YouTube),\nReddit: https://www.reddit.com/r/vcvrack/ , https://www.reddit.com/r/synthesizers/ , https://www.reddit.com/r/synthdiy/ , https://www.reddit.com/r/modular/\nOther Resources #  PatchStorage - A community of many active audio \u0026amp; visual programming enthusiasts who share and discuss their projects!\nhttps://learningmusic.ableton.com/\nhttps://codepen.io/teropa/full/bRqYVj/\nSynchronized Swept-Sine: Theory, Application, and Implementation\nAutoEq (Github) - Automatic headphone equalization from frequency responses\nA note on Music and Engineering #  [TODO] compare VCV to programming, filters, etc\nA Transistor-less sound synthesizer (Hackaday, Jenny List, Dr. Cockroach)\nChua oscillator on CRO during inductance sweep\n"});index.add({'id':90,'href':'/phil/phil-and-the-internet/','title':"Phil and The Internet",'section':"PHIL",'content':"Politics and The Internet #  The important laws you need to understand: #  CDA (no pronz) \u0026amp; ¬ß230 #  Hazbin Hotel Pilot (Viziepop, YouTube)   The Communications Decency Act of 1996 (CDA) was the United States Congress\u0026rsquo;s first notable attempt to regulate pornographic material on the Internet. In the 1997 landmark case Reno v. ACLU, the United States Supreme Court struck the act\u0026rsquo;s anti-indecency provisions.\n Communications Decency Act (Wikipedia)   Alright, so it was some failed law that tried to ban porn? Well, yeah, BUT it did pass and was only later, in the afforementioned Reno v ACLU case, struck down - and there, only the anti-indecency provisions. This left one very, very inportant little bit, Section 230, that today the entire internet relies on, The 26 words that created the internet:\n No provider or user of an interactive computer service shall be treated as the publisher or speaker of any information provided by another information content provider\n [TODO] expand on why 230 is important\nSection 230, protecting you in your facebook comments section\n DMCA (attempting to fix 230) #  jailbreaking exception\nFOSTA/SESTA (Breaking 230) #  SOPA \u0026amp; PIPA (Trying to break everything) #      COPA (Breaking things\u0026hellip; For the children!)) #  GDPR (They tried) #  Note, unlike the rest of the items in this list, the GDPR is NOT legislation from the United States, instead it\u0026rsquo;s applicable to all EU residents US websites when they don\u0026#39;t want to comply to the GDPR:\n\u0026quot;Sorry, we want to track you, but because of EU\u0026#39;s GDPR, we can\u0026#39;t, so f* off, we won\u0026#39;t show you our website\u0026#39;s content.\u0026quot; pic.twitter.com/70LuYcYotH\n\u0026mdash; Samantaz (@SamantazFox) December 20, 2020  EARN IT (Breaking things more) #  All About Section 230, The EARN IT Act and What They Mean for Free Speech and Privacy\nPatriot Act \u0026amp; FISA (Watching you) #  CFAA (Hack The Planet?) #  Net Neutrality (and the buying of the FCC) #  HIPAA (attempting to unfuck healthcare a wee bit) #  https://www.mnot.net/blog/2020/08/28/for_the_users RFC8890\nProtecting general computation #  Encryption and illegal numbers #   Do you own your hardware? software? #  Format shifting #  Data and Privacy #    COMMENTS on \u0026ldquo;Facebook criticizes Apple‚Äôs iOS privacy changes with full-page newspaper ads\u0026rdquo; on Hacker News\nStalkerware #  AI #  Sufficently Advaced Technology and Justice (Hackaday, Elliot Williams)\nGoogle Amp #  Google AMP Can go to Hell (Polemic Digital)\n"});index.add({'id':91,'href':'/phil/phil-other/','title':"Phil Other",'section':"PHIL",'content':"Political or social commentary ramblings from hackers solarpunks and engineers #  The Great Asshole Fallacy\nAmeyama\u0026rsquo;s Values Update\nHow to Dropout\nA Sick Giant\nMetaphors We Believe By\nHope In Every Box (YouTube)\nAnd Then We\u0026rsquo;ll be okay (YouTube)\nThe Guy I Almost Was (Comic)\nA New Digital Manifesto\nSmall Technology Foundation\nFive Geek Social Fallacies\nA message from your university\u0026rsquo;s VP for magical thinking\nThank you #  If you\u0026rsquo;ve made it this far I just want to say thank you. We need more people to really consider how ethics, politics, and copyright shape the world around us with technology and art as we design it and proceed with it. DeepFakes, Automated driving, and even more mass online censorship are issues we\u0026rsquo;re only going to face more with time and it\u0026rsquo;s people like you who are going to help make sure we take the best path we can. So, from the bottom of my heart, thank you.\n"});index.add({'id':92,'href':'/phil/phil-misc/','title':"Phil, Misc",'section':"PHIL",'content':"Animal Rights (Industrial Scale Slaughter) #  Organ donation #  Tech can\u0026rsquo;t solve all your problems #  Human problems need human solutions\nGuns #                  "});index.add({'id':93,'href':'/phil/religon/','title':"Religon",'section':"PHIL",'content':"Religion #  [TODO] The engineering community is strangely divided, the \u0026lsquo;old guard\u0026rsquo; is actually relatively conservative and professional, but as time has moved forward it\u0026rsquo;s quite the opposite. Unsurprisingly, this correlates with religion as well. The main way this plays into politics is a general hard stance for the separation of church and state. This is in part due to a past of religiously motivated legislation negatively impacting copyright law, but also just generally an understood ideal that is beneficial to democracy. Furthermore, it would probably be worth your time to look into basics of most world religions, as engineering is increasingly a global field where you will have no choice but to work with people from diverse backgrounds across the globe.\n[TODO] Taxing it\nxkcd #505 "});index.add({'id':94,'href':'/music/sequencing-and-midi/','title':"Sequencing and MIDI",'section':"MUSIC",'content':"Sequencing #  random, sample/hold, probability, piano rolls, trackers, AI based, euclidian, trigger/gate/len, humanization\nCreating Melodies [Music Guides from Ableton]\nMelody Guide [edmprod.com]\nWays to turn tiny ideas into bigger tracks (YouTube, Andrew Huang)\nMIDI effects #  Arp, velocity, pitch bend, mod, sustain, generative, legatto\nMultitracking #  Multitracking Synthesizers for Fun and Profit (YouTube, RedMeansRecording)\n"});index.add({'id':95,'href':'/phil/sex/','title':"Sex",'section':"PHIL",'content':"Sex #  In an ideal world human kind would be driven forward by more than the initiate desire to reproduce and bone. Then again, if it weren\u0026rsquo;t for that we wouldn\u0026rsquo;t have evolved to this point where we\u0026rsquo;re capable of reflecting on that irony, in the first place.\nConsent #   [TODO] Coersion by econominc and social pressure\nSex Work and Porn #   Visa and Mastercard are Trying to Dictate What You Can Watch on Pornhub (EFF)\nThe Internet is for Porn - post is mostly about OnlyFans (The Margins)\nPorn Addiction? #  Pro-Choice Vs Pro-Life #    I am so tired of this abortion debate and hearing people treat it like a political issue instead of a deeply-personal, medical decision that men and women have to decide under horrible, tragic, heart-breaking circumstances. My husband and my son have long assumed that I\u0026rsquo;m pro-choice. I\u0026rsquo;ve never corrected them, but I\u0026rsquo;m not exactly. My mother, co-workers and some of my friends have assumed I\u0026rsquo;m pro-life. I\u0026rsquo;m actually not pro-life either. I am simply pro-reasonable.\nI\u0026rsquo;m a child custody attorney, who is now also seeing the tragedy of the Juvenile Court system on a regular basis too. I\u0026rsquo;m seeing what happens to the kids the parents don\u0026rsquo;t want, and yes, there are many who are not wanted by either parent. I represent men and women who are forced to pay child support and do not get to see their children, or rarely see their children. I was also a young girl faced with an unexpected pregnancy more then once, and carrying a baby that I couldn\u0026rsquo;t financially support.\nSo, here are a few of the societal/legal facts leading to abortion, and preventing all these babies from going to adoptive families: All methods of birth control have failure rates. Teenagers, and especially those raised in conservative households, do not have easy access to birth control. Expecting teenagers not to have sex is not practical. The State can make either or both parents pay child support even if they don\u0026rsquo;t have custody or parenting time with their children. Parenting time/custody are not legally connected to a parent\u0026rsquo;s obligation to pay child support. You can\u0026rsquo;t just agree to give up your parental rights to get out of paying child support. The only way to do that is with an adoption or step-parent adoption. Nebraska\u0026rsquo;s Safehaven law only protects the parents from criminal prosecution for neglect and abandonment, not from paying child support. Both parents have to agree to an adoption. There is a birth father registry list in Nebraska that allows fathers to register to claim a baby born to the woman whose name he provides (and if he does this a woman giving up her baby for adoption could find herself paying him child support). State aid isn\u0026rsquo;t as easy to come by as most people think and most of us would not want to live on it. Rape, incest, and pregnancy in girls under fifteen still happen. Babies die in utero, and sometimes must be removed from the womb. Sometimes a mother cannot carry a baby to term without endangering her life.\nIf you really, truly want to reduce the abortion rates, then here\u0026rsquo;s what it\u0026rsquo;s going to take: First, end the abstinence-only sex ed in schools. Give teenagers real facts. Make birth control free and readily available to EVERYONE. Allow both parents (and either parent) to give up their legal rights AND avoid paying child support (but make it a final decision). If only one parent gives up the rights, provide adequate State support to make up for the loss of parental support from the other. (This would mean that one parent would have less incentive to try to force the other parent to have an abortion.) If both parents give up their rights, make the adoption process easier and less expensive. If parents choose to keep the baby, instead of having an abortion (which they otherwise would have had because they couldn\u0026rsquo;t afford the baby), help them financially and provide them with daycare so they can work. Allow regular medical doctors to perform abortions without stigma for those pregnant women who have been victims of rape or incest, who are under fifteen, who are at risk of dying if they carry the baby to term, or who have already lost the baby in utero. Keep the protesters away from the women and the doctors.\nUnless we\u0026rsquo;re willing to do this as a society, and put our money where our mouths are, then we don\u0026rsquo;t get to decide what men and women facing this very personal, very tragic decision choose. If we do want to stop abortion, then put the ugly aborted-fetus posters down and go financially support a teenage mother, go lobby to provide birth control to teenagers, or go ask your own teenage son or daughter if he or she needs birth control. Do something useful, and be reasonable.\n Frankly, I think that sums it up pretty well, and truth be told I don\u0026rsquo;t think I really have a right to say more than that.\nBirth Control #  Gender, LGBT, \u0026amp; the term Queer #   The \u0026lsquo;Hacking\u0026rsquo; community in particular is usually very clear on sexual liberation/freedoms and given that technically minded people tend to have statistically significantly higher amounts of LGBTQIA+ people, it\u0026rsquo;s relevant to mention. I don\u0026rsquo;t want to go in depth or be your source of sex education, but I do think skipping over this would be doing the community some injustice. As such I\u0026rsquo;d also like to link to some videos providing sexual education, The truth about unwanted arousal | Emily Nagoski , YouTube\n Img credit, Kokofox @ https://kokoscript.com/\n TypeError: no implicit conversion of Gender into Boolean Other Resources #  \nohjoysextoy.com As a Furry myself I\u0026rsquo;m obligated to reccomend https://www.ohjoysextoy.com/furry/\nby LadySnakeBite on FurAffinity I also reccomend: A Handy Guide To Internal Shots (VERY NSFW) by her, which is a rant on art feautring cervix penetration.\n"});index.add({'id':96,'href':'/music/sound-sources/','title':"Sound Sources",'section':"MUSIC",'content':"Methods of making noise #  Samples #   a snippet of a .wav file open in audacity\n A sample is exactly as the name implies- a \u0026lsquo;sample\u0026rsquo; of audio. Sample is a pretty broad term though, so usually some more terms are applied to help categorize them. The easiest to explain is what is usually meant by sample: a small audio file that contains one sound, like one drum hit or one piano key press. These can either be samples made or collected for the sole purpose of use in later music (like hitting record, playing one drum hit, then stopping, to create a small drum sample) or a sample lifted (with often dubious legality) from another recording. It\u0026rsquo;s worth noting that fair use is really not something you can rely on here, but it\u0026rsquo;s also pretty common. #notlegaladvice\nThe next kind of sample worth looking at is a loop. These are longer and are usually, well, loopable. If you play them on repeat they typically sound continuous. Often these will be of drums or guitar. The term \u0026lsquo;loop\u0026rsquo; is often used broadly for audio snippets of this length though, so not all loops loop. Usually when using a loop it\u0026rsquo;s best to do some mangling, swapping some beats or putting on destructive effects to transform it in some way. This prevents your audio from just sounding like layered tracks from another artist mashed together and is a good way to put creativity into what you make.\nAnother term you might hear are stems. Stems are just separate recordings of each part of a song - say the vocals as one audio file and the drums as another, these would make up the stems.\nSamples are also, sort of ironically, made of samples. But these words mean two different things in that sentence. The sample of sound is made up digitally of a bunch of different points in a wave, usually captured ~44 thousand times a second- whatever the sampling rate is (commonly 44.1, 48, or 96 (1)). This is what gives us the image above, where the originally pretty smooth looking wave, when zoomed in, we can see is made of these discrete points.\nThis is particularly relevant to making music for multiple reasons:\n When change the speed/pitch by a non integer value, we have to \u0026lsquo;interpolate\u0026rsquo; extra points into this. When we slow down or make a sample lower pitch there\u0026rsquo;s only so much data to use, at really low pitches the wave will start to sound sort of low-fi When chopping a sample to start playback at any point, we want to chop at a 0-crossing to avoid a sharp transition (which equates to high pitch sound)  The Nyquist-Shannon Sampling Therom (Wikipedia) , put very basically, just says your sampling rate needs to be twice as high as the highest frequency in your source to be reproduced exactly. Because human hearing ranges roughly from 20 to 20khz, sampling at 40khz or above should be sufficient. Unfortunately, there's more too it than that, especially as generating waves in a virtual synth can benefit in sound quality for various reason from 'oversampling' - running above 44.1 or 48khz. Unfortunately, the higher the sampling rate the more work the computer has to do.     Zoomed in view of the snipped, showing the individual points in the sample\n    Bitwig Studio\u0026rsquo;s Sampler. Here pitch tracking is enabled, making it so the sample can be played sped up or slowed down to pitch chromatically along the keyboard. Bitwig\u0026rsquo;s Sampler is pretty similar to many other samplers in other DAWs like Ableton Live or modules like Simpliciter In VCV rack\n Here, we\u0026rsquo;re looking at the sampler device in in Bitwig Studio, though most of this should be similar in other software. Starting with the obvious, the sample wave form in the middle. Here I have loaded a sample ([TODO, new picture, .wav]) which has multiple drum sound in it, but I\u0026rsquo;ve zoomed in on one sample and placed these yellow flags to denote the start an end points. Bitwig\u0026rsquo;s sampler, like many others, will try to snap these points to aforementioned zero crossings. You\u0026rsquo;ll also see next to the file name that the keyboard icon is blue and says 100% and next to that the root is set to C3. This means that if I play the C3 key on my keyboard it will play the sample as is, but if I play a different key it will slow playback down or speed playback up to match the pitch to the key I\u0026rsquo;m playing. The root being C3 is because, say I hit and recorded the A4 key on my piano- it\u0026rsquo;s nice to be able to correct for the pitch of the sample in the keyboard tracking.\nStill in the same section of the window but at the bottom now you\u0026rsquo;ll see two icons for the flags with \u0026lsquo;[TODO]\u0026rsquo; time between them and after them, these are the times in the sample where the start and end flags are placed. Left of that you\u0026rsquo;ll also see an arrow with an R over it, that\u0026rsquo;s the button to tell it you want to play the sample in reverse.\n[TODO, a lot to go here]\n \u0026lsquo;Simpliciter\u0026rsquo; module in VCV rack, a sampler with transient detection, Sound On Sound (SOS) looping, and variable speed (pitch) playback\n start, stop, fade, pitch shift, (ableton simpler)Live Input\nquantization, tracking\nAdditive and Subtractive Synthesis #   [TODO] making a basic subtractive synth voice in VCV\nWavetables #   Note, that not all wavetables have the linear FM (discussed in the next section), Phase mod / distortion, and wavefolding that pigments has, though many do.\nI really reccomend using Blamsoft\u0026rsquo;s XFX-Wave for VCV rack to try out Wavetable synthesis. Also in VCV, Tiny Tricks Wave is a neat way to experiment with recording your own tables.\n[TODO pic of both]\nFM Synthesis #   Source (Likely originally from the Yahmaha DX7 Manual)\n Frequency Modulation or FM, is just the simply when you let the output of one oscillator modulate the frequency of another oscillator. Usually this is done in simple ratios and, ideals, uses linear, through zero modulation.\nFirst, Let\u0026rsquo;s start with linear vs exponential FM. It\u0026rsquo;s worth noting that most pitch tracking is exponential since our music system itself is inherently exponential (each octave is a doubling, that is the frequency between C5 and C4 is twice the frequency between C3 and C4). This causes a problem though, if we modulate with exponential FM, say with a sine wave that is +/- 1V (2Vpp) and we start with an A4 at 440hz, then we\u0026rsquo;ll swing up to 880hz and down to 220hz. Fine right? Not so much. If this modulation is meant to simply give us a more harmonically interesting A as we mix in different octaves that won\u0026rsquo;t be the effect, as now we\u0026rsquo;re (to oversimplify) at 880hz half the time and 220hz half the time, and if we average those $\\frac{880+220}{2}$ then we don\u0026rsquo;t still get the original A 440hz but rather we get 550Hz, so, we\u0026rsquo;ve detuned. Linear FM won\u0026rsquo;t be able to follow the V/Oct standard (though some may use the Hz/V standard) but will keep you in tune as you modulate. This, however, begins to pose a more interesting problem. Imagine you want to modulate a 100hz signal by +/- 200hz. Clearly, that would mean going as high as 300hz, but what happens when we get past the first half of that negative signal and hit 0hz? Well, this is where having a Though Zero FM (TZFM) capability comes in handy, as this issue is solved sonically by actually inverting the phase of the signal when crossing the 0Hz point. While this may seem an odd solution, it does produce sounds that line up with what our ears expect.\nExponential FM and V/Oct, assuming the same scaling, are the same thing though so sometimes you can actually view it more as a second V/Oct input. For example, you could use the Exp FM input to specify the note, and then the normal V/Oct input to change the octave. Of note however, this may not always work as the Exp FM input may be AC coupled, meaning that DC values, like note data, will not be able to get through and instead you\u0026rsquo;ll just hear a \u0026ldquo;ping\u0026rdquo; as the pitch is modulated at the cutoff of the AC coupling filter, in these cases the Exp FM input will have a minimum frequency that the input signal can oscillate at to perform properly.\nWhen talking about Linear FM, I mentioned that simple ratios are best. This isn\u0026rsquo;t entirely true, but they will produce the least complicated harmonics. For example taking\n [Todo, Why simple ratios]\n[Todo, Algorithms]\n[TODO, pic of Valley\u0026rsquo;s Dexter]\n[TODO] DIY FM voice in VCV\nGranular Synthesis #  There are many, many granular synths and effects, but, I\u0026rsquo;d like to start with a video review from Loopop of the Tasty Chips GR-1, as I think the hardware does a good job of showing what\u0026rsquo;s going on and Loopop does a great job explaining as well:\n [TODO] use for textures\n"});index.add({'id':97,'href':'/music/theory/','title':"Theory",'section':"MUSIC",'content':"First, this: #   Theory #  I\u0026rsquo;m going to be honest. I can\u0026rsquo;t read music and I don\u0026rsquo;t know scales. Why, then, would I in any way think I\u0026rsquo;m qualified to write anything about music? Well, let me stop you right there, I\u0026rsquo;m not. I make music for fun. However, I like to think that people enjoy my music and I enjoy listening to it myself as I make it, and though my experience I\u0026rsquo;ve picked up a little here and there to make sure things don\u0026rsquo;t sound awful. Furthermore, my background is primarily technically and there\u0026rsquo;s actually an insane amount of overlap with the incredibly technical and music. Fundamentally music is just doing math with frequencies after all.\nOur ears are weird. They\u0026rsquo;re incredibly good at math. We hear things logarithmically, that\u0026rsquo;s why 10watts of speaker output power is only about twice as loud as 1watt and we can tell if two notes are even slightly off a perfect ratio even if we\u0026rsquo;re not thinking about it. (If you hear one tone at 220Hz and another at 441Hz, only 1hz off of correct, you\u0026rsquo;ll probably be able to tell)\nOut ears also like integer divisions of musical ratios- I\u0026rsquo;m sure you\u0026rsquo;ve heard the term \u0026lsquo;perfect fifth\u0026rsquo;. And though our lives our ears get accustomed to hearing and feeling things associated with chord progressions. Even someone whose never written music or tried to learn anything about music theory can pick up on how a chord with more complex ratios creates tension that begs to be resolved to something simper (Think the Duuun-uh of the Jaw\u0026rsquo;s theme).\nOn the other hand perfection is boring, our ears and minds beg for stimulation, for surprise, for shock. Drums make complex sounds, that, while tuned, aren\u0026rsquo;t playing a constant note and we want our music to have sufficient progression, not just repeat the same sequence endlessly. A gnarly drop in some Dubstep or the cannon fire in the 1812 Overture both serve functionally a similar purpose.\nThe most common scale worldwide, the chromatic scale, uses 12 notes in an octave tuned to an equal temperament [TODO link] as to make as many chords as possible sound good is by far the most common but only one of an infinite ways that music can be represented. On the extreme end is Microtonal music, such as is possible on fretless [TODO link guitar, and this keyboard https://www.youtube.com/watch?v=APtJsaPxNgo] instruments. Furthermore, our choice of centering out keyboard with A set to 440Hz is relatively arbitrary (not that it\u0026rsquo;s a bad thing: https://www.youtube.com/watch?v=EKTZ151yLnk).\nIn the chromatic scale there are many other, more \u0026lsquo;refined\u0026rsquo; scales like Minor, Major, Pentatonic, etc. These scales may be transposed to be centered around any note (or any frequency, since notes are just agreed upon frequencies and the ratios between them)\nAnd honestly? That\u0026rsquo;s about all you need to know. Basically music is math and math makes music.\nOh, and the circle of fifths is a thing [TODO]\n[TODO] Just V equal Temperament here is confusing\n[TODO] Music Theory and White Supremacy (YouTube, Adam Neely)\n[TODO] Waitbutwhy.com \u0026ndash; Sound\n[TODO] Nanotone Synth\nCircle of 5ths Explained\nSong Structure #  Repition #  ABAB ABBA ABAC \u0026hellip; #  Call and Response #  Solos #  Contrast #  Heavy drops v dainty sections\nOctave changes #  making instruments swap roles\nKey Changes #  Further Reading #  An Introduction to Math Rock (YouTube, Alfo Media)\nThe Largest Chord - sUpEr UlTrA hYpEr MeGa MeTa LyDiAn (YouTube, Leon Waves)\n(*My) Procedurally Generated Music is Awful (Cube Drone)\nLilyPond: programming beautiful musical scores (YouTube, 36C3)\n"});index.add({'id':98,'href':'/design/ui/','title':"UI",'section':"DESIGN",'content':"UI and UX #  Principals of UI, A Thread (zensaiyuki@mastodon.social)\nGallery of Fantasy UI design from Movies and TV shows\nResponsiveness #   Source\n Typography #  Practical Typography Textbook\nWebsite Design #  Butalist Web Design, by David Copeland\nmotherfuckingwebsite.com, bettermotherfuckingwebsite.com, thebestmotherfuckingwebsite.website\nScrollbar Blindness (Sven Kadak\u0026rsquo;s Blog)\nGithub Dark Mode is too Dark. (Karen ying\u0026rsquo;s blog)\nFigma\nhttps://muzzleapp.com\nDark Patterns #  Logos #  Alright, nerds\nI filed a FOIA appeal and won the infamous NROL-39 surveillance satellite logo as a PDF.https://t.co/GypoZPnwsu\nThis ain\u0026#39;t a scanned powerpoint. This is a resizable vector. You know what you must do. Unleash the swag. pic.twitter.com/WZJXeBdHPi\n\u0026mdash; Ben Welsh (@palewire) October 8, 2019 "});index.add({'id':99,'href':'/phil/voting/','title':"Voting",'section':"PHIL",'content':"Elections \u0026amp; Voting #  lower standards of removal, ranked, transparency Budget voting\n"});})();