<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Engineering on Opinionated Guides</title>
    <link>https://opguides.info/engineering/</link>
    <description>Recent content in Engineering on Opinionated Guides</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="https://opguides.info/engineering/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>https://opguides.info/engineering/intro/community/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/intro/community/</guid>
      <description>&lt;script&gt;&#xA;&#xA;function hover(num) {&#xA;  document.querySelector(&#34;body &gt; main &gt; div &gt; article &gt; div.nerd-container &gt;   img:nth-child(8)&#34;).setAttribute(&#39;src&#39;, &#34;/nonfree/permissiongranted/nerd_lineup/&#34; + num + &#34;_a.webp&#34;);&#xA;}&#xA;&#xA;function unhover(num) {&#xA;  document.querySelector(&#34;body &gt; main &gt; div &gt; article &gt; div.nerd-container &gt;   img:nth-child(8)&#34;).setAttribute(&#39;src&#39;, &#34;/nonfree/permissiongranted/nerd_lineup/&#34; + num + &#34;.webp&#34;);&#xA;}&#xA;&#xA;preloads = &#34;red.gif,green.gif,blue.gif&#34;.split(&#34;,&#34;)&#xA;var tempImg = []&#xA;&#xA;for(var x=1; x &lt; 8;x++) {&#xA;    tempImg[x] = new Image()&#xA;    tempImg[x].src = &#34;/nonfree/permissiongranted/nerd_lineup/&#34; + x + &#34;_a.webp&#34;&#xA;}&#xA;&#xA;&lt;/script&gt;&#xA;&lt;!-- This height needs to depend on the image.--&gt;&#xA;&lt;style&gt;&#xA;region:hover{&#xA;}&#xA;.grid-container {&#xA;  display: grid;&#xA;  grid-template-columns: 15% 15% 14% 12% 17% 13% 14%;&#xA;  position: absolute;&#xA;  width: 100%;&#xA;  height: inherit;&#xA;}&#xA;&#xA;&#xA;.nerds{&#xA;&#x9;height: inherit;&#xA;}&#xA;&#xA;.nerd-container{&#xA;width: 100%&#xA;}&#xA;&#xA;.grid-item:{&#xA;&#x9;background-color: blue;&#xA;&#x9;z-index: 100 !important;&#xA;}&#xA;&#xA;img{&#xA;pointer-events: none;&#xA;}&#xA;&lt;/style&gt;&#xA;&lt;div class=&#34;nerd-container&#34;&gt;&#xA;&lt;img class=&#34;nerds&#34; src=&#34;https://opguides.info/nonfree/permissiongranted/nerd_lineup/1.webp&#34; alt=&#34;Soatok&#34; style=&#34;position: absolute;z-index: 3;&#34;&gt;&#xA;&lt;img class=&#34;nerds&#34; src=&#34;https://opguides.info/nonfree/permissiongranted/nerd_lineup/2.webp&#34; alt=&#34;Cadey&#34; style=&#34;position: absolute;z-index: 2;&#34;&gt;&#xA;&lt;img class=&#34;nerds&#34; src=&#34;https://opguides.info/nonfree/permissiongranted/nerd_lineup/3.webp&#34; alt=&#34;Loial&#34; style=&#34;position: absolute;z-index: 3;&#34;&gt;&#xA;&lt;img class=&#34;nerds&#34; src=&#34;https://opguides.info/nonfree/permissiongranted/nerd_lineup/4.webp&#34; alt=&#34;Vega&#34; style=&#34;position: absolute;z-index: 1;&#34;&gt;&#xA;&lt;img class=&#34;nerds&#34; src=&#34;https://opguides.info/nonfree/permissiongranted/nerd_lineup/5.webp&#34; alt=&#34;Cendyne&#34; style=&#34;position: absolute;z-index: 1;&#34;&gt;&#xA;&lt;img class=&#34;nerds&#34; src=&#34;https://opguides.info/nonfree/permissiongranted/nerd_lineup/6.webp&#34; alt=&#34;Mimir&#34; style=&#34;position: absolute;z-index: 1;&#34;&gt;&#xA;&lt;img class=&#34;nerds&#34; src=&#34;https://opguides.info/nonfree/permissiongranted/nerd_lineup/7.webp&#34; alt=&#34;Vordex&#34; style=&#34;position: absolute;z-index: 3;&#34;&gt;&#xA;&lt;img class=&#34;nerds&#34; src=&#34;https://opguides.info/nonfree/permissiongranted/nerd_lineup/placeholder.webp&#34; alt=&#34;Vordex&#34; style=&#34;position: absolute;z-index: 3;&#34;&gt;&#xA;&lt;div class=&#34;grid-container&#34;&gt;&#xA;  &lt;div class=&#34;grid-item&#34; onmouseover=&#34;hover(1);&#34; onmouseout=&#34;unhover(1);&#34;&gt;&lt;img class=&#34;nerds&#34; src=&#34;https://opguides.info/nonfree/permissiongranted/nerd_lineup/hoverregion.webp&#34; alt=&#34;Placeholder&#34; style=&#34;z-index: 3;&#34;&gt;&lt;/div&gt;&#xA;  &lt;div class=&#34;grid-item&#34; onmouseover=&#34;hover(2);&#34; onmouseout=&#34;unhover(2);&#34;&gt; &lt;/div&gt;&#xA;  &lt;div class=&#34;grid-item&#34; onmouseover=&#34;hover(3);&#34; onmouseout=&#34;unhover(3);&#34;&gt; &lt;/div&gt;&#xA;  &lt;div class=&#34;grid-item&#34; onmouseover=&#34;hover(4);&#34; onmouseout=&#34;unhover(4);&#34;&gt; &lt;/div&gt;&#xA;  &lt;div class=&#34;grid-item&#34; onmouseover=&#34;hover(5);&#34; onmouseout=&#34;unhover(5);&#34;&gt; &lt;/div&gt;&#xA;  &lt;div class=&#34;grid-item&#34; onmouseover=&#34;hover(6);&#34; onmouseout=&#34;unhover(6);&#34;&gt; &lt;/div&gt;&#xA;  &lt;div class=&#34;grid-item&#34; onmouseover=&#34;hover(7);&#34; onmouseout=&#34;unhover(7);&#34;&gt; &lt;/div&gt;&#xA;  &lt;/div&gt;&#xA;  &lt;/div&gt;&#xA;  &lt;img class=&#34;nerds&#34; src=&#34;https://opguides.info/nonfree/permissiongranted/nerd_lineup/placeholder.webp&#34; alt=&#34;Vordex&#34; style=&#34;z-index: 3;&#34;&gt;&#xA;&lt;p class=&#34;attribution &#34;&gt;&#xA;    Art by &lt;a href=&#34;https://mobile.twitter.com/talon_creations&#34;&gt;Talon Creations&lt;/a&gt;. Characters from Left to Right: &lt;a href=&#34;https://soatok.blog&#34;&gt;Soatok&lt;/a&gt;, &lt;a href=&#34;https://xeiaso.net/blog&#34;&gt;Cadey&lt;/a&gt;, &lt;a href=&#34;https://www.hackster.io/news/this-vfd-clock-exquisitely-echoes-the-craftsmanship-of-its-mechanical-analog-cousins-of-yesterday-eaa73a60adb1&#34;&gt;Loial&lt;/a&gt;, Vega, &lt;a href=&#34;https://cendyne.dev&#34;&gt;Cendyne&lt;/a&gt;, &lt;a href=&#34;http://meow.social/@mimir&#34;&gt;Mimir&lt;/a&gt;, &lt;a href=&#34;http://yote.tech&#34;&gt;Vordex&lt;/a&gt;&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/a3-bom/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/a3-bom/</guid>
      <description>&lt;h1 id=&#34;appendix-c---bom&#34;&gt;&#xA;  Appendix C - BOM&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#appendix-c---bom&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;div class=&#34;tip &#34;&gt;&#xA;    As the guide isn&amp;rsquo;t anywhere near a usable state yet, this page should be ignored for the most part.&#xA;&lt;/div&gt;&#xA;&lt;p&gt;OpGuides &lt;strong&gt;is&lt;/strong&gt; free. Unfortunately all the tools and programs you&amp;rsquo;ll need to follow along aren&amp;rsquo;t necessarily. While you probably could do everything in this guide without getting the things in this Bill OF Materials (BOM) it will massively help to have it.&lt;/p&gt;&#xA;&lt;p&gt;I&amp;rsquo;ll do my best to keep the cost as low as possible though. If you need help confirming something in your cart is correct just hit me up.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/circuits/circuits1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/circuits/circuits1/</guid>
      <description>&lt;h1 id=&#34;chapter-23----e-e-e-e-e-e-e-e-e-e-e--electrons-work-for-you&#34;&gt;&#xA;  Chapter 23 - &lt;span style=&#34;z-index:1;position: absolute;display: inline-block;color: #fff2;text-shadow:none;&#34;&gt; &lt;sup&gt; e&lt;sup&gt;-&lt;/sup&gt;&lt;sub&gt;e&lt;sup&gt;-&lt;/sup&gt;&lt;sup&gt;e&lt;sup&gt;-&lt;/sup&gt;&lt;/sup&gt;&lt;sub&gt;e&lt;sup&gt;-&lt;/sup&gt;&lt;/sub&gt;&lt;/sub&gt;&lt;/sup&gt;&lt;sub&gt;e-&lt;/sub&gt;&lt;sup&gt;e&lt;sup&gt;-&lt;/sup&gt;&lt;/sup&gt;&lt;sub&gt;e&lt;sup&gt;-&lt;/sup&gt;&lt;sup&gt;e&lt;sup&gt;-&lt;/sup&gt;&lt;/sup&gt;&lt;sub&gt;e&lt;sup&gt;-&lt;/sup&gt;&lt;/sub&gt;&lt;/sub&gt;&lt;/sup&gt;&lt;sub&gt;e&lt;sup&gt;-&lt;/sup&gt;&lt;/sub&gt;&lt;sup&gt;e&lt;sup&gt;-&lt;/sup&gt;&lt;/sup&gt;&lt;/span&gt; Electrons work for you&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chapter-23----e-e-e-e-e-e-e-e-e-e-e--electrons-work-for-you&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;!-- [A simple guide to electronic components](https://www.youtube.com/watch?v=6Maq5IyHSuc&amp;list=PL5cGwrD7cv8hK-qxPqRB25Dzs0BtLWhXz) --&gt;&#xA;&lt;!-- https://heavydeck.net/project/the-kludge-schematic-editor/ might be helpful for making schematics to explain things --&gt;&#xA;&lt;!-- Honestly, this is more to maintain than I&#39;d really like to. I&#39;d rather this be more on the tour-gide than guide-guide side, and be links with an order to explore to avoid the work. https://ultimateelectronicsbook.com/ is nice, but jumps in way to fast. --&gt;&#xA;&lt;h2 id=&#34;further-reading&#34;&gt;&#xA;  Further Reading&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#further-reading&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;[TODO]&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/circuits/circuits2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/circuits/circuits2/</guid>
      <description>&lt;h1 id=&#34;chapter-24---circuits--semiconductors&#34;&gt;&#xA;  Chapter 24 - Circuits &amp;amp; Semiconductors&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chapter-24---circuits--semiconductors&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;div class=&#34;book-columns flex flex-wrap&#34;&gt;&#xA;&#xA;  &lt;div class=&#34;flex-even markdown-inner&#34;&gt;&#xA;    &lt;p&gt;When I was a kid I thought about circuits as being alive, like &lt;a href=&#34;https://en.wikipedia.org/wiki/Cells_at_Work!&#34;&gt;Cells at Work!&lt;/a&gt;, only little electrons going around busily keeping the heart of my toy working instead of anthropomorphic red blood cells working in the human body.&lt;/p&gt;&#xA;&lt;p&gt;Now, as an adult - and a computer and electrical engineer at that - I still find this thought endearing. Though I&amp;rsquo;ve now come to see the physics and art of electronics to be even more beautiful when their true nature is really understood.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/circuits/digitallogic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/circuits/digitallogic/</guid>
      <description>&lt;h1 id=&#34;chapter-25---digital-logic&#34;&gt;&#xA;  Chapter 25 - Digital Logic&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chapter-25---digital-logic&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Digital logic is what it sounds like- it&amp;rsquo;s doing logical operations on digital data - 1&amp;rsquo;s and 0&amp;rsquo;s; True and False. Chain some of (er, a lot of) these logical operations together and you can do anything you want! Want to make your own CPU? Done. Want to make dedicated circuitry to do what your code does but hundreds of times faster? This is the way to do it.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/circuits/embedded/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/circuits/embedded/</guid>
      <description>&lt;h1 id=&#34;chapter-26---embedded-systems&#34;&gt;&#xA;  Chapter 26 - Embedded Systems&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chapter-26---embedded-systems&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;iframe title=&#34;vimeo-player&#34; src=&#34;https://player.vimeo.com/video/571259885&#34; width=&#34;100%&#34; height=&#34;500&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;&#xA;&lt;p class=&#34;attribution &#34;&gt;&#xA;    By &lt;a href=&#34;https://www.instructables.com/Cheapest-Plug-Play-Room-Automation-Setup/&#34;&gt;Make It With Me&lt;/a&gt;&#xA;&lt;/p&gt;&#xA;&lt;div class=&#34;tip &#34;&gt;&#xA;    &lt;p&gt;If you&amp;rsquo;re reading this page, it&amp;rsquo;s expected that you&amp;rsquo;re either pretty comfortable with C and programming on a normal computer already or that you&amp;rsquo;ve at least read though both the programming intro chapter starting with&lt;/p&gt;&#xA;&lt;a  href=&#34;https://opguides.info/engineering/programming/intro/prog0intro/&#34;   class=&#34;book-btn &#34;&gt;&#xA;  &amp;ldquo;Lets Write Some Code&amp;rdquo;&#xA;&lt;/a&gt;&#xA; and the &#xA;&lt;a  href=&#34;https://opguides.info/engineering/programming/lowlvl/&#34;   class=&#34;book-btn &#34;&gt;&#xA;  &amp;ldquo;Low Level Programming&amp;rdquo;&#xA;&lt;/a&gt;&#xA; page&#xA;&lt;/div&gt;&#xA;&lt;h2 id=&#34;what-is-an-embedded-system&#34;&gt;&#xA;  What is an Embedded System?&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#what-is-an-embedded-system&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;div class=&#34;book-columns flex flex-wrap&#34;&gt;&#xA;&#xA;  &lt;div class=&#34;flex-even markdown-inner&#34;&gt;&#xA;    &lt;img src=&#34;https://opguides.info/eng/pos.webp&#34; alt=&#34;pos&#34; /&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/circuits/intro/1-intro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/circuits/intro/1-intro/</guid>
      <description>&lt;h1 id=&#34;chapter-23----e-e-e-e-e-e-e-e-e-e-e--electrons-work-for-you&#34;&gt;&#xA;  Chapter 23 - &lt;span style=&#34;z-index:1;position: absolute;display: inline-block;color: #fff2;text-shadow:none;&#34;&gt; &lt;sup&gt; e&lt;sup&gt;-&lt;/sup&gt;&lt;sub&gt;e&lt;sup&gt;-&lt;/sup&gt;&lt;sup&gt;e&lt;sup&gt;-&lt;/sup&gt;&lt;/sup&gt;&lt;sub&gt;e&lt;sup&gt;-&lt;/sup&gt;&lt;/sub&gt;&lt;/sub&gt;&lt;/sup&gt;&lt;sub&gt;e-&lt;/sub&gt;&lt;sup&gt;e&lt;sup&gt;-&lt;/sup&gt;&lt;/sup&gt;&lt;sub&gt;e&lt;sup&gt;-&lt;/sup&gt;&lt;sup&gt;e&lt;sup&gt;-&lt;/sup&gt;&lt;/sup&gt;&lt;sub&gt;e&lt;sup&gt;-&lt;/sup&gt;&lt;/sub&gt;&lt;/sub&gt;&lt;/sup&gt;&lt;sub&gt;e&lt;sup&gt;-&lt;/sup&gt;&lt;/sub&gt;&lt;sup&gt;e&lt;sup&gt;-&lt;/sup&gt;&lt;/sup&gt;&lt;/span&gt; Electrons work for you&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chapter-23----e-e-e-e-e-e-e-e-e-e-e--electrons-work-for-you&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;script&gt;&#xA;    document.getElementById(&#34;Circuits1Menu&#34;).open = true;&#xA;&lt;/script&gt;&#xA;&lt;p&gt;Normally, I would start a new section with some inspiring paragraph about all the cool things you can do with the topic - but I don&amp;rsquo;t even know where to start on this page.&lt;/p&gt;&#xA;&lt;p&gt;I mean, sure, you&amp;rsquo;re literally reading this page from a magic glowing rectangle powered by electricity but, like, who cares? You don&amp;rsquo;t need to know how to work with electricity to use a computer. Hell, most programmers don&amp;rsquo;t even know that much about circuits so clearly it&amp;rsquo;s not required even for advanced use.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/circuits/intro/2-tools/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/circuits/intro/2-tools/</guid>
      <description>&lt;h1 id=&#34;the-tools-of-the-trade&#34;&gt;&#xA;  The Tools of the Trade&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#the-tools-of-the-trade&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;script&gt;&#xA;    document.getElementById(&#34;Circuits1Menu&#34;).open = true;&#xA;&lt;/script&gt;&#xA;&lt;!-- https://heavydeck.net/project/the-kludge-schematic-editor/ might be helpful for making schematics to explain things --&gt;&#xA;&lt;!-- Honestly, this is more to maintain than I&#39;d really like to. I&#39;d rather this be more on the tour-gide than guide-guide side, and be links with an order to explore to avoid the work. https://ultimateelectronicsbook.com/ is looking quite good but jumps in way to fast for noobs. --&gt;&#xA;&lt;p&gt;Okay so we know we have voltage, current, and power. Additionally, you&amp;rsquo;ve probably heard about terms like resistance, impedance, capacitance, and maybe inductance before. What the heck do these mean? Well, to each into a more tangible context, lets look at the tools used to measure each.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/circuits/intro/3-lcr/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/circuits/intro/3-lcr/</guid>
      <description>&lt;h2 id=&#34;ohms-law-nodal--mesh-analysis-superposition-thevanins&#34;&gt;&#xA;  OHM&amp;rsquo;s law, Nodal &amp;amp; Mesh Analysis, Superposition, Thevanins&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#ohms-law-nodal--mesh-analysis-superposition-thevanins&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;--ω&#34;&gt;&#xA;  ⅏ ⟛ Ω&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#--%cf%89&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;script&gt;&#xA;    document.getElementById(&#34;Circuits1Menu&#34;).open = true;&#xA;&lt;/script&gt;&#xA;&lt;p&gt;[TODO]&lt;/p&gt;&#xA;&lt;h2 id=&#34;resistors&#34;&gt;&#xA;  Resistors&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#resistors&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;[TODO]&lt;/p&gt;&#xA;&lt;p&gt;potentiometer read from Arduino full range (center tap or max resistor)&lt;/p&gt;&#xA;&lt;h2 id=&#34;lcr-meter&#34;&gt;&#xA;  LCR Meter&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#lcr-meter&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;capacitors&#34;&gt;&#xA;  Capacitors&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#capacitors&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;[TODO]&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://chaos.social/@gsuberland/113084315488845513&#34;&gt;https://chaos.social/@gsuberland/113084315488845513&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://ksim3.kemet.com/capacitor-simulation&#34;&gt;Kemet Capacitor Simulator&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=cxXmWZDwNEs&amp;amp;list=PL5cGwrD7cv8hK-qxPqRB25Dzs0BtLWhXz&#34;&gt;True, Reactive, Apparent &amp;amp; Deformed Power&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=WytU5uj78-4&amp;amp;list=PL5cGwrD7cv8hK-qxPqRB25Dzs0BtLWhXz&#34;&gt;Why electrolytic capacitors are actually kinda shitty 💩&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Two_capacitor_paradox&#34;&gt;Ideal Capacitors aren&amp;rsquo;t real&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=7wBMDoM7C_U&#34;&gt;Cap Types: Electrolytic &amp;amp; Ceramic - Collin’s Lab Notes&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/circuits/intro/4-sim/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/circuits/intro/4-sim/</guid>
      <description>&lt;h1 id=&#34;software-simulation&#34;&gt;&#xA;  Software Simulation&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#software-simulation&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;script&gt;&#xA;    document.getElementById(&#34;Circuits1Menu&#34;).open = true;&#xA;&lt;/script&gt;&#xA;&lt;p&gt;[TODO]&lt;/p&gt;&#xA;&lt;p&gt;Circuit Simulator&lt;/p&gt;&#xA;&lt;p&gt;Simulide&lt;/p&gt;&#xA;&lt;p&gt;VCV Rack?&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/circuits/intro/todo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/circuits/intro/todo/</guid>
      <description>&lt;h1 id=&#34;---making-something&#34;&gt;&#xA;  ? - Making Something&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#---making-something&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;As I&amp;rsquo;m writing these, it&amp;rsquo;s occurring to me I&amp;rsquo;m really leaving out the practical. If somebody really wants to lean how to do electronics stuff, even at the hobbiest level, they need to be able to&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Know how to pick parts&lt;/li&gt;&#xA;&lt;li&gt;Know how and where to order parts&lt;/li&gt;&#xA;&lt;li&gt;How to actually assemble things (a bit of mechanical know-how)&lt;/li&gt;&#xA;&lt;li&gt;Feel comfortable making things that do things&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Beginner projects then are a bit of a problem. Doing it Shu Ha Ri style, we need something to start with to just blindly follow (Shu) and get a taste for it. The problem is, most options at this stage pretty much suck for either being&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/circuits/parts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/circuits/parts/</guid>
      <description>&lt;h1 id=&#34;24---parts&#34;&gt;&#xA;  24½ - Parts&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#24---parts&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;When thinking about electronics, it&amp;rsquo;s easy to focus on the bits that electricity actually flows though. This chapter is for everything else&lt;/p&gt;&#xA;&lt;h2 id=&#34;part-codes&#34;&gt;&#xA;  Part Codes&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#part-codes&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Okay, sort of still electrically relevant, but as your peruse your options for parts you&amp;rsquo;ll see some patterns in how things are named, such as diodes starting with a &lt;strong&gt;1N&lt;/strong&gt; prefix. If you want to know more about that, these links are decent:&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/circuits/pcb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/circuits/pcb/</guid>
      <description>&lt;h1 id=&#34;chapter-27---lets-make-our-own-pcb&#34;&gt;&#xA;  Chapter 27 - Let&amp;rsquo;s make our own PCB&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chapter-27---lets-make-our-own-pcb&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;&lt;strong&gt;P&lt;/strong&gt;rinted &lt;strong&gt;C&lt;/strong&gt;ircuit &lt;strong&gt;B&lt;/strong&gt;orads look like something reserved for only big business, but that is very much so not the case. It&amp;rsquo;s suprisingly cheap to get smaller boards made, espically if you&amp;rsquo;re okay with waiting a week or two on international shipping. But, let me back up- what even is a PCB?&lt;/p&gt;&#xA;&lt;p&gt;Well, when anyone first starts with circuits, they go for the ever popular breadboard:&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/deeper/comparch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/deeper/comparch/</guid>
      <description>&lt;h1 id=&#34;chapter-37---lets-make-our-own-cpu&#34;&gt;&#xA;  Chapter 37 - Let&amp;rsquo;s make our own CPU&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chapter-37---lets-make-our-own-cpu&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;!-- http://www.visual6502.org --&gt;&#xA;&lt;!-- https://uops.info/table.html --&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://blog.robertelder.org/how-to-make-a-cpu/&#34;&gt;How To Make A CPU - A Simple Picture Based Explanation (RobertElder)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;tip &#34;&gt;&#xA;    This chapter will be split into three parts:&lt;/br&gt;&lt;/br&gt;Part 1, understanding the interval workings of a CPU. This is effectively just a computer architecture class, and will be by far the largest section.&lt;/br&gt;&lt;/br&gt;Part 2, making that CPU on an FPGA.&lt;/br&gt;&lt;/br&gt;Part 3, making that CPU do something.&#xA;&lt;/div&gt;&#xA;&lt;p&gt;[TODO] &lt;a href=&#34;http://www.lighterra.com/papers/modernmicroprocessors/&#34;&gt;http://www.lighterra.com/papers/modernmicroprocessors/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/deeper/compileassemble/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/deeper/compileassemble/</guid>
      <description>&lt;h1 id=&#34;chapter-34---compilers-and-assemblers&#34;&gt;&#xA;  Chapter 34 - Compilers and Assemblers&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chapter-34---compilers-and-assemblers&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://lee.earth/til/compiling-c-code-a-step-by-step-guide/&#34;&gt;https://lee.earth/til/compiling-c-code-a-step-by-step-guide/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;[TODO] &lt;a href=&#34;https://interrupt.memfault.com/blog/arm-cortexm-with-llvm-clang&#34;&gt;Better Firmware with LLVM/Clang&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;[TODO] &lt;a href=&#34;https://andrewkelley.me/post/zig-cc-powerful-drop-in-replacement-gcc-clang.html&#34;&gt;&lt;code&gt;Zig cc&lt;/code&gt;: a Powerful Drop-In Replacement for GCC/Clang&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;common-flags-and-when-to-use-them&#34;&gt;&#xA;  Common Flags and When to Use them&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#common-flags-and-when-to-use-them&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;These flags are not universal, instead they&amp;rsquo;re from GCC. GCC and Clang are the big two compilers you&amp;rsquo;ll see a lot and these flags should be mostly the same between the two. Of course, there are many, many other compilers, but I&amp;rsquo;m going to start with the common stuff&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/deeper/fpga1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/deeper/fpga1/</guid>
      <description>&lt;h1 id=&#34;chapter-36---lets-try-out-programmable-logic&#34;&gt;&#xA;  Chapter 36 - Let&amp;rsquo;s try out programmable logic&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chapter-36---lets-try-out-programmable-logic&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;div class=&#34;tip &#34;&gt;&#xA;    Before we get started, please be sure you&amp;rsquo;ve read &lt;strong&gt;Chapter 24 - Digital Logic&lt;/strong&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://pixeljoint.com/files/icons/full/4004_simu_part.gif&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Simulation of an Intel 4004 in &lt;a href=&#34;http://onidev.fr/projet-tics.html&#34;&gt;TICS (The Integrated Circuit Simulator) a (abandoned?) WIP by Oni&lt;/a&gt;, &lt;a href=&#34;https://github.com/onidev/TICS/releases&#34;&gt;Download the interpreter here&lt;/a&gt;, the &lt;a href=&#34;https://github.com/onidev/TICS&#34;&gt;repo&lt;/a&gt; has plenty of examples.&lt;/p&gt;&#xA;&lt;p&gt;Some similar pixel art simulation tools are &lt;a href=&#34;https://github.com/martinkirsche/wired-logic&#34;&gt;wired-logic&lt;/a&gt;, &lt;a href=&#34;https://github.com/lynnpepin/reso&#34;&gt;reso&lt;/a&gt;, &lt;a href=&#34;https://en.wikipedia.org/wiki/Wireworld&#34;&gt;wireworld&lt;/a&gt;,&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;[TODO]&lt;/p&gt;&#xA;&lt;p&gt;Finite State Machines, VHDL, Verilog, FPGA &amp;amp; CPLD internals&lt;/p&gt;&#xA;&lt;h1 id=&#34;chapter-281---field-programmable-analog-arrays&#34;&gt;&#xA;  Chapter 28.1 - Field Programmable Analog Arrays?&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chapter-281---field-programmable-analog-arrays&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;[TODO] &lt;a href=&#34;https://hasler.ece.gatech.edu/FPAA_IEEEXPlore_2020.pdf&#34;&gt;https://hasler.ece.gatech.edu/FPAA_IEEEXPlore_2020.pdf&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/deeper/nonsilicon/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/deeper/nonsilicon/</guid>
      <description>&lt;h1 id=&#34;37---non-silicon-computing&#34;&gt;&#xA;  37½ - Non-Silicon Computing&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#37---non-silicon-computing&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Most computers today use integrated circuits which use silicon as a semiconductor. This, historically, was not the only option. In the past, there were some chips made with gallium arsenide (such as those in the &lt;a href=&#34;https://en.wikipedia.org/wiki/Cray-3&#34;&gt;Cray-3&lt;/a&gt;) though it shouldn&amp;rsquo;t be confused with &lt;a href=&#34;https://en.wikipedia.org/wiki/Gallium_nitride&#34;&gt;gallium nitride&lt;/a&gt; (GaN) which are getting common use not for logic, but for power electronics. Of course, it&amp;rsquo;s not just Gallium. Germanium is also a semiconductor which used to be used for transistors and diodes, and there has been modern research into using a &lt;a href=&#34;https://en.wikipedia.org/wiki/Silicon%E2%80%93germanium&#34;&gt;silicon–germanium&lt;/a&gt; alloy. Of course, research has found  more interesting potential futures to keep our basic transistor style computers going, probably most notably Graphene and Carbon nanotubes.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/deeper/reverse/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/deeper/reverse/</guid>
      <description>&lt;h1 id=&#34;chapter-35---reverse-engineering&#34;&gt;&#xA;  Chapter 35 - Reverse Engineering&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chapter-35---reverse-engineering&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;software&#34;&gt;&#xA;  Software&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#software&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;div class=&#34;speech right &#34;&gt;&#xA;    &lt;p&gt;&#xA;        Anyone know of good resources for learning binary reversing?&#xA;Not particular tools necessarily, but like theory and how to think&#xA;    &lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;br style=&#34;clear: both;&#34;&gt;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;speech mimir big&#34;&gt;&#xA;    &lt;p&gt;&#xA;        &lt;p class=&#34;attribution &#34;&gt;&#xA;    &lt;a href=&#34;https://twitter.com/XMPPwocky&#34;&gt;@XMPPwocky on Twitter&lt;/a&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://margin.re/media/an-opinionated-guide-on-how-to-reverse-engineer-software-part-1.aspx&#34;&gt;An Opinionated Guide on How To Reverse Engineer Software&lt;/a&gt; is decent.&lt;/p&gt;&#xA;&lt;p&gt;for me personally:&lt;/p&gt;&#xA;&lt;p&gt;know some assembly, and in particular make sure you know the calling conventions for your platform.&lt;/p&gt;&#xA;&lt;p&gt;when starting out, do it on binaries you can actually run in a debugger and see what&amp;rsquo;s actually happening at runtime.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/intro/howtolearn/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/intro/howtolearn/</guid>
      <description>&lt;h1 id=&#34;&#34;&gt;&#xA;  &#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;div class=&#34;glitch&#34;&gt;&#xA;&lt;div class=&#34;centered-over-image&#34;&gt;&lt;h1 style=&#34;text-shadow: 0 0 3px #000000, 0 0 5px #000000;&#34;&gt;EMBRACE FAILURE&lt;/br&gt;  KEEP MAKING&lt;/h1&gt;&lt;/div&gt;&#xA;&#x9;&lt;img src=&#34;https://opguides.info/pixabay/glitch-2463363_1280.webp&#34; alt=&#34;&#34;&gt;&#xA;&#x9;&#x9;&lt;div class=&#34;glitch__layers&#34;&gt;&#xA;&#x9;&#x9;&lt;div class=&#34;glitch__layer&#34;&gt;&lt;/div&gt;&#xA;&#x9;&#x9;&lt;div class=&#34;glitch__layer&#34;&gt;&lt;/div&gt;&#xA;&#x9;&#x9;&lt;div class=&#34;glitch__layer&#34;&gt;&lt;/div&gt;&#xA;&#x9;&#x9;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;h1 id=&#34;---learn-how-to-learn&#34;&gt;&#xA;  Ⅱ - Learn how to learn&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#---learn-how-to-learn&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Nobody learns (effectively) by being shown what to do. You can watch hundreds of hours of people playing guitar, even explaining how they do it, but you won&amp;rsquo;t be able to randomly pick one up and play if you never have before.&lt;/p&gt;&#xA;&lt;p&gt;Furthermore, as much as you can learn from direct reading and instruction, it has its place and limits. This guide, book, whatever you want to call it, was never meant to be followed like instructions. You should go out on your own and poke around, get lost in the weeds as you go. If you find a topic dull, don&amp;rsquo;t read it as in depth. I don&amp;rsquo;t want you wasting your time.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/linux/arch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/linux/arch/</guid>
      <description>&lt;h1 id=&#34;chapter-2---installing-arch-linux&#34;&gt;&#xA;  Chapter 2 - Installing Arch Linux&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chapter-2---installing-arch-linux&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;!-- TODO: I&#39;d like to have the user setup ZSH and https://zellij.dev pretty early as it makes doing stuff from a direct TTY signficantly less of a pain in the ass. Similarly, might grab sysz pretty early too. Of course, I don&#39;t want to do either until after having done it the old school way at least once. ---&gt;&#xA;&lt;iframe width=&#34;100%&#34; height=&#34;500&#34; src=&#34;https://www.youtube.com/embed/ezUoiaoQCTs&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;&#xA;&lt;h2 id=&#34;some-background&#34;&gt;&#xA;  Some Background&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#some-background&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p style=&#34;font-size: 30px;text-align: center;&#34;&gt;⬤◯◯◯◯◯◯◯◯◯&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/linux/firstgoal/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/linux/firstgoal/</guid>
      <description>&lt;h1 id=&#34;chapter-1---the-first-goal&#34;&gt;&#xA;  Chapter 1 - The first goal&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chapter-1---the-first-goal&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://opguides.info/nonfree/permissiongranted/linuxfox.webp&#34; alt=&#34;Linux Fox&#34; /&gt;&lt;/p&gt;&#xA;&lt;p class=&#34;attribution &#34;&gt;&#xA;    Art by &lt;a href=&#34;https://twitter.com/monoxromatik&#34;&gt;@monoxromatik&lt;/a&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;Every journey needs a place to start, and while many may like to start slow, I think a head first approach is best. So that&amp;rsquo;s exactly what we&amp;rsquo;re gonna do. The very first thing we&amp;rsquo;re going to do is install a new &lt;strong&gt;Operating System (OS)&lt;/strong&gt;&lt;footnote&gt;According to Wikipedia, &amp;ldquo;An operating system (OS) is system software that manages computer hardware and software resources and provides common services for computer programs.&amp;rdquo; put simply on your hardware this is probably Windows or Mac OS, and it&amp;rsquo;s what everything else runs on top of&lt;/footnote&gt; on your computer. This is a pretty involved process. It will require you to &lt;strong&gt;Repartition&lt;/strong&gt;&lt;footnote&gt;To partition a drive means to take all the space on the hard drive and divide it into partitions onto which you can put a file system. Most operating systems like Windows, Mac OsX, or Linux, use multiple partitions for the operating system to function. Usually a filesystem is set up on each of these partitions, in windows this is typically NTFS for Hard Drives and FAT32 for flash drives, these file systems are effectively the index for all the files you&amp;rsquo;ll put on the drive, and as you may have multiple partitions and multiple file systems on one disk each will have an index to match. As complicated as it may seem this means the partition table can be seen as an &amp;lsquo;index of indices&amp;rsquo; of sorts. Don&amp;rsquo;t worry if that&amp;rsquo;s a lot to understand right now, we&amp;rsquo;ll come back to this topic in depth.&lt;/br&gt;You may also need to know how your drive is formatted, this is if it is using MBR (Master Boot Record) or GPT (GUID Partition Table), again, we&amp;rsquo;ll cover this. Don&amp;rsquo;t stress over all the new terms.&lt;/footnote&gt; your drive, change settings in your &lt;strong&gt;BIOS or UEFI&lt;/strong&gt;&lt;footnote&gt;The Binary Input Output System (BIOS) or Unified Extensible Firmware Interface (UEFI) is the thing you see before you computer loads the operating system, usually prompting to press delete or f2 to change settings. This is the system that is used to change the way all the components around the computer talk to one another and at what speed.&lt;/footnote&gt;, and install a new &lt;strong&gt;Bootloader&lt;/strong&gt;&lt;footnote&gt;The bootloader sits at a special place on the hard drive selected for boot in the UEFI or BIOS, and is what the computer uses to load the full operating system, most will let you choose what operating system you want to boot if you have multiple installed on you computer at once&lt;/footnote&gt;. I know this sounds really hard, but it&amp;rsquo;s not as bad as it sounds, and I assure you it&amp;rsquo;s worth it. The OS we&amp;rsquo;ll be installing is called Linux. Linux is actually what powers both Android and ChromeOS, and is a common descendant of the same system as Mac OSX. Linux is the OS that almost all of the servers on the internet use - from massive website like Facebook and Google to small Minecraft servers you can rent online to play with friends. What&amp;rsquo;s cool about Linux is it lets you get much closer to the hardware and see what&amp;rsquo;s going on, and it just generally makes writing code much easier.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/linux/git/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/linux/git/</guid>
      <description>&lt;h1 id=&#34;chapter-5---git&#34;&gt;&#xA;  Chapter 5½ - Git.&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chapter-5---git&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;div class=&#34;quote [Wikipedia](https://en.wikipedia.org/wiki/Git)&#34;&gt;&#xA;&lt;p&gt;&#xA;    Git is a distributed &lt;strong&gt;version control system&lt;/strong&gt;  that tracks changes in any set of computer files, usually used for coordinating work among programmers collaboratively developing source code during software development.&#xA;&lt;/p&gt;&#xA;    &lt;div style=&#34;display: block; text-align: right; width: 100%; margin-left: auto; margin-right: auto; line-height: 0px;&#34;&gt;&#xA;        &lt;p style=&#34;font-size:.85em;color:var(--text-color);&#34; class=&#34;qsource&#34;&gt; &#xA;        - &lt;a href=&#34;https://en.wikipedia.org/wiki/Git&#34;&gt;Wikipedia&lt;/a&gt;&#xA;        &lt;/p&gt;&#xA;    &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;speech right triode&#34;&gt;&#xA;    &lt;p&gt;&#xA;        So it&amp;rsquo;s a way of versioning my files? Why not just click &lt;code&gt;save-as&lt;/code&gt; and give it a new name?&#xA;    &lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/linux/hardware/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/linux/hardware/</guid>
      <description>&lt;h1 id=&#34;chapter-3---into-the-hardware&#34;&gt;&#xA;  Chapter 3 - Into The Hardware&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chapter-3---into-the-hardware&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;script&gt;&#xA;    document.getElementById(&#34;hardwareMenu&#34;).open = true;&#xA;&lt;/script&gt;&#xA;&lt;div class=&#34;book-columns flex flex-wrap&#34;&gt;&#xA;&#xA;  &lt;div class=&#34;flex-even markdown-inner&#34;&gt;&#xA;    &lt;p&gt;One of the nifty things about Linux is you don&amp;rsquo;t need to install extra software to check out the deeper parts of your hardware. While on Windows you might need a tool like CPU-Z to look at information about the CPU on Linux you can do it out of the box. Even better, Linux makes changing values and tweaking performance easier, too.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/linux/hardware/architectures/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/linux/hardware/architectures/</guid>
      <description>&lt;h1 id=&#34;chapter-3---architectures&#34;&gt;&#xA;  Chapter 3½ - Architectures&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chapter-3---architectures&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;instruction-set-architectures&#34;&gt;&#xA;  Instruction Set Architectures&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#instruction-set-architectures&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Today, there are two main computer architectures you&amp;rsquo;ll use x86_64 and ARM. You&amp;rsquo;ve probably heard this in passing, but you may not know what they are. These are Instruction Set Architectures (ISA), and they define the list of instructions your computer can understand and the basics about how those instructions are laid out.&lt;/p&gt;&#xA;&lt;p&gt;Let&amp;rsquo;s say we have a fictional computer, really old, that&amp;rsquo;s only 8-bit (most modern systems are 32 or 64bit) this would mean we get eight 1&amp;rsquo;s and 0&amp;rsquo;s to define our instruction. We might decide to have the first 4 bits hold the Opcode (short for Operation Code) We might decide that any instruction starting with 0000 is a store, 0001 a move, 0010 a jump, 0011 an add, and so on. Then, we might say the other four bits should represent registers, that is, locations of other numbers. So we might have 00110110 where the 0011 means add, and the next two bits, 01, mean registers 1 and the next two bits,  10, mean register 2. For this, we&amp;rsquo;d probably have to assume the result gets stored in one of these registers, so it might be that 00110110 means add the numbers in register 1 and register 2 and store the result back into register 1.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/linux/hardware/biggerpicture/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/linux/hardware/biggerpicture/</guid>
      <description>&lt;h1 id=&#34;10---the-bigger-picture&#34;&gt;&#xA;  10 - The Bigger Picture&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#10---the-bigger-picture&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;script&gt;&#xA;    document.getElementById(&#34;hardwareMenu&#34;).open = true;&#xA;&lt;/script&gt;&#xA;&lt;p&gt;Something that&amp;rsquo;s most people get wrong about computers is thinking that the majority of what makes a computer go faster at something is being able to do math faster. After all, if you can add, divide, multiply, subtract, etc. numbers faster, that&amp;rsquo;s everything a computer does, right? So making math twice as fast means everything is twice as fast? No. Very much so no.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/linux/hardware/buying/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/linux/hardware/buying/</guid>
      <description>&lt;h1 id=&#34;11---how-to-know-what-to-buy&#34;&gt;&#xA;  11 - How to Know What to Buy&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#11---how-to-know-what-to-buy&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;script&gt;&#xA;    document.getElementById(&#34;hardwareMenu&#34;).open = true;&#xA;&lt;/script&gt;&#xA;&lt;p&gt;So you want to build a computer? Great! Now you&amp;rsquo;re probably wondering what to buy.&lt;/p&gt;&#xA;&lt;p&gt;The very first things you should ask yourself are:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;What will this system be used for?&lt;/li&gt;&#xA;&lt;li&gt;What&amp;rsquo;s my budget?&lt;/li&gt;&#xA;&lt;li&gt;Are used parts okay?&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;That first question will dramatically narrow down your options, whether you realize it or not. If this system &lt;em&gt;needs&lt;/em&gt; to have Microsoft Office (Word, Excel, etc.) and LibreOffice won&amp;rsquo;t do the trick, you&amp;rsquo;re pretty much limited to Intel and AMD based systems, instead of throwing a cheap Raspberry Pi at the problem. If you need utmost stability, like 24/7/365 this system absolutely can not go down, you&amp;rsquo;ll probably have to plan on getting something more server grade, possibly with redundant power supplies, hard drives, and (traditionally) ECC RAM. If you&amp;rsquo;re making something and just need it to be as fast as possible, you&amp;rsquo;ll still want to consider what software you&amp;rsquo;re running. Some tasks are heavily dependent on your CPU speed, while others need you to have a kick ass graphics card.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/linux/hardware/cooling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/linux/hardware/cooling/</guid>
      <description>&lt;h1 id=&#34;8---cooling&#34;&gt;&#xA;  8 - Cooling&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#8---cooling&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;script&gt;&#xA;    document.getElementById(&#34;hardwareMenu&#34;).open = true;&#xA;&lt;/script&gt;&#xA;&lt;p&gt;Computers, who&amp;rsquo;d&amp;rsquo;ve guessed, use power. Shocker, right? Well, using power means making heat, and we need to get that away from the components as fast as we can - if they stay hot they&amp;rsquo;ll throttle down to a lower speed, and it degrades their quality over time. Not good.&lt;/p&gt;&#xA;&lt;p&gt;So, what are our options?&lt;/p&gt;&#xA;&lt;h2 id=&#34;air-cooling&#34;&gt;&#xA;  Air Cooling&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#air-cooling&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;3-pin-and-4-pin-fans&#34;&gt;&#xA;  3-pin and 4-pin fans&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#3-pin-and-4-pin-fans&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;air-flow-vs-static-pressure&#34;&gt;&#xA;  Air flow VS Static Pressure&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#air-flow-vs-static-pressure&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;fan-size&#34;&gt;&#xA;  Fan size&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#fan-size&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;noise&#34;&gt;&#xA;  Noise&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#noise&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;Smaller → Louder.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/linux/hardware/cpu/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/linux/hardware/cpu/</guid>
      <description>&lt;h1 id=&#34;1---the-cpu&#34;&gt;&#xA;  1 - The CPU&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#1---the-cpu&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;script&gt;&#xA;    document.getElementById(&#34;hardwareMenu&#34;).open = true;&#xA;&lt;/script&gt;&#xA;&lt;img class=&#34;center&#34; src=&#34;https://opguides.info/eng/cpus.webp&#34; alt=&#34;CPUS&#34;&gt;&#xA;&lt;span class=&#34;smalltext &#34;&gt;&#xA;    Note, there&amp;rsquo;s more the a CPU on some of these boards. On the big one, only the square thing in the middle is the CPU, on the pi-0 (the board with the HDMI and USB Ports) the CPU is under the metal heatsink - and in truth the CPU is actually an SOC (System On a Chip) - more on that in a bit. Finally, on the blue board, the CPU is only the black chip in the middle, though in this case it is again the definition is blurred, as in truth this is a &lt;em&gt;microcontroller&lt;/em&gt;. This will all make sense shortly!&#xA;&lt;/span&gt;&#xA;&lt;p&gt;These are &lt;strong&gt;CPU&lt;/strong&gt;s or &lt;strong&gt;C&lt;/strong&gt;entral &lt;strong&gt;P&lt;/strong&gt;rocessing &lt;strong&gt;U&lt;/strong&gt;nits. They&amp;rsquo;re the beating heart of your computer, doing the number crunching. The white, rectangular one is of one of the first CPUs in the lineage leading up to CPUs like the ones used in desktop&amp;rsquo;s today, with further successors shown in order from top left to the bottom right. The metal-capped one at the bottom right, while a tad old, is visually quite representative of a modern desktop CPU, though the CPUs in a laptop or smart phone do look quite different still.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/linux/hardware/gpu/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/linux/hardware/gpu/</guid>
      <description>&lt;h1 id=&#34;4---graphics--acceleration&#34;&gt;&#xA;  4 - Graphics &amp;amp; Acceleration&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#4---graphics--acceleration&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;script&gt;&#xA;    document.getElementById(&#34;hardwareMenu&#34;).open = true;&#xA;&lt;/script&gt;&#xA;&lt;!-- ![gcards](/eng/gcards.jpg) --&gt;&#xA;&lt;img src=&#34;https://opguides.info/unsplash/gpu.webp&#34; alt=&#34; &#34;&gt;&#xA;&lt;p class=&#34;attribution &#34;&gt;&#xA;    Photo by &lt;a href=&#34;https://unsplash.com/photos/vWgoeEYdtIY&#34;&gt;Thomas Foster&lt;/a&gt;, depicting an Nvidia RTX 3070&#xA;&lt;/p&gt;&#xA;&lt;!-- This image needs replaced, as it&#39;s really fuzzy --&gt;&#xA;&lt;p&gt;Quick Links:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://modal.com/gpu-glossary/readme&#34;&gt;GPU Glossary&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;div class=&#34;speech  &#34;&gt;&#xA;    &lt;p&gt;&#xA;        &lt;p&gt;Hi Gamers!&lt;/p&gt;&#xA;&lt;p&gt;This page will obviously appeal to you, those that drive the sales of these chonky, expensive cards; however, it&amp;rsquo;s important to note that this page is about all graphics &amp;amp; acceleration- from the iGPU in low power systems to the compute cards used for AI research and wasteful crypto mining. Still, this more in depth knowledge will probably be helpful in helping you extract more FPS from your GPU.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/linux/hardware/legacy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/linux/hardware/legacy/</guid>
      <description>&lt;h5 id=&#34;&#34;&gt;&#xA;  &#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h5&gt;&#xA;&lt;script&gt;&#xA;    document.getElementById(&#34;hardwareMenu&#34;).open = true;&#xA;&lt;/script&gt;&#xA;&lt;div class=&#34;book-columns flex flex-wrap&#34;&gt;&#xA;&#xA;  &lt;div class=&#34;flex-even markdown-inner&#34;&gt;&#xA;    &lt;img src=&#34;https://opguides.info/eng/legacy.webp&#34; alt=&#34;&#34; /&gt;&#xA;  &lt;/div&gt;&#xA;&#xA;  &lt;div class=&#34;flex-even markdown-inner&#34;&gt;&#xA;    &lt;h1 id=&#34;12---legacy-hardware&#34;&gt;&#xA;  12 - Legacy Hardware?&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#12---legacy-hardware&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;There&amp;rsquo;s some old hardware almost everyone is familiar with: Floppy disks and big ol&amp;rsquo; CRT monitors became a big part of what defined a computer, and became recognizable enough that the shape of a floppy disk is still the standard save icon today. But still, why care?&lt;/p&gt;&#xA;&lt;p&gt;In history classes, the line “Those who don&amp;rsquo;t know history are destined to repeat it.&amp;quot; but I think there&amp;rsquo;s a bigger reason here: those who don&amp;rsquo;t understand the legacy hardware have no idea what the fuck is going on.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/linux/hardware/motherboard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/linux/hardware/motherboard/</guid>
      <description>&lt;h1 id=&#34;3---the-motherboard&#34;&gt;&#xA;  3 - The Motherboard&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#3---the-motherboard&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;script&gt;&#xA;    document.getElementById(&#34;hardwareMenu&#34;).open = true;&#xA;&lt;/script&gt;&#xA;&lt;img class=&#34;center&#34; src=&#34;https://opguides.info/eng/mobo.webp&#34; alt=&#34;Motherboard&#34; height=&#34;700em&#34;&gt;&#xA;&lt;p&gt;This is an older motherboard, but still new enough to have modern parts. Let&amp;rsquo;s start by looking at the most obvious physical features and move to smaller things from there.&lt;/p&gt;&#xA;&lt;p&gt;The most obvious thing to point out is the size of the motherboard. This is a mATX motherboard, which is considered the normal size for most systems. Most gaming or DIY computers will use full size ATX motherboards, which look very similar but are a bit longer vertically, allowing for more expansion slots - those horizontal black bars - among other features. Other form factors include ITX, a smaller form factor with only a single expansion slot, eATX (extended ATX) which is rarely used now, and SSI and EEB which are both server motherboard sizes.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/linux/hardware/network/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/linux/hardware/network/</guid>
      <description>&lt;h1 id=&#34;6---network-interfaces&#34;&gt;&#xA;  6 - Network Interfaces&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#6---network-interfaces&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;script&gt;&#xA;    document.getElementById(&#34;hardwareMenu&#34;).open = true;&#xA;&lt;/script&gt;&#xA;&lt;div class=&#34;book-columns flex flex-wrap&#34;&gt;&#xA;&#xA;  &lt;div class=&#34;flex-even markdown-inner&#34;&gt;&#xA;    &lt;img src=&#34;https://opguides.info/eng/nics.jpg&#34; alt=&#34;NICS&#34; height=&#34;600em&#34;&gt;&#xA;&lt;!-- Replace this picture --&gt;&#xA;&#xA;  &lt;/div&gt;&#xA;&#xA;  &lt;div class=&#34;flex-even markdown-inner&#34;&gt;&#xA;    &lt;p&gt;Pictured here are three &lt;strong&gt;N&lt;/strong&gt;etwork &lt;strong&gt;I&lt;/strong&gt;nterface &lt;strong&gt;C&lt;/strong&gt;ards (NICs). The three on the left are for Wi-Fi (though some of this form factor may include Bluetooth as well) while the one on the right has an Ethernet port for wired access. Most computer&amp;rsquo;s will not have a separate card for the wired interface, though, as most motherboard&amp;rsquo;s have a wired network interface built in.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/linux/hardware/peripherals/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/linux/hardware/peripherals/</guid>
      <description>&lt;h1 id=&#34;9---peripherals&#34;&gt;&#xA;  9 - Peripherals&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#9---peripherals&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;script&gt;&#xA;    document.getElementById(&#34;hardwareMenu&#34;).open = true;&#xA;&lt;/script&gt;&#xA;&lt;h2 id=&#34;usb&#34;&gt;&#xA;  USB&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#usb&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;The below two videos do a really good job of covering USB, but there&amp;rsquo;s one thing I want to add: Some cables lie! They don&amp;rsquo;t have data pins at all, and instead are only carry power. This can be a massive pain when you have a box of cables and need to know which ones are &amp;ldquo;real&amp;rdquo; cables.&lt;/p&gt;&#xA;&lt;p&gt;While there are testers available on Amazon, almost all of them are USB2. While &lt;a href=&#34;https://github.com/alvarop/usb_c_cable_tester&#34;&gt;https://github.com/alvarop/usb_c_cable_tester&lt;/a&gt; isn&amp;rsquo;t perfect - It won&amp;rsquo;t tell you if cables are crossed, though that&amp;rsquo;s really rare - it&amp;rsquo;s pretty good. Plus, ordering it will give you experience ordering a PCB with assembly service, which will be a good experience for when you want to design your own boards.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/linux/hardware/power/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/linux/hardware/power/</guid>
      <description>&lt;h1 id=&#34;7---power-supply&#34;&gt;&#xA;  7 - Power Supply&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#7---power-supply&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;script&gt;&#xA;    document.getElementById(&#34;hardwareMenu&#34;).open = true;&#xA;&lt;/script&gt;&#xA;&lt;p&gt;The Power Supply Unit or PSU does what you think. It takes power from the wall and turns it into power for the computer. This isn&amp;rsquo;t the chapter on voltage and current, so I&amp;rsquo;ll spare some of the details, but effectively you want a power supply that can deliver plenty of power and that has clean power. A given power supply usually has a rating like &amp;lsquo;500w&amp;rsquo; for 500 watts, but this is usually a bad indicator, as they could be referring to multiple things- you see a desktop power supply usually outputs multiple voltages (-12, +12, +5, +3.3) and each one of those lines will have a different maximum power output. Typically, the one that&amp;rsquo;s most relevant is the +12 rail, as both the GPU and CPU will likely run on that and they&amp;rsquo;re what draws the most power. So, you can actually check just this rail by taking the voltage (+12V) times the max current (amperage) on that line (let&amp;rsquo;s use 20A) to see the max power (so 12*20=240 watts)&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/linux/hardware/ram/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/linux/hardware/ram/</guid>
      <description>&lt;h1 id=&#34;2---ram&#34;&gt;&#xA;  2 - RAM&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2---ram&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;script&gt;&#xA;    document.getElementById(&#34;hardwareMenu&#34;).open = true;&#xA;&lt;/script&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://opguides.info/eng/ram.webp&#34; alt=&#34;RAM&#34; /&gt;&lt;/p&gt;&#xA;&lt;span class=&#34;smalltext &#34;&gt;&#xA;    Note, that some RAM sticks, especially the full size ones, have metal heat spreaders on top of them. In gaming computer especially it&amp;rsquo;s common for these to have RGB lights as well.&#xA;&lt;/span&gt;&#xA;&lt;p&gt;This is RAM or Random Access Memory. The above two sticks are the normal-sized used in desktop PCs, this form factor is called a DIMM (Dual In-Line Memory Module) while the bottom two are from laptops and are called SO-DIMMS, the placement of the notch is an indicator of the generation of RAM, with nearly all modern ram being a consecutive generation of the DDR standard. At the time of writing (Q2,2019) DDR4 is common in new, medium to high-end devices, with many DDR3 devices still being used. Of note, many more compact devices solder the ram chips directly to the board, meaning there is no form factor to consider.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/linux/hardware/storage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/linux/hardware/storage/</guid>
      <description>&lt;h1 id=&#34;5---storage&#34;&gt;&#xA;  5 - Storage&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#5---storage&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;script&gt;&#xA;    document.getElementById(&#34;hardwareMenu&#34;).open = true;&#xA;&lt;/script&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://opguides.info/eng/hdds.webp&#34; alt=&#34;disks&#34; /&gt;&lt;/p&gt;&#xA;&lt;span class=&#34;smalltext &#34;&gt;&#xA;    Pictured here are 3 hard drives, 2 of which are &amp;lsquo;full size&amp;rsquo; at 3.5&amp;quot; and the other a &amp;rsquo;laptop drive&amp;rsquo; at 2.5&amp;quot;, the right most hard drive has been opened up, which has certainly ruined it as dust has gotten in. Below the smaller Hard drive is an NVMe SSD on a carrier card. Under the CD is a micro SD card and a flash drive. The micro SD, NVMe SSD, and flash drive all use &amp;ldquo;flash storage&amp;rdquo;.&#xA;&lt;/span&gt;&#xA;&lt;p&gt;Permanent storage is rapidly evolving, but the old guard: hard drives and tape storage aren&amp;rsquo;t going anywhere either. But why use one over the other? How do you interact with them in Linux?&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/linux/hardware/weird/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/linux/hardware/weird/</guid>
      <description>&lt;h1 id=&#34;weird-hardware&#34;&gt;&#xA;  Weird Hardware&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#weird-hardware&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://ddramdisk.store/product/disk/&#34;&gt;PCIe Ramdisk&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.sweetwater.com/store/detail/UAD2Octo--universal-audio-uad-2-octo-core-pcie-dsp-accelerator&#34;&gt;UAD DSP accelerator&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/linux/howwework/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/linux/howwework/</guid>
      <description>&lt;h1 id=&#34;chapter-5---working-on-how-we-work&#34;&gt;&#xA;  Chapter 5 - Working on how we work&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chapter-5---working-on-how-we-work&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;style&gt;&#xA;.blink {&#xA;  animation: blinker 1s step-start 10 forwards;&#xA;}&#xA;&#xA;@keyframes blinker {&#xA;        from { opacity: 0; }&#xA;        50% { opacity: 1; }&#xA;        to { opacity: 0; }&#xA;}&#xA;&lt;/style&gt;&#xA;&lt;h2 id=&#34;the-terminal--&#34;&gt;&#xA;  The Terminal &lt;span class=&#34;blink&#34;&gt; |&lt;/span&gt;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#the-terminal--&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;In the world of programming, embedded development, and electrical debugging you will inevitably need to understand how to use a terminal/command line at some point. While the text only interface can look intimidating, it has some clear advantages. Namely it&amp;rsquo;s significantly faster to use the cli or &amp;lsquo;command line interface&amp;rsquo; version of many tools. Because of the nature of this guide you will be using the terminal frequently, so for convince sake a large amount of information on using it effectively has been moved to Appendix A, I highly recommend you read though it after you finish this page.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/linux/linuxdirtree/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/linux/linuxdirtree/</guid>
      <description>&lt;h1 id=&#34;chapter-4---getting-rooted-in-linux&#34;&gt;&#xA;  Chapter 4 - Getting Rooted In Linux&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chapter-4---getting-rooted-in-linux&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;We&amp;rsquo;ve been using file in /proc and /dev throughout this, but we never really looked to see what else is in there. Let&amp;rsquo;s do that.&lt;/p&gt;&#xA;&lt;p&gt;go ahead and open up a terminal and run&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&#xA;&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;╭─vega@lyrae ~&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;╰─➤  cd /dev&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;╭─vega@lyrae /dev  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;╰─➤  ls&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Very, Very Long Output here&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;Alright, I know what you&amp;rsquo;re thinking.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/linux/linuxshell/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/linux/linuxshell/</guid>
      <description>&lt;h1 id=&#34;appendix-1---using-the-linux-shell&#34;&gt;&#xA;  Appendix 1 - Using the Linux Shell&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#appendix-1---using-the-linux-shell&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;!-- TODO: Add xprop, xev, xrandr, xinput to command list --&gt;&#xA;&lt;!-- Alt + &lt;num&gt; + . shortcut, and other navigation tricks grouped together --&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://missing.csail.mit.edu/2020/course-shell/&#34;&gt;./missing-semester - The Shell&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://missing.csail.mit.edu/2020/shell-tools/&#34;&gt;./missing-semester - Shell Tools and Scripting&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://missing.csail.mit.edu/2020/data-wrangling/&#34;&gt;./missing-semester - Data Wrangling&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.usenix.org/sites/default/files/conference/protected-files/lisa19_maheshwari.pdf&#34;&gt;Linux Productivity Tools Presentation PDF (Ketan M.)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;!---&#xA;&#xA;Commenting out this custom style because it makes this page a pain to read.&#xA;&#xA;&lt;link rel=&#34;preconnect&#34; href=&#34;https://fonts.googleapis.com&#34;&gt;&#xA;&lt;link rel=&#34;preconnect&#34; href=&#34;https://fonts.gstatic.com&#34; crossorigin&gt;&#xA;&lt;link href=&#34;https://fonts.googleapis.com/css2?family=Press+Start+2P&amp;family=VT323&amp;display=swap&#34; rel=&#34;stylesheet&#34;&gt;&#xA;&#xA;&lt;style&gt;&#xA;&#x9;:root {&#xA;&#x9;&#x9;--body-background: linear-gradient(90deg, #121, #030, #121);&#xA;&#x9;&#x9;--text-color: #f5f5f5cc;&#xA;&#x9;&#x9;--link-color: #090;&#xA;&#x9;}&#xA;&#x9;body,p {&#xA;        color: var(--text-color);&#xA;&#x9;}&#xA;&#x9;code{&#xA;&#x9;&#x9;font-family: &#39;VT323&#39;, monospace;&#xA;&#x9;&#x9;font-size: 22px !important;&#xA;        color: var(--text-color);&#xA;&#x9;}&#xA;&#x9;body{&#xA;&#x9;&#x9;background: var(--body-background);&#xA;&#x9;&#x9;color: var(--text-color);&#xA;&#x9;}&#xA;&#x9;h1,h2,h3,h4,h5,h6,nav{&#xA;&#x9;&#x9;font-family: &#39;Press Start 2P&#39;, cursive !important;&#xA;&#x9;&#x9;font-size: 18px;&#xA;&#x9;}&#xA;&#x9;a{&#xA;&#x9;&#x9;font-size: 12px;&#xA;&#x9;&#x9;color: var(--link-color);&#xA;&#x9;&#x9;font-family: &#39;Press Start 2P&#39;, cursive;&#xA;&#x9;}&#xA;&#x9;.book-brand{&#xA;&#x9;&#x9;img {&#xA;&#x9;&#x9;&#x9;image-rendering: pixelated !important;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;dt,dd{&#xA;&#x9;&#x9;font-size: 18px !important;&#xA;&#x9;&#x9;font-family: &#39;VT323&#39;, monospace;&#xA;        color: var(--text-color);&#xA;&#x9;}&#xA;&#x9;dd{&#xA;&#x9;&#x9;font-size: 10px !important;&#xA;&#x9;}&#xA;    .blogdd{&#xA;        font-size: 10px !important;&#xA;        font-family: &#39;Press Start 2P&#39;, cursive;&#xA;    }&#xA;    .navhead{&#xA;        font-size: 14px !important;&#xA;        text-align:left;&#xA;    }&#xA;    aside nav ul li, .navbak{&#xA;        font-size: 14px !important;&#xA;        color: var(--body-background);&#xA;    }&#xA;    img{&#xA;    }&#xA;    span{&#xA;        color: var(--text-color);&#xA;    }&#xA;    nav{&#xA;    &#x9;background: #0000 !important; //This makes the BG of the nav invible&#xA;    }&#xA;    div.speech {&#xA;&#x9;&#x9;border-bottom-right-radius: 0px !important;&#xA;&#x9;&#x9;border-left: 2px solid #777;&#xA;&#x9;&#x9;border-top-right-radius: 0px !important;&#xA;&#x9;&#x9;padding: 12px 24px 12px 70px;&#xA;&#x9;&#x9;border-radius: 0% !important;&#xA;&#x9;}&#xA;    div.speech:before {&#xA;&#x9;&#x9;background-color: #181818;&#xA;&#x9;&#x9;background-image: url(&#34;/nonfree/character/opguidesSiplick.png&#34;);&#xA;&#x9;&#x9;background-size: 75px;&#xA;&#x9;&#x9;border-radius: 0% !important;&#xA;&#x9;&#x9;border: 1px solid #777;&#xA;&#x9;&#x9;content: &#34;&#34;;&#xA;&#x9;&#x9;left: -40px;&#xA;&#x9;&#x9;top: 4px;&#xA;&#x9;&#x9;position: absolute;&#xA;&#x9;&#x9;height: 75px;&#xA;&#x9;&#x9;width: 75px;&#xA;&#x9;}&#xA;    div.speech, tr:nth-child(2n) {&#xA;&#x9;&#x9;background-color: #151 !important;&#xA;&#x9;}&#xA;    div.speech.right {&#xA;        background-color: #020 !important;&#xA;    }&#xA;    ::-webkit-scrollbar-thumb{&#xA;        background: #ccc !important;&#xA;    }&#xA;    ::-webkit-scrollbar-track {&#xA;    &#x9;background: #040;&#xA;&#x9;}&#xA;    .navbak{&#xA;        background: #282 !important;&#xA;    }&#xA;    .navhead{&#xA;        color: #0f0a !important;&#xA;    }&#xA;    .webhead{&#xA;&#x9;&#x9;background:linear-gradient(90deg,#050 0%,#2d2 50%,#0d0 75%) !important;&#xA;&#x9;&#x9;-webkit-background-clip:text !important;&#xA;&#x9;&#x9;-webkit-text-fill-color:transparent;&#xA;&#x9;&#x9;margin-bottom:0;&#xA;    }&#xA;    .markdown{&#xA;        line-height: 1.6;&#xA;    }&#xA;&lt;/style&gt;&#xA;&#xA;---&gt;&#xA;&lt;h2 id=&#34;what-the-shell&#34;&gt;&#xA;  What The Shell?&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#what-the-shell&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Okay, first question you probably have after I&amp;rsquo;ve been using them interchangebly &amp;lsquo;What is a Shell and is it different from a terminal?&amp;rsquo;&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/linux/otheross/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/linux/otheross/</guid>
      <description>&lt;h1 id=&#34;a3---other-operating-systems&#34;&gt;&#xA;  A3 - Other Operating Systems&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#a3---other-operating-systems&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;BSD&lt;/li&gt;&#xA;&lt;li&gt;macOS&lt;/li&gt;&#xA;&lt;li&gt;Serenity&lt;/li&gt;&#xA;&lt;li&gt;Redox&lt;/li&gt;&#xA;&lt;li&gt;React&lt;/li&gt;&#xA;&lt;li&gt;TempleOS&lt;/li&gt;&#xA;&lt;li&gt;Haiku&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://awesomekling.github.io/pledge-and-unveil-in-SerenityOS/&#34;&gt;https://awesomekling.github.io/pledge-and-unveil-in-SerenityOS/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/linux/windows/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/linux/windows/</guid>
      <description>&lt;h1 id=&#34;appendix-2---ugh-windows&#34;&gt;&#xA;  Appendix 2 - Ugh. Windows.&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#appendix-2---ugh-windows&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;&lt;strong&gt;Windows? In a Linux Chapter?&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;div class=&#34;book-columns flex flex-wrap&#34;&gt;&#xA;&#xA;  &lt;div class=&#34;flex-even markdown-inner&#34;&gt;&#xA;    &lt;p&gt;Okay, so, I hate Windows for many, many reasons. Beyond the Candy Crush being bundled and privacy concerns, it&amp;rsquo;s generally just a pain in the ass- and as a Linux user, that&amp;rsquo;s saying something. That said, you&amp;rsquo;ll probably need to do some stuff with it from time to time regardless. So, in this page I want to do three things:&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/making/3dprint/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/making/3dprint/</guid>
      <description>&lt;h1 id=&#34;chapter-42---3d-printing-cnc-and-making-things&#34;&gt;&#xA;  Chapter 42 - 3D printing, CNC, and making things&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chapter-42---3d-printing-cnc-and-making-things&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h1 id=&#34;311---basic-making&#34;&gt;&#xA;  31.1 - Basic making&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#311---basic-making&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;wood-working&#34;&gt;&#xA;  Wood working&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#wood-working&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;safety&#34;&gt;&#xA;  Safety&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#safety&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;cool-projects&#34;&gt;&#xA;  Cool projects&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#cool-projects&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://imgur.com/a/7FGxi&#34;&gt;Lichtenberg Figure Table (Imgur)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://imgur.com/gallery/uYeV6G9&#34;&gt;Epoxy Inlay and Rustic Compass Butcher Block Countertops (Imgur)&lt;/a&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=jGTkFdYeaJc&amp;amp;feature=youtu.be&#34;&gt;(YouTube)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.thisiscolossal.com/2014/12/glow-tables-by-mike-warren/&#34;&gt;Wood Tables Embedded with Photoluminescent Resin (Mike Warren)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://hackaday.com/2022/03/03/cad-up-some-shoes-but-dont-start-from-scratch/&#34;&gt;CAD Up Some Shoes But Don&amp;rsquo;t Start From Scratch (Hackaday, DaveMakesStuff)&lt;/a&gt; + &lt;a href=&#34;https://hackaday.com/2022/03/02/3d-printed-shoes-make-bigfoot-tracks/&#34;&gt;3D Printed Shoes Make Bigfoot tracks (Hackaday, Stephan Henrich)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://all3dp.com/2/3d-print-a-functional-diffraction-grating/&#34;&gt;3D Printing Diffraction Gratings (iridescent/rainbow surfaces)&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/making/hamradio/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/making/hamradio/</guid>
      <description>&lt;h1 id=&#34;chapter-43---ham-radio&#34;&gt;&#xA;  Chapter 43 - Ham Radio&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chapter-43---ham-radio&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;!-- TODO: https://github.com/jopohl/urh --&gt;&#xA;&lt;img src=&#34; /eng/radioart.png &#34; alt=&#34;radioart&#34; style=&#34;zoom:50%;&#34; /&gt;&#xA;&lt;p class=&#34;attribution &#34;&gt;&#xA;    &amp;lsquo;137Mhz&amp;rsquo; by &lt;a href=&#34;u/CashewHut&#34;&gt;u/CashewHut&lt;/a&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;Amateur or &amp;ldquo;ham&amp;rdquo; radio is a great hobby to get into for electronics minded people. You can get into the radio hobby without a license, but generally to transmit anything you&amp;rsquo;ll need to take a test to prove you know a reasonable amount about the equipment, electricity, and regulations.&lt;/p&gt;&#xA;&lt;p&gt;Here in the US, this means taking a multiple-choice test for ~$15. You can actually see the real question bank at &lt;a href=&#34;https://hamexam.org&#34;&gt;https://hamexam.org&lt;/a&gt;. Once you have a license, you&amp;rsquo;ll be given a call sign. For example, &lt;code&gt;KA0XYZ&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/making/history/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/making/history/</guid>
      <description>&lt;h1 id=&#34;chapter-44---history&#34;&gt;&#xA;  Chapter 44 - History&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chapter-44---history&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;bbs-and-tildie-sites&#34;&gt;&#xA;  BBS and Tildie Sites&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#bbs-and-tildie-sites&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://news.ycombinator.com/item?id=24300907&#34;&gt;tilde.town: A social network over SSH&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://tilde.club&#34;&gt;Tilde.club&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://tilde.town/~reppard/radiator.html&#34;&gt;Other Tilde Services?&lt;/a&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/The_Mother_of_All_Demos&#34;&gt;https://en.wikipedia.org/wiki/The_Mother_of_All_Demos&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=TfwKYUmoC-k&amp;amp;list=PL5cGwrD7cv8hK-qxPqRB25Dzs0BtLWhXz&amp;amp;index=17&#34;&gt;Adam Savage&amp;rsquo;s Computer History Collection!&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;preserving-data&#34;&gt;&#xA;  Preserving data&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#preserving-data&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://media.ccc.de/v/31c3_-_6373_-_en_-_saal_6_-_201412291600_-_the_only_thing_we_know_about_cyberspace_is_that_its_640x480_-_olia_lialina#t=3641&#34;&gt;https://media.ccc.de/v/31c3_-_6373_-_en_-_saal_6_-_201412291600_-_the_only_thing_we_know_about_cyberspace_is_that_its_640x480_-_olia_lialina#t=3641&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;preserving-hardware&#34;&gt;&#xA;  Preserving hardware&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#preserving-hardware&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Delay_line_memory&#34;&gt;https://en.wikipedia.org/wiki/Delay_line_memory&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://www.vcfed.org/forum/forum.php&#34;&gt;http://www.vcfed.org/forum/forum.php&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://skilldrick.github.io/easy6502/&#34;&gt;https://skilldrick.github.io/easy6502/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/making/mechanical/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/making/mechanical/</guid>
      <description>&lt;h1 id=&#34;45---mechanical-bits&#34;&gt;&#xA;  45 - Mechanical Bits&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#45---mechanical-bits&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Through all the Engineering pages I&amp;rsquo;ve focused on electrical and programming solutions, because those are what I know, but they are not always the right answer. For example, in &lt;a href=&#34;https://www.reddit.com/r/arduino/comments/s0jnh9/what_kind_of_motor_can_i_use_for_this_i_need_a/&#34;&gt;this Reddit post&lt;/a&gt; the author asks &lt;strong&gt;&amp;ldquo;What kind of motor can I use for this? I need a lightweight pole to go from 0 to 90 degrees [as fast as possible]?&amp;rdquo;&lt;/strong&gt; and the answer really stuck out to me&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/math/algebra/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/math/algebra/</guid>
      <description>&lt;h1 id=&#34;1---algebra&#34;&gt;&#xA;  1 - Algebra&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#1---algebra&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;script&gt;&#xA;    document.getElementById(&#34;mathMenu&#34;).open = true;&#xA;&lt;/script&gt;&#xA;&lt;blockquote class=&#34;book-hint info&#34;&gt;&#xA;  This section is a tad bit misnamed, as instead of covering just Algebra I&amp;rsquo;ll be covering most things you&amp;rsquo;d learn in a high school Algebra class along side it, plus probably a bit extra.&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;h2 id=&#34;number-systems&#34;&gt;&#xA;  Number Systems&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#number-systems&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;To get started, let&amp;rsquo;s look at &amp;lsquo;Number Systems&amp;rsquo;. Essentially, there are a variety of &amp;rsquo;types&amp;rsquo; of numbers, rather than get all philosophical let&amp;rsquo;s just dive in and I think you&amp;rsquo;ll get the gist.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/math/calc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/math/calc/</guid>
      <description>&lt;h1 id=&#34;4---calculus&#34;&gt;&#xA;  4 - Calculus&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#4---calculus&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;script&gt;&#xA;    document.getElementById(&#34;mathMenu&#34;).open = true;&#xA;&lt;/script&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://adit.io/posts/2018-02-18-Introduction-To-Calculus-With-Derivatives.html&#34;&gt;Introduction To Calculus With Derivatives (adit.io)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;span class=&#34;best &#34;&gt;&#xA;    &lt;img src=&#34;https://opguides.info/nonfree/logo/best.svg&#34; width=&#34;20em&#34; style=&#34;margin: -10px 0px 0px 0px; margin-bottom: -10px;&#34;/&gt;&#xA;    &lt;a href=&#34;https://calculusmadeeasy.org&#34;&gt;Calculus Made Easy&lt;/a&gt;&#xA;&lt;/span&gt; by Silvanus P. Thompson&lt;/p&gt;&#xA;&lt;p&gt;[TODO] limits before video&lt;/p&gt;&#xA;&lt;blockquote class=&#34;book-hint info&#34;&gt;&#xA;  Below is a 12 video series that totals about 3.25 hours.&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;iframe width=&#34;100%&#34; height=&#34;500&#34; src=&#34;https://www.youtube.com/embed/videoseries?list=PLZHQObOWTQDMsr9K-rj53DwVRMYO3t5Yr&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;&#xA;&lt;p&gt;[The Exponential Function is a Miracle (Mark Dominus)](&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/math/diffeq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/math/diffeq/</guid>
      <description>&lt;h1 id=&#34;5---differential-equations&#34;&gt;&#xA;  5 - Differential Equations&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#5---differential-equations&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;script&gt;&#xA;    document.getElementById(&#34;mathMenu&#34;).open = true;&#xA;&lt;/script&gt;&#xA;&lt;!-- https://web.williams.edu/Mathematics/lg5/Rota.pdf --&gt;&#xA;&lt;blockquote class=&#34;book-hint info&#34;&gt;&#xA;  Below is a 5 video series that totals about 1.5 hours.&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;iframe width=&#34;100%&#34; height=&#34;500&#34; src=&#34;https://www.youtube.com/embed/videoseries?list=PLZHQObOWTQDNPOjrT6KVlfJuKtYTftqH6&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/math/geometry/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/math/geometry/</guid>
      <description>&lt;h1 id=&#34;3---geometry-and-trigonometry&#34;&gt;&#xA;  3 - Geometry and Trigonometry&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#3---geometry-and-trigonometry&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;script&gt;&#xA;    document.getElementById(&#34;mathMenu&#34;).open = true;&#xA;&lt;/script&gt;&#xA;&lt;h2 id=&#34;geometry&#34;&gt;&#xA;  Geometry&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#geometry&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;notation&#34;&gt;&#xA;  Notation&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#notation&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;∥, ⊥,&lt;/p&gt;&#xA;&lt;h2 id=&#34;trigonometry&#34;&gt;&#xA;  Trigonometry&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#trigonometry&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;iframe width=&#34;100%&#34; height=&#34;500&#34; src=&#34;https://www.youtube.com/embed/yBw67Fb31Cs&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PL0o_zxa4K1BVCB8iCVCGOES9pEF6byTMT&#34;&gt;Learning Trig playlist on YouTube by &amp;lsquo;The Organic Chemistry Tutor&amp;rsquo;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;notation-1&#34;&gt;&#xA;  Notation&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#notation-1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h1 id=&#34;3---topology&#34;&gt;&#xA;  3½ - Topology&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#3---topology&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;iframe width=&#34;100%&#34; height=&#34;500&#34; src=&#34;https://www.youtube.com/embed/AmgkSdhK4K8&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;&#xA;&lt;div class=&#34;book-columns flex flex-wrap&#34;&gt;&#xA;&#xA;  &lt;div class=&#34;flex-even markdown-inner&#34;&gt;&#xA;    &lt;iframe width=&#34;100%&#34; height=&#34;200&#34; src=&#34;https://www.youtube.com/embed/_hjRvZYkAgA&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;&#xA;&#xA;  &lt;/div&gt;&#xA;&#xA;  &lt;div class=&#34;flex-even markdown-inner&#34;&gt;&#xA;    &lt;iframe width=&#34;100%&#34; height=&#34;200&#34; src=&#34;https://www.youtube.com/embed/AAsICMPwGPY&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;&#xA;&#xA;  &lt;/div&gt;&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;But, this is supposed to be about engineering, so why do we need it?&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/math/linalg/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/math/linalg/</guid>
      <description>&lt;h1 id=&#34;6---matrix-theory--linear-algebra&#34;&gt;&#xA;  6 - Matrix Theory / Linear Algebra&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#6---matrix-theory--linear-algebra&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;script&gt;&#xA;    document.getElementById(&#34;mathMenu&#34;).open = true;&#xA;&lt;/script&gt;&#xA;&lt;blockquote class=&#34;book-hint info&#34;&gt;&#xA;  Below is a 15 video series that totals a bit under 3 hours.&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;iframe width=&#34;100%&#34; height=&#34;500&#34; src=&#34;https://www.youtube.com/embed/videoseries?list=PLZHQObOWTQDPD3MizzM2xVFitgF8hE_ab&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;&#xA;&lt;span class=&#34;best &#34;&gt;&#xA;    &lt;img src=&#34;https://opguides.info/nonfree/logo/best.svg&#34; width=&#34;20em&#34; style=&#34;margin: -10px 0px 0px 0px; margin-bottom: -10px;&#34;/&gt;&#xA;    &lt;a href=&#34;http://textbooks.math.gatech.edu/ila/overview.html&#34;&gt;Interactive Linear Algebra, text book that actually uses the web&lt;/a&gt;&#xA;&lt;/span&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.math.brown.edu/streil/papers/LADW/LADW_2017-09-04.pdf&#34;&gt;Linear Algebra Done Wrong - Sergei Treil @ Brown University&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://graphicallinearalgebra.net/2015/06/09/matrices-diagrammatically/&#34;&gt;Matrices, Diagrammatically&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://joshua.smcvt.edu/linearalgebra/book.pdf&#34;&gt;Linear Algebra - Jim Hefferson&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://scholarworks.gvsu.edu/cgi/viewcontent.cgi?article=1021&amp;amp;context=books&#34;&gt;Linear Algebra and Applications: An Inquiry-Based Approach&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/math/logic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/math/logic/</guid>
      <description>&lt;h1 id=&#34;2---discrete-math--logic&#34;&gt;&#xA;  2 - Discrete Math &amp;amp; Logic&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2---discrete-math--logic&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;script&gt;&#xA;    document.getElementById(&#34;mathMenu&#34;).open = true;&#xA;&lt;/script&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://discrete.openmathbooks.org/dmoi3/&#34;&gt;http://discrete.openmathbooks.org/dmoi3/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;span class=&#34;best &#34;&gt;&#xA;    &lt;img src=&#34;https://opguides.info/nonfree/logo/best.svg&#34; width=&#34;20em&#34; style=&#34;margin: -10px 0px 0px 0px; margin-bottom: -10px;&#34;/&gt;&#xA;    &lt;a href=&#34;https://yurichev.com/writings/Math-for-programmers.pdf&#34;&gt;Math For Programmers (PDF)&lt;/a&gt;&#xA;&lt;/span&gt;&#xA;&lt;h2 id=&#34;notation&#34;&gt;&#xA;  Notation&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#notation&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/List_of_mathematic_operators&#34;&gt;https://en.wikipedia.org/wiki/List_of_mathematic_operators&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;logic&#34;&gt;&#xA;  Logic&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#logic&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;many-valued-logic&#34;&gt;&#xA;  Many Valued Logic&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#many-valued-logic&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;fuzzy-logic&#34;&gt;&#xA;  Fuzzy Logic&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#fuzzy-logic&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/math/math/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/math/math/</guid>
      <description>&lt;h1 id=&#34;chapter-6---math&#34;&gt;&#xA;  Chapter 6 - Math&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chapter-6---math&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;script&gt;&#xA;    document.getElementById(&#34;mathMenu&#34;).open = true;&#xA;&lt;/script&gt;&#xA;&lt;div class=&#34;book-columns flex flex-wrap&#34;&gt;&#xA;&#xA;  &lt;div class=&#34;flex-even markdown-inner&#34;&gt;&#xA;    &lt;div class=&#34;tip &#34;&gt;&#xA;    This section of OpGuides is divided into subsections for easier reading!&#xA;&lt;/div&gt;&#xA;&lt;p&gt;Just click the little arrow next to the heading to see the full list of chapters&lt;/p&gt;&#xA;&lt;p&gt;As with all of OpGuides, please skip around as necessary. I suspect the start of this math chapter will be stuff many readers already know, especially those currently in college.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/math/newmath/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/math/newmath/</guid>
      <description>&lt;h1 id=&#34;10---its-new-math&#34;&gt;&#xA;  10 - It&amp;rsquo;s NEW math!&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#10---its-new-math&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Math, as I&amp;rsquo;ve tried to convey though these chapters, is more about problem-solving than actual mechanical operations. Part of solving &lt;em&gt;really&lt;/em&gt; hard problems is having even weirder intuitions and tools.&lt;/p&gt;&#xA;&lt;iframe width=&#34;100%&#34; height=&#34;500&#34; src=&#34;https://www.youtube.com/embed/3gyHKCDq1YA&#34; title=&#34;1 Billion is Tiny in an Alternate Universe (Intro to p-adic Numbers) #SoME2&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;&#xA;&lt;p&gt;/+ Hilbert curves (and the IP map)&lt;/p&gt;&#xA;&lt;p&gt;/+ &lt;a href=&#34;https://www.youtube.com/watch?v=a-767WnbaCQ&#34;&gt;https://www.youtube.com/watch?v=a-767WnbaCQ&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;/+ Markov Chains&lt;/p&gt;&#xA;&lt;p&gt;/+ EGG, &lt;a href=&#34;https://egraphs-good.github.io&#34;&gt;https://egraphs-good.github.io&lt;/a&gt; &amp;amp; DAGs&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/math/numanalysis/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/math/numanalysis/</guid>
      <description>&lt;h1 id=&#34;7---numerical-analysis&#34;&gt;&#xA;  7 - Numerical Analysis&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#7---numerical-analysis&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;script&gt;&#xA;    document.getElementById(&#34;mathMenu&#34;).open = true;&#xA;&lt;/script&gt;&#xA;&lt;!-- I&#39;d also like to do something about symbolic analysis with sympy, though since this chapter happens before the programming chapter, that gets awkward. I could make a really funny out-of-order symbol chapter on the website I guess? Regardless, I think I can movitate this well enough and use it as an excues to talk about Domain Specific languages by way of this -&gt; https://thenumb.at/Autodiff/ article. Plus, it&#39;s honestly really nice to just through a CAS at a problem. --&gt;&#xA;&lt;iframe width=&#34;100%&#34; height=&#34;500&#34; src=&#34;https://www.youtube.com/embed/YIfANKRmEu4&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Bisection_method&#34;&gt;Bisection Method&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/math/probability/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/math/probability/</guid>
      <description>&lt;h1 id=&#34;9---probabilitystats&#34;&gt;&#xA;  9 - Probability/Stats&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#9---probabilitystats&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;script&gt;&#xA;    document.getElementById(&#34;mathMenu&#34;).open = true;&#xA;&lt;/script&gt;&#xA;&lt;span class=&#34;best &#34;&gt;&#xA;    &lt;img src=&#34;https://opguides.info/nonfree/logo/best.svg&#34; width=&#34;20em&#34; style=&#34;margin: -10px 0px 0px 0px; margin-bottom: -10px;&#34;/&gt;&#xA;    &lt;a href=&#34;https://seeing-theory.brown.edu&#34;&gt;Seeing Theory: A visual Introduction to probability and statistics&lt;/a&gt;&#xA;&lt;/span&gt;&#xA;&lt;p&gt;Why, where are these used, etc.&lt;/p&gt;&#xA;&lt;p&gt;bring up music things, part failure rates, tolerances, etc.&lt;/p&gt;&#xA;&lt;h2 id=&#34;basics&#34;&gt;&#xA;  Basics&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#basics&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;For the following, I&amp;rsquo;ll be using a die roll example, where the events are the total of two die. The &lt;em&gt;Sample Space&lt;/em&gt; of this is&lt;/p&gt;&#xA;&#xA;&lt;link rel=&#34;stylesheet&#34; href=&#34;https://opguides.info/katex/katex.min.css&#34; /&gt;&#xA;&lt;script defer src=&#34;https://opguides.info/katex/katex.min.js&#34;&gt;&lt;/script&gt;&#xA;&lt;script defer src=&#34;https://opguides.info/katex/auto-render.min.js&#34; onload=&#34;renderMathInElement(document.body);&#34;&gt;&lt;/script&gt;&lt;span&gt;&#xA;  \(S = \{2,3,4,5,6,7,8,9,10,11,12\}\)&#xA;&lt;/span&gt;&#xA;&#xA;&lt;p&gt;Note, that 1 isn&amp;rsquo;t possible as the lowest is both die being &amp;lsquo;1&amp;rsquo;.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/math/settheory/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/math/settheory/</guid>
      <description>&lt;h1 id=&#34;8---set-theory&#34;&gt;&#xA;  8 - Set Theory&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#8---set-theory&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p class=&#34;attribution &#34;&gt;&#xA;    The, uh, study of sets. It&amp;rsquo;s not as boring as it sounds, I swear.&#xA;&lt;/p&gt;&#xA;&lt;script&gt;&#xA;    document.getElementById(&#34;mathMenu&#34;).open = true;&#xA;&lt;/script&gt;&#xA;&lt;p&gt;Set theory is pretty boring. Yes, it brings about ideas of infinity, &lt;em&gt;Sets&lt;/em&gt; of numbers (integers, complex numbers, etc.) but frankly, unless you&amp;rsquo;re really into math&amp;rsquo;s nerdy bits and trying to understand the nature of mathematics and all that jazz, there&amp;rsquo;s really only a few bits you need to understand:&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/math/units/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/math/units/</guid>
      <description>&lt;h1 id=&#34;chapter-6---units&#34;&gt;&#xA;  Chapter 6½ - Units&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chapter-6---units&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;iframe width=&#34;100%&#34; height=&#34;500&#34; src=&#34;https://www.youtube.com/embed/KmfdeWd0RMk&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;&#xA;&lt;hr&gt;&#xA;&lt;div class=&#34;book-columns flex flex-wrap&#34;&gt;&#xA;&#xA;  &lt;div class=&#34;flex-even markdown-inner&#34;&gt;&#xA;    &lt;p&gt;Units are a really big deal. A single missed unit conversion in &lt;a href=&#34;https://en.wikipedia.org/wiki/Mars_Climate_Orbiter#Cause_of_failure&#34;&gt;The Mars Climate Orbiter&lt;/a&gt; made the mission a failure which cost $327 million in 1998.&lt;/p&gt;&#xA;&lt;p&gt;Or it could just mean you&amp;rsquo;re overpaying on your phone bill, since it seems nobody at &lt;a href=&#34;https://www.youtube.com/watch?v=zN9LZ3ojnxY&#34;&gt;Verizon knows the difference between .002¢ and .002$&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;I could dig around and find more funny examples, but on a serious note, you&amp;rsquo;ll end up dealing with units a &lt;em&gt;lot&lt;/em&gt; in pretty much engineering discipline.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/networking/cloud/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/networking/cloud/</guid>
      <description>&lt;h1 id=&#34;chapter-39---the-cloud&#34;&gt;&#xA;  Chapter 39½ - &amp;ldquo;The Cloud&amp;rdquo;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chapter-39---the-cloud&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;div class=&#34;book-columns flex flex-wrap&#34;&gt;&#xA;&#xA;  &lt;div class=&#34;flex-even markdown-inner&#34;&gt;&#xA;    &lt;p&gt;Some people will tell you the cloud is the future, that someday everybody will rent computational power from a handful of services like AWS.&lt;/p&gt;&#xA;&lt;p&gt;These people are nuts.&lt;/p&gt;&#xA;&lt;p&gt;The cloud is just someone eles&amp;rsquo;s computer. Unless your business is going through a period of extreme growth, it makes no sense to use a cloud provider like AWS or Azure. It does make plenty of sense to buy a VPS (Virtual Private Server) for hosting a website or game server or a personal website like this one, but at scale? No.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/networking/databases/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/networking/databases/</guid>
      <description>&lt;h1 id=&#34;chapter-40---databases&#34;&gt;&#xA;  Chapter 40 - Databases&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chapter-40---databases&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;[TODO] Start with comparison to spreadsheet, explaining &amp;lsquo;NoSQL&amp;rsquo; Vs &amp;lsquo;SQL&amp;rsquo; and that this is Relational vs Non-Relational&lt;/p&gt;&#xA;&lt;p&gt;[TODO] explain CRUD&lt;/p&gt;&#xA;&lt;h2 id=&#34;crud&#34;&gt;&#xA;  CRUD&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#crud&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;Create, Read, Update, Delete&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;sql&#34;&gt;&#xA;  SQL&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#sql&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;div class=&#34;tip &#34;&gt;&#xA;    This is Opinionated Guides, so let me be clear, I really, &lt;strong&gt;really&lt;/strong&gt; hate SQL. I don&amp;rsquo;t like OOP in general, and SQL is sorta like object orientation taken further. Add onto this a mostly shit syntax, like, &lt;strong&gt;JOIN&lt;/strong&gt;s are objectively weird to read, write, and understand. I&amp;rsquo;m not saying SQL doesn&amp;rsquo;t have its place: It&amp;rsquo;s reasonably good for ensuring data fits a strict structure and does make sense in cases where using OOP also makes sense. It&amp;rsquo;s just that OOP itself is over-used, leading to SQL being overused. This is probably in part due to education mostly teaching SQL and it being the only type of database many students ever learn. This might make some sense if it were honestly better, but I suspect that it&amp;rsquo;s in large part taught for the same reason Java is:  Sun Microsystem paid a &lt;a href=&#34;https://www.theregister.com/2003/06/09/sun_preps_500m_java_brand/#:~:text=Sun%20is%20to%20lead%20a,world%27s%20best-known%20technology%20brands.&#34;&gt;fuck ton&lt;/a&gt; of money to push it- hence the &lt;strong&gt;&amp;ldquo;3 Billion Devices Run Java&amp;rdquo;&lt;/strong&gt; Thing. Then, Oracle bought Java from Sun Microsystems and made the first commercially available implementation of SQL. I&amp;rsquo;m hopeful (albeit probably naively) that Oracle making Java a mess of licensing as the &amp;lsquo;main&amp;rsquo; Java Virtual Machine goes &lt;a href=&#34;https://en.wikipedia.org/wiki/Java_%28programming_language%29&#34;&gt;paid (Read on Wikipedia)&lt;/a&gt; and &lt;a href=&#34;https://en.wikipedia.org/wiki/Google_LLC_v._Oracle_America,_Inc.&#34;&gt;suing Google&lt;/a&gt; will be the nail in the coffin for education using it- and that SQL will be demoted to being taught alongside other options along with that. Regardless of the reasons, though, you should still learn it because everything uses it.&#xA;&lt;/div&gt;&#xA;&lt;p&gt;[TODO] SQL, full CRUD, joins, the works&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/networking/howyougothere/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/networking/howyougothere/</guid>
      <description>&lt;h1 id=&#34;chapter-371---how-you-got-here&#34;&gt;&#xA;  Chapter 37.1 - How you got here&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chapter-371---how-you-got-here&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;So that we have some context through this chapter, lets look at what happens when you visit &lt;a href=&#34;https://opguides.info&#34;&gt;https://opguides.info&lt;/a&gt; (assuming you have a normal network)&lt;/p&gt;&#xA;&lt;ol start=&#34;0&#34;&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;You&amp;rsquo;ve already connected to your home network. Let&amp;rsquo;s make some assumptions about your setup:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;This is over twisted pair wire (Ethernet), just to keep things simple for now. (Not using Wi-Fi)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Let&amp;rsquo;s also assume IPv4, since IPv6 still isn&amp;rsquo;t used everywhere.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/networking/networking/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/networking/networking/</guid>
      <description>&lt;h1 id=&#34;chapter-38---networking&#34;&gt;&#xA;  Chapter 38 - Networking&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chapter-38---networking&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Quick links&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;div class=&#34;book-columns flex flex-wrap&#34;&gt;&#xA;&#xA;  &lt;div class=&#34;flex-even markdown-inner&#34;&gt;&#xA;    &lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/apenwarr/blip&#34;&gt;Blip&lt;/a&gt; - Check latency&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.speedtest.net&#34;&gt;Speedtest.net&lt;/a&gt; - Speed test&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://myexternalip.com&#34;&gt;myexternalip.com&lt;/a&gt; - See your external IP&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;  &lt;/div&gt;&#xA;&#xA;  &lt;div class=&#34;flex-even markdown-inner&#34;&gt;&#xA;    &lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://portchecker.co&#34;&gt;portchecker.co&lt;/a&gt; - Check if a port is open&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://crt.sh&#34;&gt;crt.sh&lt;/a&gt; - Certificate search&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;  &lt;/div&gt;&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;the-basics&#34;&gt;&#xA;  The Basics&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#the-basics&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;To get started, let&amp;rsquo;s just get some basic terminology down and take a look at the bigger picture:&lt;/p&gt;&#xA;&lt;h3 id=&#34;nodes&#34;&gt;&#xA;  Nodes&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#nodes&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;These are all the points in the network. There are &lt;em&gt;terminal nodes&lt;/em&gt; and &lt;em&gt;intermediate nodes&lt;/em&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/networking/osi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/networking/osi/</guid>
      <description>&lt;h1 id=&#34;chapter-372---the-osi-model&#34;&gt;&#xA;  Chapter 37.2 - The OSI Model&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chapter-372---the-osi-model&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;The &lt;strong&gt;OSI model of networking&lt;/strong&gt; is the model of networking most classes will cover. It is slightly different from the one used by the internet, which is the &lt;u&gt;&lt;strong&gt;TCP/IP&lt;/strong&gt;&lt;/u&gt; model, but it&amp;rsquo;s a bit more regularly used when talking about networking, so it&amp;rsquo;s the one I&amp;rsquo;ll cover here. Note, the big difference is really just that In the &lt;strong&gt;&lt;u&gt;TCP/IP&lt;/u&gt;&lt;/strong&gt; model, the &lt;strong&gt;Physical&lt;/strong&gt; and &lt;strong&gt;Data Link&lt;/strong&gt; Layers are viewed as a &lt;strong&gt;unified &amp;lsquo;&lt;u&gt;Network Acces Layer&lt;/u&gt;&amp;rsquo;&lt;/strong&gt;, the &lt;strong&gt;Network Layer&lt;/strong&gt; is called the &lt;strong&gt;&lt;u&gt;Internet&lt;/u&gt; Layer,&lt;/strong&gt; The Transport Layer &lt;em&gt;stays the same&lt;/em&gt;, and the and The &lt;strong&gt;Session, Presentation, and Application&lt;/strong&gt; layer are all part of a &lt;strong&gt;larger &lt;u&gt;Application&lt;/u&gt;&lt;/strong&gt; Layer.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/networking/privacy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/networking/privacy/</guid>
      <description>&lt;h1 id=&#34;chapter-41---your-guide-to-privacy&#34;&gt;&#xA;  Chapter 41½ - Your Guide to Privacy&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chapter-41---your-guide-to-privacy&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;hr&gt;&#xA;&lt;div style=&#34;display: block; width: 84%; text-align: center;margin-left: auto; margin-right: auto;&#34;&gt;&#xA;&lt;p class=&#34;Edward Snowden, in his [Reddit AMA](https://www.reddit.com/r/IAmA/comments/36ru89/just_days_left_to_kill_mass_surveillance_under/crglgh2?utm_source=share&amp;amp;utm_medium=web2x&amp;amp;context=3)&#34; style=&#34;font-size:1.2em;color:var(--text-color);;&#34;&gt;&lt;i&gt;&lt;b&gt;&#34;&lt;/b&gt;&#xA;    Arguing that you don&amp;rsquo;t care about the right to privacy because you have &lt;u&gt;nothing to hide&lt;/u&gt; is no different from saying you don&amp;rsquo;t care about free speech because &lt;u&gt;you have nothing to say&lt;/u&gt;.&#xA;&lt;b&gt;&#34;&lt;/b&gt;&lt;/i&gt;&#xA;&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div style=&#34;display: block; width: 80%; margin-left: auto; margin-right: auto;&#34;&gt;&#xA;&lt;p style=&#34;font-size:.85em;var(--text-color);&#34;&gt; &#xA;    - Edward Snowden, in his &lt;a href=&#34;https://www.reddit.com/r/IAmA/comments/36ru89/just_days_left_to_kill_mass_surveillance_under/crglgh2?utm_source=share&amp;amp;utm_medium=web2x&amp;amp;context=3&#34;&gt;Reddit AMA&lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;Privacy online is a joke. No matter what you do, you&amp;rsquo;re still going to be tracked so much that advertisers and the big tech companies (Facebook, Google, Microsoft, etc.) all know way more about you than you&amp;rsquo;d like. &lt;a href=&#34;https://www.youtube.com/watch?v=wqn3gR1WTcA&#34;&gt;Data brokers&lt;/a&gt; will find out more about you than you can imagine. &lt;em&gt;Technically&lt;/em&gt;, most of these companies will provide various opt-outs. Realistically, you shouldn&amp;rsquo;t expect these to stop anyone. You can be 110% your data is being sold. So, what can you do?&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/networking/security/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/networking/security/</guid>
      <description>&lt;h1 id=&#34;chapter-41---security--exploitation&#34;&gt;&#xA;  Chapter 41 - Security &amp;amp; Exploitation&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chapter-41---security--exploitation&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;blockquote class=&#34;book-hint warning&#34;&gt;&#xA;  I&amp;rsquo;m going to assume at least some prior knowledge here, if you want a quick intro, I recommend going through &lt;a href=&#34;https://missing.csail.mit.edu/2020/security/&#34;&gt;./missing-semester-Security&lt;/a&gt; so that we can all be on the same page.&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;div class=&#34;book-columns flex flex-wrap&#34;&gt;&#xA;&#xA;  &lt;div class=&#34;flex-even markdown-inner&#34;&gt;&#xA;    Often when we think about Exploitation, better known as hacking, we conjure images of a more-punk-than-cyber cyberpunk person clicking away wildly on a keyboard as code flies by, like the &lt;a href=&#34;https://en.wikipedia.org/wiki/Hackers_%28film%29&#34;&gt;1995 movie, Hackers&lt;/a&gt;, and to some extent this isn&amp;rsquo;t wrong, as one look around the floor at &lt;a href=&#34;https://www.defcon.org/&#34;&gt;DefCon&lt;/a&gt;, will show you. And honestly, that&amp;rsquo;s not by accident. While there are strictly professional security experts, those that work at corporations and banks, a large number do it for the lolz and to bring a little fun back into computing. Calling exploitation &amp;lsquo;hacking&amp;rsquo; is almost a misnomer, as hacking encompass a lot more than exploitation, and exploitation a lot more than hacking. For that reason, before we start, I recommend you watch &lt;a href=&#34;https://www.youtube.com/watch?v=wjge1bVobN0&#34;&gt;this video&lt;/a&gt;, on speed running Super Mario 64, this is a prime example of hacking in a non-harmful manner done for fun.&#xA;  &lt;/div&gt;&#xA;&#xA;  &lt;div class=&#34;flex-even markdown-inner&#34;&gt;&#xA;    &lt;img src=&#34;https://imgs.xkcd.com/comics/stack.png&#34; alt=&#34;STACK&#34; /&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/networking/servers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/networking/servers/</guid>
      <description>&lt;h1 id=&#34;chapter-39---servers&#34;&gt;&#xA;  Chapter 39 - Servers!&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chapter-39---servers&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;First of all, let&amp;rsquo;s demystify the servers, they are not something to be afraid of &amp;hellip; they are just normal computers that execute processes, the main difference is that these computers do not have a direct interface, that is: there is no need for them to have peripherals (most of the time) since they only SERVE resources for other needs.&lt;/p&gt;&#xA;&lt;p&gt;A good example of a server is this one, in which you are reading this, the only function of the server where this content is hosted is to provide it, nothing more and nothing less.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/networking/tools/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/networking/tools/</guid>
      <description>&lt;h1 id=&#34;chapter-373---networking-tools&#34;&gt;&#xA;  Chapter 37.3 - Networking Tools&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chapter-373---networking-tools&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h3 id=&#34;etherape&#34;&gt;&#xA;  Etherape&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#etherape&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;wireshark&#34;&gt;&#xA;  Wireshark&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#wireshark&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Ignitetechnologies/Mindmap/tree/main/Wireshark&#34;&gt;https://github.com/Ignitetechnologies/Mindmap/tree/main/Wireshark&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://wiki.wireshark.org/CaptureFilters&#34;&gt;https://wiki.wireshark.org/CaptureFilters&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.cellstream.com/reference-reading/tipsandtricks/541-wireshark-packetdiagram&#34;&gt;Enable Packet Diagram View&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;nmap&#34;&gt;&#xA;  Nmap&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#nmap&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;scapy--kamene&#34;&gt;&#xA;  Scapy / Kamene&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#scapy--kamene&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://kamene.readthedocs.io/en/latest/introduction.html&#34;&gt;Kamene&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;gns&#34;&gt;&#xA;  (G)NS&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#gns&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;httpie&#34;&gt;&#xA;  HTTPie&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#httpie&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/httpie/httpie&#34;&gt;HTTPie&lt;/a&gt; - human-friendly CLI HTTP client for the API era&lt;/p&gt;&#xA;&lt;h3 id=&#34;tunnels--vpn&#34;&gt;&#xA;  Tunnels &amp;amp; VPN&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#tunnels--vpn&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ekzhang/bore&#34;&gt;bore&lt;/a&gt; - a simple CLI tool for making tunnels to localhost&lt;/p&gt;&#xA;&lt;h2 id=&#34;further-reading&#34;&gt;&#xA;  Further Reading&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#further-reading&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/alex/what-happens-when&#34;&gt;What happens when&amp;hellip; [GitHub]&lt;/a&gt; - An attempt to answer the age old interview question &amp;ldquo;What happens when you type google.com into your browser and press enter?&amp;rdquo;&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/prereq/chem/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/prereq/chem/</guid>
      <description>&lt;h1 id=&#34;chapter-8---chemistry&#34;&gt;&#xA;  Chapter 8 - Chemistry&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chapter-8---chemistry&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://ptable.com/?lang=en#Properties&#34;&gt;Super handy periodic table with visualization, atomic mass, melting/boiling points, specific heat, isotopes, etc. (ptable)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;tip &#34;&gt;&#xA;    This chapter is more or less on hold while I prioritize adding the content I&amp;rsquo;m more familiar with, if you&amp;rsquo;d like, feel free to submit a PR to flesh this section out.&#xA;&lt;/div&gt;&#xA;&lt;p&gt;Unfortunately, my chemistry education was pretty &amp;lsquo;meh&amp;rsquo;, and I never actually made it to Organic Chem. I have CrashCourse&amp;rsquo;s &lt;a href=&#34;https://www.youtube.com/watch?v=FSyAehMdpyI&amp;amp;list=PLG61LF8I_OXoh2mhx2YNY9s4ekXiriMAf&amp;amp;ab_channel=CrashCourse&#34;&gt;Chemistry&lt;/a&gt; and &lt;a href=&#34;https://www.youtube.com/watch?v=bSMx0NS0XfY&amp;amp;list=PL8dPuuaLjXtONguuhLdVmq0HTKS0jksS4&amp;amp;ab_channel=CrashCourse&#34;&gt;Organic Chemistry&lt;/a&gt; videos on YouTube on my &amp;lsquo;To Watch&amp;rsquo; list, though. Obviously, I don&amp;rsquo;t know if they&amp;rsquo;re any good, but maybe they&amp;rsquo;d be a decent place to start.&#xA;&lt;a href=&#34;https://en.wikipedia.org/wiki/Quaternion&#34;&gt;NileRed&lt;/a&gt;, &lt;a href=&#34;https://www.youtube.com/user/theCodyReeder&#34;&gt;Cody&amp;rsquo;s Lab&lt;/a&gt;, and &lt;a href=&#34;https://www.youtube.com/user/TheChemlife&#34;&gt;Thought Emporium&lt;/a&gt; on YouTube all have good chemistry content as well.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/prereq/othersubjects/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/prereq/othersubjects/</guid>
      <description>&lt;h1 id=&#34;chapter-9---the-rest&#34;&gt;&#xA;  Chapter 9 - &amp;lsquo;The Rest&amp;rsquo;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chapter-9---the-rest&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;music&#34;&gt;&#xA;  Music&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#music&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Music? In a chapter on Engineering? Well, yeah. Hear me out, music is a combination of math and signals.&lt;/p&gt;&#xA;&lt;iframe width=&#34;100%&#34; height=&#34;500&#34; src=&#34;https://www.youtube.com/embed/Y7TesKMSE74&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;&#xA;&lt;div class=&#34;book-columns flex flex-wrap&#34;&gt;&#xA;&#xA;  &lt;div class=&#34;flex-even markdown-inner&#34;&gt;&#xA;    &lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&#xA;&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;5&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;EUCLID(m, k):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; k &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; m&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; EUCLID(k,m mod k)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p class=&#34;attribution &#34;&gt;&#xA;    &lt;a href=&#34;http://cgm.cs.mcgill.ca/~godfried/publications/banff.pdf&#34;&gt;The Euclidean Algorithm Generates Traditional Musical Rhythms (Godfried Toussaint) (PDF)&lt;/a&gt;&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/prereq/physics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/prereq/physics/</guid>
      <description>&lt;h1 id=&#34;chapter-7---physics&#34;&gt;&#xA;  Chapter 7 - Physics&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chapter-7---physics&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;div class=&#34;book-columns flex flex-wrap&#34;&gt;&#xA;&#xA;  &lt;div class=&#34;flex-even markdown-inner&#34;&gt;&#xA;    &lt;img src=&#34;https://opguides.info/nonfree/character/skate.avif&#34; alt=&#34;skate&#34; /&gt;&lt;/p&gt;&#xA;&lt;p class=&#34;attribution &#34;&gt;&#xA;    Art by &lt;a href=&#34;https://www.instagram.com/awesome_o.possum&#34;&gt;awesome_o.possum (Instagram)&lt;/a&gt; Character owned by Vega.&#xA;  &lt;/div&gt;&#xA;&#xA;  &lt;div class=&#34;flex-even markdown-inner&#34;&gt;&#xA;    &lt;div class=&#34;tip &#34;&gt;&#xA;    This is still a dumping ground for things I want to write about later, nothing of substance is here yet, sorry about that&#xA;&lt;/div&gt;&#xA;&#xA;  &lt;/div&gt;&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;[TODO] speed vs Velocity vs Acceleration, classical vs relative&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://opguides.info/xkcd/Exposure_chart-xkcd.svg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Radiocarbon_dating&#34;&gt;Radiocarbon dating&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Cosmic_microwave_background&#34;&gt;Cosmic Microwave Background&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Natural_nuclear_fission_reactor&#34;&gt;Natural nuclear fission reactor&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=7pSqk-XV2QM&#34;&gt;How Kodak Exposed The Atomic Bomb (Veritasium)&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/programming/algorithms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/programming/algorithms/</guid>
      <description>&lt;h1 id=&#34;chapter-15---discrete-math-algorithms-data-structures-and-not-sucking-at-programming-&#34;&gt;&#xA;  Chapter 15 - Discrete Math, Algorithms, Data Structures, and Not Sucking at Programming ™*&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chapter-15---discrete-math-algorithms-data-structures-and-not-sucking-at-programming-&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;brute-force-algorithms&#34;&gt;&#xA;  Brute Force Algorithms&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#brute-force-algorithms&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;backtracking&#34;&gt;&#xA;  Backtracking&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#backtracking&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;[TODO] &lt;a href=&#34;https://en.wikipedia.org/wiki/Directed_acyclic_graph&#34;&gt;Directed Acyclic Graphs&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;[TODO] &lt;a href=&#34;https://en.wikipedia.org/wiki/Finite-state_machine&#34;&gt;Finite State Machines&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;[TODO] e-graphs? &lt;a href=&#34;https://egraphs-good.github.io&#34;&gt;https://egraphs-good.github.io&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;[TODO] &lt;a href=&#34;http://courses.csail.mit.edu/6.851/&#34;&gt;http://courses.csail.mit.edu/6.851/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;[TODO]  &lt;a href=&#34;https://www.algorithm-archive.org/contents/tree_traversal/tree_traversal.html&#34;&gt;&amp;lsquo;Tree Traversal&amp;rsquo; on Algorithm Archive&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;divide-and-conquer&#34;&gt;&#xA;  Divide and Conquer&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#divide-and-conquer&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;master-theorem&#34;&gt;&#xA;  Master Theorem&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#master-theorem&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h2 id=&#34;decrease-and-conquer&#34;&gt;&#xA;  Decrease and Conquer&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#decrease-and-conquer&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;branch-and-bound&#34;&gt;&#xA;  Branch and Bound&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#branch-and-bound&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;kernelization&#34;&gt;&#xA;  Kernelization&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#kernelization&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;caching&#34;&gt;&#xA;  Caching&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#caching&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;*&lt;strong&gt;With some complexity analysis too.&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;[TODO]&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.mattkeeter.com/blog/2021-03-01-happen/&#34;&gt;https://www.mattkeeter.com/blog/2021-03-01-happen/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/programming/bestpractices/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/programming/bestpractices/</guid>
      <description>&lt;h1 id=&#34;chapter-11---best-practices&#34;&gt;&#xA;  Chapter 11 - Best Practices&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chapter-11---best-practices&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;div class=&#34;quote [Hunor Karamán @ hex22.org](https://hex22.org/)&#34;&gt;&#xA;&lt;p&gt;&#xA;    &lt;h3 id=&#34;manifesto&#34;&gt;&#xA;  Manifesto&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#manifesto&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;Everything should be a tool.&lt;/strong&gt; A tool transforms data without adding to its source limitations. It&amp;rsquo;s a function: returns an output for a given input.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;A great tool is &lt;a href=&#34;https://are.na/alex-singh/ambient-product-design&#34;&gt;ambient&lt;/a&gt;.&lt;/strong&gt; It should disappear and flow through your actions. You should never need it because it&amp;rsquo;s always at your hands. You should never ignore it because it&amp;rsquo;s never in your way.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Tools should be adaptable, changeable and personalisable&lt;/strong&gt;. If a tool does not perfectly fit your needs, you should be able to change, mix or remove its parts.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Data should be reusable, text-editable, human-readable.&lt;/strong&gt; Produces a higher chance that (1.) is passed.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Tools should be lightweight, available and timeless.&lt;/strong&gt; Computing power or internet speed shouldn&amp;rsquo;t be the limitation for most tasks. It works in the past and in the future.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;quote Devine Lu Linvega&#34;&gt;&#xA;&lt;p&gt;&#xA;    &amp;ldquo;Only through open sources, open standards, human-readable formats and their independencies, might they survive this fleeting age of self-destructing informatics.&amp;rdquo;&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/programming/codecont/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/programming/codecont/</guid>
      <description>&lt;h1 id=&#34;this-page-is-being-removed&#34;&gt;&#xA;  THIS PAGE IS BEING REMOVED&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#this-page-is-being-removed&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;part-3-more-advanced-high-level&#34;&gt;&#xA;  Part 3, more advanced high level&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#part-3-more-advanced-high-level&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Modify the original python program to support a pretty CLI input in a pretty way to make entries and visualize the data collected, parallelize some things, finally add a config file using YAML&lt;/p&gt;&#xA;&lt;h2 id=&#34;part-4-getting-our-toes-wet-with-embedded-systems&#34;&gt;&#xA;  Part 4, getting our toes wet with embedded systems&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#part-4-getting-our-toes-wet-with-embedded-systems&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Finally, let&amp;rsquo;s go back and add a com port to the C code and send data to an Arduino (can be simulated) and a TFT to display the currently active task and time elapsed.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/programming/codeintro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/programming/codeintro/</guid>
      <description>&lt;h1 id=&#34;chapter-10---lets-write-some-code&#34;&gt;&#xA;  Chapter 10 - Let&amp;rsquo;s write some Code&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chapter-10---lets-write-some-code&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;div class=&#34;tip &#34;&gt;&#xA;    Hello! If you&amp;rsquo;re here, you should know you&amp;rsquo;re on a deprecated page. All work has now been refocused on getting the new programming intro (Chapter 10 in the menu bar) to being much, much better than this page ever was.&#xA;&lt;/div&gt;&#xA;&lt;h2 id=&#34;starting-minimal&#34;&gt;&#xA;  Starting Minimal&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#starting-minimal&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;code-is-mostly-math&#34;&gt;&#xA;  Code is mostly math&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#code-is-mostly-math&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;Here&amp;rsquo;s the thing: Code is mostly math. If you&amp;rsquo;re anything like me, you probably just went &lt;strong&gt;ugggggghhhhhhh&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/programming/compilers/commands/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/programming/compilers/commands/</guid>
      <description>&lt;h1 id=&#34;commands&#34;&gt;&#xA;  Commands&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#commands&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;script&gt;&#xA;    document.getElementById(&#34;compilersMenu&#34;).open = true;&#xA;&lt;/script&gt;&#xA;&lt;p&gt;[TODO]&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/programming/compilers/conclusion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/programming/compilers/conclusion/</guid>
      <description>&lt;h1 id=&#34;conclusion&#34;&gt;&#xA;  Conclusion&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#conclusion&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;script&gt;&#xA;    document.getElementById(&#34;compilersMenu&#34;).open = true;&#xA;&lt;/script&gt;&#xA;&lt;p&gt;[TODO]&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/programming/compilers/conditionals/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/programming/compilers/conditionals/</guid>
      <description>&lt;h1 id=&#34;conditionals&#34;&gt;&#xA;  Conditionals&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#conditionals&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;script&gt;&#xA;    document.getElementById(&#34;compilersMenu&#34;).open = true;&#xA;&lt;/script&gt;&#xA;&lt;p&gt;[TODO]&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/programming/compilers/generation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/programming/compilers/generation/</guid>
      <description>&lt;h1 id=&#34;code-generation&#34;&gt;&#xA;  Code Generation&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#code-generation&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;script&gt;&#xA;    document.getElementById(&#34;compilersMenu&#34;).open = true;&#xA;&lt;/script&gt;&#xA;&lt;p&gt;As I said earlier, there is no way that you can write a proper compiler on your own, due to the amount of work involved.&lt;/p&gt;&#xA;&lt;p&gt;But new languages are invented by individual people all the time. How is this possible? The answer is, they use a backend framework or library for this part.&lt;/p&gt;&#xA;&lt;p&gt;This is the part where the Intermediate Representation (IR) comes it. It is determined by the library being used, which means the language itself can be abstracted away. Just convert any syntax you&amp;rsquo;re doing to that IR.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/programming/compilers/intermezzo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/programming/compilers/intermezzo/</guid>
      <description>&lt;h1 id=&#34;intermezzo&#34;&gt;&#xA;  Intermezzo&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#intermezzo&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;script&gt;&#xA;    document.getElementById(&#34;compilersMenu&#34;).open = true;&#xA;&lt;/script&gt;&#xA;&lt;p&gt;At this point, we have something that is ugly looking, but seems like a real compiler! After all, it does the four stages as promised:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Lexing: the splitting of whitespace and division of tokens&lt;/li&gt;&#xA;&lt;li&gt;Parsing: the creation of the syntax tree based on ordering of operations&lt;/li&gt;&#xA;&lt;li&gt;Translation: a no-op, because the syntax tree is good enough&lt;/li&gt;&#xA;&lt;li&gt;Code Generation: Python &amp;ldquo;machine code&amp;rdquo; as valid infix math, or a JIT library running routines&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;But still, you can&amp;rsquo;t really call this a langauge. Even aside from Turing Completeness, it&amp;rsquo;s really missing some basic features: variables, flow control and other math operations.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/programming/compilers/intro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/programming/compilers/intro/</guid>
      <description>&lt;h1 id=&#34;chapter-22---custom-languages&#34;&gt;&#xA;  Chapter 22 - Custom Languages&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chapter-22---custom-languages&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;script&gt;&#xA;    document.getElementById(&#34;compilersMenu&#34;).open = true;&#xA;&lt;/script&gt;&#xA;&lt;p&gt;Some people like playing around with new programming languages, or concepts in Programming Language Theory (PLT). In order to do this outside of pure mathematics, anyone who does will have to learn how to write a compiler for their new language.&lt;/p&gt;&#xA;&lt;p&gt;Unfortunately, compilers are some of the most complex pieces of software out there, along with operating system kernels. Especially when talking about a common compiler for well-established language, there is no way a single guide on the internet can teach you how to write one.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/programming/compilers/lexing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/programming/compilers/lexing/</guid>
      <description>&lt;h1 id=&#34;lexical-analysis&#34;&gt;&#xA;  Lexical analysis&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#lexical-analysis&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;script&gt;&#xA;    document.getElementById(&#34;compilersMenu&#34;).open = true;&#xA;&lt;/script&gt;&#xA;&lt;p&gt;The transformation of source code text into a series of &lt;em&gt;tokens&lt;/em&gt; is the first task. Much like words in a sentence, each token has a specific meaning that will be used by later phases. It is this meaning that is being captured, while the exact formatting or other details of the text itself are stripped away.&lt;/p&gt;&#xA;&lt;p&gt;In our calculator, &lt;em&gt;lexing&lt;/em&gt; (as it is called for short) is just one operation: &lt;code&gt;line.split()&lt;/code&gt;. That&amp;rsquo;s it.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/programming/compilers/parsing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/programming/compilers/parsing/</guid>
      <description>&lt;h1 id=&#34;syntax-analysis&#34;&gt;&#xA;  Syntax analysis&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#syntax-analysis&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;script&gt;&#xA;    document.getElementById(&#34;compilersMenu&#34;).open = true;&#xA;&lt;/script&gt;&#xA;&lt;p&gt;Our syntax analysis phase, or &amp;ldquo;parsing&amp;rdquo;, is basically a no-op in the current version. This is possible because, thanks to our stack having a &amp;ldquo;guard zero&amp;rdquo; at the bottom, there is really no such thing as a program with only valid tokens that is invalid syntax.&lt;/p&gt;&#xA;&lt;p&gt;This makes it a very rare language indeed.&lt;/p&gt;&#xA;&lt;p&gt;Since we are doing math in a specific order of operations, it would be easy to make this into a tree. Each leaf is a number, and each middle node is an operator.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/programming/compilers/prelude/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/programming/compilers/prelude/</guid>
      <description>&lt;h1 id=&#34;prelude-a-reverse-polish-notation-calculator&#34;&gt;&#xA;  Prelude: A Reverse Polish Notation Calculator&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#prelude-a-reverse-polish-notation-calculator&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;script&gt;&#xA;    document.getElementById(&#34;compilersMenu&#34;).open = true;&#xA;&lt;/script&gt;&#xA;&lt;p&gt;In order to get a footing, we&amp;rsquo;ll start with an example: a calculator that uses postfix operator notation, sometimes called &amp;ldquo;reverse polish notation.&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;In this calculator, all arguments are placed onto a stack. Whenever an operator occurs, it pops values off the stack at that point, performs the operation, and pushes the answer back on.&lt;/p&gt;&#xA;&lt;p&gt;All operations are binary, so they take two operands from the stack and replace it with one result. To simplify matters, if the stack is has only one operand on it when an operator is called, the other operand is zero.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/programming/compilers/subroutines/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/programming/compilers/subroutines/</guid>
      <description>&lt;h1 id=&#34;subroutines&#34;&gt;&#xA;  Subroutines&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#subroutines&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;script&gt;&#xA;    document.getElementById(&#34;compilersMenu&#34;).open = true;&#xA;&lt;/script&gt;&#xA;&lt;p&gt;[TODO]&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/programming/compilers/translation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/programming/compilers/translation/</guid>
      <description>&lt;h1 id=&#34;syntax-directed-translation&#34;&gt;&#xA;  Syntax-Directed Translation&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#syntax-directed-translation&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;script&gt;&#xA;    document.getElementById(&#34;compilersMenu&#34;).open = true;&#xA;&lt;/script&gt;&#xA;&lt;p&gt;This stage is where we get an opportunity to modify and restructure the tree from a syntax point of view, into a semantic point of view.&lt;/p&gt;&#xA;&lt;p&gt;To avoid &amp;ldquo;How to Draw an Owl Step 2: Finish the Owl&amp;rdquo;, we will continue with the interpteter theme for the moment. Instead of figuring out all the analyses required, let&amp;rsquo;s ask: what intermediate representation can be interpreted by Python?&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/programming/compilers/variables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/programming/compilers/variables/</guid>
      <description>&lt;h1 id=&#34;variables&#34;&gt;&#xA;  Variables&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#variables&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;script&gt;&#xA;    document.getElementById(&#34;compilersMenu&#34;).open = true;&#xA;&lt;/script&gt;&#xA;&lt;p&gt;[TODO]&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/programming/data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/programming/data/</guid>
      <description>&lt;h1 id=&#34;chapter-15---data-encodings-compression-etc&#34;&gt;&#xA;  Chapter 15½ - Data, Encodings, Compression, etc.&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chapter-15---data-encodings-compression-etc&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;When you write code, you&amp;rsquo;ll inevitably be working with input and output of some sort - even if it&amp;rsquo;s just text. This is &lt;em&gt;always&lt;/em&gt; more complicated than it seems. For example, text processing is easy, right?&lt;/p&gt;&#xA;&lt;p&gt;🚫, 🅘🄣&amp;rsquo;s 🇳ot.&lt;/p&gt;&#xA;&lt;p&gt;Even text encoding is a massive pain, unless you can ensure you only need to (and do) process basic ASCII characters, that is.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/programming/ethics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/programming/ethics/</guid>
      <description>&lt;h1 id=&#34;chapter-11---ethics--copyright&#34;&gt;&#xA;  Chapter 11½ - Ethics &amp;amp; Copyright&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chapter-11---ethics--copyright&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Programming is awesome. If you get into creative coding, you&amp;rsquo;ll be able to use it to make art. You&amp;rsquo;ll likely use it to automate tasks you find boring. If you&amp;rsquo;re like me, you might use it to make your own website or start to make products you intend to sell. That&amp;rsquo;s great. But there are a few things you need to consider as what you make becomes more professional. If you&amp;rsquo;re just making something for you and a few friends, don&amp;rsquo;t worry about it- hack it together and have fun. But as you start making things for a business or that something impact systems that are deeply meaningful in someone&amp;rsquo;s life, you need to be careful.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/programming/fixxingissuses/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/programming/fixxingissuses/</guid>
      <description>&lt;h1 id=&#34;chapter-13---fixing-issues--debugging&#34;&gt;&#xA;  Chapter 13 - Fixing Issues &amp;amp; Debugging&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chapter-13---fixing-issues--debugging&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Alright, so your code/electronics/computer/life was working fine just a second ago, and now it&amp;rsquo;s just not working at all. Take a deep breath, and relax. Let&amp;rsquo;s work though this.&lt;/p&gt;&#xA;&lt;h1 id=&#34;-grab-a-rubber-duck&#34;&gt;&#xA;  🦆 Grab a rubber duck&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-grab-a-rubber-duck&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;This won&amp;rsquo;t always be applicable, but assuming it&amp;rsquo;s a system- code, or electronics, or a math problem, something that can be analyzed - explain it. Out loud. To a rubber duck. If it&amp;rsquo;s code, do so line by line. if it&amp;rsquo;s electronics, go connection by connection. Don&amp;rsquo;t assume anything is working, just drop all assumptions and find the problem.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/programming/funcprog/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/programming/funcprog/</guid>
      <description>&lt;h1 id=&#34;chapter-20---&#34;&gt;&#xA;  Chapter 20 - (((())(()((()(()))))))&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chapter-20---&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;!-- https://koka-lang.github.io/koka/doc/index.html + Lisp, Haskell, and Futhark--&gt;&#xA;&lt;h2 id=&#34;what-is-functional-programming&#34;&gt;&#xA;  What is Functional Programming?&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#what-is-functional-programming&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;iframe width=&#34;100%&#34; height=&#34;500&#34; src=&#34;https://www.youtube.com/embed/0if71HOyVjY&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;&#xA;&lt;p&gt;Most of the programming languages in this section up until now have been &lt;em&gt;imperative&lt;/em&gt; programming languages. Programs are a series of instructions: do this, then do that, then do the other thing.&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;Functional&lt;/em&gt; programming languages are another type of language. Like math, they simply define sets, relationships, and then have a process for doing things based on &amp;ldquo;answering questions&amp;rdquo; or &amp;ldquo;getting to a result&amp;rdquo;.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/programming/game/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/programming/game/</guid>
      <description>&lt;h1 id=&#34;chapter-21---game-programming--design&#34;&gt;&#xA;  Chapter 21 - Game Programming &amp;amp; Design&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chapter-21---game-programming--design&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;!-- I&#39;ve been using Unity lately, for working in VR chat. It pretty much sucks, but I can also see how it&#39;s easy in some ways? I don&#39;t think it&#39;s the best to focus on, but I lack the experiance to say &#34;If you want to make something original, use X&#34; --&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.gameuidatabase.com/index.php&#34;&gt;https://www.gameuidatabase.com/index.php&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.riotgames.com/en/urf-academy/curriculum-guide&#34;&gt;https://www.riotgames.com/en/urf-academy/curriculum-guide&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=LpEdZbUdDe4&amp;amp;list=PL_xRyXins848jkwC9Coy7B4N5XTOnQZzz&#34;&gt;COMP4300 - Game Programming (David Churchill)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;engines--frameworks&#34;&gt;&#xA;  Engines &amp;amp; Frameworks&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#engines--frameworks&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;both-2d-and-3d&#34;&gt;&#xA;  Both 2d and 3d&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#both-2d-and-3d&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://godotengine.org/features&#34;&gt;Godot&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/programming/gitcicd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/programming/gitcicd/</guid>
      <description>&lt;h1 id=&#34;16---git-testing-ci-and-cd&#34;&gt;&#xA;  16 - Git, Testing, CI, and CD&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#16---git-testing-ci-and-cd&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;testing&#34;&gt;&#xA;  Testing&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#testing&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;@jnesselr replying to @alicegoldfuss (Nov 13, 2018)&#xA;+----------------------------------------------------+&#xA;|Me: *does major refactor*                           |&#xA;|Tests: ✓                                            |&#xA;|Me: I don&amp;#39;t believe you                             |&#xA;+----------------------------------------------------+&#xA;[Suspended User]&#xA;+----------------------------------------------------+&#xA;|Me: *deliberately breaks something, just to be sure*|&#xA;|Tests: ✓                                            |&#xA;|Me: oh no                                           |&#xA;+----------------------------------------------------+&#xA;@boo_radley&#xA;+----------------------------------------------------+&#xA;|Me: *changes nothing*                               |&#xA;|Tests: ✗                                            |&#xA;|Me: oh no                                           |&#xA;+----------------------------------------------------+&#xA;[Suspended User]&#xA;+----------------------------------------------------+&#xA;|Me: *runs tests again*                              |&#xA;|Tests: ✔                                            |&#xA;|Me: oh no no no                                     |&#xA;+----------------------------------------------------+&#xA;src: https://twitter.com/boo_radley/status/1062513898954391552&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;software-testing&#34;&gt;&#xA;  Software Testing&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#software-testing&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;unit tests, integration tests, performance testing - &lt;a href=&#34;https://github.com/sharkdp/hyperfine&#34;&gt;https://github.com/sharkdp/hyperfine&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/programming/guiprog/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/programming/guiprog/</guid>
      <description>&lt;h1 id=&#34;chapter-18---graphical-programming&#34;&gt;&#xA;  Chapter 18 - Graphical Programming&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chapter-18---graphical-programming&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;[TODO] &lt;a href=&#34;https://badd10de.dev/notes/graphics-programming.html&#34;&gt;Graphics Programming on badd10de.dev&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Let&amp;rsquo;s start in a way that&amp;rsquo;s incredibly simple, and abstract away all the hard stuff at first by using a tool kit called &amp;lsquo;Processing&amp;rsquo;, which is available under that name from the community repo in arch. The default IDE that comes with it is awful to work in though, so go ahead and open up VSCode and grab the &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=Tobiah.language-pde&#34;&gt;Processing Language&lt;/a&gt; add on, then in VSCode open up a new workspace folder and make a file called processing.pde, then open VSCode&amp;rsquo;s command pallete (CTRL+Shift+P) and run &amp;lsquo;Processing: create task file&amp;rsquo;, after that you&amp;rsquo;ll want to open the tasks.json file and change the &lt;code&gt;command:&lt;/code&gt; line to have &lt;code&gt;&amp;quot;command&amp;quot;: &amp;quot;/usr/bin/processing-java&amp;quot;,&lt;/code&gt; after that you can easily try new code just by re-building project the project with CTRL+Shift+B&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/programming/intro/prog0intro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/programming/intro/prog0intro/</guid>
      <description>&lt;h1 id=&#34;chapter-100---lets-write-some-code&#34;&gt;&#xA;  Chapter 10.0 - Let&amp;rsquo;s Write Some Code&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chapter-100---lets-write-some-code&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;script&gt;&#xA;    document.getElementById(&#34;codeMenu&#34;).open = true;&#xA;&lt;/script&gt;&#xA;&lt;p&gt;Knowing how to program will give you deep control over the most advanced tool mankind has ever made: The computer. More over, because we use computers as extensions of our own minds (and as a collective, with the Internet) it will literally expand your ability to process information as you&amp;rsquo;re no longer limited to the inputs and computation systems that other programmers have built for you.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/programming/intro/prog10/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/programming/intro/prog10/</guid>
      <description>&lt;h1 id=&#34;chapter-1010---the-rest-of-the-owl&#34;&gt;&#xA;  Chapter 10.10 - The rest of the Owl&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chapter-1010---the-rest-of-the-owl&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;script&gt;&#xA;    document.getElementById(&#34;codeMenu&#34;).open = true;&#xA;&lt;/script&gt;&#xA;&lt;p&gt;Okay, so, we&amp;rsquo;ve gone over types and functions and operations and all of that jazz, but there are a few little pieces that have been left out, so, let&amp;rsquo;s do some of them rapid fire&lt;/p&gt;&#xA;&lt;h2 id=&#34;multiple-files&#34;&gt;&#xA;  Multiple files&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#multiple-files&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;In any language, once your code gets big enough, working in one really long file is going to become a clusterfuck.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/programming/intro/prog1math/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/programming/intro/prog1math/</guid>
      <description>&lt;h1 id=&#34;chapter-101---its-math&#34;&gt;&#xA;  Chapter 10.1 - It&amp;rsquo;s math?&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chapter-101---its-math&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;script&gt;&#xA;    document.getElementById(&#34;codeMenu&#34;).open = true;&#xA;&lt;/script&gt;&#xA;&lt;p&gt;Let&amp;rsquo;s talk math and look at some real code.&lt;/p&gt;&#xA;&lt;p&gt;I think a lot of people &lt;strong&gt;over&lt;/strong&gt; estimate how hard it is to handle even the more complex math. As an example, let&amp;rsquo;s estimate π. (You should never actually do this in code - just use a library which will provide a pre-computed value of pi anywhere you need it!) To do this, we need a formula. Now, I don&amp;rsquo;t know about you, but I don&amp;rsquo;t have a formula for estimating pi in my head, but look at &lt;a href=&#34;https://en.wikipedia.org/wiki/Approximations_of_%CF%80&#34;&gt;Wikipedia&lt;/a&gt; we can use Madhava&amp;rsquo;s method, which looks like this:&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/programming/intro/prog2turtle/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/programming/intro/prog2turtle/</guid>
      <description>&lt;h1 id=&#34;chapter-102---turtles-all-the-way-down&#34;&gt;&#xA;  Chapter 10.2 - &lt;span style=&#34;text-shadow:3px 3px 0 #254522, 6px 6px 0 #9D9765,9px 9px 0 #49614D, 11px 11px 0 #1a302e;&#34;&gt;Turtles&lt;/span&gt; All The Way Down&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chapter-102---turtles-all-the-way-down&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;script&gt;&#xA;    document.getElementById(&#34;codeMenu&#34;).open = true;&#xA;&lt;/script&gt;&#xA;&lt;!-- TODO: I want to rewrite all of this intro to use Zig instead of C. I think Rust is a bit too complicated to start with, and C itself is easy enough to teach at first but becomes a massive pain as soon as header files, make, etc. get introduced. Plus, because the types people actually use (uint8_t, etc.) are behind &lt;stdint.h&gt; it&#39;s just way more confusing to deal with byte widths than necessary. Nim would also be an option, but its too close to Python in syntax, which would be confusing and defeat the purpose of trying to teach low level stuff. As a bonus, https://gamercade.io/blog/gamercade-0-1-0/ looks pretty swick as a way to actually make a project, as I did want to do some sort of fantasy console thing but didn&#39;t want do it in python (pyxel?), or LUA (ruling out the normal suspects). As an extra bonus, Zig will still lets us bind to C later and use it&#39;s build system, avoiding at least some of the mess when I do, ultimately, have to teach C over in the Low Level Chapte --&gt;&#xA;&lt;h2 id=&#34;low-level-and-high-level-programming&#34;&gt;&#xA;  Low Level and High Level Programming&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#low-level-and-high-level-programming&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;There are two types of programming, high level and low level.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/programming/intro/prog3tools/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/programming/intro/prog3tools/</guid>
      <description>&lt;h1 id=&#34;chapter-103---getting-tools&#34;&gt;&#xA;  Chapter 10.3 - Getting Tools&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chapter-103---getting-tools&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;script&gt;&#xA;    document.getElementById(&#34;codeMenu&#34;).open = true;&#xA;&lt;/script&gt;&#xA;&lt;p&gt;As mentioned before, you&amp;rsquo;ll be learning both Python and C. This means we need to get the tools necessary for working with each. If you&amp;rsquo;re following along with OpGuides as a whole and have Linux setup, this will be easy. If you&amp;rsquo;re on Windows it&amp;rsquo;s not &lt;em&gt;hard&lt;/em&gt; but there are some annoying steps we&amp;rsquo;ll need to jump through.&lt;/p&gt;&#xA;&lt;h2 id=&#34;getting-code-to-run&#34;&gt;&#xA;  Getting Code To Run&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#getting-code-to-run&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;book-tabs&#34;&gt;&lt;input type=&#34;radio&#34; class=&#34;toggle&#34; name=&#34;tabs-Tools&#34; id=&#34;tabs-Tools-0&#34; checked=&#34;checked&#34; /&gt;&#xA;  &lt;label for=&#34;tabs-Tools-0&#34;&gt;Arch Linux&lt;/label&gt;&#xA;  &lt;div class=&#34;book-tabs-content markdown-inner&#34;&gt;&lt;p&gt;Run &lt;code&gt;pacman -Syu gcc python&lt;/code&gt;, then you&amp;rsquo;ll want to grab &lt;code&gt;visual-studio-code-bin&lt;/code&gt; from the AUR. You should have &lt;code&gt;yay&lt;/code&gt; installed, so this should be as simple as &lt;code&gt;yay -S visual-studio-code-bin&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/programming/intro/prog4comments/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/programming/intro/prog4comments/</guid>
      <description>&lt;h1 id=&#34;104---getting-to-know-our-tools&#34;&gt;&#xA;  10.4 - Getting to know our tools&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#104---getting-to-know-our-tools&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;script&gt;&#xA;    document.getElementById(&#34;codeMenu&#34;).open = true;&#xA;&lt;/script&gt;&#xA;&lt;p&gt;Okay, we now have the ability to run and debug code but we still need set up and go over a few features in your text editor (VSCode) to make things easier. Plus, now&amp;rsquo;s a good time to introduce comments and indentation and why they matter in code.&lt;/p&gt;&#xA;&lt;p&gt;This may seem a bit out of order, but at this stage there&amp;rsquo;s problems with prioritizing how much to learn about the tool versus the craft. To equate to something more tangible, it&amp;rsquo;s like learning the skills to design and craft a wood working project verses learning to use a saw. Ultimately, you need to do both. While, yes, learning the tool will come with experience, you still need to know enough not to cut your fingers off - or, in this case, to not waste a ton of time and think programming is overly difficult and tedious.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/programming/intro/prog5two/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/programming/intro/prog5two/</guid>
      <description>&lt;h1 id=&#34;chapter-105---leaning-two-languages-at-once&#34;&gt;&#xA;  Chapter 10.5 - Leaning Two Languages At Once&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chapter-105---leaning-two-languages-at-once&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;script&gt;&#xA;    document.getElementById(&#34;codeMenu&#34;).open = true;&#xA;&lt;/script&gt;&#xA;&lt;p&gt;Back in the  &#xA;&#xA;&#xA;&#xA;&#xA;  &#xA;&#xA;&#xA;&lt;a  href=&#34;https://opguides.info/engineering/linux/hardware/&#34;   class=&#34;book-btn &#34;&gt;&#xA;  Into The Hardware&#xA;&lt;/a&gt;&#xA; section we looked at some of the inner workings of the CPU, and briefly looked into how the CPU only understands &lt;em&gt;machine code&lt;/em&gt;, 1&amp;rsquo;s and 0&amp;rsquo;s that make up individual instructions. Now, there&amp;rsquo;s absolutely no reason to ever think at that low of a level, the lowest you should ever care to look at, as mentioned there, is assembly. However, Assembly is still awful to write and read. While if you stare at the following for long enough you may be able to figure out what  what it does&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/programming/intro/prog6types/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/programming/intro/prog6types/</guid>
      <description>&lt;h1 id=&#34;chapter-106---whats-a-type--going-down-rabbit-holes&#34;&gt;&#xA;  Chapter 10.6 - What&amp;rsquo;s a Type? &amp;amp; Going Down Rabbit Holes&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chapter-106---whats-a-type--going-down-rabbit-holes&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;script&gt;&#xA;    document.getElementById(&#34;codeMenu&#34;).open = true;&#xA;&lt;/script&gt;&#xA;&lt;p&gt;Alright, I&amp;rsquo;ll cut to the chase. When programming, you&amp;rsquo;ll need to deal with types. On the last page, there was a mix of types, &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;uint8_t&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt;, and &lt;code&gt;char&lt;/code&gt; all make appearances. While the exact names of each type and what they&amp;rsquo;re capable of may vary a bit from language to language and platform to platform understanding the basics here will help you out a lot, so, let&amp;rsquo;s start with the C language and look at &lt;code&gt;int&lt;/code&gt;s&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/programming/intro/prog7logic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/programming/intro/prog7logic/</guid>
      <description>&lt;h1 id=&#34;chapter-107---ｌｏｇｉｃ--functions&#34;&gt;&#xA;  Chapter 10.7 - ＬＯＧＩＣ &amp;amp; Functions&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chapter-107---%ef%bd%8c%ef%bd%8f%ef%bd%87%ef%bd%89%ef%bd%83--functions&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;script&gt;&#xA;    document.getElementById(&#34;codeMenu&#34;).open = true;&#xA;&lt;/script&gt;&#xA;&lt;div class=&#34;tip &#34;&gt;&#xA;    For this page, If you see that lines are ending with a semicolon, &lt;code&gt;;&lt;/code&gt;, then that code is C. If they don&amp;rsquo;t, it&amp;rsquo;s Python.&#xA;&lt;/div&gt;&#xA;&lt;h2 id=&#34;would-you-like-to-speak-to-an-operator&#34;&gt;&#xA;  Would you like to speak to an Operator?&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#would-you-like-to-speak-to-an-operator&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;The very first thing to understand before we can get to more intersting things is the list of operations available to us.&lt;/p&gt;&#xA;&lt;p&gt;This includes the operations your used to - addition, subtraction, etc. - as well as bit-wise operations and comparisons.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/programming/intro/prog8oo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/programming/intro/prog8oo/</guid>
      <description>&lt;h1 id=&#34;108---data-structures-object-orientation--encodings&#34;&gt;&#xA;  10.8 - Data Structures, Object Orientation, &amp;amp; Encodings&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#108---data-structures-object-orientation--encodings&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;script&gt;&#xA;    document.getElementById(&#34;codeMenu&#34;).open = true;&#xA;&lt;/script&gt;&#xA;&lt;h2 id=&#34;why-not-just-structs&#34;&gt;&#xA;  Why not just structs?&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#why-not-just-structs&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;C is a very low level language and only lets you make &lt;code&gt;struct&lt;/code&gt;s. Structs are fine, but they have some annoying properties, particularly in separating data from how you interact with it, making it difficult to make complex abstractions where you can be sure that data that should only be internal to a structure isn&amp;rsquo;t exposed, or that the data can&amp;rsquo;t be changed in an invalid way.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/programming/intro/prog9stdlib/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/programming/intro/prog9stdlib/</guid>
      <description>&lt;h1 id=&#34;chapter-109---the-standard-library&#34;&gt;&#xA;  Chapter 10.9 - The Standard Library&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chapter-109---the-standard-library&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;script&gt;&#xA;    document.getElementById(&#34;codeMenu&#34;).open = true;&#xA;&lt;/script&gt;&#xA;&lt;p&gt;Yunno&amp;rsquo; how you&amp;rsquo;ve been using &lt;code&gt;print()&lt;/code&gt; and &lt;code&gt;printf()&lt;/code&gt; all over the place? Well, those are functions, but where are they from?!&lt;/p&gt;&#xA;&lt;p&gt;Well, for C, in &lt;code&gt;printf()&lt;/code&gt;&amp;rsquo;s case it&amp;rsquo;s pretty obvious - you can&amp;rsquo;t use it unless you have &lt;code&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/code&gt; at the top of the file, so, clearly your computer has that file, and the associated &lt;code&gt;.c&lt;/code&gt; file, somewhere. And frankly? That&amp;rsquo;s good enough for the moment. Later, you may need to learn how to download C libraries from the Internet. But for now, just know you have many more than &lt;code&gt;&amp;lt;stdio.h&amp;gt;&lt;/code&gt; available, which cover a lot of basic functionality.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/programming/intro/progendreal/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/programming/intro/progendreal/</guid>
      <description>&lt;h1 id=&#34;1011---real-programs&#34;&gt;&#xA;  10.11 - &amp;ldquo;Real&amp;rdquo; Programs&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#1011---real-programs&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;script&gt;&#xA;    document.getElementById(&#34;codeMenu&#34;).open = true;&#xA;&lt;/script&gt;&#xA;&lt;p&gt;So, you now &lt;em&gt;mostly&lt;/em&gt; know all the fundamental building blocks used to write basically everything out there.&lt;/p&gt;&#xA;&lt;p&gt;But&amp;hellip; not really?&lt;/p&gt;&#xA;&lt;p&gt;The thing is, almost any program of moderate complexity is going to rely on libraries to provide extra, (hopefully) well tested, performant, hard to write functionality. Plus, most programs don&amp;rsquo;t exist in a vacuum: you may need to hook into a database, send packets over the internet, check for malicious user input, write to files, encrypt data, use an API to interact with a game engine, or even write in a different language and call one language&amp;rsquo;s code from another.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/programming/languages/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/programming/languages/</guid>
      <description>&lt;h1 id=&#34;appendix-3---programming-languages&#34;&gt;&#xA;  Appendix 3 - Programming Languages&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#appendix-3---programming-languages&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;!-- https://renato.athaydes.com/posts/unison-revolution.html , https://cyberscript.dev, https://github.com/Vexu/bog, https://github.com/m-ender/hexagony (https://hexagony.net), https://www.roc-lang.org, https://koka-lang.github.io/koka/doc/index.html, https://ianthehenry.com/posts/why-janet/, + Matlab, Dart, F#, R, Scheme Powershell, Smalltalk, Swift, scala, GLSL/HLSL, V, VHDL, Verilog, https://github.com/rxi/fe https://www.youtube.com/watch?v=pq1k5USZZ9A, https://github.com/berry-lang/berry, https://github.com/dbohdan/embedded-scripting-languages, + Editors and language servers: https://github.com/kneasle/sapling --&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&#xA;&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2&#xA;&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;🥚&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;🥚&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;🐔&lt;/span&gt;; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;🥚&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;){&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#a6e22e&#34;&gt;hatch&lt;/span&gt;(&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;🥚&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;Why hello,&lt;/p&gt;&#xA;&lt;p&gt;If you&amp;rsquo;ve found this page, it&amp;rsquo;s likely your curiosity is getting the better of you and you&amp;rsquo;re killing time gawking at the weird syntax and features of a variety of languages. I know I have been guilty of doing so.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/programming/lifeofcode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/programming/lifeofcode/</guid>
      <description>&lt;h1 id=&#34;chapter-12---life-of-code&#34;&gt;&#xA;  Chapter 12 - Life Of Code&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chapter-12---life-of-code&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;building&#34;&gt;&#xA;  Building&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#building&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;the-c-build-process&#34;&gt;&#xA;  The C Build Process&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#the-c-build-process&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;speech  &#34;&gt;&#xA;    &lt;p&gt;&#xA;        I&amp;rsquo;m going to jump right in here, so things are going to be a bit brutal to understand for a bit. I&amp;rsquo;ll break things down, but I need to give the high-level view first!&#xA;    &lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;p&gt;As we saw way back &#xA;&#xA;&#xA;&#xA;&#xA;  &#xA;&#xA;&#xA;&lt;a  href=&#34;https://opguides.info/engineering/linux/hardware/cpu/&#34;   class=&#34;book-btn &#34;&gt;&#xA;  Hardware→CPU&#xA;&lt;/a&gt;&#xA;, your computer doesn&amp;rsquo;t understand instructions like &lt;code&gt;printf()&lt;/code&gt;, so ultimately the code you write has to get turned into something your computer understands. There are multiple ways this can happen:&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/programming/lowlvl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/programming/lowlvl/</guid>
      <description>&lt;h1 id=&#34;chapter-14---low-level-programming&#34;&gt;&#xA;  Chapter 14 - Low Level Programming&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chapter-14---low-level-programming&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;iframe width=&#34;100%&#34; height=&#34;450&#34; src=&#34;https://www.youtube.com/embed/Snr113r5ocY&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://cheatography.com/ashlyn-black/cheat-sheets/c-reference/&#34;&gt;Ashlyn Black&amp;rsquo;s C Cheat Sheet&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://badd10de.dev/notes/c-programming.html&#34;&gt;&amp;lsquo;C Programming&amp;rsquo; on badd10de.dev&lt;/a&gt;&lt;/p&gt;&#xA;&lt;!-- https://www.youtube.com/playlist?list=PL3GWPKM6L17H0RyU2o7p9gCnepjSTaHia looks decent --&gt;&#xA;&lt;h2 id=&#34;why-c&#34;&gt;&#xA;  Why C?&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#why-c&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;This chapter of OpGuides will be mostly C, but, why? Well, there&amp;rsquo;s only really a few options for learning low level programming that make sense to start with. C, C++, Rust are the &amp;lsquo;big three&amp;rsquo; that come to mind. C is what is most popular&lt;footnote&gt;&amp;hellip;because it&amp;rsquo;s old and everything already uses it. There are dozens of ways it&amp;rsquo;s horribly fucked, like the lack of protected data/functions, the ability to write in memory bugs that are hard to catch and lead to security problems as they&amp;rsquo;re not found at compile time, the inconsistency in implementations of the standard library, &amp;hellip; I could go on. If you&amp;rsquo;re not doing low level dev, don&amp;rsquo;t use C. If you&amp;rsquo;re doing low level dev and have the choice to not use C, don&amp;rsquo;t use C.&lt;/footnote&gt;. Its spec is small, it&amp;rsquo;s been kept minimal, and it&amp;rsquo;s got a ton of tools to help you learn. It forces you to know the low level, which in this case is great. C++ has grown into a behemoth where anything can be done in about a dozen different ways and each development team is effectively writing in their own dialect of C++. Rust, while better than C for a million reasons, (see the footnote) also sort of assumes you have experience in language like C before using it, so&amp;hellip; the answer to why C is because we sorta have to.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/programming/optimization/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/programming/optimization/</guid>
      <description>&lt;h1 id=&#34;chapter-17---optimization&#34;&gt;&#xA;  Chapter 17 - Optimization&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chapter-17---optimization&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;If you&amp;rsquo;re here, you&amp;rsquo;re probably able to at least write some code. Is it perfect code? Probably not - but what code is.&lt;/p&gt;&#xA;&lt;p&gt;Good code should be:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Malleable - You should be able to change it if requirements change.&lt;/li&gt;&#xA;&lt;li&gt;Simple - It should be easy to read&lt;/li&gt;&#xA;&lt;li&gt;Portable - It should be able to run &lt;em&gt;almost&lt;/em&gt; everywhere&lt;/li&gt;&#xA;&lt;li&gt;Performant - It should go fast&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Unfortunately, those things are a bit at odds with each other. Hyper-optimized, fast code often requires breaking though layers of abstractions and doing things in ways that are far from simple, making assumptions about what hardware it will be running on, and using subtle details to eek out extra performance - trading knowledge about how the code will run under the current understanding with flexibility should the requirements change.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/programming/shaders/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/programming/shaders/</guid>
      <description>&lt;h1 id=&#34;chapter-19---shaders&#34;&gt;&#xA;  Chapter 19 - Shaders&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chapter-19---shaders&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://opguides.info/common/arrow.svg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;span class=&#34;best &#34;&gt;&#xA;    &lt;img src=&#34;https://opguides.info/nonfree/logo/best.svg&#34; width=&#34;20em&#34; style=&#34;margin: -10px 0px 0px 0px; margin-bottom: -10px;&#34;/&gt;&#xA;    &lt;a href=&#34;https://thebookofshaders.com&#34;&gt;The Book Of Shaders&lt;/a&gt;&#xA;&lt;/span&gt;&lt;/br&gt;&lt;/p&gt;&#xA;&lt;span class=&#34;best &#34;&gt;&#xA;    &lt;img src=&#34;https://opguides.info/nonfree/logo/best.svg&#34; width=&#34;20em&#34; style=&#34;margin: -10px 0px 0px 0px; margin-bottom: -10px;&#34;/&gt;&#xA;    &lt;a href=&#34;https://www.shadertoy.com/view/Md23DV&#34;&gt;GLSL 2D Tutorials by Vug&lt;/a&gt;&#xA;&lt;/span&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://opguides.info/common/arrowthis.svg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&#xA;&lt;!-- TODO https://www.youtube.com/watch?v=i5yK56XFbrU&amp;list=PLOunECWxELQQwayE8e3WjKPJsTGKknJ8w --&gt;&#xA;&lt;details &gt;&lt;summary&gt;Here for VRChat Stuff?&lt;/summary&gt;&#xA;  &lt;div class=&#34;markdown-inner&#34;&gt;&#xA;    &lt;p&gt;Cool! VR chat is a really neat platform to work with and it&amp;rsquo;s really fun to be able to hold or walk around your art. Unfortunately, there&amp;rsquo;s some added complexity that comes with handling VR, Unity, and even just 3D stuff outright that, all together, takes a hot minute to build up to. That said, there are some particularly good resources for getting started in VR Chat and Unity development that aren&amp;rsquo;t available for anything else. So, after you&amp;rsquo;ve gone though the above links, in no particular order, I recommend looking at:&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/signals/aiml/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/signals/aiml/</guid>
      <description>&lt;h1 id=&#34;chapter-33---fine-ill-talk-about-ai&#34;&gt;&#xA;  Chapter 33 - Fine, I&amp;rsquo;ll talk about AI&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chapter-33---fine-ill-talk-about-ai&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;div class=&#34;tip &#34;&gt;&#xA;    This chapter is very much a work in progress, and is really more of just a list of topics, despite how much content there appears to be. I&amp;rsquo;d really like to have code examples under each concept as well, as otherwise it&amp;rsquo;s like reading a fucking math textbook from hell.&lt;/br&gt;&lt;/br&gt;In the meantime, please see &lt;a href=&#34;https://sebastianraschka.com/blog/2021/dl-course.html#l01-introduction-to-deep-learning&#34;&gt;https://sebastianraschka.com/blog/2021/dl-course.html#l01-introduction-to-deep-learning&lt;/a&gt; for a good intro to Deep Learning&#xA;&lt;/div&gt;&#xA;&lt;p&gt;[TODO] &lt;a href=&#34;https://www.asimovinstitute.org/author/fjodorvanveen/&#34;&gt;https://www.asimovinstitute.org/author/fjodorvanveen/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/signals/commsys/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/signals/commsys/</guid>
      <description>&lt;h1 id=&#34;29---communication-systems&#34;&gt;&#xA;  29 - Communication Systems&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#29---communication-systems&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;div class=&#34;tip &#34;&gt;&#xA;    This chapter is currently just a stub. I&amp;rsquo;m currently taking a comm systems class at Uni and will be putting the results of my notes as well as external resources into here at some point.&#xA;&lt;/div&gt;&#xA;&lt;h2 id=&#34;what-is-a-communication-system&#34;&gt;&#xA;  What is a communication system?&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#what-is-a-communication-system&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;For the purposes of this page, we&amp;rsquo;re talking about systems that transmit signals over a medium- so that might be your voice over the air, a radio signal though the vacuum of space, or ultrasonic waves under the water as sonar.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/signals/compvision/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/signals/compvision/</guid>
      <description>&lt;h1 id=&#34;chapter-32---computer-vision&#34;&gt;&#xA;  Chapter 32 - Computer Vision&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chapter-32---computer-vision&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;This page is still pretty empty, in the meantime, check out &lt;a href=&#34;https://pjreddie.com/courses/computer-vision/&#34;&gt;The Ancient Secrets of Computer Vision&lt;/a&gt; by Joseph Redmon and Ali Farhadi&lt;/p&gt;&#xA;&lt;div class=&#34;speech  &#34;&gt;&#xA;    &lt;p&gt;&#xA;        &lt;p&gt;As an aside, Joseph Redmon is an absolute genius, and the main brain behind &lt;a href=&#34;https://arxiv.org/abs/1506.02640&#34;&gt;You Only Look Once: Unified, Real-Time Object Detection&lt;/a&gt; which sort of revolutionized the computer vision with AI space, yet, his resume looks &lt;a href=&#34;https://pjreddie.com/static/Redmon%20Resume.pdf&#34;&gt;like this&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;This is to say the man is an absolute badass and I could not be more confident in my recommendation of his course&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/signals/controlsys/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/signals/controlsys/</guid>
      <description>&lt;h1 id=&#34;31---control-systems&#34;&gt;&#xA;  31 - Control Systems&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#31---control-systems&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;What are control systems? Well, the easiest way to answer that is to list the things control systems typically do:&lt;/p&gt;&#xA;&lt;h2 id=&#34;what-can-control-systems-do&#34;&gt;&#xA;  What Can Control Systems do?&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#what-can-control-systems-do&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;amplify-an-input&#34;&gt;&#xA;  Amplify an input:&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#amplify-an-input&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;book-columns flex flex-wrap&#34;&gt;&#xA;&#xA;  &lt;div class=&#34;flex-even markdown-inner&#34;&gt;&#xA;    &lt;img src=&#34;https://opguides.info/eng/amptheory.png&#34; class=&#34;center&#34;&gt;&#xA;&#xA;  &lt;/div&gt;&#xA;&#xA;  &lt;div class=&#34;flex-even markdown-inner&#34;&gt;&#xA;    &lt;strong&gt;ex:&lt;/strong&gt; Pluck a tiny string on a guitar, get an earth shaking output from the speaker&#xA;  &lt;/div&gt;&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h3 id=&#34;reduce-the-complexity-of-user-input-or-change-its-location&#34;&gt;&#xA;  Reduce the complexity of user input or change its location&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#reduce-the-complexity-of-user-input-or-change-its-location&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;book-columns flex flex-wrap&#34;&gt;&#xA;&#xA;  &lt;div class=&#34;flex-even markdown-inner&#34;&gt;&#xA;    &lt;img src=&#34;https://opguides.info/eng/simplifyinputtheory.png&#34; class=&#34;center&#34;&gt;&#xA;&#xA;  &lt;/div&gt;&#xA;&#xA;  &lt;div class=&#34;flex-even markdown-inner&#34;&gt;&#xA;    &lt;p&gt;&lt;strong&gt;ex:&lt;/strong&gt; Floor button on an elevator- you don&amp;rsquo;t need to input a height off the ground for what floor you want to be on, nor do you need to enter values to compensate for how quickly it should get to its max speed or how fast it should slow down.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/signals/dsp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/signals/dsp/</guid>
      <description>&lt;h1 id=&#34;30---digital-signal-processing&#34;&gt;&#xA;  30 - Digital Signal Processing&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#30---digital-signal-processing&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;img src=&#34;https://opguides.info/eng/dspoverview.svg&#34;&gt;&#xA;&lt;hr&gt;&#xA;&lt;span class=&#34;best &#34;&gt;&#xA;    &lt;img src=&#34;https://opguides.info/nonfree/logo/best.svg&#34; width=&#34;20em&#34; style=&#34;margin: -10px 0px 0px 0px; margin-bottom: -10px;&#34;/&gt;&#xA;    &lt;a href=&#34;https://ccrma.stanford.edu/~jos/sasp/&#34;&gt;Spectral Audio Signal Processing&lt;/a&gt; by JULIUS O. SMITH III at the Center for Computer Research in Music and Acoustics (CCRMA)&#xA;&lt;/span&gt;&#xA;&lt;p&gt;&lt;span style=&#34;clear: both;&#34;&gt;&lt;/span&gt;&lt;/p&gt;&#xA;&lt;img style=&#34;float: left;height:20em;&#34; src=&#34;https://opguides.info/nonfree/art/mushrooms1_small.avif&#34;&gt;&#xA;&lt;p&gt;&lt;span style=&#34;clear: both;overflow: auto;&#34;&gt;&lt;/span&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;sampling--quantization&#34;&gt;&#xA;  Sampling &amp;amp; Quantization&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#sampling--quantization&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Lorem sed risus ultricies tristique. Vestibulum sed arcu non odio euismod lacinia at. Felis bibendum ut tristique et egestas quis ipsum suspendisse ultrices. Accumsan tortor posuere ac ut consequat semper viverra nam libero. Adipiscing elit ut aliquam purus sit amet luctus venenatis lectus. Et malesuada fames ac turpis. Vitae proin sagittis nisl rhoncus mattis rhoncus urna neque. In fermentum posuere urna nec tincidunt praesent semper. Aliquet bibendum enim facilisis gravida. Aliquam vestibulum morbi blandit cursus risus at ultrices mi tempus.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/signals/sigandsys/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/signals/sigandsys/</guid>
      <description>&lt;h1 id=&#34;28---signals--systems&#34;&gt;&#xA;  28 - Signals &amp;amp; Systems&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#28---signals--systems&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;When I took ECEN 304 Signals &amp;amp; Systems Ⅰ with the fantastic Dr. Sayood at UNL I remember how in awe I was at how he concisely he managed to describe the core idea of this class. While I can not hope to convey the same level of brilliance or inspiration, I do hope that my poor attempt at mimicking his introduction to the course may be of value:&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/wrappingup/cheat/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/wrappingup/cheat/</guid>
      <description>&lt;h1 id=&#34;appendix-3---cheat-sheets-and-quick-info&#34;&gt;&#xA;  Appendix 3 - Cheat Sheets and quick info&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#appendix-3---cheat-sheets-and-quick-info&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;!-- TODO: Add licences (or emjois to represent them?) for all libraries. Probably put them in a table like the VSTs --&gt;&#xA;&lt;h2 id=&#34;electrical-part-tables&#34;&gt;&#xA;  Electrical Part Tables&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#electrical-part-tables&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;[TODO]&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;package types&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;reading specs&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;datasheets&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;nice-libraries--resources&#34;&gt;&#xA;  Nice Libraries &amp;amp; Resources&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#nice-libraries--resources&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;please-dont-use-electron&#34;&gt;&#xA;  Please don&amp;rsquo;t use Electron&amp;hellip;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#please-dont-use-electron&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ultralight-ux/Ultralight&#34;&gt;Ultralight&lt;/a&gt; - &amp;ldquo;Next-generation HTML renderer for apps and games&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ImVexed/muon/tree/master&#34;&gt;Muon&lt;/a&gt; - &amp;ldquo;GPU based Electron on a diet&amp;rdquo;&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/wrappingup/job/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/wrappingup/job/</guid>
      <description>&lt;h1 id=&#34;appendix-5---getting-a-job-in-engineering&#34;&gt;&#xA;  Appendix 5 - Getting a Job in Engineering&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#appendix-5---getting-a-job-in-engineering&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;hr&gt;&#xA;&lt;div style=&#34;display: block; width: 84%; text-align: center;margin-left: auto; margin-right: auto;&#34;&gt;&#xA;&lt;p style=&#34;font-size:1.2em;color:#aaa;&#34;&gt;&lt;i&gt;&lt;b&gt;&#34;&lt;/b&gt;Recently, I was asked if I was going to fire an employee who made a mistake that cost the company $600,000. No, I replied, I just spent $600,000 training him. Why would I want somebody to hire his experience?&lt;b&gt;&#34;&lt;/b&gt;&lt;/i&gt;&#xA;&lt;/div&gt;&#xA;&lt;div style=&#34;display: block; width: 80%; margin-left: auto; margin-right: auto;&#34;&gt;&#xA;&lt;p style=&#34;font-size:.85em;color:#aaa;&#34;&gt;- Thomas John Watson Sr., IBM&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;[TODO] &lt;strong&gt;literally this entire page is TODO&lt;/strong&gt;. I&amp;rsquo;m just making it as a place to dump links for now. Eventually I&amp;rsquo;d like to talk about why most interview processes suck, the high no-response rate, certifications vs degree, how to write a résumé, cover letter, start up culture, non-compete clauses, fake glassdoor listings, Linked in BS, all the things.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/wrappingup/latex/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/wrappingup/latex/</guid>
      <description>&lt;h1 id=&#34;appendix-6---hahahugoshortcode157s0hbhb--markdown&#34;&gt;&#xA;  Appendix 6 - &#xA;&lt;link rel=&#34;stylesheet&#34; href=&#34;https://opguides.info/katex/katex.min.css&#34; /&gt;&#xA;&lt;script defer src=&#34;https://opguides.info/katex/katex.min.js&#34;&gt;&lt;/script&gt;&#xA;&lt;script defer src=&#34;https://opguides.info/katex/auto-render.min.js&#34; onload=&#34;renderMathInElement(document.body);&#34;&gt;&lt;/script&gt;&lt;span&gt;&#xA;  \(\LaTeX\)&#xA;&lt;/span&gt;&#xA; &amp;amp; Markdown&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#appendix-6---hahahugoshortcode157s0hbhb--markdown&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;like-the-kink&#34;&gt;&#xA;  Like the kink?&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#like-the-kink&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;span&gt;&#xA;  \(\LaTeX\)&#xA;&lt;/span&gt;&#xA;, pronounced Lay-Tech, is a document writing and formatting &amp;rsquo;language&amp;rsquo; that acts pretty different from MS Word. It&amp;rsquo;s primarily used for writing fancy math equations, academic, journal, or conference papers, as such, you might &lt;em&gt;have&lt;/em&gt; to use it at some point to conform to one standard or another (like IEEE).&lt;/p&gt;&#xA;&lt;p&gt;As an example of what &lt;span&gt;&#xA;  \(\LaTeX\)&#xA;&lt;/span&gt;&#xA; formatting looks like, check this equation out:&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/wrappingup/resources/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/wrappingup/resources/</guid>
      <description>&lt;h1 id=&#34;appendix-4---other-great-resources&#34;&gt;&#xA;  Appendix 4 - Other Great Resources&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#appendix-4---other-great-resources&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;conventions&#34;&gt;&#xA;  Conventions&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#conventions&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;div class=&#34;book-columns flex flex-wrap&#34;&gt;&#xA;&#xA;  &lt;div class=&#34;flex-even markdown-inner&#34;&gt;&#xA;    &lt;p&gt;&lt;a href=&#34;https://www.emfcamp.org&#34;&gt;https://www.emfcamp.org&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://media.ccc.de/&#34;&gt;https://media.ccc.de/&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;  &lt;/div&gt;&#xA;&#xA;  &lt;div class=&#34;flex-even markdown-inner&#34;&gt;&#xA;    &#xA;  &lt;/div&gt;&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;news-sites&#34;&gt;&#xA;  News Sites&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#news-sites&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://serializer.io/&#34;&gt;Serializer.io&lt;/a&gt; (Aggregate of Hacker News, Ars, Reddit, Macrumors, and Lobste.rs )&lt;/p&gt;&#xA;&lt;div class=&#34;book-columns flex flex-wrap&#34;&gt;&#xA;&#xA;  &lt;div class=&#34;flex-even markdown-inner&#34;&gt;&#xA;    &lt;p&gt;&lt;a href=&#34;https://news.ycombinator.com/&#34;&gt;Hacker News&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://hackaday.com/&#34;&gt;Hackaday&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://slashdot.org&#34;&gt;Slashdot&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;  &lt;/div&gt;&#xA;&#xA;  &lt;div class=&#34;flex-even markdown-inner&#34;&gt;&#xA;    &lt;p&gt;&lt;a href=&#34;https://snapzu.com/&#34;&gt;Snopzu&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://n-o-d-e.news/&#34;&gt;https://n-o-d-e.news/&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;  &lt;/div&gt;&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;forums&#34;&gt;&#xA;  Forums&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#forums&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;div class=&#34;book-columns flex flex-wrap&#34;&gt;&#xA;&#xA;  &lt;div class=&#34;flex-even markdown-inner&#34;&gt;&#xA;    &lt;p&gt;&lt;a href=&#34;https://lobste.rs/&#34;&gt;https://lobste.rs/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://stackoverflow.com/&#34;&gt;https://stackoverflow.com/&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;  &lt;/div&gt;&#xA;&#xA;  &lt;div class=&#34;flex-even markdown-inner&#34;&gt;&#xA;    &#xA;  &lt;/div&gt;&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;http://textfiles.com/&#34;&gt;http://textfiles.com/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://glitch.com/&#34;&gt;https://glitch.com/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;learning-linux&#34;&gt;&#xA;  Learning Linux&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#learning-linux&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://linuxjourney.com&#34;&gt;https://linuxjourney.com&lt;/a&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;youtube&#34;&gt;&#xA;  Youtube&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#youtube&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;div class=&#34;book-columns flex flex-wrap&#34;&gt;&#xA;&#xA;  &lt;div class=&#34;flex-even markdown-inner&#34;&gt;&#xA;    &lt;p&gt;&lt;a href=&#34;https://www.youtube.com/channel/UCJ0-OtVpF0wOKEqT2Z1HEtA&#34;&gt;ElectroBoom&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/channel/UCG7yIWtVwcENg_ZS-nahg5g&#34;&gt;CNLohr&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/channel/UCvrLvII5oxSWEMEkszrxXEA&#34;&gt;N-O-D-E&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/channel/UClcE-kVhqyiHCcjYwcpfj9w&#34;&gt;LiveOverflow&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/channel/UCBa659QWEk1AI4Tg--mrJ2A&#34;&gt;Tom Scott&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;  &lt;/div&gt;&#xA;&#xA;  &lt;div class=&#34;flex-even markdown-inner&#34;&gt;&#xA;    &lt;p&gt;&lt;a href=&#34;https://www.youtube.com/channel/UCtM5z2gkrGRuWd0JQMx76qA&#34;&gt;bigclive&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>https://opguides.info/engineering/wrappingup/wrappingup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/wrappingup/wrappingup/</guid>
      <description>&lt;h1 id=&#34;chapter-46---where-to-go-from-here&#34;&gt;&#xA;  Chapter 46 - Where To Go From Here?&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chapter-46---where-to-go-from-here&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Hey, so, you made it. I can&amp;rsquo;t give you a degree. But, I&amp;rsquo;m proud of you. Even if you skipped a chapter or two, you still put in work to improve yourself and learn something. That&amp;rsquo;s cool.&lt;/p&gt;&#xA;&lt;p&gt;But, maybe you&amp;rsquo;re thinking &lt;strong&gt;&amp;ldquo;Okay, but now what?&amp;rdquo;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;integrating-other-interests&#34;&gt;&#xA;  Integrating other interests&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#integrating-other-interests&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;There&amp;rsquo;s a lot more to life than computers and code and electronics and making and hacking. Sure, all of these things are fun, but you&amp;rsquo;ll burn yourself out if they&amp;rsquo;re all you do, especially if you&amp;rsquo;re just coding for code&amp;rsquo;s sake instead of making something cool.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Engineering</title>
      <link>https://opguides.info/engineering/engineering/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://opguides.info/engineering/engineering/</guid>
      <description>&lt;p&gt; &lt;div class=&#34;speech  &#34;&gt;&#xA;    &lt;p&gt;&#xA;        Hey There! My name is Vega, and I&amp;rsquo;m glad you&amp;rsquo;re here!&#xA;    &lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;/p&gt;&#xA;&lt;style&gt;&#xA;    #canvasContainer&#xA;    {&#xA;        display:absolute;&#xA;        position: fixed;&#xA;        height: 100%;&#xA;        z-index: -1;&#xA;    }&#xA;    #canvas&#xA;    {&#xA;        height: 100%&#xA;        width: 100%&#xA;        position:fixed;&#xA;        display: block;&#xA;        top: 0;&#xA;        left: 0;&#xA;    }&#xA;&lt;/style&gt;&#xA;&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/sat/0.8.0/SAT.min.js&#34;&gt;&lt;/script&gt;&#xA;&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.11.0/underscore-min.js&#34;&gt;&lt;/script&gt;&#xA;&lt;script&gt;&#xA;var canvas = document.querySelector(&#39;#backcanvas&#39;);&#xA;fitToContainer(canvas);&#xA;function fitToContainer(canvas){&#xA;  // Make it visually fill the positioned parent&#xA;  canvas.style.width =&#39;100%&#39;;&#xA;  canvas.style.height=&#39;100%&#39;;&#xA;  // ...then set the internal size to match&#xA;  canvas.width  = canvas.offsetWidth;&#xA;  canvas.height = canvas.offsetHeight;&#xA;}&#xA;&lt;/script&gt;&#xA;&lt;script&gt;&#xA;var scriptActiveSlime=!0,decay_slime=.1,sensor_slime=4,abs_speed_slime=3,angle_part_slime=.25;function resize(){SlimeMold.init(window.innerWidth,window.innerHeight)}!function(e){var t,i,s,o,a,n,r,l,h,d=4e3,f=.5,p=0,c=angle_part_slime,m=&#34;#2222&#34;,v=&#34;#345&#34;,u=.3,_=!1,M=[];var y=function(e,t){return new SAT.Vector(e,t)};function w(e,t,i,s,o){this.pos=y(e,t),this.radius=i,this.alfa=s,this.lambda=o,this.pheromone=0,this._latest=y(0,0),this.setSpeed(abs_speed_slime)}w.prototype={setSpeed:function(e){this._speed=y(Math.cos(this.alfa),Math.sin(this.alfa)),this._speedL=y(Math.cos(this.alfa+this.lambda),Math.sin(this.alfa+this.lambda)),this._speedR=y(Math.cos(this.alfa-this.lambda),Math.sin(this.alfa-this.lambda)),this._speed.scale(e),this._speedL.scale(e),this._speedR.scale(e)},update:function(e){2==e?this.alfa-=this.lambda:1==e&amp;&amp;(this.alfa+=this.lambda),0==!e&amp;&amp;this.setSpeed(abs_speed_slime),this.pos.x+this._speed.x&lt;0?this.pos.x+=n:this.pos.x+this._speed.x&gt;n?this.pos.x-=n:this.pos.y+this._speed.y&lt;0?this.pos.y+=r:this.pos.y+this._speed.y&gt;r&amp;&amp;(this.pos.y-=r),this._latest=this.pos.clone(),this.pos.add(this._speed)}};var g,S=[],x=0,b=0,L=20;function A(e,t,i){if(!(e&lt;0||t&lt;0||e&gt;=n||t&gt;=r)){var s=e-1&lt;0?n-1:e-1,o=(e+1)%(n-1),a=t-1&lt;0?r-1:t-1,l=(t+1)%(r-1);S[s][a]+=f*i,S[s][t]+=f*i,S[s][l]+=f*i,S[o][a]+=f*i,S[o][t]+=f*i,S[o][l]+=f*i,S[e][a]+=f*i,S[e][l]+=f*i,S[e][t]+=i}}function C(e){if(scriptActiveSlime)for(var t=-L;t&lt;L;t++)for(var i=-L;i&lt;L;i++)A(Math.floor(e.touches[0].clientX+t),Math.floor(e.touches[0].clientY+i),1e7)}function E(e){if(scriptActiveSlime){for(var t=-L;t&lt;L;t++)for(var i=-L;i&lt;L;i++)A(e.clientX+t-l,e.clientY+i-h,1e7);_=!0}}function R(){_=!1}function P(e){if(scriptActiveSlime&amp;&amp;_)for(var t=-L;t&lt;L;t++)for(var i=-L;i&lt;L;i++)A(e.clientX+t-l,e.clientY+i-h,1e7)}function I(e,t){l=Math.floor(.5*(window.innerWidth-e)),h=Math.floor(.5*(window.innerHeight-t)),n=i.width=e,r=i.height=t,o.width=n,o.height=r,s=i.getContext(&#34;2d&#34;),a=o.getContext(&#34;2d&#34;)}function T(){W(n,r)}function W(e,t){M=[],numParticles=d,I(e,t),function(e){var t,i;for(t=0;t&lt;e;t++)i=new w(Math.floor(n*Math.random()),Math.floor(r*Math.random()),u,2*Math.PI*Math.random(),c*Math.PI),M.push(i)}(d),function(){g=1;for(var e=0,t=0;e&lt;n;e+=g,t++){S[t]=[],x=t;for(var i=0,s=0;i&lt;n;i+=g,s++)S[t][s]=0,b=s}}()}function z(e){var t=Math.floor((e.pos.x+sensor_slime*e._speed.x)/g)%x;t&lt;0&amp;&amp;(t+=x);var i=Math.floor((e.pos.y+sensor_slime*e._speed.y)/g)%b;i&lt;0&amp;&amp;(i+=b);var s=Math.floor((e.pos.x+sensor_slime*e._speedL.x)/g)%x;s&lt;0&amp;&amp;(s+=x);var o=Math.floor((e.pos.y+sensor_slime*e._speedL.y)/g)%b;o&lt;0&amp;&amp;(o+=b);var a=Math.floor((e.pos.x+sensor_slime*e._speedR.x)/g)%x;a&lt;0&amp;&amp;(a+=x);var n=Math.floor((e.pos.y+sensor_slime*e._speedR.y)/g)%b;n&lt;0&amp;&amp;(n+=b);var r=S[t][i],l=S[s][o],h=S[a][n];return l==h?!l&gt;=r?0:Math.floor(2*Math.random())+1:l&gt;h?l&gt;=r?1:0:h&gt;=r?2:0}e.SlimeMold={initCanvas:function(e,s){idContainerSlime=e+&#34;Container&#34;,t=e,i=document.getElementById(t),o=document.createElement(&#34;canvas&#34;),i.addEventListener(&#34;mousedown&#34;,E),i.addEventListener(&#34;mousemove&#34;,P),i.addEventListener(&#34;touchmove&#34;,C),i.addEventListener(&#34;mouseup&#34;,R),i.addEventListener(&#34;mouseout&#34;,R)},init:W,render:function e(){if(scriptActiveSlime){var t,i,l;angle_part_slime!=c&amp;&amp;(c=angle_part_slime,T()),s.save(),s.fillStyle=m,s.fillRect(0,0,n,r),s.restore();var h=Math.random();for(a.save(),a.globalCompositeOperation=&#34;destination-out&#34;,a.globalAlpha=1,a.fillRect(0,0,n,r),a.restore(),i=M.length,a.save(),a.fillStyle=a.strokeStyle=v,a.lineCap=a.lineJoin=&#34;round&#34;,a.lineWidth=0==p?u*(2+h):3*u*(2+h),a.beginPath(),t=0;t&lt;i;t++){var f=z(l=M[t]);l.update(f),a.moveTo(l.pos.x,l.pos.y),0==p?a.lineTo(l._latest.x,l._latest.y):1==p&amp;&amp;a.lineTo(l.pos.x,l.pos.y),A(Math.floor(l.pos.x/g)%x,Math.floor(l.pos.y/g)%b,1)}a.stroke(),a.restore(),s.drawImage(o,0,0),function(){for(var e=0,t=0;e&lt;n;e+=g,t++)for(var i=0,s=0;i&lt;n;i+=g,s++)S[t][s]=S[t][s]*decay_slime}(),numParticles!=d&amp;&amp;W(n,r),requestAnimationFrame(e)}},offset:I,refresh:T,toggleRenderShape:function(){return p=p?0:1}}}(window),SlimeMold.initCanvas(&#34;backcanvas&#34;),SlimeMold.init(window.innerWidth,window.innerHeight),requestAnimationFrame(SlimeMold.render),window.addEventListener(&#34;resize&#34;,resize);&#xA;&lt;/script&gt;&#xA;&lt;p&gt;I know there are plenty of tutorials and ways to learn online, be it on YouTube, SkillShare, or online classes provided for free by various universities. The difference here is I&amp;rsquo;ve tried to cut out the boring parts, make things a bit more entertaining than a textbook, and drenched the content in my own personal opinion that has been built up by my experiences. My views on things like what programming languages are bad or what hardware you should buy to learn on will be expressed directly and bluntly. This isn&amp;rsquo;t to say I won&amp;rsquo;t explain my reasoning, just that I&amp;rsquo;m not going to be apologetic when I say PHP, Java, Arduino (at least the 328p), and Windows 10 are trash - though I will still likely talk about all of these things.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
