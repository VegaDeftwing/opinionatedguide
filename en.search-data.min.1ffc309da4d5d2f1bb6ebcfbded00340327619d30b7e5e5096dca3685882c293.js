'use strict';(function(){const b={cache:!0};b.doc={id:'id',field:['title','content'],store:['title','href','section']};const a=FlexSearch.create('balance',b);window.bookSearchIndex=a,a.add({id:0,href:'/engineering/intro/community/',title:"Community",section:"Engineering",content:"‚Ö† - Community #  The only way to be successful in this journey is to make friends along the way. Some of this gets really, really difficult. You will get stuck. Having friends to help makes it possible. Find group chats on telegram, join IRC channels, get on some forums, and ask questions on Reddit. Working with people is a lot more fun and you\u0026rsquo;ll learn so much more.\nr/EngineeringStudents    -- While a small community of people you can talk to 1-on-1 is better, having inspiration each day can provide a huge boost to your motivation and creativity, so I recommend following some nerdy news sites. This also helps with staying current on the cutting edge and security issues. Some sites I use nearly daily to finding good new material are:\nHacker News\nHackaday.io\nHackster.io\nBleeping Computer\nMorning Cup Of Coding\n While much less active, I\u0026rsquo;ve found some of these to have great information as well:\nN-O-D-E\nPOC||GTFO\nDefcon Videos on YouTube    (There are many more links in Appendix A3 - \u0026lsquo;Other Great Resources\u0026rsquo;\nOh, and to mention it now\nxkcd #1954 Yes, there is always a relevant XKCD, and yes, you will always feel like everyone knows more than you. Don\u0026rsquo;t stress about asking stupid questions:\n Frequently in chats, whether telegram, IRC, slack, or discord, someone says something like this:\n Anyone know rust? Having an issue.\nHow that question is often read:\n Can someone to commit to being able to solve my problem with rust, spending as much time as necessary, without them even knowing what the actual problem is or if it\u0026rsquo;s even a rust problem?\nHopefully it\u0026rsquo;s clear why questions like this rarely result in direct answers.\n There are very few people who could be called experts in every facet of whatever is being asked Imposter syndrome is common Most people won\u0026rsquo;t write that blank check for time/help commitment  Instead, share:\n The goal - \u0026ldquo;Trying to query for a list of tags on a post\u0026rdquo; - See The XY Problem The problem - \u0026ldquo;I\u0026rsquo;m getting back these results\u0026rdquo; The expectation - \u0026ldquo;but it should be these results\u0026rdquo; Any context or previous research you\u0026rsquo;ve done If possible, a simplified example. 3v4l for php, jsfiddle for html/js/css, etc. are great, otherwise a paste site. What you\u0026rsquo;ve already tried  This allows anyone there to try to help. Many skills transfer well to other languages or platforms. At minimum, you might get an idea for something you haven\u0026rsquo;t tried yet. Sometimes you\u0026rsquo;ll even solve your own problem while narrowing down the simplest possible test case.\nOh, and don\u0026rsquo;t snark at well-intentioned answers. It\u0026rsquo;s rude and discourages participation.\n- https://bad.pet/q/   The technical community can be ruthless with it comes to expecting people to have \u0026lsquo;basic\u0026rsquo; knowledge sometimes, but don\u0026rsquo;t let it get to you. I do want to provide some general ideas that, while not universally, are generally shared among the engineering and surrounding community:\n‚Ö† - Any good solution is fast, easy to understand, and above all elegant.\n‚Ö° - Any task which can be automated should be - if a computer can do it faster than you then you shouldn\u0026rsquo;t do it by hand\n‚Ö¢ - Any problem that has been solved in a way that satisfies the above two rules should be looked at for reuse before reinventing the wheel\n‚Ö£ - Any question which has already been answered should not be left to a human to answer again.\n‚Ö§- All knowledge should be free‚Ä†\n‚Ä† within practicality, trade secrets are obviously a thing, and I\u0026rsquo;m not crazy. I mean like publicly funded research and what not. While the specifics of this rule vary amongst engineering types it is generally a core belief.\nOn the note of point ‚Ö¢\u0026hellip;\nThough the one I was stressing here was really ‚Ö£, you should always check the internet before asking in chat. It\u0026rsquo;s not that we\u0026rsquo;re being rude, it\u0026rsquo;s just a matter of courtesy. If you\u0026rsquo;re unsure of the answer or it\u0026rsquo;s validity in your case, by all means ask, but asking good questions, and only when necessary, will quickly help you make friends in chat much faster. Note, there is one exception: if chat is currently talking about something that you know don\u0026rsquo;t know about and it\u0026rsquo;s already relevant to the conversation, it\u0026rsquo;s totally reasonable to interject and ask for a super quick primer on what\u0026rsquo;s going on or a relevant link. This may seem obvious, but a good number of technical chats die because of exactly the aforementioned problems. (or gatekeeping, but that\u0026rsquo;s a whole different matter\u0026hellip;) so please don\u0026rsquo;t ask things a search engine can already answer (but don\u0026rsquo;t feel bad asking a question when the all mighty Google can\u0026rsquo;t)\nTLDR: RTFM \u0026amp; STFW http://www.catb.org/esr/faqs/smart-questions.html#rtfm\nFinally, and I can\u0026rsquo;t stress this enough, I think balancing your creativity among other interests and looking for ties between them can lead to more good than any of thing mentioned above. I enjoy playing music, reading, and writing, so I find inspiration in these media. There are countless electrical hardware and software tools that use hands on programming when playing music. In books I find ideas for what an author may have thought only futuristic when written. I never know when my mind will strike similar gold when writing for myself. Find a hobby and bend it to this as you go along. Like photography? Lean about the internals of a camera. Like cars? Look up how the ODB2 interface actually works. Nothing is magic and the internet will likely have answers and give you ways to apply this knowledge that you care about.\nIn general I\u0026rsquo;ve found site specific forms and Reddit to be the best platforms for most things, with some others finding their main following in other places though. For example I\u0026rsquo;m in a large technical chat group with Furries on Telegram and some open source tools still thrive on IRC. Also, if your reaction to that is \u0026ldquo;Furries? How can that be relevent?\u0026rdquo; Well, normally it\u0026rsquo;s not. Most of what we talk about is just normal engineering-y topics, but having something else in common helps. That said, there\u0026rsquo;s more cross over in any community than you might think:\nCustom protogen commission auction Now up ! watch the video for more detailshttps://t.co/TAeAPNtVEB\nauction link:https://t.co/Q7ZxERjZW5 pic.twitter.com/aq5iM2nOVE\n\u0026mdash; Expensive black cheese (@JtingF) January 11, 2020  No matter what you care about, know there\u0026rsquo;s a wide range of communities that would be thrilled to have you, and you can always combine what you learn here with any of the other interests you have to make the things your passionate about better!\n The maker and hacker communities tend to focus a lot on popularity and getting your name out there. While obivously it\u0026rsquo;s cool to do so, don\u0026rsquo;t let likes and followers be your motivation. Make cool things to make cool things, and people will come. The number one best thing to see on the internet is someone that is passionate about something sharing those passions. It\u0026rsquo;s better to have a dozen good friends that share those passions, than 25k followers that just go \u0026lsquo;oh, neat\u0026rsquo; anyway.\nPopularity doesn\u0026#39;t matter (1/2) pic.twitter.com/ae1VV2uocc\n\u0026mdash; üùß Wolfy Vero üùß (@Wonivero) October 17, 2020  Further reading #  (Seriously all of these are very good)\nHacker Spaces are Awesome! (YouTube, LiveOverflow)\nAssholes: A Probing Examination\nDeath to Bullshit (mirror)\nHacker-Laws (Github)\nProof of X\nHackerspaces [TODO] #  Building a Hackerspace\n"}),a.add({id:1,href:'/posts/whydidipay/',title:"Why did I pay to go to college?",section:"Blog",content:"Post originally published March 22 of 2021, date above represents most recent edit The Nebraska Union at UNL, photo by ensign_beedrill, CC BY-SA 2.0, via Wikimedia Commons I am currently a student at the University of Nebraska - Lincoln, where I study Computer and Electrical Engineering as a dual major. I have a serious passion for both of these subjects, which is why I am so incredibly frustrated at how negative my experience at UNL has been, especially in the classes that directly relate to my major. This frustration is a large part of why I started OpGuides, so I thought I\u0026rsquo;d share it with the world.\nThis article\u0026rsquo;s purpose is highlight the shortcomings of my college experience. While I am going to try to summarize each semester, there is no way I can possibly capture all of my daily struggles and frustrations or possibly mention all the great people that have helped me along the way. Nor can I possibly put into words the value of the friendships I have made, the joy that I\u0026rsquo;ve had at some university hosted events, and some of the amazing benefits that come with college that are not academic. I also can\u0026rsquo;t fully provide context about what was going on in my life or what personal achievements or projects I was working on at any given time. This is a huge span of time to try to sum up. Despite this, I hope their are some nuggets of wisdom you can extract. I\u0026rsquo;ve tried to pre-bake these nuggets for you as much as I could, if you don\u0026rsquo;t want the full story, you can jump straight the bulleted list of conclusions at the bottom of the page.\nAs I was previously employed by UNL as a Resident Assistant, the standard disclaimer of \u0026ldquo;The views expressed in this article are strictly my own. This article does not reflect the view of any of my employers, past, present, or future\u0026rdquo; applies.Furthermore, I may update this same article in the future. This may happen as I remember things from the past and as I finish up my time at UNL. 0 - The End of High School #  I hated high school. I never quite fit in with anyone, I was the class tech-nerd, openly bi, and not into sports at a school that lived and breathed sports. Still, I served my time and got though. While there, I took a dual credit class that transferred in for an English credit, with an amazing professor, Carolyn Nolte. I also took the ACT three times and got a 27 all three tries. (Fuck the ACT btw)\nBeing total garbage at foreign language, liking the experiences I\u0026rsquo;d had with Arduinos, and having a brother that was still perusing a degree in Mechanical Engineering at UNL, I choose to dual major Electrical and Computer Engineering.\n1 - Freshman, Fall \u0026lsquo;16 #  The story starts with move in, as I finally meet my roommate for the next year, though we\u0026rsquo;d already talked a bit on Facebook. We\u0026rsquo;re both CompE\u0026rsquo;s, and there\u0026rsquo;s actually a few other CompSci\u0026rsquo;s on the 7th floor with us. We\u0026rsquo;re all excited for college, have no idea where our classes are, and have no idea what the next few years will actually have in store.\nMe, freshman year, rocking some questionable long hair Freshman year feels like ancient history now, but some of it still stands out. A lot of stories, a lot of scars I earned as I learned to longboard so I could make it between my classes fast enough. As for classes:\n  C programming:\nPainfully slow, but it was also a 100 level course so ‚ïÆ(‚îÄ‚ñΩ‚îÄ)‚ï≠, my roommate was also taking the course and failed, but I got an A+. He partied, did stupid shit, and eventually dropped out, so I suppose it still served as a basic weed-out class, which I don\u0026rsquo;t necessarily see as a bad thing. That said, I do wish the class had gone a bit more in depth. I don\u0026rsquo;t think I ever wrote code that topped 100 lines in this class. Similarly, we never even used bit operations despite the class being C programming. A bit odd.\n  Interpersonal Skills\nI had to do some volunteering, where my \u0026lsquo;interpersonal skills\u0026rsquo; were tested by helping teach adults very basic math. Fun times. When talking about stereotypes the prof said I look like someone that smokes weed because of my (at the time) long hair, I got asked if I sold weed by students looking to buy after class.\n  Calc ‚Ö†\nTaught by a prof that seemed like he didn\u0026rsquo;t want to be there, and made frequent mistakes on the whiteboard. Fortunately my TA for the recesitation was, and I can\u0026rsquo;t stress this enough, amazing. Thank you Jessalyn Bolkema for making the class as good as you did, and for helping inspire me to see more beauty in math.\nIn Calc ‚Ö† I also had somebody put gum in my hair so bad that I had to get a hair cut. So, those beautiful locks you see above were short lived.\nThe biggest complaint I had from Calc ‚Ö† was the use of \u0026lsquo;WeBWorK\u0026rsquo;, auto-grading math quiz software. We were usually given unlimited attempts to get a 100% on the quizes; however, they were often mis-graded because the software is not great. Like, sometimes it would want   \\(\\frac{4}{3}\\)  or  \\(1.333333\\)  (with the higher precision answer,  \\(\\frac{4}{3}\\)  , not always being the correct answer, if you were wondering), seemingly at random. To say this was frustrating would be an understatement.\n  History of Rock\nGreat class, great prof, lots of fun. The tests got oddly specific, but whatever. About a year later I met up with the prof to put an accelerometer hooked up to an Arduino into the back of his guitar for controlling MIDI effects, but that\u0026rsquo;s about the most relevant thing to my majors that came of it.\n  The actual \u0026lsquo;college experience\u0026rsquo; was actually pretty good this semester. I only had to chop off one arm to pay for books with online codes attached that me prevented buying them used. Living with a roommate wasn\u0026rsquo;t quite as bad as people said it would be (still pretty much sucked)\nOh, the cazy preechers on campus were definitely a great way to round out the college experience.\n The cheering at 6:38ish is from when I kissed my BF in front of the homophobic asshat, good times. (Yes, the video is broken) There were many, many more times like this with different groups (This is \u0026lsquo;Brother Jed\u0026rsquo;, but \u0026lsquo;Pastor Tom\u0026rsquo; would swing by to be a douche regularly, and there were a few others too- I don\u0026rsquo;t at all think these people are reflective of Christianity, just a bunch of idiots.)\n2 - Freshman, Spring \u0026lsquo;17 #    Comp Sci ‚Ö°\nPretty hard, required a lot of late nights up programming, but the prof was really good. I may hate Java, but the class was done well. (Thanks Dr. Bourke!)\n  Unix Programming\nCompletely useless, I mean, even for a 1 credit hour class, it was so painfully basic that it was basically irreverent, It went over bash scripting but failed to explain any of the fundamentals of the *nix fs structure, what /sys and /dev are, etc. plus it lacked any meta programming like Makefiles and what not.\n  SciFi literature\nGreat class that I actually really enjoyed. Again, it made no difference for my major beside fullfilling a gen-ed requirement. I actually had a lot of fun in the class, but the prof was painfully awkward, to the point where one day I\u0026rsquo;m not 10000% sure I didn\u0026rsquo;t encounter an awkward Title IX-y situation when the prof told my at-the-time girlfriend and I that he had a dream about us. („Çú_„Çú;) like, excuse me, what the fuck.\n  I was dealing with quite a few personal issues this semester, which made the stress of Calc ‚Ö° and Physics ‚Ö† unbarable. I withdrew from Physics and got a C- in Calc‚Ö°, which meant I needed to retake it.\nThe reason I choose to drop Physics was two fold, for one, the class was my hardest and so made the most sense if I needed the lighter load, but the bigger reason? I couldn\u0026rsquo;t follow the lectures though the prof\u0026rsquo;s and TA\u0026rsquo;s accents. Very thick Russian and Chinese respectively, and it was just not going to work. The textbook cost a few of my remaining limbs and couldn\u0026rsquo;t be avoided for a online code, which I would later need to re-buy (thankfully only the online code since I had bought it before) when I took the class later.\n3 - Sophomore, Fall \u0026lsquo;17 #    Chem ‚Ö†\nNot really noteworthy, I found it difficult, as did most people as, if I recal correctly, the pass rate was abysmal. The prof was fine, the lab was fine, and everything was \u0026lsquo;fine\u0026rsquo;, just the content was fast paced and difficult. The final was a standardized American Chemical Society final, which I found oddly disconnected from the course and hard as hell, but I passed the class with a B and was able to move on with my life. I did find some complaints from when I took the class that I had expressed to a group of engineers:\n   There are 3 different books we need (Textbook, recestation book, lab book) all of which have related online materials and all of which require separate logins and access codes on different websites. All of these are separate from the actual course webpage. But, I can deal with that. What has me angry is this first prelab I just did on one of said websites. Multiple of the questions have no correct answer or multiple correct answers, one is worded in a way that doesn\u0026rsquo;t even make sense (despite the question they were trying to ask being obvious so I got it anyways), and yet another doesn\u0026rsquo;t even tell you how the answer should be formatted on the page (do I include units?).\n   Computer Organizaiton\nHo-boy, now we\u0026rsquo;re hitting the really what-the-fuck stuff. According to my record I passed this with a C+ and that\u0026rsquo;s the biggest grade inflation the world ever did see, most of the class got out with C\u0026rsquo;s after a similar curve that stopped them from outright failing. My grade on the first test- a whopping 27%, and the high was a 32% (iirc?). The prof, while the sweetest old man I have ever met in my life and I would happily spend hours with just talking to, had some sort of neurodegeneration disease and in his old age should not have been teaching. This meant that instead of having the prof teach, the TA\u0026rsquo;s picked up the slack. There were 5 TA\u0026rsquo;s I think? Only 1 really knew what he was doing though, and he showed up to class DRUNK a few times. I was actually really into learning about computer architecture before this class so sorta had a better idea of what I was doing than most, so for one of the TA-lead classes where the TA that knew what he was doing was too hungover to attend one of the other TA\u0026rsquo;s asked me to teach it. Just let that one sink in a little bit.\nEventually, the department got involved, a second prof was brought in to attempt to un-fuck things, but that went about as well as you\u0026rsquo;d think it would 3/4 though a semester, so they ended up just scaling the fuck out of our grades.\nThe other odd thing was the room where some of that class was taught- the desks were literally falling apart. One day I had to bring in a screw driver and I went around fixing everyone\u0026rsquo;s desks though out the lecture because the University wouldn\u0026rsquo;t.\n  Calc ‚Ö° (Redo)\nCalc ‚Ö° went better this time, I got though with a B+ and could move on with things. My TA for the class, Dylan McKnight, was amazing, despite the fact that I didn\u0026rsquo;t do well, I honestly can\u0026rsquo;t fault the instruction. Again, Dylan inspired me see the cool side of math, and he was pretty cool himself, fully understanding of the multiple times I came into class bloodied up from biffing it on my longboard on my way into class. being attacked by chainsaw wielding bears.\n  Power and Politics in America\nSurprisingly chill for being in Fall of \u0026lsquo;17 after the election of Drumpf. Prof was good, no real complaints.\n  I commuted to class this semester, which meant about 40 min to campus and the same back. Combined with Calc‚Ö° being at 8:30am, this was not awesome.\n On the bright side, I did get to flip off some more asshats telling people they were going to hell for being gay ( É∆™ Àò ¬≥Àò)   4 - Sophomore, Spring \u0026lsquo;18 #    Chem ‚Ö°\nNothing woth saying really. Hard as hell, but I got though „ÉΩÔºà¬¥„ÉºÔΩÄÔºâ‚îå\n  Calc ‚Ö¢\nFine, if a bit tough.\n  Discrete Math\n\u0026ldquo;Meh\u0026rdquo;. I again had the amazing Dr. Bourke, but the class had a lot of fluff that I don\u0026rsquo;t think I\u0026rsquo;ll ever actually find useful.\n  Circuits\nOh boy, the prof was the most monotone guy I have ever met, I\u0026rsquo;m not convinced he didn\u0026rsquo;t have a signal generator locked on a specific frequency in his throat and just did AM on it. Also, I hate to have to tell him this, but there is a difference between a Turban and a Turbine. Anyway, the class was literally half just resistor networks and using nodal and mesh analysis on these circuits. We did eventually get to reallllly basic capacitor and inductor circuits, ending with just the smallest mention of the diode. The class was slow, we never even really talked about how simulation software could be used, and it was just\u0026hellip; not good. I think this complaint mostly boils down to expecting some practicality in my courses, which is apparently too much to ask for.\n  The Lab? The lab was worse. This TA has given me a story so stupid it hurts.\nThis, is an ohmmeter, it measures resistance in ohms. Not Impedance. This TA, in his glorious idiocracy, told the class to use a much more expensive, digital, high precision ohm meter to measure the impedance of an element in the circuit using the ohm meter while the circuit was powered on. And look, I\u0026rsquo;m not going to go into all the mental hurdles of incredible idicoracy at play there, but trust me, this is 110% distilled stupid. So, I raised my hand and told him that this was wrong, thinking that as he\u0026rsquo;s a Graduate TA (GTA) that, maybe, he\u0026rsquo;d just had a lapse in judgment and that he\u0026rsquo;d be thankful I pointed it out before everyone in the lab either blew fuses or damaged things outright.\nNope. This guy wants to fight.\nThis was years ago, so obviously this is not exact:\n You can\u0026rsquo;t measure impedance with an ohmmeter\nYes you can. I\u0026rsquo;m the Graduate TA here, you need to listen to me\nI\u0026rsquo;m really not comfortable doing this sir, I think it can damage equipment\nYou don\u0026rsquo;t know what you\u0026rsquo;re talking about, you\u0026rsquo;re taking Circuits one after all.\n ‚è∏Ô∏èPause. Dude. Really. This is like the 4th lab at this point, you\u0026rsquo;ve had plenty of time to realize by now that I finish these labs early consistently, I wear a vacuum tube around my neck, and that I\u0026rsquo;m coming into class on a longboard burnt with high voltage. You probably shouldn\u0026rsquo;t have said that.\n Can you explain to me how the equipment works then? Because from my understanding about how an ohmmeter works internally this will not give a correct read out, and can damage the equipment\nThis is an intro course, you don\u0026rsquo;t need to know that. Do as I say.\nNobody in this room should follow those instructions unless you want to be replacing fuses for the next hour.\nYou have no idea what you\u0026rsquo;re doing!\n Okay, now I\u0026rsquo;m sorta pissed. This is not what a TA should do. TA\u0026rsquo;s are supposed to help you and encourage you, explain any questions you might have away. He\u0026rsquo;s not explaining, he\u0026rsquo;s demanding respect and demeaning me. Fuck this guy.\n No, you don\u0026rsquo;t know what you\u0026rsquo;re doing.\n(now screaming at me in the lab) How dare you say that to your TA, and a grad student at that! Come talk to me privately in the hall!\nNo. Anything you have to say can be said here.\nFine, then let\u0026rsquo;s go talk to [The Lab Lead]!\n At this point, I\u0026rsquo;m literally laughing at this guy, he\u0026rsquo;s red in the face from screaming, and I\u0026rsquo;m just keep laughing at his tantrum. We get up to the lab leads office, the guy who is also responsible for fixing equipment, and the GTA tells hid story of how I\u0026rsquo;m a disrespectful little shit, somehow leaving out what started the entire thing- him almost getting people to blow fuses on equipment. After he\u0026rsquo;s done making his case, while I smile and play with the tube around my neck and lean on my 10kv burnt long-board, I tell the lab lead what we\u0026rsquo;re actually up here about, that this GTA wanted us to measure impedance, with an ohmeter, on a live circuit. Lab Lead, I shit you not, looks at the GTA and just says \u0026ldquo;Are you serious?\u0026rdquo; then ripped the dude a new one. 11/10.\nThis did not get better, at all, though the semester. I basically ended up teaching my lab.\nThis semester I was also a Resident Assistant at UNL. More on that in a bit.\nDuring this time UNL did have an incident with a Racist Douchebag to which they respond by \u0026hellip; giving everyone free \u0026ldquo;Hate Will Never Win\u0026rdquo; T-shirts instead of doing something actually meaningful. Cool.\n5 - Junior, Fall \u0026lsquo;18 #    Data Structures \u0026amp; Algorithms\n\u0026lsquo;Algos was odd. The class did make me a better programmer, but it had some really annoying issues. Primarily, the lectures were often repeats, sometimes up to 3 or 4 times of covering exactly the same material, but attendance was graded. This got old very quickly.\n  Circuits ‚Ö°\nSame prof as before, still just as monotone, but this time the class picked up in pace, possibly a bit too much, and still lacked doing things with Spice or other sim tools, lab was still very meh. Lots of focus on big, power electronics. Not my cup of tea.\n  Technical Communication\njust\u0026hellip;. not good? This class largely felt like busy work, and for the final presentation we had to give for the class, my partner just up n\u0026rsquo; disappeared on me, leaving me to do it myself.\n  Differential Equations\nThis class was a mixed bag, on one hand, the prof was amazing (Thank you Dr. Laubmeier). It was her first semester teaching but she nailed it. On the other hand, something about the subject just absolutely failed to \u0026lsquo;click\u0026rsquo; with me, so while I could work though the problems, I felt like it was all sorta magic? I don\u0026rsquo;t know how else to put it. Regardless, this is 100% on me.\n  This semester I was also a Resident Assistant at UNL again. I can\u0026rsquo;t say much about this as I\u0026rsquo;d like for legal reasons; however, I will say that the entire experience as an RA made me feel that, despite the dorms existing as housing at an educational institution and the fact that I was in the dorm that was primarily used for honors students, the dorms were anything but conductive to education. Music majors couldn\u0026rsquo;t use electric amps in the music room and nobody was allowed to have anything that wasn\u0026rsquo;t UL certified in their rooms- there goes everything from 3D printers to any lab equipment. And like, yeah, I get it, but come on?\nI also felt that I was not respected as a person. Despite my request that I be stationed literally anywhere else in the building on account of my bad knee, I was assigned a room on the fourth floor of a building with no elevator. Their response to LGBT issuses also left me unhappy, as on oppisite-sex guest wasn\u0026rsquo;t allowed overnight\u0026hellip; yeah. Let that one sink in, it\u0026rsquo;s somehow more restrictive to straight people yet more offensive to LGBT people. Way to go guys.\nalso as my 4th semester living in the dorms, I was growing very tired of 1-ply toilet paper.\n   6 - Junior, Spring \u0026lsquo;19 #  I had a lot going on outside of school, so I intentionally took a rather chill semester,\n  CPR and Archey\nBoth were taken just to fill credit hours, to get up to the required 12 to be a full time student. CPR was a total of three 1 hour classes, while Archery was a weekly 3ish hour session and was really cool, even if I was comically bad at it.\n  Embedded System\nI yet again had a professor for which it was his first semester teaching. He was\u0026hellip; not great. We used the Arudino Uno and built a tiny wall-avoiding robot and did a few other labs, and\u0026hellip; cool, I guess? It was the kinda thing that should be tought in high school, not college. We (mostly) didn\u0026rsquo;t use the Arduino framework, instead poking registers directly, which made the class a bit more valuable, but still, I found it a bit lack luster. I often found that I knew more about the 328p CPU and it\u0026rsquo;s features, debuggers and simulators that were available, etc. than the prof did. I have heard the prof has since gotten a lot better at teaching though, and one of my good friends had a really good experience taking the advanced variant of the course with him, where he used an FPGA instead of an ŒºC.\n  Physics ‚Ö† (Actually taking it this time instead of withdrawing early)\nI had a really good TA (who I am still friends with!) and having the better math background really helped, which is most of the reason I put it off for so long, pulled a B+ out of it so üëç.\n  Philosophy\nThis class? Well it was an experience. It was 5pm to 8pm iirc, and trying to force yourself to care about basic philosophy for three hours straight is a bit brutal. I did find the class interesting though and am glad I took it. Plus, the 10 minute break the prof allowed in the middle was just barely enough for me to max-speed penny board to Wendy\u0026rsquo;s, grab a meal to go and scarf it down before he started teaching again.\n  7 - Senior, Fall \u0026lsquo;19 #    Physics ‚Ö°\nPretty awful. I wasn\u0026rsquo;t stoked with the instruction (from the prof, again, TA was bomb) in Physics‚Ö†, and it went downhill in ‚Ö°. My TA had a pretty thick accent, which made understanding him difficult. The Lab, well, the equipment was all electrical taped together and should have been thrown out 20 years ago. I found this particularly odd, as the chemistry department\u0026rsquo;s labs were top notch, like, each lab room had 6 TVs so that every lab station could look at the slides/instructions independently even. It was seriously overkill. Then, we have these physics labs that are struggling to get by on scraps. ¬Ø\\_(„ÉÑ)_/¬Ø\n  Circuits ‚Ö¢\nThis class was an absolute dumpster fire. The prof is by far the worst I\u0026rsquo;ve had my entire time at UNL. He made crazy assumptions about the prior knowledge of students, dove way to deep into semiconductor physics instead of how to actually use them, miserably failed to explain things, assigned homework that was insanely long, gave tests that were more a test of what you had written on your allowed cheat-sheet, and at one point even told the class a test was going to be over the wrong thing- making it so that he had to give a make-up test. He was also just kind of unpersonable and unwelcoming. While my experience was already horrible, I had friends that had far worse. I still don\u0026rsquo;t understand how to use transistors in a circuit very well, and if anything I think this class made that situation worse. If I were rating my classes out of 10, this one would get a negative score.\n  Linear Algebra\nReally good class, taught incredibly well by Dr. Laubmeier, and I am again grateful for the experience.\n  Signals and Systems\nTaught by Dr. Khalid Sayood, this class was probably my best experience at UNL. Don\u0026rsquo;t get me wrong, that class was tough, but I have never had a prof so skilled at teaching, so invested in his students, and so down to earth. Learning from Dr. Sayood will almost certainly stand out as the highlight of my time at UNL.\n  8 - Senior, Spring \u0026lsquo;20 #  This semester is the one that COVID-19 hit. The last third-ish of this semester had otherwise normal classes transitioning to being entirely online. This went about as well as could be expected. Obviously, this is a rather odd scenario. It may not be fair to judge the University based on the response to this necessarily; however, I think that seeing how the university responds to this shows how they\u0026rsquo;ll respond to other things- that is to say poorly. If the quality of my professors and classes didn\u0026rsquo;t piss me off before, this is the semester that did it.\n  Operating System Kernels\nThis class was a hard, the prof was very \u0026lsquo;meh\u0026rsquo;. The prof hadn\u0026rsquo;t even taught in many years, but had to take up the torch again because the guy that normally taught the class had been promoted. I did learn a lot, albeit I think that\u0026rsquo;s mostly because the textbook we used was very, very good.\n  EE Lab‚Ö†\nLacking a better name, this lab was just a generic electrical engineering lab and as such was rather disconnected from any other class. For the lab we used a mix of FPGAs, Arduinos, a pile of IC\u0026rsquo;s, and LEDs. The were two standout tasks:\n  Stoplights\nWe made a Finite State Machine model of an intersection\u0026rsquo;s stoplights, we then implemented this three times, once with discrete ICs, once with an FPGA, and once in code on an Arduino Uno.\n  The self chosen project\nMy group partner and I choose to make a Euclidian Rhythm drum machine, that actually hit physical toy drums with some solenoids.\n   Alright, so, why complain about this class? Well, for one, neither of the TA\u0026rsquo;s knew their heads from their asses. One of them insisted the the Arduino Uno (AtMega 328P) was a perfectly fine, modern ŒºC. (It\u0026rsquo;s not.) and the other had never even used a micro controller. I ended up gifting her an arduino nano and a few parts from my stash so she could learn (that TA had no influence on my grade). I\u0026rsquo;m not saying either was dumb, or saying anything bad about them directly, but they sure as hell should not have been the TAs for this this class. (There was no professor)\nAlso, when all classes were force to go online this lab lost a lot of its value. I was fortunate enough to have an Oscilloscope, multiple lab PSUs, logic analyzer, etc. all on hand, but many other students got a much worse education for it.\n  Digital Logic Desgin\nThis class was fine, not steller, but like, I actually learned a bit and the content practical. The prof had come from industry and actually knew how to teach practically. So\u0026hellip; all good? No. About 2/3 of the way though the semester COVID hit and my university went online. The prof had no idea what he was doing and the online lectures were sparse, poor quality (like, outright useless), and the wasn\u0026rsquo;t a single thing that changed my grade after the transition. I definitely didn\u0026rsquo;t get what I paid for.\n  Digital Logic Design Lab\nStrangely, this lab was overseen by a different prof than the lecture, and, while I could go into the problems with the class, I think I\u0026rsquo;ll let this speak for me:\nand okay, I admit that was a bit over the line, but the rest of the lab report was written well and I did my work. I got a 90/100 on that. As is this sort of makes me look like the bad guy, I was frustrated, and I think justified, but I agree this wasn\u0026rsquo;t the best way to voice that opinion. This is why I am still livid about this to this day- here\u0026rsquo;s my lab partner\u0026rsquo;s conclusion, he got 100/100 on this assignment.\nthis is some top tier bullshit, so, I go to the prof that oversees the course.\nHe, I shit you not, responded \u0026ldquo;How do you know other students aren\u0026rsquo;t still using XP\u0026rdquo;\nAnd, okay, maybe this lab would have had some redeeming qualities, even if out of date, except for the fact that each of the supposed-to-be 3 hour labs were about 15 minute labs, with the only reason they took that long being due to unintelligible instructions for each assignment.\nThe professor, responded to my criticism of his labs being written poorly with \u0026ldquo;If you think you can do better, then you write them.\u0026rdquo;\nYes, I can. No, I won\u0026rsquo;t. I\u0026rsquo;m paying $1000 to take this class, not to write the content for you.\n  PCB Design\nWe designed a PCB in KiCad, mostly refrencing existing open source designs. This was assumed to be a baby\u0026rsquo;s first PCB class, which it wasn\u0026rsquo;t for me. The prof is super cool and having chats with him about nothing in particular in his office have often lead to me learning more than I have in other classes over an entire semester.\nUnfortunately, when COVID hit it stopped the class in its tracks, resulting in the PCB never actually being soldered as I don\u0026rsquo;t have good enough equipment to do the fine soldering required for what I designed at home\n  Philosophy and Current Issues\nThe only redeeming thing about this semester was this class. The TA and professor I had for this class were both amazing. The TA, Zachary Garrett, had a true passion for philosophy and had even done quite a few game jams making philosophy related games (mostly in Unity). He really inspired me to be more passionate about Philosophy. The prof even did a pretty good job with the transition to online classes.\n  9 - Senior+, Fall \u0026lsquo;20 #  This semester was entirely done online due to COVID-19. All classes were taught live via Zoom.    Electromagnetic Field Theory\nNot the worst professor I\u0026rsquo;ve had, but definitely the most useless. Literally just read the slides word for word for the entire semester, reading the equations for what they were, never explaining what the variable mean or giving context.\n  Probability Theory\nReally good class. Because COVID and my bad heart, the prof let me take it online, so I just watched recording of lecture. This wasn\u0026rsquo;t ideal obviously, but the prof still checked in regularly and the lectures were taught incredibly well. I did still have to take tests in person, but steps were taken to minimize my exposure\n  Software Engineering\nIt takes a lot for me to hate someone. I hated this prof. She constantly made the class feel bad for not being part of the fancy-school-in-a-school at UNL that she used to be a part of. From what I understand, She wrote software both for healthcare and ICE. Talking to her was like talking to corporate incarnate. But that\u0026rsquo;s the prof. I can stand a bad person as a teacher so long as they can teach well. She couldn\u0026rsquo;t.\nFor some context, UNL is pretty UNIX-y, they teach C/C++/Java and, for the most part, do everything on a Linux server on which all CS/CE students get an account.\nShe wanted us to fully drink the Windows Kool-Aid and dev in C#/.Net/js(react) to make a lil\u0026rsquo; webapp, for which we were supposed to follow \u0026lsquo;Good software engineering principals\u0026rsquo;\nNow, I don\u0026rsquo;t know about you, but I think it\u0026rsquo;s a tad bit ridiculous to expect someone to follow \u0026lsquo;good Software Engineering principals\u0026rsquo; in a mixture of languages they don\u0026rsquo;t know as they try to teach themselves said languages in a semester\u0026rsquo;s time with none of the TA\u0026rsquo;s knowing the languages/frameworks either.\nAdd onto this the fact that the lectures were largely disconnected from the homework, the scale of the project given the semester was compressed due to COVID, her general expectation that the TA\u0026rsquo;s would do 90% of the work that the prof should be doing directly, and this was an outright shit show.\nThe class was so bad that about half way though the semester I brought up how the class was going and more or less forced her to have a discussion with the class about our dissatisfaction and general lack of ability to do the assigned homework. She did a zoom poll, and the vast majority of the class thought that at the current pace they would fail. I then led the class though a discussion that took the entire rest of the class period helping her restructure the class. She had the audacity to ask me to send he a bulleted list of the key points we talked about, like I was her secretary.\nThis is sort of a recurring trend so for any professors reading this, he\u0026rsquo;s a pro tip\nDON\u0026rsquo;T MAKE YOUR STUDENTS, STUDENTS THAT ARE PAYING TO TAKE YOUR CLASS, DO WORK FOR YOU\nBecause of that intervention she did restructure the class significantly, but regardless I felt I learned effectively nothing from the course.\nOh, and the quizzes for the course were new levels of stupid.\n  Communication Networks\nThis prof, Dr. Massimilliano Pierobon, was great. I\u0026rsquo;ve never seen a professor express so much concern and care for his students. He knew the Pandemic and our course load was getting to us, and was extraordiniarly flexible to the needs of the class. The content covered in the course was presented well, and his research with the Molecular and Biochemical Telecommunications Lab (MBITE) was facinating to hear about.\n  10 - Senior+, Spring \u0026lsquo;21 #  This semester was entirely done online due to COVID-19. Computer Architecture, Data and Network Security, and Numerical Analysis were taught live via Zoom while Into to Machine Learning was done asynchronously with recorded lectures, but did have a lot of calls with chosen group members for the semester long project.    Computer Architecture\nThis, from my understanding, was this professor\u0026rsquo;s first time teaching. He actually did a pretty good job. The biggest problems came from weird expectations (homework deadlines were not great), extraordinarly hard homework compared to what was taught, and a lack of hands on labs/exercises like could be offered on an FPGA, by poking around in Linux, or using a simulator of some sort. Of course, this class was remote, so I can understand why these things were not done.\n  Data and Network Security\nThis was not good. It was a lot of really basic cryptography (how does RSA work, etc.) with very little actually applied skills. I didn\u0026rsquo;t really finish with any new knowledge. The tests and quizzes got really awkwardly specific about implementation details of some standards, yet I don\u0026rsquo;t think most who took the class would know when to use what. Much of the information covered was either out of date or wrong, which resulted in me sending a lot of corrections in the Zoom chat. At one point another student complained I was using the chat as \u0026ldquo;the notifications are distracting\u0026rdquo; and so the professor mandated that questions and comments be sent to him directly, instead of to the class as a whole- actively discouraging participation.\nThe classed ended with a group project, for which my partner was entirely useless as he completely lacked the ability to program despite being a 3rd year CS student and also had no idea how to use  \\(\\LaTeX\\)  to write the paper or even how to find academic resources beyond knowing not to use sites that end in \u0026lsquo;.com\u0026rsquo;. ü§¶\nI learned more reading Soatok\u0026rsquo;s Blog than I did from this class.\n  Numerical Analysis\nAbove, for Electromagnetic Field Theory I said \u0026ldquo;Not the worst professor I\u0026rsquo;ve had, but definitely the most useless. Literally just read the slides word for word for the entire semester, reading the equations for what they were, never explaining what the variable mean or giving context.\u0026rdquo;\nThe exact same thing happened here. Seriously, it\u0026rsquo;s no different than just having the book read aloud for 50 minutes.\n  Into to Machine Learning\n   Right after my last final of the semester I was able to get my first dose of the COVID vaccine.\nConclusions #  I originally had a multi page rant here, but instead, I\u0026rsquo;ve decided that some bullet points of wisdom are more helpful. So in the style of Baz Luhrmann\u0026rsquo;s \u0026lsquo;Wear Sunscreen\u0026rsquo;, I hope my advice, given in no particular order, is worth something:\n When paying for an education, students don\u0026rsquo;t want it to be easy or so hard that they\u0026rsquo;re stressed out of their minds: above all else we want to learn. Never forget you\u0026rsquo;re paying to sit in that seat. (Even if you have scholarships)  Don\u0026rsquo;t skip class. If you\u0026rsquo;re paying $600 a credit hour (this is the roughly the average in the US, you may be pay much less or much more) you\u0026rsquo;re paying about $40 per lecture.   Students and professors alike should be treated with respect. While the professors may be our elders we can\u0026rsquo;t sit by idly if they aren\u0026rsquo;t giving us what we paid for. College is a captive market. Dropping out means crippling debt. Transferring schools means more debt when credit doesn\u0026rsquo;t transfer. The college or department will always assure you the next class will have it better, but that doesn\u0026rsquo;t make it any better for you.  Ask the next class if it is better. Follow up. Bring change.   Inequality in funding may mean that the facilities for the degrees you want to study are crumbling. This is very hard to know in advance.  College is for profit. They make profit off of new students. The best facilities are the ones perspective students are shown on a tour. Ask to go off the tour path.   The system serves to hammer in the tired practice of academia more than it does to teach how to do the things you\u0026rsquo;re passionate about. If your professors do research, they likely care about that a lot more than teaching.  They also likely have a paper quota to hit. If you want to know how to spot really bad professors, look for the ones that have published research using the same dataset over and over and that have published very \u0026lsquo;meh\u0026rsquo; papers. A bad prof with bad research is still usually worse than a bad prof with good research   Education has not yet caught up to the idea of Google, StackOverflow, and the Internet. College is still largely about memorizing things you\u0026rsquo;ll soon forget instead of helping build a framework for understanding.  Progress and change is exponential, while humans ability to adapt and react is, and always has been, linear. It still makes sense to learn how to do a derivative by hand a few times, it just doesn\u0026rsquo;t make sense to do complex ones  Can we please teach people how to program their own numerical analysis solvers early   People taught to solve yesterday\u0026rsquo;s problems will at best solve today\u0026rsquo;s problems too late Nobody makes money by doing hundreds of integrals by hand every day.   While the Perato Principle would lead you to believe that 80% of what we lean is shit with 20% being actually useful, I\u0026rsquo;ve found that it\u0026rsquo;s more like 95/5 for what assignments, nuggets of knowledge, and test or quiz questions have stuck with me. Grading via software for a class you pay thousands of dollars for is never acceptable. Paying to access homework written by Pearson or McGraw Hill instead of the professor is even worse. The best professors understand that cracking jokes and having fun make students learn better. A bad professor can make easy content hard. Classes that have open book, open internet, and even open phone-a-friend tests are generally a lot better than classes that don\u0026rsquo;t- a good class will let you have at least a cheat sheet.  Even for completely open everything tests, still make a cheat sheet   Take notes in a centralized place early. Making OpGuides has accelerated my learning ten fold Ask your professors about their research, even if you aren\u0026rsquo;t interested in helping with it Learn python early. It\u0026rsquo;ll make the math classes easier. It\u0026rsquo;s basically an overpowered calculator. Don\u0026rsquo;t let a few bad professors take away your passion for what you do Don\u0026rsquo;t expect your classes to teach you everything you need to know  Getting a B- in a class because you took detours teaching yourself extra related things is far more valuable  If the prof has a passion for what they teach, talk to them about it- you never know what doing that work might do for your grade üòâ   The harder the classes and larger the course load, the less you\u0026rsquo;ll learn.  Honor\u0026rsquo;s students often learn less because they don\u0026rsquo;t have time to persue their own interests- speaking of:     Find a creative outlet unrelated to your major, then find a way to tie it in to what you\u0026rsquo;re learning.  For me this was music, doing DSP or designing circuits for audio    xkcd #519  While directly contrary to what I\u0026rsquo;ve done in this post, generally I don\u0026rsquo;t recommend burning bridges, you never know when the flames may come back to bite you. There is such thing as a stupid question, just they\u0026rsquo;re more often on quizzes and tests than brought up by students  Nobody in a crypto class cares about the the three names that make up the accronym RSA Nobody in a networking class needs to know about NCP Most classes are about 15 weeks. These profs have 45 hours over 15 weeks (assuming a 3 credit hour class) to take you from presumably zero knowledge on a topic to being competent. There\u0026rsquo;s just not time for trivia questions on tests or quizzes, and they\u0026rsquo;re a good sign the prof is adding filler and depriving you of more valuable content.   Most classes shy away from ethics, keep in mind how what you\u0026rsquo;re learning could be used for good and evil  Thermal cameras for increasing crop yield or targeting civilians taking shelter? Machine learning to find cures or make deep fake porn?   Be vocal in class. Ask questions. Ask questions that a bit tangential even. Talk to you classmates. As many as you can. Get to know them, find out what they\u0026rsquo;re good at.  Study groups save lives   Never take an unpaid internship  If the field your in only has unpaid interships you need to change majors. If your college does a final project (often called Capstone) and they want you to do work for a corprate/business \u0026lsquo;sponsor\u0026rsquo; for free, tell them to g o f u c k t h e m s e l v e s. DO. NOT. DO. WORK. FOR. FREE.   Colege is ·µ•‚Çë·µ£·µß, very , ·µõ·µâ ≥ ∏, extremely, ¬∏,√∏¬§¬∫¬∞ extraordinaly ¬∞¬∫¬§√∏,¬∏ , ùï¶ùïüùïóùïíùï•ùïôùï†ùïûùïíùïìùïùùï™, ludicriously, obnoxiously expensive. At the end of the day, you still need that degree to get most jobs that you actually want, so if you can\u0026rsquo;t avoid it- you may as well fight to make it worth something.  "}),a.add({id:2,href:'/posts/digital-native/',title:"I'm Not a Digital Native, and Neither Are You",section:"Blog",content:"The term digital native describes a young person who has grown up in the digital age, in close contact with computers, the Internet, and video game consoles, and later mobile phones, social media, and tablets. The term is often used to refer to millennials, Generation Z, and Generation Alpha; the latter two are sometimes described as distinct \u0026ldquo;neo-digital natives\u0026rdquo;, \u0026ldquo;true\u0026rdquo; digital natives, or \u0026ldquo;digital integrators\u0026rdquo;.  \u0026lsquo;Digital Native\u0026rsquo; on Wikipedia You know how every headline about Millennials or Gen Z is \u0026ldquo;Gen ___ has killed ___\u0026rdquo; and it makes everyone from those generations want collectively bang their heads into a desk? To me, reading literally anything about \u0026ldquo;Digital Natives\u0026rdquo; is way worse.\nI, being born in \u0026lsquo;98, am right in that awkward gap that people don\u0026rsquo;t really know if should be called Millennial or Gen Z. Growing up my family was relatively poor, but did actually prioritize having a computer as my mom worked her way though college. I remember playing games on Windows \u0026lsquo;98 on an old Gateway.\nSo I\u0026rsquo;m a digital native right?\nI grew up witch technology keeping pace. Right as I wanted social media, there it was. Right as cell phones were ubiquitous, I was getting one. Right as I had figured it out, I could get a smart phone. Tech and my development were linked. That\u0026rsquo;s what being a Digital Native is right?\n The full picture has the arm of the chair as a very convenient censor bar, but I thought some reading may appreciate not trying to explain that on their screen   Yeah, No.\nI had to go back and learn why so much of what we use is so horribly fucked, without the context of really watching it come into being. Digital complexity is additive. Rarely does anyone start from scratch, instead opting to use as many existing abstractions as they can get away with. So now, when I want to understand how email works I need to look up umpteen different protocols (IMAP, SMTP, POP3, MIME, PGP) and why they\u0026rsquo;re all broken. If I want to write a program and display text on the console, I still need to go learn what the VT100 was. Anything I do I need to try to grasp a huge amount of historical context. Meanwhile, because I\u0026rsquo;m young and a \u0026lsquo;digital native\u0026rsquo; I\u0026rsquo;m expected to just magically know how to use Microsoft Word and PowerPoint, as if people my age didn\u0026rsquo;t have to learn at some point either from being taught in a class, Googling it, or watching a tutorial on YouTube.\nThis is really the biggest reason the term Digital Native pisses me off- the older generations use it as an excuse for not learning and not knowing how to use their tech, then expect the younger generation to just magically know and fix it, meanwhile, unless we go back to try and learn sixty years of context we really don\u0026rsquo;t know either. Yes, we\u0026rsquo;ll know how to install an App. No, I don\u0026rsquo;t even mind showing you that. But I do mind showing you how to over and over and over again because you expect to use me as some infinite tech support resource instead of actually trying to understand. When I start explaining either your eyes glaze over or you just keep repeating \u0026ldquo;I could never understand this.\u0026rdquo;\nSo, I\u0026rsquo;ve always more or less felt this way, then I read The digital natives are not who you think it is by Tor H√•kon and I realized that as much as it bothers me that people my age are called digital natives, people that are older claiming to be digital natives makes me just as angry. Now, some of that might be because that post has an impressive level of elitism baked in and feels like I\u0026rsquo;m reading the authors masturbation material- regardless, he\u0026rsquo;s still wrong. Because for as much as I am not a digital native, the older generation sure as hell isn\u0026rsquo;t either. His entire argument boils down to \u0026ldquo;I used older tech therefore I know more\u0026rdquo;.\nWhich, yeah, but you still didn\u0026rsquo;t use punch cards. You didn\u0026rsquo;t pull a bug out of a relay computer. You didn\u0026rsquo;t sew together rope memory. You didn\u0026rsquo;t use diode logic.\nI\u0026rsquo;m not gate keeping.\nI\u0026rsquo;m trying to express that there is no garden for which a gate can exist to hold you out of. There are no digital natives.\nEven for those that did do those things (if they\u0026rsquo;re still alive), they specialized. Nobody knows how everything about digital electronics works. Nobody knows every programming language. Nobody knows how to use all the popular apps and tools for every industry. Nobody is an expert on Windows, OSX, iOS, Linux, and ChromeOS.\n \nThe First Computer BugBy Courtesy of the Naval Surface Warfare Center, Dahlgren, VA., 1988. - U.S. Naval Historical Center Online Library Photograph NH 96566-KN, The image available here. Public Domain.   Sure, some things may be slightly more obvious to someone who grew up with the tech like I have. Maybe we\u0026rsquo;d know that \u0026lsquo;‚ò∞\u0026rsquo; is called the hamburger menu on most sites and have a better idea of what it might contain, but that\u0026rsquo;s pattern recognition from usage, not some innate skill that comes with being under the age of thirty. Knowing \u0026lsquo;CTRL+S\u0026rsquo; is save or being able to program in C has nothing to do with my age.\nHell, a ton of people my age have never seen a terminal and never typed a command. Similarly, a lot of people of the older generations have never use Snapchat or TikTok(1) or Tinder(2). This plays into stereotypes too. Not every young person sits on social media, spends their time at coffee shops swiping right endlessly, and religiously plays video games, and people over the age of thirty don\u0026rsquo;t exclusively communicate via email. Having a different list of apps we use doesn\u0026rsquo;t make us any more or less competent than you. Having used older tech doesn\u0026rsquo;t make you more knowledgeable, especially if you haven\u0026rsquo;t kept up to date.\nI was extraordinarily fortunate that my family bought a PC. How many kids now will grow up with only a small-screened Android device? Will future natives need to have been brought up with VR? Being a \u0026ldquo;digital native\u0026rdquo; is as much a class thing as anything else then.\nThe term is stupid, claiming it for yourself is stupid, and assigning it to a generation is stupid.\nThere. Are. No. Digital. Natives.\nWhile I have used Snap despite its issues, I haven't used TikTok because I have some respect for myself and don't want to use a platform that is actively abusing addiction, supressing 'ugly' people, and limiting free speech. Fuck dating apps too. They're incredibly predatory and broken see RFC: Let‚Äôs Disrupt Dating Apps and Attraction Inequality and the Dating Economy "}),a.add({id:3,href:'/posts/lr107/',title:"Nebraksa LR107 - Stupdity Abound",section:"Blog",content:"NOW, THEREFORE, BE IT RESOLVED BY THE MEMBERS OF THE ONE HUNDRED SEVENTH LEGISLATURE OF NEBRASKA, FIRST SESSION:\n That we hereby reaffirm our solemn oaths of office by expressing a firm resolution to maintain and defend the Constitution of the United States and the Constitution of Nebraska against every act of aggression whether foreign or domestic, including every act of unconstitutional abuse of power arising from the state or federal government.   That sounds fantastic, unfortunately, it seems that you also use this document to then break those oaths, so it may have been advisable to put this at the end of the document. Regardless, this point exists solely as a \u0026lsquo;war cry\u0026rsquo; of sorts to simultaneously stir up feelings of national pride in readers as well as stoke the flames of the exact crowd that believed there was an abuse of power so strongly that they choose to break into the U.S. Capitol or supported those that did.\nThat we are greatly alarmed that a factious and contentious spirit has recently manifested itself in the federal government, emanating both from the legislative and executive branches, with the desire to enlarge their powers by forced constructions of the Constitution of the United States to expand certain general phrases in order to destroy their meaning and effect. Such phrases include: \u0026ldquo;Congress shall make no law . . . prohibiting the free exercise [of religion] . . .\u0026rdquo;, \u0026ldquo;. . . the right of the people to keep and bear Arms, shall not be infringed.\u0026rdquo;, and \u0026ldquo;The Times, Places and Manner of holding Elections for Senators and Representatives, shall be prescribed in each State by the Legislature thereof . . .\u0026rdquo;. This design appears to have no other end except to consolidate the states by degrees into one sovereignty, the obvious tendency and inevitable consequence of which would be to obliterate completely the rights of sovereignty by the several states, and to destroy the rights and liberties of the people, as explicitly granted to them by the Ninth and Tenth Amendments to the Constitution of the United States.   \u0026lsquo;Spirit\u0026rsquo; is indeed the right word, as this fear is about as substantial as the specters of a mid 2000\u0026rsquo;s ghost hunting T.V. series. This is again a dog whistle thrown into rhetoric for the sole purpose of trying to defend against a threat that simply does not exist. Nobody is seeking to strip the sovereignty of states nor strip the rights of christian nor take from any person a gun for which they have reason for and competence to own. As for the \u0026ldquo;Time, Place, and Manner\u0026rdquo; of elections, it\u0026rsquo;s worth noting this quote was cut at a rather interesting point, as it goes on to say \u0026ldquo;\u0026hellip;Legislature thereof; but the Congress may at any time by Law make or alter such Regulations, except as to the Places of chusing Senators.\u0026rdquo;\nSo, you know, doing as the constitution says. But I will still even agree with you, the point of states is to allow for legislative testing grounds and Congress should not get involved unless necessary. Unfortunately, it has been shown again and again that voter ID laws, purging voter rolls, limiting absentee voting, and restricting the voting of convicted persons disproportionately affects minorities, minorities that largely vote Democrat. Now, the argument could be made that this is coincidental and that these laws get passed to protect our elections. That argument would also be in incredibly bad faith as the Hofeller Files so clearly show that this is direct and intention voter suppression by the GOP.\nMore than anything though, the choice of language here \u0026ldquo;obliterate\u0026rdquo; and \u0026ldquo;destroy the rights\u0026rdquo; shows that is written not because of anything based on fact, but rather on emotions and conjecture on the insidious plans of the far left, the radically well equipped and tightly organized terrorist group known as ANTIFA, and the ever looming day on which the gays finally deploy their agenda.\nThat we in particular protest the ominous plan revealed by the executive branch to take unilateral action in explicit violation of the Second Amendment to the Constitution of the United States. This sacred right is also protected by our Constitution of Nebraska: \u0026ldquo;All persons are by nature free and independent, and have certain inherent and inalienable rights; among these are . . . the right to keep and bear arms for security or defense of self, family, home, and others . . .\u0026rdquo;.   Plan? What plan. Also, while I\u0026rsquo;m all for the enjoyment of guns, maybe when it takes a global pandemic to even put a dent in a shooting epidemic the problem is systemic, and as such should actually be addressed rather than simply fear mongering. Putting this in writing only a little over a month after the shooting in Boulder, just one state over, where ten people, ten lives, were lost seems to me to be an outright slap in the face of reason and sanity. Keep in mind, in 2019 there were more mass shootings than days. I support gun rights, but I also support gun restrictions and acting based on reason. I don\u0026rsquo;t want to take your guns, unless of course, you\u0026rsquo;re mentally unstable, have a history of violence, or have proven yourself to be reckless with firearms. These aren\u0026rsquo;t radical ideas, they\u0026rsquo;re common sense. This being in this resolution seems to defy this common sense and instead state that the right to a deadly weapon regardless of their competence. Something even our current laws and regulations do not support as while or constitution may say you have the \u0026ldquo;inalienable\u0026rdquo; right to bear arms, we still require concealed carry permits and disallow guns on school grounds.\nThat we further protest against federal government actions which seek to punish traditional religious beliefs about the sanctity of life and sexual mores. These actions are in direct violation of the First Amendment to the Constitution of the United States, which states that \u0026ldquo;Congress shall make no law . . . prohibiting the free exercise [of religion] . . .\u0026rdquo;, and of the Constitution of Nebraska which states that \u0026ldquo;All persons have a natural and indefeasible right to worship Almighty God according to the dictates of their own consciences. . . . [N]or shall any interference with the rights of conscience be permitted.\u0026rdquo;.   There is no \u0026lsquo;punishment\u0026rsquo; against traditional religious beliefs Christianity - this is particularly absurd to claim when you consider that the US is 63% Christian. Rather, there is this often ignored ideal in our government that there should be separation of any church and the state. The sanctity of life and \u0026ldquo;sexual mores\u0026rdquo; are almost exclusively talking points of the religious right, and, as it turns out, we\u0026rsquo;ve been over this. Roe v. Wade was decided back in the 70\u0026rsquo;s and the decision then holds now. Frankly, it\u0026rsquo;s not as if I will convince anyone pro-life to be pro-choice. I don\u0026rsquo;t expect that. Instead, I think it\u0026rsquo;s pretty clear that the country is divided on the issue, and as such it seems draconian to enforce the ideal onto a woman who does not believe in it. If you don\u0026rsquo;t want an abortion, don\u0026rsquo;t get one. pro-choice does not mean pro-death, it simply means that women who chose to have an abortion should not be legally restricted from getting one. As for \u0026ldquo;sexual mores\u0026rdquo;, whether or not I want to engage in a rigorous session of anonymous yet passionate love making with a group of men or prefer to explore new territory with my non-binary partner is truly none of the state of Nebraska\u0026rsquo;s business- except in the sense of providing scientific information on how I may do safely. Something for which we have failed at miserably, given how common it is for kids in Nebraska to receive abstinence only education which has been shown by a large number of studies to result in more women seeking abortion, not less.\nThat we express distress at the prospect of proposed federal legislation designed to usurp the election process that was constitutionally left primarily to the legislatures of the several states, and only secondarily to Congress as Alexander Hamilton argues in Federalist Paper Nos. 59‚Äë61. These bills would dictate uniform election rules in all fifty states and eviscerate protections such as voter identification requirements, periodic updates of voter files, and restrictions on fraud‚Äëprone ballot harvesting. They also seek to steal the right and privilege of redistricting away from state legislatures and instead empower unelected commissions with this ability. Therefore, we affirm that this right must remain with elected state officials whose power is granted by the people themselves.   Soo\u0026hellip; You\u0026rsquo;re still mad about Trump losing I take it? As mentioned above, it\u0026rsquo;s pretty clear that voting restrictions from the GOP are often intentionally written to restrict minorities and boost republican wins. As an aside, this argument would really hold a lot more water if you didn\u0026rsquo;t cite the Federalist Papers and purposely cut off the quote from the constitution above.\nThat we also protest the stated goal by the executive branch of the federal government to restrict the private use of at least thirty percent of America\u0026rsquo;s lands and waters by 2030. As evidence, we expound section 1 of the Constitution of Nebraska, \u0026ldquo;To secure these rights, and the protection of property, governments are instituted among people, deriving their just powers from the consent of the governed.\u0026rdquo;. In concurrence, the Fifth Amendment to the Constitution of the United States declares: \u0026ldquo;No person shall be . . . deprived of life, liberty, or property, without due process of law . . .\u0026rdquo;. The acquisition, possession, and use of private property for private purposes is inextricable from the right of liberty and the obtainment of happiness. Such an appropriation of property is a gross violation of the fundamental principles of our state and nation.   That we strongly affirm the sacred and constitutional right of all persons of the liberty to decide what, if any, vaccination is necessary for their health or the health of their family. We explicitly reject the idea of vaccine passports and other federal mandates that restrain a person\u0026rsquo;s right to peaceably assemble or restrict their freedom to travel or conduct commerce.   Ahh, yes, let\u0026rsquo;s just put into a legislative resolution a dog whistle for the anti-vax movement and essentially condone behavior that has resulted in nearly the amount of deaths in Nebraska as the attacks on 9/11 caused in New York and has caused 557,000 deaths in the United States, which is over a quarter of the population of Nebraska and more than the total population of Omaha. This point is sure to age well and those that affirm it to be reflected on in a positive light by history.\nThat the Legislature requests cooperation from the Governor of Nebraska, the Nebraska Attorney General, the President of the United States, the President pro tempore of the United States Senate, the Secretary of the United States Senate, the Speaker of the United States House of Representatives, the Clerk of the United States House of Representatives, and the presiding officers of each of the legislative houses in the several states in defending the Constitution of the United States, the states, and the people against federal overreach.   \u0026ldquo;We seek to have our idiocracy reviewed and mocked by only the most highly regarded positions\u0026rdquo;\nThat the Clerk of the Legislature shall transmit copies of this resolution to the Governor of Nebraska, the Nebraska Attorney General, the President of the United States, the President pro tempore of the Senate, the Secretary of the United States Senate, the Speaker of the United States House of Representatives, the Clerk of the United States House of Representatives, and to the presiding officers of each of the legislative houses in the several states.   \u0026ldquo;Transmission has been received and will be promptly crumpled up and tossed into the nearest garbage receptacle. Please allow 3 to 5 business days before sending the follow up message indicating that this was intended to be taken seriously, as our staff can only laugh so much before our ribs begin to hurt\u0026rdquo;\n"}),a.add({id:4,href:'/posts/ternarylogic/',title:"Ternary Logic",section:"Blog",content:"This paper was written for CSCE-430, Computer Architecture at University Of Nebraska - Lincoln in Spring of 2021.\nThis in-page view isn\u0026rsquo;t all that great, so feel free to download the pdf directly.\nIf you would like to read the refrenced papers, I reccomend using Sci-Hub with a VPN on, as the academic publishers putting up paywalls as barriers to science can go fuck themselves.\n  #the-canvas { border: 1px solid black; direction: ltr; width: 100%; height: auto; } #paginator{ text-align: center; margin-bottom: 10px; }  Previous Next \u0026nbsp; \u0026nbsp; Page:  /     window.onload = function() { var url = \"https:\\/\\/opguides.info\\/\" + '.\\/ternary.pdf'; var hidePaginator = \"\"; var pdfjsLib = window['pdfjs-dist/build/pdf']; pdfjsLib.GlobalWorkerOptions.workerSrc = \"https:\\/\\/opguides.info\\/\" + '/js/pdf-js/build/pdf.worker.js'; var pdfDoc = null, pageNum = 1, pageRendering = false, pageNumPending = null, scale = 3, canvas = document.getElementById('the-canvas'), ctx = canvas.getContext('2d'); function renderPage(num) { pageRendering = true; pdfDoc.getPage(num).then(function(page) { var viewport = page.getViewport({scale: scale}); canvas.height = viewport.height; canvas.width = viewport.width; var renderContext = { canvasContext: ctx, viewport: viewport }; var renderTask = page.render(renderContext); renderTask.promise.then(function() { pageRendering = false; if (pageNumPending !== null) { renderPage(pageNumPending); pageNumPending = null; } }); }); document.getElementById('page_num').textContent = num; } function queueRenderPage(num) { if (pageRendering) { pageNumPending = num; } else { renderPage(num); } } if (hidePaginator) { document.getElementById(\"paginator\").style.display = 'none'; } function onPrevPage() { if (pageNum = pdfDoc.numPages) { return; } pageNum++; queueRenderPage(pageNum); } document.getElementById('next').addEventListener('click', onNextPage); pdfjsLib.getDocument(url).promise.then(function(pdfDoc_) { pdfDoc = pdfDoc_; document.getElementById('page_count').textContent = pdfDoc.numPages; renderPage(pageNum); }); }  "}),a.add({id:5,href:'/posts/productsiwishexisted/',title:"10 Products I Wish Existed",section:"Blog",content:"Most of these things probably exist. For many, it\u0026rsquo;s just that they don\u0026rsquo;t exist at a practical price point.  Without further ado, In no particular order\n  A not garbage, not phone based, IR camera that doesn\u0026rsquo;t cost a bajillion dollars\nYes. I know the FLIR and SEEK Thermal cameras are a thing, but both have their share of software problems or hardware incompatibilities. Most of all, I don\u0026rsquo;t want to have to hope that their app keeps working with my phone at risk of a $250 paper weight.\nAnd, yes, FLIR does have a handheld thermal spot camera that\u0026rsquo;s ~$350, $100 more, that is standalone; however, it\u0026rsquo;s only an 80x60 pixel image (same as the PRO LT smart phone one) and lacks the dual camera smarts that make the image better on their phone-attached offerings.\nI suspect this is largely due to restrictions on selling IR cameras for the sake of \u0026lsquo;national security\u0026rsquo; as high speed, high resolution IR have military applications. Doesn\u0026rsquo;t make me any less salty though.\n  Better environmental quality sensors\nThere\u0026rsquo;s no good reason, in 2021, that every home - or hell, every room - doesn\u0026rsquo;t have CO2 and radiation level detection along with CO and smoke detection. And I don\u0026rsquo;t mean some waste of time lil' estimated CO2 meter, I mean the real deal, NDIR sensing and a giger tube.\n  Not shit webcams\nShort and sweet. Everything available right now, even upwards of $200, is shit. Put a real sensor and hardware encoding in them.\nI know using a capture card (USB or PCIe) and a full on camera is an option, but now were back into stupid money.\nPeople are resorting to streaming video from their phones. This is just fucking stupid.\n  An isomorphic midi controller\nThis isn\u0026rsquo;t the 1600\u0026rsquo;s anymore, why the fuck are we still using normal 12-key keyboards. They\u0026rsquo;re a pain to learn and have a ton of disadvantages over isomorphic keyboards. The biggest being that on an isomorphic layout every chord is the same shape in every key, octave, or tuning.\n  A \u0026lsquo;weak strong\u0026rsquo; laptop\nI want a laptop with a really low power system that I can use most of the time (Like, pi3b+ish in power) but then reboot into a full on, powerful x86_64 system with good GPU when I want. Fuck Nvidia Optimus or BigLittle CPU architectures, I want something that\u0026rsquo;s actually just a potato sitting along side my workhorse. Share the cooling, storage, and I/O, but keep everything that actually drinks power independent. I already deal with dual boot hell between Windows and Linux. I\u0026rsquo;d happily deal with the reboot hell if it means I can get crazy long battery life when wanted while still having enough horsepower to do bigger tasks when necessary.\n  A good, not super hard to use, software video synth platform\nYes, I know VSXU and TouchDesigner, etc. exist. They\u0026rsquo;re great, and they\u0026rsquo;re a PITA. I want something that I can midi map in 30 seconds and have cool visuals pop out the other side.\nBoth the hypno and eyesy are just running on a pi anyway, so why can\u0026rsquo;t I just have a mix of the two available on my desktop to midi map.\nAs an aside, for actual audio reactivity, this would also necessitate the OS supporting good application to application audio routing, something that Windows can\u0026rsquo;t do well, despite both Mac and Linux being able to easily with CoreAudio and Jack respectively for a long time\n  A fast direct computer to computer link\nUSB 3.2 Gen 2 (Can I get better naming too?) is fast. Like 10Gbps fast. Can we please get some easy cable that can just plug into both systems to let me transfer a file over this link?\n  Home Plastic Waste to large 3D printing appliance\nWe throw out a crazy amount of plastic. While it could be recycled for normal 3D printing, I think the quality and colors of the plastic would make it pretty \u0026lsquo;meh\u0026rsquo;. Instead, I could see having a large scale home or community 3D printing platform which recycles plastic for large things as a huge win. Need more shelving for the garage? Melt down and print using all those empty 2L bottles!\nThere are some options for 3D printer plastic recyling already but all the ready-to-go options are very expensive, and none are made for this sort of large scale I\u0026rsquo;d like to see.\n  Modular Furniture (That actually follows a standard)\nHow freakin' cool would it be if when you needed more desk space you could just snap an extra wing on, or if you could move your existing desk top to a sit-stand desk. Would it not be great if when you\u0026rsquo;re office chair\u0026rsquo;s bottom eventually goes bad you could just snap a new one on?\n  Literally just https://dynamicland.org\n  "}),a.add({id:6,href:'/posts/chains/',title:"Chains",section:"Blog",content:"‚Äà My name is Vega. I have to tell myself that a lot, reminding myself of who I am.\nI know that may sound weird, but, if it wen\u0026rsquo;t already obvious, it isn\u0026rsquo;t my legal name. (yet.)\nDespite my best efforts, my parents still call me by my \u0026lsquo;old\u0026rsquo; name. I\u0026rsquo;m hesitant to call it a dead name, as I\u0026rsquo;m not trans. I don\u0026rsquo;t think it\u0026rsquo;s the same or that it\u0026rsquo;s fair to claim that it is.\nMy old name, ‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí, is a chain.\nIt holds me to a past. It\u0026rsquo;s a Christian name, a common name. In highschool there were three other people with my same name at my lunch table.\nMy mom told me she nammed me ‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí because it was normal. She thought it might stop me from getting teased or bullied at school.\nIt didn't.\nTo me the name represents holding onto the past, continuing familial traditions for no reason other than tradition. The same force that brings so many bad things into the world, doing things \u0026lsquo;because that\u0026rsquo;s how it\u0026rsquo;s always been done\u0026rsquo;. Normalcy as poison.\nAnd it represents fear.That's not who I am.\nI go by Vega ‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí in \u0026lsquo;real life\u0026rsquo;. I keep my family\u0026rsquo;s last name (for now.)\nBut that chain is really the one that scares me the most.\nThe links above me might have some redeaming value, I mean, hey, I wouldn\u0026rsquo;t be here without them. Still, both chains that have led to the link that is me have been full of abusive. fucking. assholes.\nSo by choosing my own name, I'm choosing to break that fucking chain.I choose courage.\n   Alright, some points I think need clearing up:\nThe chain is full of abusive assholes, but my parents themselves have actually done a really good job of breaking their own chains, better than I think I could have done if put in their shoes. They\u0026rsquo;re not perfect, but they are pretty damn close and I love them despite their faults. My Mother has been a true inspiration to me and is my best friend.\nI\u0026rsquo;ve found going by Vega difficult for a number of reasons, not the least of which is those familial ties. Unsurprisingly, not everybody is willing to to call me by the name I like (cough ·µê ∏ ·µà·µÉ·µà cough). It\u0026rsquo;s sorta ironic, because I think if I was trans they\u0026rsquo;d actually respect it more? Then again, from the way they\u0026rsquo;ve talked about my one trans family member I\u0026rsquo;m not so sure. It\u0026rsquo;s\u0026hellip; complicated. I suppose things always are.\nI also typed the word \u0026lsquo;Christian\u0026rsquo; above with some bitterness, but that isn\u0026rsquo;t because I have anything against Chirstians outright. I have everything against the crazy, abusive, kidde-diddling (directly or just turning a blind eye), emotionally and physically abusive fucks that make up the church cult that my mother was raised in. That has nothing to do with being Christian. I have the utmost respect for people that find something meaningful in the Bible that inpsires them to do good - love thy neighbor and all that jazz. It\u0026rsquo;s just not my cup of jesus-flavored tea, so I espically don\u0026rsquo;t want my name to be of that religion.\nThe biggest point I wanted to make though is that I don\u0026rsquo;t like my old name because of the baggage. When I meet a Mitch, or a Ron, or a David, I carry with those names certain assumptions. Should I? Absolutely not. Do I? Yes. I think to the other Mitches and Rons and Davids that I\u0026rsquo;ve know. I think about the era in which parents were naming their kids such things. There\u0026rsquo;s a reason there\u0026rsquo;s the whole \u0026lsquo;Karen\u0026rsquo; joke right now (on that note, I have a Grandma Karen who is the definitive Karen, in every respect: from the haircut right down to the entitled behavior). I. Don\u0026rsquo;t. Want. That. Baggage. I want the independnace of my own name. I think I, and everyone else, deserves that right- the right to be who they want to be.\nTo not be held down by a chain, or remembered as just another link in one.\nI want to be will be remembered as Vega. I will not forget the past, but I will not be chained to it or be a link in it either.\n"}),a.add({id:7,href:'/posts/mirrorsofopal/',title:"Mirrors of Opal",section:"Blog",content:"When I looked into the mirror this morning, I wasn\u0026rsquo;t sure who I was looking at. Is that me? Is that really what I look like now? Has this years long separation from reality caused me to not recognize my own face, or would it have happened anyway- a side effect of growing older.\n If you saw me, would you even recognize me? Or am I the ship of Theseus, digested by the carnivore that we call time, now fertilizer for someone you\u0026rsquo;ve never met?\nIt\u0026rsquo;s funny the bits of my past that still mean something to me. It\u0026rsquo;s tragic how I\u0026rsquo;m sure you\u0026rsquo;ve changed too. Many of the people I once loved exist now only in the past, and while I mourn for their passing I know a past version of myself exists for them too, all of us mutually falling out of existence, bit by flipped bit.\nIt\u0026rsquo;s tempting to write about specific memories, about events that have been seared into my mind, the ones that have shaped me. But which ones would those really be?\nMaybe when ‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì saw me on the street, after we hadn\u0026rsquo;t talked in months, and in a voice that carried emotion that words can not convey, she said ‚ñì‚ñì‚ñì‚ñì ‚ñì‚ñì‚ñì, ‚ñì‚ñì‚ñì‚ñì.\n  Or maybe it\u0026rsquo;s not the memories that burn in, but those that have fallen away,\n countless hours sitting in one place, in one room. Maybe that\u0026rsquo;s what has really made me into me. A slow decent into sameness that eats time and rots will. A dangerous combination of a desire to feel productive and having productivity be undefined, causing a feedback loop that causes me to be anything but, not letting myself enjoy my own time with something like videogames because I\u0026rsquo;ll feel guilty.   Not having the patience to actually complete anything that should have meaning- Unfinished songs, unfinished code, unfinished stories, unfinished definitions of completion - yet not feeling like I\u0026rsquo;ve earned the right to do things that would probably help me rejuvenate- unfinished games, unfinished anime, unfinished ‚ñë‚ñë‚ñë‚ñë‚ñë.\nAnd maybe I should be happy so many things are unfinished. I like having a large TODO list to choose from. So many projects, so many opportunities. I\u0026rsquo;m young. I have time. I think.\nAnd yet so many things eat my time, so many things stop me from doing the projects that I think I would actually find meaning in. busy work tasks from school, lack of funds, my weak heart, a bad knee.\nMaybe reading this sounds depressing. It\u0026rsquo;s not meant to be. It\u0026rsquo;s more of a \u0026hellip;. wandering reflection? Like going though a maze of carnival mirrors in an attempt to find the one that projects what I see in my own head, and from there rectify it with reality. I think that\u0026rsquo;s healthy, and that everyone needs to do so now and then.\nImage from Chirs Ralph - Public Domain  I started keeping a combination journal and task list. It\u0026rsquo;s shown me a few things. How many days are defined by completing menial tasks. How few days I get to spend as I want to spend them. How a few days each month are gems, full of everything that I want to be in everyday, like opal, full of variety and color in patterns; how a few more days are like sapphire, cool and relaxed, the days that melt away tension; but still most days are just \u0026hellip; rock. Maybe some have some interesting edges or contain a cool fossil, but most are just not worth the time to study.\nI don\u0026rsquo;t want that to be the case. I want to find a lot more Opal.\n  Seriously, I\u0026rsquo;m okay. Not going though a mental breakdown, not in danger. I\u0026rsquo;m fine. I just needed some time to reflect and thought doing so publicly might mean something to others.\nOn the other hand, if you\u0026rsquo;re reading this and tearing up or having a hard time yourself, I encourage you to try to make those reflections positive, to talk to the people you care about most, and find ways to make more of your own days into opals too. We can all make positive change. You just just need to see hope in every box.\n "}),a.add({id:8,href:'/posts/howimakeopguides/',title:"How I Make OpGuides",section:"Blog",content:"History #  Before I can get into how OpGuides works now, I need to provide some history so that you can learn from my mistakes.\nThe first iteration of OpGuides was OpinionatedEngineering.md. A single markdown file so long that the scroll bar was hard to grab. It was meant to be viewed and distributed not as a website, but as a file to be opened with https://typora.io (so that the html and everything rendered- though in theory any markdown editor would do)\nThat quickly became tedious, and I decided an actual website would be a lot better, so, I made a website using Jekyll. At least for OpGuides, Jekyll really didn\u0026rsquo;t work all that well. I had to hack things together and in general getting some of the features I needed to work (like math rendering and footnotes) was a disaster.\nThe next iteration of OpGuides used Docsify. If you want a site similar to opguides and want it to just work this is probably your best option. Honestly it can still do a lot of thigs better than the current iteration of OpGuides. The biggest issues I had with it came down to lack of extendability and it not being a static site (though the latter can be solved by using Server Side Rendering). If I ever had to just do docs for a project I\u0026rsquo;d use docsify without blinking. It\u0026rsquo;s stupid fast to use and requires no maintence or mental overhead.\nUnfortunately, docsify really couldn\u0026rsquo;t cleanly be expanded to handle some of what I wanted to do on OpGuides, so after trying out a few other static site generators (Zola being the most interesting) I settled on Hugo. In part this was because of the absolutely incredible Hugo Book theme on which the theme for OpGuides is derived from.\nThe site is still hosted on GithubPages, which makes my anual fee for hosting OpGuides just the price of the domain, though if you\u0026rsquo;re willing to stick with an .github.io domain or grab a free .tk or other weird tld name you can get around that too.\nActually making OpGuides #  The absolute most important thing that has made OpGuides work for me is one very important change from almost everything else I\u0026rsquo;ve made:\nI don\u0026rsquo;t wait until something is done, or even \u0026ldquo;ready for public consumption\u0026rdquo; before making it live. OpGuides is very unfinished. I don\u0026rsquo;t think there\u0026rsquo;s a single page that I\u0026rsquo;d call finished. Some pages are effectively just stubs or maybe outlines if you\u0026rsquo;re generous.\nAnother huge help has been Typora. While the view in Typora is still rather far off from what I\u0026rsquo;ll actually see on the live site, it\u0026rsquo;s mostly good enough to let me focus on writing. There are still some annoyences, for exmaple, typora defines   \\( \\LaTeX \\)  code blocks with two dolar signs $\\LaTeX$ while for hugo I need to use the katex short code, {{\u0026lt; katex \u0026gt;}} \\LaTeX \\{{\u0026lt; /katex \u0026gt;}} or, more obviously, images which are stored in the static folder have to have a their image tags in the markdown set for how they\u0026rsquo;ll be located on the rendered site, not the path relative to the raw markdown files that I write the site with, so images only render in the web preview, not Typora. ‚ïÆ(‚îÄ‚ñΩ‚îÄ)‚ï≠\nThat\u0026rsquo;s still not a big deal though, as should I actually need to look at the live output and make sure things look good I can just leave hugo server --miniy --theme bookvega running in a terminal, connect to the local address, and as I ctrl+s in typora I can see the rendered site update in my browser.\nBecause writting those hugo shortcode tags (like {{\u0026lt; katex \u0026gt;}} ) can be a bit tedious, I\u0026rsquo;ve set up quite a few entries for espanso, for example, I can just type \u0026lsquo;:ka\u0026rsquo; to get the afforemention katex tags.\nIt\u0026rsquo;s still not the perfect development system. In a perfect world a lot of the experiance would be smoother. I\u0026rsquo;d love to be able to tell Typora how to handle the image directory problem and add custom logic for rendering the shortcodes. (actually, with enough time and CSS magic I might be able to do that, but It\u0026rsquo;s not worth the effort)\nOn the note of CSS- that has been a major pain point for me. Web dev is both easy and incedibly difficult. Doing it is actually pretty simple- CSS, HTML, and JS are pretty straight forward, there\u0026rsquo;s plenty of resources online, and the webdev panels in both Firefox and Chome make trying changes live nice. On the other hand ohmygod is it a pain in the ass. You will have issues you couldn\u0026rsquo;t possibly think of ahead of time. For example, one that I left in because it\u0026rsquo;s funny is on the Math chapter where the digits of pi just overflow off the right edge of the screen (1), and sure, I think the site actually looks pretty good now, but there\u0026rsquo;s still some outright disgusting outstanding issues. For exmaple, I\u0026rsquo;m using markdown tables,\n   like this table     for example, to   display content it   probably shouldn\u0026rsquo;t .    This is most obvious in the Generative Tools chapter of the Design section. The page has great content, but renders like a dumpster fire and I still don\u0026rsquo;t know how to fix it cleanly. Probably something with CSS Grids but after repeated attempts to make something work I gave up, so at least for now it will remain as the dumpster fire it is.\nThis has been fixed. See this commit if you\u0026rsquo;re interested in how. Ontop of the technical, there\u0026rsquo;s also the stylistic challanges. I\u0026rsquo;m actually really happy with how OpGuides looks right now, but there was a lot of heachache inducing research, trial and error, and humbly asking for help for making the text readable and getting everything to look good. I\u0026rsquo;d very gladly never read another word about typography or contrast for accesibility.\nAnd while the site is definitely functional, it\u0026rsquo;s also built on less-than-study foundations. I\u0026rsquo;ve hacked together quite a few things because getting it to work was more valuable to me than getting it to work right. For example, the javascipt for the footnotes (2) is loaded using script tags in the base html file for every page, and the different colors for different sections is very poorly thrown into the hugo templating html. This is to say I\u0026rsquo;ve valued getting a website that works and looks the way I want over doing it right. Partially this is ignorance (either of webdev or hugo), and partially this is laziness (\u0026ldquo;I got it working, no need to make it elgant\u0026rdquo;). But ultimately I think of it as a time trade off. I could spend way more time getting everything exactly right, acrue no technical debt (albeit this is debt that I rather doubt I\u0026rsquo;ll ever have to pay on) or I can just make a damn website and spend that time doing the part people actually care about: Writing content.\nUltimately, I think the take away for anybody wanting to make their own website should be this:\nYou\u0026rsquo;re not making a website for a fortune 500 company, and the most important thing on the page is the content(3). Find a good, free, template for a static site generator you don\u0026rsquo;t hate using- or if you want a site similar to mine, use docsify - and start writing and deploy as you go. You can always go back and edit later, but not putting anything out there doesn\u0026rsquo;t do anybody any good.\n I\u0026rsquo;ve also found some other sites useful for making my website:\nhttps://excalidraw.com is great for making \u0026lsquo;hand drawn\u0026rsquo; svg diagrams. They look good and the file sizes are small.\nhttps://detexify.kirelabs.org/classify.html is hand for looking up  \\(\\LaTeX\\)  symbols.\nhttp://shapecatcher.com is pretty much the same, but for unicode symbols.\nI did have to do a small fix because of that though, as originally it also made for a tiny horizontal scroll bar. Definitely not ideal. like this one assuming you don't want to be a webdev for hire - if that's the case you should probably give more of a shit  "}),a.add({id:9,href:'/posts/time-lapse/',title:"Time lapse",section:"Blog",content:"Super brief post about one of the more fun projects I setup recently: a lil' time lapse script\n#!/bin/bash CAM=$(v4l2-ctl --list-devices | grep C920 -A 1 | grep /dev | awk '{$1=$1};1') #Uncomment the next line to verify it's using the correct device #echo $CAM ffmpeg -f video4linux2 -s 1920x1080 -i $CAM -ss 0:0:2 -frames 1 \u0026quot;/mnt/data/lapse/tl$(date +\u0026quot;%Y-%m-%d_%H-%M-%S\u0026quot;).jpg\u0026quot; I have multiple cameras on my system, but only wanted output from the better one, the C920. That\u0026rsquo;s what line 2 is doing, finding the /dev/videoX device, where X is the correct number for the webcam\nLine 5 takes the picture and saves it with the current date and time in the /mnt/data/lapse folder\nThen, to trigger the script I have a systemd timer and service setup.\nI have the timer and service files named fifteen.timer and fifteen.service respectively, and the script above is named fifteen.sh and is stored in ~/.config/fifteen.sh This is so that I can add extra things do do on fifteen minute intervals if needed super easily. I also have an hourly.sh with a similar setup.\nfifteen.service\n[Unit] Description=run ~/.config/fifteen.sh [Service] Type=simple ExecStart=/bin/bash /home/vega/.config/fifteen.sh fifteen.timer\n[Unit] Description=Take Hourly Webcam Picture [Timer] OnCalendar=*:0/15 Unit=fifteen.service [Install] WantedBy=timers.target So with all of that setup, I can finally get poorly timed, slightly blurry pictures of myself drinking directly from a 2L bottle of Mello Yello automatically.\nNote, this picture has been resized by 50% for web, actual quality is a better  "}),a.add({id:10,href:'/posts/thewayweinteractwithcomputerssucks/',title:"The Way We Interact With Computers Sucks.",section:"Blog",content:"You are on a page that is a heavy work in progress. I don\u0026rsquo;t necessarily stand by anything I\u0026rsquo;ve written here and this page should effectively be considered not yet published. I have decided to put it up while it is in development to encourage contributions What do you see when you sit down to work? My guess is a desk pressed against a wall, maybe a few shelves, one, maybe two monitors in front of you, and a keyboard and mouse dominating the work area of your desk. How do you access information? Do you simply Google something and if it\u0026rsquo;s not on the first page give up? How do you get reliable information when you have a question? How do you interpret results that you find? How do you store information you\u0026rsquo;ve collected? How do you filter information to get exactly what you\u0026rsquo;re looking for?\nIf you\u0026rsquo;re reading this, I\u0026rsquo;d wager that you\u0026rsquo;ve at least thought about this a little. Maybe you\u0026rsquo;re a Linux user, deep into the tiling window manager rabbit hole. Maybe you already have a fancy keyboard, monitors surrounding you on all sides. But I\u0026rsquo;m here to tell you that no matter how hard you\u0026rsquo;ve tried, what you\u0026rsquo;re using still probably sucks.\nI think we, as individuals and as business, need to invest more in our work spaces, probably well beyond what most people would even consider. I\u0026rsquo;m not talking about adding a third monitor or giving everyone an artistic environment. I\u0026rsquo;m talking about setting up a work environment that\u0026rsquo;s conducive to productivity as instead of merely being the medium on which it takes place, the work environment should actively contribute to finding, accessing, retrieving/storing, consuming, and creating. - where data can be anything: art, documentation, code, whatever.\nHCI? #  Human Computer Interaction or HCI is an interesting topic to me. So many people spend a crazy amount of time in front of a screen , you\u0026rsquo;d think we\u0026rsquo;d have some damn good hardware and software to use while we further deepen the permanent butt-shaped indentation into our seats, but alas, instead most people use À¢ ∞·µò·µà·µà·µâ ≥ Windows.\nBack in late 2018 I wrote the first version of this post and basically everything in there has been restated here but better. Since then I\u0026rsquo;ve talked to many others about this, read many other blog posts, and just generally done a lot of new things with computers and learned a lot, so here\u0026rsquo;s HCI2: Electric Boogaloo.\nChapter 1: The Physical #  Computers aren\u0026rsquo;t just about software, websites, and programs. As the most powerful tool that most people have access to and often one that we spend many hours a day looking at, it makes sense that we make working with that tool comfortable, straight forward, and healthy. In general, we\u0026rsquo;ve mostly sucked at this, and while some things are getting better (monitor resolution) some things have gotten significantly worse (keyboards). Furthermore, the desks we sit at and the air we breathe while working is in need of attention too.\nOur Input Methods Suck. #  What the fuck is this shit?\nWell, this shit is membrane keys. They use a lil' membrane of flexible plastic to make a button that when you press completes a circuit. They feel like mush and generally suck to type on. We can do much, much better:\nOkay, cool, a mechanical keyboard. Now at least each switch is, well, mechanical. There\u0026rsquo;s a spring and actual feedback to your fingers and ears when you hit a key. But the keys are still arranged horrendously and it\u0026rsquo;s not at all fitting for human hands. So\u0026hellip; What next?\nAlright, so this is what I use. For me, this is great. It\u0026rsquo;s still attainable and usable by mere mortals without infinitely deep wallets(1) and using software as it exists today, but I think that\u0026rsquo;s largely still because it\u0026rsquo;s the furthest edge you can go from normal before things start being a royal pain in the ass, and don\u0026rsquo;t get me wrong. It\u0026rsquo;s not that there\u0026rsquo;s not some PITA incurred from using this weird of a keyboard. Switching to a traditional keyboard will always feel weird, other people can\u0026rsquo;t easily use your computer (not sure this is reallllly a downside\u0026hellip;), configuration still basically requires you understand the basics of C programming, and some things that expect keys to be in certain places (games) will often be awkward.\nBut, that\u0026rsquo;s not where I want to go with this blog post. There\u0026rsquo;s plenty of people that have gone on for like 20 pages about how amazing QMK and the Ergodox are, I want to go deeper.\nLet me start by lubing your brain up a little.\nThis is Dasher, a software keyboard using predictive text that should sort of blow your mind. Cool init'? Now, your thoughts probably went something like this\n What the fuck am I looking at? Oh damn that\u0026rsquo;s really cool, I want to try it. Oh, hmm, but honestly even with tons of practice I can still probably type faster on a normal keyboard\u0026hellip;  And Yep, that\u0026rsquo;s about the right conclusion. End of story, let\u0026rsquo;s all go home, blog post over.\nBut wait?\nWhat if \u0026ndash;\u0026gt;insert your preferred mechanical keyboard here\u0026lt;\u0026ndash; wasn\u0026rsquo;t the best possible typing experience? What would something better look like?\nHere is where our story really begins. You have to start asking some questions that sound like you just smoked a bowl, please feel free to read all of the following with the mental voice of a stoned dude saying \u0026ldquo;Like, man, \u0026quot; before each point:\n Why do we even need to type? What is it we want to input in the first place? What makes something good as an input device?  Effectively, Just keep asking Why\u0026rsquo;s and What\u0026rsquo;s until we\u0026rsquo;re at the core of the question.\nSo, let\u0026rsquo;s start at the top:\nQ: Why do we even need to type?\nA: We don\u0026rsquo;t. We can draw, dictate, or use any of a number of other methods. Typing is convenient because it can be kept semi-private, is tactile (assuming you\u0026rsquo;re keeb isn\u0026rsquo;t a üí©), and generally fast enough to keep up with the speed of thought if you know how to touch type.\nQ: What do we want to input in the first place?\nA: Text (in multiple languages), Links, Images, Diagrams, Code, Commands? Dates? Our wandering thoughts? Spur of the moment ideas? Everything. Keyboards happen to be a decent input device for some of these things, and tend to pretty much suck for others. (Come on, make art by typing in RGB values for every pixel. ùêº ùíπùí∂ùìáùëí ùìéùëúùìä)\nQ: What makes something good as an input device?\nA: Now I\u0026rsquo;m asking myself a hard question. It\u0026rsquo;s easy to list off good qualities of the familiar: Tactile, Responsive (low latency), Customizable, No Œ±…Ø∆ô…ØŒ±…æ‘É movements, keeps the users *hands and arms (hmmmm\u0026hellip;) in a natural position, characters laid out well for the users language (and able to be switched live). But how do you get down to the core of this question without just listing traits of \u0026lsquo;goodness\u0026rsquo; in existing things, what actual goals should we strive for. Should it be one unified device? (Hint: Touchscreens are great, but no.) What goals out weigh others? Is ergonomics more important than tactility? Can there even be a defined list that makes an input deice good?\nNo.\nThat\u0026rsquo;s why this topic is so interesting. My hands are not your hands. I play music, make art, write stories (and blog posts) and code. Part of the reason I got an Ergodone keyboard in the first place is because I was starting to experience some nasty hand cramps that were particularly bad if I was switching between guitar and typing a lot. I was willing to try just about anything, which I did. I switched to Dvorak(2), an alternative keyboard layout. That didn\u0026rsquo;t do the trick so I tried the ergodone (still using Dvorak, my layout is here) and haven\u0026rsquo;t looked back. But that\u0026rsquo;s left a few interesting points, ignoring the obvious reason of price, why are people still using something seems to be obviously worse - in a word: Familiarity.\nFrankly, fuck that.\nWe can do so much better. Our phones have auto correct and limited text expansion, why do our beefier systems not do something a thousand times better with their superior on board resources? We could at least make it easier to grab text out of screenshots- But why are we not doing natural language processing so that I can verbally or textually describe to you a graph or math equation without needing to have committed to memory some archaic set of   \\( \\LaTeX \\)  symbol names (3)? Why are so many fields limited to ASCII, or maybe UTF-8, giving us those sweet, sweet emoji üî•üî•üî•üíØüíØüíØüíØ when we could have something that allows text, diagrams, pictures, videos, etc.\nWhy are we limited to only buttons on our keyboards anyway? I have a BDN9 macro pad that has encoders which I can use to input keystrokes too, this lets me map knobs to functions that makes sense, like pageup/down, volume up/down, brush size in an art program, etc.    More than Just the Keyboard: #  Mice and Touch pads and track balls #  Take your hand off your phone screen or mouse for a second and hold your hand in front of your face. Wiggle you fingers, move your wrists. With that last instruction what did you do? Did you rotate your hand, move it up and down, or twist it? Now, consider how each of your fingers possess such fine motor controls. Is a mouse really made to take advantage of this?\nWhat would be better? Clearly pointing with a mouse is actually already pretty good. If you just need more functions a gaming mouse with a plethora of buttons goes a long way, but I think that\u0026rsquo;s more of a stop-gap. What could we do better?\nWell, There\u0026rsquo;s already the Leap Motion\nThe leap motion hardware is basically just two cameras without an infrared filter and some infrared leds.\n The Leap Motion software does an actually really good job of using this information to reconstruct the finger positions in software.\n  and the Lexip 3D mouse - https://www.lexip.co\nNote, This mouse, the Lexip pu94, is a complete disaster and the result of what is effectively a failed kickstarter. The windows drivers are broken, I\u0026rsquo;m currently working on a custom Linux driver for it but like, yeah. Don\u0026rsquo;t buy one.  However, using the Leap for everything would require you hold your hands out to point - something that anybody who ever owned a wii can tell you gets very tiring very quickly - and the Lexip PU94 would be far to awkward to use daily.\nSo, I honestly don\u0026rsquo;t know what the pointing device of the future looks like. Maybe it involves a mix of a mouse, finger tracking, eye control, and joysticks? The use of WiiMotes for projection mapping shows that there is room for using different devices for different kinds of input though. Maybe it\u0026rsquo;s more like the non-game uses the Kinect has gotten over it\u0026rsquo;s post-lifetime? I\u0026rsquo;m not really sure.\nAs for issues with current tech, mouse acceleration and touch pad responsiveness, and touch pad dead zone are all big problems and, like, I don\u0026rsquo;t understand how that\u0026rsquo;s a problem in 2020?\nTo give credit where credit is due, there have been minor changes that are trending positive, such as Logitech\u0026rsquo;s MX Master Line with the infinite scroll wheels, and a general trend for reducing latency and increasing customization options of higher-end mice.\nUnfortunately, the drivers for configuring these options are still largely proprietary and anything but standardized, meaning making integration between brands and OS built-in support all but impossible. Of everything listed up to this point, I actually think this is the biggest problem. Without a consistent, extendable interface about the best that can be exposed is awkward hacks where joysticks are mapped as if they\u0026rsquo;re on a full game controller or keys just mapped to a macro of keyboard keys or existing but unused keys like the F13 though F24 keys or scroll lock. This is a massive problem.\nFoot Controllers #  MorningStar MC6, a MIDI foot pedal that\u0026rsquo;s highly customizable and has inputs for connecting analog expression pedals (the green thing on the left). 10/10 recommended\n Stinky Footboard - it\u0026rsquo;s effectively a 4-key mechanical keyboard for your feet. The driver for this product sucks, so I swapped the controller out for a promicro running QMK.\n  And, don\u0026rsquo;t get me wrong, both are great. Being able to use my feet to control my system really allows for a lot of flexibility; however, your feet can only do so fine-grained of control. Unlike keyboards where our fingers are great at hitting a bunch of individual keys, we\u0026rsquo;re better at hitting smaller buttons or controlling pedals (think pressure sensitive like a gas pedal) with our feet. So, with that in mind, you only get a limited number of inputs you can practically control, so those inputs really need to count. That\u0026rsquo;s the problem. They really don\u0026rsquo;t.\nEven with all the power that using QMK gives and all the configuration options exposed in the MC6\u0026rsquo;s config editor, they lack one big thing: Context sensitivity.\nEssentially, if my inputs are limited, there\u0026rsquo;s a limited number of solutions. The MC6 does offer multiple pages of inputs by stepping on two buttons at once to either page up or page down, but that\u0026rsquo;s not as good as just sending messages to the device to let it know that I\u0026rsquo;ve switched what I\u0026rsquo;m doing and that it should switch it\u0026rsquo;s active page/profile/whatever accordingly, the problem there is that has to be set up manually. With context sensitivity in theory devices could change the way they behave to be optimal for what you\u0026rsquo;re working on. Right now I have the Stinky Footboard set to control media playback (‚èØÔ∏è, ‚è≠Ô∏è, ‚èÆÔ∏è, üîá) but that\u0026rsquo;s currently all it is set to, and that seem like a bit of a waste. Sure, I could set up multiple profiles, but without them being context aware that\u0026rsquo;s a bit of a moot point. And, alright, I think the original driver software for it as well as the software for most of my \u0026lsquo;gaming\u0026rsquo; peripherals supports checking what the running program is, but that seems like a really bad solution and instead should be something the OS handles by letting the devices send generic button up/down events and doing ALL of the mapping in software.\nThe other relevant point would be the ability for inter-peripheral communication - basically, your mouse should be able to \u0026lsquo;talk\u0026rsquo; to your keyboard and vis-versa. This becomes a bit redundant if as mentioned above all the mapping and meaning of buttons is defined in software, but the point would be that a key-combo could change your mouse\u0026rsquo;s DPI, or holding a button on your mouse could put your keyboard into a one-handed mode.\nPen Tablets #  Honestly, most pen tablets are reasonably good. Not all of them have great latency, map super well between the pen\u0026rsquo;s nibb and the actual pointer on the screen, and the majority don\u0026rsquo;t support touch, which probably isn\u0026rsquo;t ideal, but in general they do the job well enough, or, would, if you only counted teh hardware.\nWarning, the following is a rant about drivers on Windows: This is interesting as the hardware is actually reasonably competent, while the software is largely so incredibly god awful that it is somehow impressive. While I realize this is totally anecdotal, one pen tablet I\u0026rsquo;ve used on Windows the driver software is so bad that it actually randomly takes over as the focused application about once every 15 minutes, meaning whatever line you were in the middle of drawing just stops and you have to click on the program again to keep going. But, like, even with more competent driver stacks there\u0026rsquo;s like a 6 different options for pen pressure: Wintab, Windows Ink, the option to \u0026lsquo;Use the device as a mouse pointer\u0026rsquo; \u0026hellip; It\u0026rsquo;s so incredibly confusing and the required options per application vary wildly. To make matters worse, most of the drivers completely shit themselves if one display is scaled for HiDPI and another isn\u0026rsquo;t. On Linux, ironically, I\u0026rsquo;ve actually had very good luck with pen tablets.\nBut even then most don\u0026rsquo;t handle pressure in a way that\u0026rsquo;s customization in a good way, instead relying on software to do pressure-mapping, which just isn\u0026rsquo;t great. It\u0026rsquo;s often a serious pain in the ass to get it set ùò´ùò∂ùò¥ùòµ ùò≥ùò™ùò®ùò©ùòµ so that you don\u0026rsquo;t get crazy pressure jumps and even if the driver has in-driver calibration, you still usually have to tweak it more in the specific art/drawing/art application so now you have TWO pressure maps and it begins to feel like trying to balance a double pendulum.\nI do still think there\u0026rsquo;s more room for improvement in the hardware too. I think Microsoft\u0026rsquo;s Surface Studio 2 actually had some really interesting and innovative ideas albeit it\u0026rsquo;s a weee bit on the expensive side at 3,500 USD. I also think the HP Sprout did some really neat things too. Unfortunately, I highly suspect both will suffer from poor long term support.\nI also think there\u0026rsquo;s room to allow for workflows that rely more on the physical, possibly something like Dynamic Land or even just the iskn Slate or Repaper (Note, I tried the slate and it really, really sucked. But the idea was interesting.)\nAudio And Video #  Your webcam is shit. You know how I know? Because it\u0026rsquo;s a webcam. Even the everybody\u0026rsquo;s go-to, the Logitcech C920, is shit(8). You know what else is shit? Your microphone. When you type on a laptop it sounds like damn earthquake, and if you get comfortable and lean back in your chair you suddenly get quiet. But more than anything it sounds like I\u0026rsquo;m carry a call over cans on a string. Maybe you have a gamer headset. Cool, the boom mic sounds about as good somebody screaming through a cardboard tube.\nBut, better cameras do exist, and if you are willing to shell out the cash you can get a decent mic, but either way they have a problem.\nThe default settings are still shit.\nOn webcams you have auto-white balance, auto-focus, auto-gain, etc. and everything it tries to do is awful. On a laptop where it will legitimately be in a different setting regularly, that\u0026rsquo;s some-what forgivable, but on a desktop webcam? Like, the only variable here is if there\u0026rsquo;s a window letting light in. Make calibration easy and give me a white-balance slider. Please. Or just make better cameras and let the open source community make better drivers. I assure you there are plenty of rage-filled nerds willing to make your product not suck so hard.\nYour mic is also shit for the same reason. When doing audio mixing for a video or podcast there\u0026rsquo;s some basic things that will almost always be in the mix chain: A noise supressor, A De-Esser, A Compressor (or multiple), and an Equalizer. For the most part, the settings on these things can be determined pretty algorithmically, or, better, a database of settings for hardware can be created and maintained - You\u0026rsquo;d still need to adjust for your voice (particularly for if you have a low or high pitch voice) but it could massively help.\nIf you have gone out and gotten an expensive mic or audio interface to plug you mic into, you may have decided to get one that connects to the computer and is powered by USB. This is really, really dumb. I think every audio device I\u0026rsquo;ve ever used that connects via USB has had some sort of noise issues because of the USB power. Stop it. Isolate the power and use a real power supply and some real filtering. Please.\nThough, probably the most obnoxious thing that results from this is the inability to route audio in any reasonable way. Linux and Mac it seems have this done semi-well, Mac with Core Audio and Linux with Jack, but on Windows if you want to use a nice mic to talk on VOIP you better hook up your mic on the the first input on the audio interface or you\u0026rsquo;re shit outta' luck my friend.\nI\u0026rsquo;ll expand on this thought later, down in the Your Audio Sucks Section.\nFinally, nobody has ever wanted their notifications to show up when sharing their screen. Why are notifications not deemed as a sort of \u0026lsquo;draw over\u0026rsquo; element by default?\nApplication Specific Controllers (MIDI Controllers, Video Editing, etc) #  First of all, this is done in a stupid way in most circumstances(9). There is no reason you should have single use hardware that sends specific commands that are not programmable by the user. Like I said above, let\u0026rsquo;s do all the mapping in software. This lets features be added later and users make better use of their controllers.\nBut, let\u0026rsquo;s look at some of what exists, and why I\u0026rsquo;m saying this. While other devices exist to pick on, I\u0026rsquo;m gong to focus on MIDI controllers as they\u0026rsquo;re what I know.\nFirst though, for those unfamiliar, what is a MIDI controller? MIDI, or Musical Instrument Digital Interface is a bloody ancient standard that\u0026rsquo;s still (mostly) 7-bit and let\u0026rsquo;s you send control messages about actions on a controller made for music, often a piano keyboard, so, something like Key C4 Down, Velocity 8 or twisting a knob may be on a MIDI Control Channel (CC) and will be like CC43 changed to 127. Obviously in 2020 having a 7 bit standard is a bit archaic, and it\u0026rsquo;s a rather stupid that it\u0026rsquo;s taken until earlier this year for the improved MIDI 2.0 standard to even be ratified, but I digress.\nMIDI controllers come in all shapes and sizes, from a grid of RGB buttons to traditional keyboards to just a large array of knobs, so, naturally people took notice, and MIDI can therefore be used to control things it was never, ever meant for. People often try to use it to control video editors, 3D modeling software, and generally anything that Adobe(10) makes.\n Pictured here are the Novation Launch Key MkII (The big keyboard), Launhpad MkII (the 8x8 grid), the Roli Seaboard Block, and two Roli Lightpad Blocks. (11) The Roli equipment uses MPE, a \u0026lsquo;standard\u0026rsquo; that abuses the hell out of midi and does things with it that were never intended.\n So now we have a crazy amount of controllers using a shitty standard instead of something that actually exposes more data and allows for finer control being used in ways that abuse the protocol instead of just exposing raw button down/up events and knob twists to the OS.\nNote, I\u0026rsquo;m being careful to say button up and down events instead of button press. This is because it makes a lot more sense to exrpess the events as raw as possible so the OS can do things like detect a double-press, long-hold, etc.\nVoice Control #  The first thing I want to point out is how incredibly English centric voice control is. I only speak English so I lack any more to say on the subject, but come on.\nNext, why can my phone do voice control but my computer either can\u0026rsquo;t or just really sucks at it. I know you can use OkGoogle from Chome, That Cortanna is a thing, and that there\u0026rsquo;s multiple open source projects that implement voice control. But, they all sorta suck. None of them can do much beyond just setting a timer or working with a limited set of supported applications in a way that fails more often than not.\nIf anything, I think Alexa is a bit ahead of the curve on this making it semi-easy to add custom actions, but does anybody actually have Alexa For PCs installed on Windows?\nI want voice control that can actually -do- something. Not 15 competing standards. It\u0026rsquo;s okay if they all implement the same standard protocol, but unless there\u0026rsquo;s a standard that all programs can start tieing into and it\u0026rsquo;s given real, time saving capabilities nobody will use it. This mostly comes down to needing much, much better natural language processing - something that GTP-3 has shown is possible - and having a way for applications to define accessible inputs and outputs. Think the Unix Philosophy where things can be piped and IO redirected but applied to larger applications and controlled via voice or text entry.\nObject Tracking #  What if everything you did was an actionable input? What if you could finger-drum on your desk and get real drum sounds, have your computer pause a video if you get out of you chair, or give the user a warning if they\u0026rsquo;ve been sitting with a bad posture for a long time? Between the Kinect, Leap Motion, and Tobii Eye Tracking we\u0026rsquo;re staring to get close to this.\nI think https://dynamicland.org has a lot of interesting thoughts on this idea and if this vision of the future interests you, you should check it out. ReacTable is another interesting concept in the relm of pyhsical computing too.\nI do think in the future we\u0026rsquo;ll stop using the basic screen + keyboard + mouse combo and see more \u0026lsquo;smarts\u0026rsquo; integrated into everyday things and our work flows. I really like the idea of having a desk with a camera and projector above it to highlight objects and interact with what it can see- scanning documents, giving feedback on technique with crafts, whatever.\nGame Controllers #  Re everything above. Something something make sure they\u0026rsquo;re rechargeable, ergonomic, and simply fun to use. My award for Not Sucking‚Ñ¢ goes to the Steam Controller and my award for Best For People With Three Hands‚Ñ¢ goes to the N64 Controller.\nRFID Tags #  I have RFID tags from Dangerous Things in each hand, I have an RFID based access card for my University, and my parking lot uses RFID tags for entry. Ignoring the obvious security problems with RFID authentication, It\u0026rsquo;s also just not great to have people carry around a card when their phones can already act as an RFID device anyway, it just makes for a very mis-placeable access token which seems rather stupid. I\u0026rsquo;ll talk authentication more in a bit.\nDocument Scanners #  I will not take this opportunity to rant about printers, no matter how much I want to.\nTo keep this short: Higher default DPI, options to output via OCR (Optical Character Recognition) directly to the document so you don\u0026rsquo;t have to even store the original document, built in de-noising (remove the dust specs), live scanning of paper via camera for things like helping with math.\nWhat\u0026rsquo;s worse is half this shit already exists, and it is shit. #  Want to look up  \\( \\LaTeX \\)  Symbols? Done. Want to have Optical Character Recognition on your screenshots? Textshot has that covered. But while I could go on with this list, the big problem is of integration While having an OS like Linux that is tweakabe to the nth degree is unmistakably fucking incredible. I also shouldn\u0026rsquo;t have to. I should be able to use any computer and trust the OS to have built in methods for getting text from a picture, to trust the OS will let me remap keys so that tapping the shift keys types perentheses or that I can bind the keys to type arbitrary Unicode. The OS should have a local - don\u0026rsquo;t you fucking dare collect all of this data - store of everything I\u0026rsquo;ve looked at so I can go back and search for \u0026ldquo;mostly purple images\u0026rdquo; or \u0026ldquo;links clicked on October 12th\u0026rdquo;. And like, there\u0026rsquo;s about a dozen different chrome extensions that try to do this under the very stupid assumption that essentially all of that interaction will be in browser.\nOur Physical Environments Suck #  Your Chair Sucks #  Did you get a gaming, racing chair that cost about $100 off of ebay? Yeah, you\u0026rsquo;ll regret that one soon enough.\nEven if you got a normal office chair, if it wasn\u0026rsquo;t exorbitantly expensive it probably sucks. I did like two weeks of stressing about finding something good and thankfully finally got a good recommendation from a friend, but otherwise it\u0026rsquo;s like $500 SteelCase chair or having a bolt poke though the butt-foam until it\u0026rsquo;s leaving a permanent indentation into your butt.\nIt\u0026rsquo;s not like we even need innovation here, (as proven by the influx of hot garbage \u0026lsquo;gaming\u0026rsquo; chairs) we just need something affordable that\u0026rsquo;s not garbage or plagued by fake reviews or reviews from another product attached to the new listing (Fix your shit amazon.)\n The chair on the right is the one my friend recommended, here\u0026rsquo;s a link to it on Amazon\n    But, I\u0026rsquo;m here to talk about the future, so what do I think can be better than anything I\u0026rsquo;ve even seen? Well, a good start would be threshold latches. Nicer office chairs often have a lock for allowing leaning back or not, but it\u0026rsquo;d be great if it was \u0026lsquo;locked\u0026rsquo; until a pressure threshold so you can lean back and stretch without un-locking and necessitating re-adjusting the chair, a sort of temporary unlock done by just leaning back harder.\nBut the biggest reason your chair sucks? It\u0026rsquo;s a chair. I\u0026rsquo;m not advocating for a treadmill desk, or sitting on one of those big ball things, I\u0026rsquo;m simply saying having the only reasonable way of interacting with our second-brains being in a seated, unmoving position does nasty things to our bodies. While it would make more sense to adapt our peripherals and input methods, it\u0026rsquo;s worth considering how we may re-shape our seats to work with us. A little while ago \u0026ldquo;I built a lay down desk\u0026rdquo; was trending on Hacker News, and it\u0026rsquo;s something I\u0026rsquo;d considered before too, but I want to think bigger: What if our desk and chair acted as one piece of furniture, one that was flexible between sitting, laying, and standing positions, and the chair bent to an appropiate shape to match the position of the desk? Design doesn\u0026rsquo;t have to be static.\n Your Desk Sucks #  or \u0026lsquo;why the fuck is it so hard to find a deep desk with a keyboard tray\u0026rsquo;\nI\u0026rsquo;ve gone though wayyyy to many desks. What I\u0026rsquo;m currently using is a nice big un' with a surface that is 5' x 2'4\u0026rdquo; and it\u0026rsquo;s still. not. big. enough. (for reference, a \u0026lsquo;normal\u0026rsquo; cheap desk seems to be ~3' x 1'8\u0026quot;). So I\u0026rsquo;ve had to put two desks in an L-shape.\nI know that I can pick from pleanty of L or U shaped desks on amazon, but most will be seriously lacking in depth and be less than study, so my 2-desk concoction is the best I can do without making one- which I do intend to do at some point.\nAnd, alright, I admit, I\u0026rsquo;m not a typical computer user. I have enough devices hooked up that lsusb gives me 28 lines of output, I have 3 monitors + a pen display, and my desk is also home to a whole host of lab equipment, a eurorack setup, and other various things.\nSure, It does actually have a decent sized keyboard tray unlike most where they just expect you to put the keyboard and mouse on top of the desk like some sort of monster, but that tray is still on the small side if I were to use a normal full size keyboard (with numberpad). Worse, if I use a normal keyboard my hands tend to hit the sides of the keyboard tray (where the slides attach). I\u0026rsquo;ve seen a ton of wooden desks with this issue. Just move the rails back like 2 inches and angle it. Please. A lot of desks also skimp on the height of keyboard that can fit in the tray. This is a fair trade off, as the better this is the closer it is to your legs when sitting, but still, I\u0026rsquo;ve seen multiple where the feet on the keyboard can\u0026rsquo;t be raised to make typing more comfortable otherwise the keyboard tray can\u0026rsquo;t be closed. My desk actually sits in a pretty good sweet spot on this, but\u0026hellip;\nI still think my desk sorta sucks.\nHear me out. First of all, I have a bad knee. Not like I\u0026rsquo;m walking around with a cane bad, but more like if I sit in one position for more than ~20 minutes and then move it I get a sharp pain like someone just drove a hot knife directly into it, but it only lasts a second. Yunno' what would be a major help with that? A sit / stand desk (height adjustable) desk.\nBut that won\u0026rsquo;t work for me, and probably a lot of other nerds reading this for one big reason. Wire. Hell. Like, maybe you\u0026rsquo;re thinking \u0026ldquo;Pssh, what, so you have like a dozen cables down there, power, display, USB mouse/keeb, and audio\u0026rdquo;\nHa. No.\nI won\u0026rsquo;t try to list it out, but Oh. My. God. A sit stand desk wouldn\u0026rsquo;t be possible because that wire hell is truly untameable in it\u0026rsquo;s current state, so, we\u0026rsquo;re gonna take a brief detour from the desk stuff:\nYou Are Now Entering: The Cable Abyss.\nI could rant to you about how USB-C with it\u0026rsquo;s 42 different standards is a god damn nightmare, and that\u0026rsquo;d even be pretty relevant here. But that\u0026rsquo;s not the rabbit hole I want to fall down right now, instead I want to introduce you to my friend, MIDI.\nMIDI Is a fucking shit of a standard. It\u0026rsquo;s 7 bit, ancient, and the \u0026lsquo;standard\u0026rsquo; (4) cable for it has (·µà·µâ·µñ·µâ‚Åø·µà·∂¶‚Åø·µç ·µí‚Åø  ∞·µí ∑  ∏·µí·µò À°·µí·µí·µè ·µÉ·µó ·∂¶·µó) 3 more pins than it even uses. By all metrics it fucking sucks. However, They did do one thing right.\nThis beautiful port:\nImage ¬© Shira Wolven 2020, used with permission This, is a midi through. On most gear, it\u0026rsquo;s accompanied by (at least) a MIDI IN, so, you can take your MIDI info in, and then, because a single midi cable carries 16 channels, chain other gear on.\nFrom this, To This. +--------+ +------\u0026gt;Device 1| | +--------+ | +----------+ +--------+ +----------+ +--------+ +--------+ +--------+ |Controller+----\u0026gt;Device 2| +-----\u0026gt; |Controller+---\u0026gt;Device 1+---\u0026gt;Device 2+---\u0026gt;Device 3| +----------+ +--------+ +----------+ +--------+ +--------+ +--------+ | | +--------+ +------\u0026gt;Device 3| +--------+ And, okay, so what? Well, I\u0026rsquo;ll tell you what. This is rad as hell. I currently have 3 6' Display Port cables running from my desktop on the floor up to my displays on my desk. The monitors are 4k and get pissy if I go over a 6' cable, so with my tower on my right, the left-most monitor has to have this perfectly 45' cable making the connection, so I can\u0026rsquo;t even organize the cables in the first place. But what if I could just route all of that to one monitor then piggy-back each one going forward?\nI\u0026rsquo;m not going act like this doesn\u0026rsquo;t have issues. I get it. There\u0026rsquo;s questions of signal integrity, making sure everyone follows the same standard (obviously can\u0026rsquo;t do that\u0026hellip;), and realistically it would probably mean adding more conductors and increasing cost. I get it. But I also see a ton of other benefits, especially if we made that same monstrosity of a cable capable of a fair amount of power. The same 12V ATX PSU in the desktop could justifiably power the monitors, giving us the efficiency gain inherit in using 1 PSU over the god only knows how many fire hazards that are currently on chained power strips down there.\nDeparting Cable Abyss Hell, Back to your Regularly Scheduled Ranting\nWhere was I? Ah, right. Desks.\nNext is adequate space for interruptions. While I\u0026rsquo;m a strong proponent of separating a space\u0026rsquo;s responsibilities (not eating where you work, not working where you consume media, not consuming media where you sleep, etc.) I understand that sometimes it\u0026rsquo;s necessary, and there\u0026rsquo;s nothing worse than not having a flat surface to put your bowl of soup on.\nSo, why are desks with pull outs (as pictured on the right) not more common?\nMore practically though, as mentioned before, it\u0026rsquo;s ideal if the mouse and keyboard aren\u0026rsquo;t in the way of desk space that would otherwise be used for physical craft, note taking, art, etc. So I think three spaces total are ideal: one for primary input devices- today that\u0026rsquo;s a mouse and keyboard; a second for papers, a main project, etc; and a third that is easily accessible added for the interruptions and side projects in life.\n   In summary\n Desks need a lot more surface area  L or U shaped desks seriously help with this   We need keyboard trays that are longer, and often taller Sit/Stand needs to come down in cost, be available in L and U shapes Desks need built in wire management Desks need to have pull outs  As a final note, I realize not everyone has space for a massive desk, but in that case, I think things like this folding desk (YouTube, DIY Persk) should be more common.\nFurther reading:\nThe Complexity of Building a Lie Down Workstation (altwork)\nYour Audio Sucks #  There\u0026rsquo;s a huge range of audio systems. You might not be able to have speakers at all and have to use headphones, maybe you have an awesome setup running Dolby Atmos like Deadmau5\u0026rsquo;s where the room and speakers have been engineered he can virtually drop an instrument on the sound stage wherever he wants.\nBut nothing like that is even needed in order to make things suck less.\nHow many times have you watched a YouTube video where the speakers voice had far too much bass or masked by a high pitch whine? How many streams have you heard where there\u0026rsquo;s some hum or annoying background noise? I\u0026rsquo;m sure you\u0026rsquo;ve turned up your audio because something is quiet only to have your ears ravaged as soon as the audio is fixed in the stream.\nAll of these things are totally fixable using a mix of hardware and software.\nBefore I get into all the following, I\u0026rsquo;m not saying all of these things should always be in use. For example when somebody is making music all of this obviously needs to be able to bypassed.  Why the fuck do we not have a system-wide limiter? #  And not just a dumb decibel limiter, but a loudness (Wikipedia) limiter. There\u0026rsquo;s no reason there shouldn\u0026rsquo;t be a toggle-able limiter to protect your ears\nWhy the fuck do we not have per-stream audio compression? #  Not file-compression but volume-compression. the \u0026lsquo;make loud sounds quieter and quieter sounds louder\u0026rsquo; kind. Generally this is something the music industry over-uses and it doesn\u0026rsquo;t sound great on music, but for voice it can make a huge difference for keeping things understandable and not distracting. Ideally this would be done before the content is ever published or sent though the network, but that won\u0026rsquo;t always be the case. So, you should be able to easily take any audio stream (say, a YouTube video playing in a tab) and apply a compressor to it.\nWhy do we not have live Speech to Text? #  Not all systems will be able to do this live without completely shitting the bed because of lack of processing power, but as our graphics cards are now including specific hardware for doing AI/ML based computation, there\u0026rsquo;s no reason we sholudn\u0026rsquo;t be using in the OS for the sake of grabbing the text out of all audio that goes in or out of the system. (of course, storing it securely and locally, nobody wants to wiretap themselves)\nWhy is Audio and Video Not Routable? #  Alright, so this is mostly a dig at Windows, where everything is Garbage. Mac has CoreAudio which is pretty cool, and Linux can mostly do this for audio via Jack Audio and work is being done to make something for both audio and video with Pipewire.\n This is a screenshot of \u0026lsquo;Catia\u0026rsquo; - a graphical program for audio routing with Jack Audio. Here I just have pulseaudio set to use my first two outputs as my speaker outputs (Sink -\u0026gt; System) , and the first input (my microphone, which is mono) set to be the input to the stereo \u0026lsquo;virtual microphone\u0026rsquo; that pulse audio provides to applications (System-\u0026gt;Source). All the orange and green stuff is for MIDI devices, which catia can also route.\n The reason this is necessary is with routable audio and video you can do things like route your webcam\u0026rsquo;s video first though software that does some video effects, then to a recording program and to a streaming program easily. Sure, this can be done anyway right now, but it often means creating a \u0026lsquo;virtual\u0026rsquo; webcam in the middle, and this scenario was already a fairly basic one. If you add in the aforementioned limiting and compressing as options you can see where this starts to matter.\nWhy are we not calibrating our audio devices? #  While it may seem like it at times- with big fancy tube amps, planar magnetic headphones, and silver cables for that hi-fi sound- audio is not black magic. It\u0026rsquo;s math. More over, while everybody\u0026rsquo;s ears are a bit different, the frequency response that most people want from their devices is more or less known. No device can perfectly meet this, at least not at a cost a mere mortal can afford. As that linked article details, this isn\u0026rsquo;t super straight forward anyway, as your head and ear size, room acoustics, etc. all mater. But here\u0026rsquo;s the thing:\nComputers are really stupidly powerful. We can make our audio quality better, even on sub-optimal equipment. I\u0026rsquo;m going to gloss over most of the math, but the gist is by putting a special microphone with know frequency response at the desired listening point and doing a frequency sweep from each speaker (or headphone) and all the speakers at once we can math out each speaker\u0026rsquo;s (or headphone\u0026rsquo;s) frequency response and phase cancellation characteristics, then, being careful not to cause resonant peaks or really obnoxious phase shifting effects, use a parametric EQ to get the speakers (or headphones) as close to ideal as possible.\nOf course, the better the starting point the better this correction will work. You won\u0026rsquo;t make some cheap iFrogs sound like Senheisers, but you might make them better.\nThere is software that does some of this, but I really think it needs hardware acceleration (hell, maybe an FPAA) and to be more common.\nYour Displays Suck #  I\u0026rsquo;m going to assume that if you\u0026rsquo;re reading this you\u0026rsquo;re probably using at minimum a 1080p, 60hz monitor. And like, yeah 2073600 is a ton of pixels. If you assume the normal 8-bit per R-G-B (24bit color) then you get ~2.98Gbit/s which is already pretty impressive if you think about it, but then consider that even cheap single board computers are starting to be capable of 4k, 3840x2160 which at 60hz is ~11.94Gbit/s and, alright, that\u0026rsquo;s already undeniably really cool. But, unfortunately, super not enough and already causing problems.\nIf you\u0026rsquo;re like me and running 4k @ 60hz, you\u0026rsquo;ve likely had at least some issues as a result of this. Lower quality Display Port (6) cables can cause occasional flickering, you\u0026rsquo;re probably limited to 6' DP cables. The reason I bring all of this up at the start is because I want to fully acknowledge that every extra bit we try to push down that pipe is pushing that even further and making it even more expensive.\nBut, let\u0026rsquo;s go to more day-to-day concerns, the things that suck even assuming everything is working fine.\nThe first thing is obviously resolution.\n4k is far from normal still. 1080p just is not enough. It\u0026rsquo;s super easy to see the individual pixels from even a comfortable distance and text is pretty unclear unless sub-pixel rendering(5) is used, but that makes things even worse because not all displays use the same sub-pixel layout.\nAnother problem with resolution is that ohmygod does scaling suck. A ton of applications, especially older ones, were made with the assumption that you\u0026rsquo;d be viewing everything on a 1080p or lower resolution. In general the move to 1080p actually wasn\u0026rsquo;t felt as much because the size of our displays increased with their resolution, increasing work area but keep the application size roughly the same. The problem is with the move to 4k we\u0026rsquo;re dramatically increasing pixel density at often the same screen size, so everything is ·µó·∂¶‚Åø ∏. Software scaling in the OS is pretty universally garbage, with some applications scaling in a way that looks super blurry, some being double scaled as both the OS and the application try to compensate, and some applications just not scaling at all. Because this is inherently a complaint about legacy support there\u0026rsquo;s no easy solutions here. Using 4k instead of other higher-than-1080p resolutions helps, as integer scaling (scaling exactly 2x) is an option as 4k is exactly equivalent to four 1080p screens stitched together, so you can just map 4-pixels in hardware to 1-pixel of what\u0026rsquo;s trying to render\u0026hellip; or you could, if we hadn\u0026rsquo;t already tried to use aforementioned sub-pixel rendering.\nI\u0026rsquo;m not sure that there\u0026rsquo;s really much need to go beyond 4k. While I haven\u0026rsquo;t even personally seen anything higher, I also can only pick out individual pixels when there\u0026rsquo;s like, one lit pixel on a dark background, and I don\u0026rsquo;t know that more innovation in resolution will really matter. Instead, there\u0026rsquo;s a pile of other outstanding issues.\n Little aside first. Some jackasses decided even on digital displays interlacing should be a thing. I don\u0026rsquo;t want to lose focus here, but I want to at least mention this, which you\u0026rsquo;ll often see listed as 1080i or 720i, is shit.\n Refresh Rate #  Do a little experiment for me real quick: try changing your display to 30Hz. Most displays will support it.\nNow move your mouse around in circles, try doing something where you need things to respond quickly, like playing games.\nYou\u0026rsquo;ll probably notice it directly, but if not, you will likely at the very least feel a bit motion sick.\nNow, realize that the vast, vast majority of displays are only 60hz. Double that, sure, but I think you could easily see how more would be great. This is exactly why most displays sold for gaming advertise being higher refresh rate, often 144hz or more. This is where my above commentary on throughput of DisplayPort and reliability at high rates. If you look at the Display Port (Wikipedia) you can see this problem has been mostly addressed, but that only means so much if cables are shit and monitors that are both high res and high refresh rate cost both arms and a leg. Obviously this should get better with time, but it\u0026rsquo;s still a problem.\nSome displays may support Freesync or Gsync (7), and both of these technologies require a supported graphics card in the system as well. These allow the display and computer to adaptively change the refresh rate so the monitor and computer both send and display frames in sync, which can make even a low refresh rate \u0026lsquo;feel\u0026rsquo; much higher. This is a feature typically marketed to gamers and only supported in video games, but this has been changing a tiny bit. The big thing to note here is that it\u0026rsquo;s dependent on the frame rate of the application that the user cares about, you could, I guess, sync to your your compositor\u0026rsquo;s (the thing that draws multiple windows onto the desktop simultaneously) frame rate, but I don\u0026rsquo;t think there could even be any benefit there. So, really, this is mostly applicable to games as there\u0026rsquo;s a few other applications you\u0026rsquo;d even want to run in full screen where this latency and responsiveness improvement would matter.\nrelated to refresh rate is latency. In general this can actually mean two things, one is how long it takes for an image sent to the screen to actually be displayed. The lower this time the better, with good screens being sub 10 millisecond. Unfortunately, there\u0026rsquo;s no standard among the industry to measure this and many get it wrong.\nAlso with latency there\u0026rsquo;s grey to grey times, this is a measure of how long it takes a pixel to go from one shade to another. The lower this is the less motion blur the screen will exhibit.\nThis, to me, is a big deal. Latency is something you can feel. If there\u0026rsquo;s a long total input lag between the time you click something and that action taking place, that\u0026rsquo;s a big fucking problem- and long here doesn\u0026rsquo;t even mean all that much time:\n Testing has found that overall \u0026ldquo;input lag\u0026rdquo; (from controller input to display response) times of approximately 200 ms are distracting to the user.[6] (Wikipedia Article on Input Lag)\n So, the time it actually takes for your display to update once it\u0026rsquo;s gotten a frame is not irreverent.\nDimming #  Unless you\u0026rsquo;re a fan of melting your eyes out of their sockets, you likely do not have your display set to maximum brightness. Unfortunately, dimming on most displays is absolute garbage.\nInstead of doing DC dimming, that is just lowering the voltage of the back light so it is dimmer, the majority of displays do PWM, Pulse Width Modulation, Dimming.\nPWM image by Thewrightstuff CC BY-SA 4.0 So instead of just lowering the level directly, the back light is turned on and off rapidly, for a varying amount of time. This might be done really fast, sometimes it\u0026rsquo;s fast enough that it really does not matter or there\u0026rsquo;s a reasonable amount of capacitance to smooth this out, effectively making it look like just a DC signal again, good enough. Sometimes, the manufacture sucks and uses shitty, low frequency PWM dimming and even if you can\u0026rsquo;t consciously see it, it will cause headaches and generally suck over long periods.\nYour browser does not support the video tag.\n This is PWM dimming on a fourteen-segment display captured with the \u0026lsquo;slow-mo\u0026rsquo; camera on my phone.\n In this video, because it is so incredibly slowed down, you can see the led\u0026rsquo;s flash easily, but at that middle setting I can easily see it in real-time too and it is headache inducing. At the lowest or highest settings it isn\u0026rsquo;t noticeable. Persistence of vision is why this even works in the first place, but obviously that has limits and crappy PWM dimming on an otherwise nice display can really, really suck.\nThis has put me in the crappy situation before of having to set the display to max brightness to avoid the headache from the strobing effect (Pulse width at 100% means constantly on so just DC), but dealing with being blinded by any application with a white background.\nColor and Dynamic Range #  If you have multiple displays that aren\u0026rsquo;t exactly the same you know just how annoying un-matched color can be. This is a harder problem to solve than some of the others. Color calibration definitely helps, but that only means so much when the actual display technology may be different. an LCD will look different than an LED will look different than an OLED even if they\u0026rsquo;re color calibrated to match. This, I think, is actually reasonable. What is totally unreasonable is how digital color looks in the first place. Let me start by linking a video:\n This sucks. Like, why have we accepted this? Sure, things like High Dynamic Range (Wikipedia) or HDR - which allows the panel to selective change the brightness in an area of the screen, giving much better dynamic range in supported applications - have helped with this problem indirectly, but it\u0026rsquo;s still not great.\nWhat we really need is to finally step up from 24bit color to something better, and in fairness, this has been happening. A lot of newer monitors do support 10bit per channel (30bit color (Wikipedia)) and some do 12-bit. Unfortunately, at higher resolutions this sometimes requires trading refresh rate for color depth (want 30bit color? You\u0026rsquo;ll have to run at 30hz.)\nYou\u0026rsquo;re also likely to notice the color gamut or what range of colors the display is actually capable of displaying.\nFor example, two displays may both be capable of displaying 255 levels of red, but if one display\u0026rsquo;s range is only from a dingy red to a dark-ish red, while the other is from a brilliant red to a deep dark red, there\u0026rsquo;s a massive difference in color availability. If this is important to you, notably as a creative professionally in photo or video, you may want to read more on the Wikipedia page for Color Gamut. In general, displays particularly suck at displaying a wide range of green.\nNext up is dynamic range, or how deep the blacks are and how vivid the whites are. Here, OLED is probably the best as it can display true black by actually turning the source of the light off, but unfortunately these are quite susceptible to burn in and image persistence, plus moving the image quickly can result in a \u0026lsquo;purple smear\u0026rsquo; - something you may have noticed when scrolling though images on your phone.\n Note, OLED isn\u0026rsquo;t really ready to be used for normal desktop or laptop monitors yet, as it can suffer from really bad burn in or image persistence. Looks great for movies, but when you have un-changing elements on screen for hours at a time it\u0026rsquo;s not ideal.\n Non pixel displays #  You know what would really help with the search for the perfect display though? Needing it for less things.\nAs time has moved on computers have taken over the role of more and more tools on our desk, but that also means the screen has had more responsibilities - I doubt you have a physical clock on your desk.\nI love analog meters. They can be backlit like old VU meters in stereo equipment, or they can totally illuminated by the environment. Regardless, they\u0026rsquo;re quick and easy to read. Needle high, needle low. On the right I have a picture from my (horribly implemented) CPU meter project that just shows my CPU usage on the radiation meter and ram usage on the RGB led.\nOf course, other forms of more passive indication are great too: Little e-ink or oled display, not-too-bright leds (or VFDs or Nixie tubes if you\u0026rsquo;re feeling adventurous) - not everything needs to be on your screen. Let your eyes look away to a dedicated device now and then.\n On the right, for example, is the Quirky Nimbus, which I think it shows this idea rather well.\nNote, the nimbus had issues when it did work, but is now a victim of IOT evolution as it\u0026rsquo;s servers have long since been shut down and it\u0026rsquo;s very difficult to hack (I own one and tried). So, uhh, don\u0026rsquo;t go out and buy one.\n   Your Space Sucks #  Noise #  Just looking at the Wikipedia Article on Noise Polution, it\u0026rsquo;s pretty obvious that humans like to be somewhere where noise is kept to a minimum. There are of course questions about what you want to consider noise. Like, clearly above I made it clear I prefer mechanical keyboards which, as anyone that has been on a discord call can tell you, are rather loud. The difference is in it being noise you\u0026rsquo;re causing, or background noise that you can\u0026rsquo;t control. Fan noise from your computer, music from another room that you can\u0026rsquo;t quite make out, a rattle from the HVAC system, that\u0026rsquo;s noise. Somehow we\u0026rsquo;ve all gotten rather used to rather noisy environments.\nDon\u0026rsquo;t get me wrong, improvements have been made. A lot of computers don\u0026rsquo;t even run the fans when they\u0026rsquo;re idle or you\u0026rsquo;re just web browsing (plus the fans have gotten bigger, which means lower pitch, which is way less annoying), LED bulbs don\u0026rsquo;t have the ballasts that were required of old fluorescent bulbs that always found a way to whine, we no longer used CRT (Cathode Ray Tube) screens that had flyback transformers whining at the edge of human hearing either. But it\u0026rsquo;s still not great. Even if none of the electronics in a room have fans or speakers or the other things you expect to make noise, you can still notice when a room has been shut off. If you spend a lot of time surrounded by electronics like I do, not having the hum around is a mix of eerie and relaxing. But, still a lot of electronics do have fans, and they\u0026rsquo;re often crap. Even the high end ones that PC building enthusiasts idolize like those from Noctua are far from amazing.\nBut, come on. Why are we not integrating at least some sound control into our architecture? Why is acoustic dampening something only used by streamers? Why are devices that we know get nasty coil whine not being silenced by just adding some wax or glue to the inductors?\nIt\u0026rsquo;s not like most of the solutions for making noise better aren\u0026rsquo;t available and understood, it\u0026rsquo;s just that it takes an extra bit of consideration and maybe a bit more money.\nI\u0026rsquo;m not sure what the solution should be. Maybe products need to have some sort of testing for this and a label applied, like the ubiquitous \u0026lsquo;Energy Star\u0026rsquo; stickers or the 80 Plus ratings on PC power supplies.\nLighting #  If you\u0026rsquo;re in an office right now, I can take a pretty good guess that the lights above you are some of those 4ft long fluorescent tube bulbs, probably in an excruciating 6500k.\nThe problem with that color temperature isn\u0026rsquo;t necessarily that it\u0026rsquo;s too \u0026lsquo;cool\u0026rsquo;, it\u0026rsquo;s that it\u0026rsquo;s fixed at that point. 6500k is about the same as the sun on a clear day\u0026hellip; at about noon. The problem is our bodies expect warmer colored light closer to night or it screws up our sleep cycle. The website for the software f.lux has aggregated some good research on this subject, but I think at this point it\u0026rsquo;s actually pretty common knowledge as even Samsung phones ship with the ability to turn a blue light filter on.  Image from Bhutajata on this Wikipedia article    Brief aside, if you use Linux, Redshift is a good alternative to f.lux\n Right now we\u0026rsquo;re still in the annoying stages of this sort of system, most RGB or color temperature variable bulbs have rather crappy Color Rendering Index (CRI), so even if the temperature is variable the quality still sucks.\n This is purely anecdotal, and it seems the Phillips Hue bulbs at least have a decently high CRI, but like, they\u0026rsquo;re also a tad bit on the expensive and privacy invade-y side of things sooo ¬Ø\\(„ÉÑ)/¬Ø\n But worse, the software to keep these bulbs in sync is pretty gross, and some bulbs will just end up snapping from one color to another every 15 minutes or so, which is more distracting than it\u0026rsquo;s worth.\nThe next worst offender with lighting is all way to bright (often blue) leds on E V E R Y T H I N G . For the love of god guys, the lights are supposed to be indicators, not light the entire room. There shouldn\u0026rsquo;t be a product with over a thousand reviews on Amazon with the sole purpose of dimming obnoxious LEDs. Like, leds aren\u0026rsquo;t even the best thing for the job anyway most of the time. I\u0026rsquo;d think an e-ink screen, like on the pwnagotchi below, would be sooo much better for most applications that need multiple indicators. For a power on indicator, an led is fine, but please just make it like 20x dimmer or put it near the power input instead of somewhere normally visible.\nLike, my center display has a blue led that is on when the monitor is on instead of the more normal standby indicator that goes off when the display is on found on TVs. It\u0026rsquo;s immensely distracting. Sure it can be fixed with a tiny piece of electrical tape, but whyyyy?\nFurther Reading: 1 (Tedium.co) 2 (Hackaday)\n my \u0026lsquo;Powonagotchi\u0026rsquo; üñ§\n   An offending LED indicator on the Mackie CR4 speakers. It\u0026rsquo;s meant to illuminate the volume knob in the dark but it mostly fails at that, especially since the all-black knob relies on a bump for indication rather than a white stripe.\n   On a far less useful but neat note- I think \u0026lsquo;ambilight\u0026rsquo; systems need to be more common, obviously user choice weather or not to use it, but yeah. 10/10 need more ambilight in my life.\nBasically ambilight is just a system for letting the colors from the pixels near the edge of the screen be mirrored onto some RGB leds so that the color spills onto the wall behind. It\u0026rsquo;s a really neat effect for games or movies.\n Ambilight image from Wikipeda user Stephan Legachev, resized for this blog.   CO2 #   Alright, so after seeing this I went out and got a CO2 meter. I watched it get above 2000ppm regularly. I took steps to lower it and now, honestly, I do feel better.\nThis requires two things to fix:\n Better indoor ventilation A Carbon tax and other restrictions that scientists and economists have been telling governments for decades that they need to be doing before we lose entire ecosystems, our entire world becomes inhospitable to life as we know it, more cities have air that is literally toxic, and things just generally go to shit.  Coming back around to \u0026lsquo;How is this relevant to how we interact with computers\u0026rsquo;?\nWell, I imagine you like to breathe while at your desk, and I also assume that you\u0026rsquo;re using a device that uses electricity to read this, and that device is very likely not powered by renewable energy.\nA Good Environment for Thought #  It\u0026rsquo;s also worth considering what is in your space to keep visually appealing. Wires dangling over things, pealing paint, unorganized shelves, etc. are obviously off-putting, but I\u0026rsquo;d go the step further to say they actively interrupt productivity as they stick out and beg to be fixed. It\u0026rsquo;s the standard scenario of not wanting to do homework until the room is clean. On the other hand, adding a bit of tactile flair can go a long way. It is tough to strike a good balance. I personally don\u0026rsquo;t want art or static words (paintings with text, motivational posters etc.) in front of me in my work space as I find that distracting. Instead, a bit of sound dampening foam on the wall can go a long way, both for sound in a room and adding visual interest to the wall, and it\u0026rsquo;s pretty cheap too.\nTo keep your desk tidy a good start is just getting rid of your monitor\u0026rsquo;s base and using a VESA mount to the wall or back of desk. the flexibility in position and extra available desk space goes a long way, and it\u0026rsquo;s much, much more visually appealing.\nRather paradoxically, I do see value in motion in the work space too. For example, MIT\u0026rsquo;s reactive table or those fancy marble in sand tables can add much needed visual motion to prevent a space from becoming stale. Hell, even a simple fish tank or plant that adds a bit of change with time make\u0026rsquo;s a huge difference.\nIf you do think \u0026ldquo;huh, I could go for a fish tank\u0026rdquo;, I will warn you most produce a fair amount of noise with running water and motors for the air pump and filtration. There are some tanks that avoid both though, so don\u0026rsquo;t immediately rule it out, just do your research.   Chapter 2: The Digital  Chapter 2: The Digital #   Alright, now onto the fun stuff, I think I\u0026rsquo;ve established that the physical side of how we use a computer is sub optimal, but what about how we actually do the things we do day to day? I think, for the most part, these things can be put into a few categories:\n Finding and Accessing shit Looking at shit Storing Shit Transferring Shit Making Shit  I\u0026rsquo;m not the first to think on this subject by any means, Programs are a prison: Rethinking the fundamental building blocks of computing interfaces by Robert Lechte put a lot of ideas I\u0026rsquo;d thought before into words much more elegantly than I can, please give it a read then come back here, keeping in mind how the ideas presented there could work with what I\u0026rsquo;m saying here.\nFinding and Accessing Information Sucks #  Search sucks #  If you\u0026rsquo;re like most people, you probably use Google Search, but also don\u0026rsquo;t like Google Search. Google\u0026rsquo;s search makes the entire top of the page ads, tracks you, and is just generally a bit invasive, but, you still probably use it instead of DuckDuckGo because the results often get you to what you\u0026rsquo;re looking for faster.\nTo some extent things have gotten better as it is gotten easier to search directly from the search bar, with more browsers supporting setting the search engine by a prefix in the url bar, so if, for example, I want to search wikipedia and directly go to an article, I can just put a \u0026lsquo;w\u0026rsquo; before what I search:\nAnd this definitely helps, but it\u0026rsquo;s also not enough.\nSearch now regularly returns a number of results that is completely unprocessable by the human brain\nSo, what can be done about this? Well, there\u0026rsquo;s already a fair amount of advanced search options:\n   But I honestly think these more or less miss the point of how people want to search, not to mention they\u0026rsquo;re not super easy to remember. Being able to take things out in large swaths is often rather helpful, so why are there not options like NO_SOCIAL to get rid of all social media results.\nOn a similar note, Ask HN: Is there a search engine which excludes the world\u0026rsquo;s biggest websites? was posted a while back, and I agree with idea: often I can find better information on smaller sites, so I think there should be an option to just say NO_10K to drop the top 10 thousand most popular sites from the search results. I don\u0026rsquo;t know if this is really the right way to do this though. Fortunately, I do think the resurgence of Webrings is improving that a bit.\nFinding something when you don\u0026rsquo;t know the word for it exactly can be challenging too, especially if the correct term is also shared with something else (like looking for skateboard trucks but only searching the word \u0026lsquo;Trucks\u0026rsquo;). This wouldn\u0026rsquo;t be so bad, but sometimes trying to filter out the incorrect results doesn\u0026rsquo;t work either, because of unforeseen overlaps. Unfortunately I don\u0026rsquo;t know of a solution to this problem, as it\u0026rsquo;s one of conveying intent.\nOften, I find what I\u0026rsquo;m looking for faster by just going to as close of a topic as I can think of on Wikipedia and poking around links than I can by directly searching.\nIt\u0026rsquo;d also be nice to have the ability to just set a list of bad sites. Like, please never ever show me any results from Pintrest.\nThinking more into the future, I would very much like to see a world where data searching is context aware. For example, say I\u0026rsquo;m searching for a data sheet for an old vacuum tube and I have a schematic of an old amplifier open in another tab, I would love if the browser saw the context and changed the label in the schematic into a link to this datasheet. Furthermore, it would be great if it crawled the web and finished finding datasheets and linking them, possibly well before I even even got to that page in the first place. I know we don\u0026rsquo;t have the tech to do this yet, especially not as a general purpose tool, but I like to think about the future. ¬Ø\\(„ÉÑ)/¬Ø\nAnother point is the summery of information and omission of the irrelevant info. Say I were to look up bits in a byte, I don\u0026rsquo;t necessarily need the historical context as to why bits are named bits and bytes, bytes, though even though I didn\u0026rsquo;t search it, presenting that a nybble is 4 bits, and how to tell endinan-ness is more relevant, unless I had recently searched historical information or stated I wanted that explicitly. In my opinion we should be less concerned with finding relevant results and more concerned with discarding the irrelevant, though making the verbose available.\nI also think that bringing people together, potentially anonymously, based on search and knowledge could be extraordinary valuable. If as I\u0026rsquo;m looking up \u0026lsquo;How to do X\u0026rsquo; and somebody else is looking up \u0026lsquo;How to Do Y, an advanced topic from X\u0026rsquo; it would be fantastic if we could talk, albeit unobtrusively to the person being requested. It seems to me that searching is desperately lacking a social element and ranking system. How great would a simple Reddit like upvote system on any given search be? What if browsers added a comment system that was hosted though some sort of distributed network and tied to each page so people could leave comments on any site regardless of if the site has comment functionality built in? (Yes, I know this is ripe for spam and abuse, but let me dream\u0026hellip;)\nGoogle also needs to quit their shit with information cards:\npic.twitter.com/FPQnLW60Vt\n‚Äî Randall Munroe (@xkcd) December 1, 2020  Pay-Walls suck #  Look, it\u0026rsquo;s not that I don\u0026rsquo;t think journalists shouldn\u0026rsquo;t be paid. They should be. It\u0026rsquo;s just that having everything behind a paywall blows. There\u0026rsquo;s not any fun solution to this. Ads suck too. Nobody wants a web full of micro-transactions, and the idea of news sites mining crypto while I read bothers me too. So, let\u0026rsquo;s just ignore the news sites for a second, and instead, focus on the much more offensive situation: academia and scholarly articles (not that they\u0026rsquo;re all good to begin with (YouTube, DefCon 26))\nIt\u0026rsquo;s no secret that access to academic articles is fucking expensive. JSTOR alone is $200 a year for only 85% of the content, some individual articles are well above $20 to read despite a huge portion of it being publicly funded in the first place, yet somehow these sites wonder why so many sites are turning to Sci-Hub.\nYou Pay to Read Research You Fund. That\u0026rsquo;s Ludicrous (WIRED)\nBut it\u0026rsquo;s so much worse than that. Tons of information services are subscription based. So, the costs add up way worse. While it may seem like a bit of a stretch, I think it\u0026rsquo;s pretty reasonable to call Netflix, Hulu, etc. all information sources as they often host documentaries, if we look at The Cost of Every Streaming Service Per Month (TheStreet), and assume just the most popular ones, so Netflix, Prime Video, and Hulu, it\u0026rsquo;s already at $418 a year. Is it really any wonder why people are piracy again? Even if you subscribe to the theory that Piracy is a distribution problem and not a price problem, the pay walls are still the problem, as each service has it\u0026rsquo;s own incentive to hoard as much exclusive content as possible and make their platform better than others for the price. This means that each platform runs on it\u0026rsquo;s own standards and cross-compatibility is a real PITA. There are now websites and apps that specialize in just telling you which streaming service has what. Like what in the fresh fuck.\nAuthentication and Authorization Suck #   Authentication is the sign in\nAuthorization is what the user and service can do, or what \u0026lsquo;permissions\u0026rsquo; you grant the service and what you\u0026rsquo;re allowed to do on the service.\n Authentication: #  I\u0026rsquo;ll bet cold, hard fictional cash that you\u0026rsquo;ve put off turning on two factor for a service you don\u0026rsquo;t give two shits about.\nI\u0026rsquo;ll double my fictional money to bet that you have a junk password you use by default everywhere you don\u0026rsquo;t give a shit.\nHell, I\u0026rsquo;ll go all in betting on saying you\u0026rsquo;ve authenticated with quite a few services by just using the\nLOGIN WITH SOCIAL MEDIA\n button, though possibly only because it was the only way to login to that service at all. Unfortunately, all of the above are probably not the best decisions.\nThe top two points combined mean someone can find your password in previous security breaches (haveibeenpwned), and then just login in, easy as that.\nUsing a social media login means that if you ever lose access to that account, either because Facebook or Google or Twitter or whatever decide to ban you or because you manage to forget you \u0026lsquo;master\u0026rsquo; password and lock yourself out, you\u0026rsquo;ll be locked out of everything you logged into those services with. Not to mention if someone manages to break into your Facebook or Goggle or Twitter or whatever they\u0026rsquo;ll be able to login to any of those services too.\nAnd look, I\u0026rsquo;m guilty of all of the above too. Sure, a password manager helps with this, but that\u0026rsquo;s still annoying too as sometimes you just need to quickly sign in on a device for a few minutes. As of right now there\u0026rsquo;s just no good solutions that are secure, easy to use everywhere, and fine gained enough to let the user give permissions as they want, and not give extra permissions they don\u0026rsquo;t want to.\nAlright, so just follow the normal advice and use long passwords?\nxkcd #936 Yeah. No. Well sorta. Okay, let me explain. Yes, you should use long passwords for exactly the reason this comic explains. But really, we need to stop using passwords outright. They just sorta suck.\nInstead, we should go to Single Sign-On, like the above \u0026ldquo;Login with Social Media\u0026rdquo; example, but the user should be able to trust and change the identity provider with ease, to avoid the \u0026lsquo;Facebook banned me\u0026rsquo; issue.\nThe real shitty part is a lot of services already support something like this, letting you setup sign in with Single Sign-On via your own identity server, but it\u0026rsquo;s usually limited to enterprise users.\nThat said, you can self host Single Sign-On (like the way \u0026lsquo;Sign in With Google\u0026rsquo; works), keycloak, Dex, Gluu are options for doing this. It\u0026rsquo;s just that basically no online services will let you use your self hosted service without an enterprise account.\nSo, for now, users get fucked. There\u0026rsquo;s really not any good options.\nThat said, some things have gotten better, Webauthn provides a much better way to authenticate with many services, including some that can provide Single Sign-On identities, often via those little USB keys which are hugely better than the typical user name and password paradigm.\nNote, those USB security keys have updated in standard. The newer ones which support WebAuthn are a bit more expensive and less common. The standards are confusing to understand, but the TLDR is you want something that supports WebAuthn/FIDO2.The older standard, U2F, is a two factor system while the FIDO2/Webauth keys can outright replace passwords on the service If you really want advice on what to use for your personal, daily password storage needs I think keepassxc is probably the best option at the moment, though it\u0026rsquo;s still a tad awkward.\nFor advice on making secure programs see Engineering Chapter 23.\n Authorization: #  Put simply, we need easier to use, fine grain authorization settings that can\u0026rsquo;t be bypassed. I should be able to tell a program, website, or app that I don\u0026rsquo;t want to give it my location, and then, if it asks anyway it should be fed garbage. Refusal should also not stop access to that service. Similarly for storage, microphone, contact, etc.\nNewer versions of Android actually do this really well, including the ability to only grant those permissions for that session. This is amazing. It\u0026rsquo;s not perfect, far from it. Like, Bluetooth requires location permissions and, unless you\u0026rsquo;re on a rooted phone, there are some permissions the user can\u0026rsquo;t even give. That\u0026rsquo;s a load of shit, but I\u0026rsquo;ll come back to that.\nContent Linkage sorta sucks #  Screenshot from the homepage of Obsidian.md The digital world doesn\u0026rsquo;t have to be lonely pages indexed like a book, why are we treating it as such? Today each page can point to any other page in a beautiful web of interconnected information, where each topic has lines of association spanning such that no two pages are unconnected. Wikipedia sort of has the simplest form of this, but what if we had systems so capable of automatic understanding - not just tagging - of information that any new info could propagate though that web naturally. Social linkage to people in the same graph, even if anonymous, could help connect people that together, due to their very specific knowledge, drive man kind further. I should clarify to, I literally mean a web/graph, possibly in 3D, relating and indexing information, possibly like these 3D views of Wikipedia: (though the data should probably be served \u0026lsquo;raw\u0026rsquo; so that other presentation methods can be developed, as this definitely wouldn\u0026rsquo;t be ideal for actually reading the content)\nWikiGalaxy: Explore Wikipedia in 3D (wikiverse.io is very similar and worth checking out too) Obviously this overly linked system is something that people would need to get used to. Until the advent of the WWW we\u0026rsquo;ve read information linearly, page by page. The web has allowed this tree traversal style of navigation so that any missed topic can be reviewed, but generally this is a system where the tree only builds down, to simpler information, from the current node. It seems weird to think about an algebra book where it suddenly references multidimensional calculus, but this is exactly what I\u0026rsquo;m implying. In my education there was uncountable times I had to learn something because \u0026lsquo;it will be used later\u0026rsquo; with no explanation as to how or why. Linking back up the tree allows for information traversal in both directions, eliminating this problem.\nPresentation of Information Sucks #  This section is about how we view information, the presentation of words on a page, graphs, and information in general. To start, I want to look at something a little bit different.\nThis is the home page for a project called Gemini, which is a sort of alternative internet, but, wait, hang on\u0026hellip;\n   These are both that same page, loaded in different browsers. Why do they look different?\nWell, Gemini does something you may thing strange: It let\u0026rsquo;s the browser (client) handle the look of the page. It only serves the raw text. That\u0026rsquo;s it. That\u0026rsquo;s all you get.\nNow, I do not think this is a good idea for the general web. But, I do think as an idea, it can give us some valuable insights.\nPut a pin in it for now though, let me jump ahead into Dark Patterns:\n\u0026lsquo;Dark Patterns\u0026rsquo; #   A dark pattern is \u0026ldquo;a user interface that has been carefully crafted to trick users into doing things, such as buying overpriced insurance with their purchase or signing up for recurring bills\u0026rdquo;\n That\u0026rsquo;s the definition from from Wikipedia anyway. I think it\u0026rsquo;s a bit better put as \u0026ldquo;Dark Patterns are what happens when UI designed are a bag of dicks\u0026rdquo;\nThis Site has a lot of really good info on Dark Patters, and I recommend heading over there and then coming back over here.\nOh, cool, you\u0026rsquo;re back.\nThe biggest dark pattern that drives me nuts is a bit of what that site calls \u0026lsquo;Confirm Shaming\u0026rsquo; and a bit of \u0026lsquo;Misdirection\u0026rsquo;, I\u0026rsquo;m talking about sites that do this\nDO THE THING HERE\n or don't and watch the world burn\n where the design is actively pursing an agenda. But it's not just those. Even ones that look semi reasonable can still be annoying if they don't include the action directly. The affirmative action should be stated on the button that triggers it and both actions given equal weight to the user.\nDon't Do Action Do Action  for example\nLeave Items in Place Delete Items  Note here by Action I literally mean to include the verb. Delete. Replace. Print. Etc. Yes or No is not good enough.\nWith destructive or irreversible actions, such as deletion (not recycling), given a confirmation dialogue, and if particularly important, a dialogue that require meaningful user input, like this prompt when deleting a repo on GitHub\nAlright, so back to Gemini: Making more things like it wouldn\u0026rsquo;t totally solve this problem, designers could still totally chose to make the text confirm shame, but by letting more elements be controlled by the user (or their browser), we could at least do a little bit better by letting that ensure options to confirm or deny are given equal weight and that they are colored appropriately.\nIt\u0026rsquo;s not like this system couldn\u0026rsquo;t be abused still of course, and there will always be a balance between the user trusting the service and it\u0026rsquo;s UI and the beauty of that UI, but I think we could stand to go a bit in the direction of Gemini.\nMisleading Information #   \u0026ldquo;Global warming relies on the theory that we are destroying ecosystems. There is no evidence that we could destroy ecosystems.\u0026rdquo;\n Rush Limbaugh, recipient of the Medal Of Freedom. Yes. Misinformation online is a royal fucking shit show. There\u0026rsquo;s no way to possibly preserve total free speech, not that we should, and also have a system that doesn\u0026rsquo;t spread misinformation to the extent that people stop vaccinating their kids or thinking that COVID is a hoax. I\u0026rsquo;m not trying to address that problem. If I could, I would. But I honestly think that\u0026rsquo;s a genie we can\u0026rsquo;t really put back in the bottle now.\nInstead, I think we could do some things to make it a bit harder to spread stupid, false information by making it a bit harder to present data in misleading ways. Sure, the data itself may still be bad, but, we can make an attempt to increase transparency and display data accurately. How? Well, first, go have a look at some comically bad graphs (Statistics How To).\nA lot of these come down to graphs that purposefully play with axis or do other bullshit with the express intent of tricking you.\nSo, fuck their formatting. We should do it the Gemini way: Let the client handle the data display, and make the graphs interactive. If it\u0026rsquo;s a two bar chart with one bar at 54.5% and one bar at 55.0%, that should be what the user sees first and only then can zoom in.\n This is already easy enough to do with something like https://d3js.org/, but it would need to be on the client side, and the server would just have to send the raw data + a preferred way to render it (bar chart or whatever), otherwise the problem is still there. Over time standards could grow to support more display formats. This would have the side effect of making it easier to author data and make web pages in the first place.\n This also makes it easier to compare data sets, as now the client actually has access to the source data, or at least the data that drew the graph.\nThis practice could be incentivized too, as news, shopping, and review sites that use it could do so as a way to build trust with their users, and, probably more importantly for adoption, shit on their competitors that don\u0026rsquo;t do the same.\nFor those that still don\u0026rsquo;t, it might be possible to spin up a system with some machine learning to extract data from graphs in static images, and then re-display them as dynamic content.\nThis may not ensure the data is good, but at least it makes progress in increasing how we can trust data to some extent.\nThis could have extra uses too. Having something that could take two 2D graphs with a common axis and turn it into one 3d graph would be incredible, particularly if that data could come from multiple sources across multiple domains. Combine this with the ability to change the type of graph and this could help expose otherwise non obvious trends.\nBeyond that, content moderation needs improvements too - I don\u0026rsquo;t even mean fake news or porn here (Though we could stand to have better nsfw tagging on most social media). I mean the bullshit reviews on Amazon or the fake products when shopping online (mostly fake electronics). If those services are going to be allowed to make stupid amounts of money, they should be required to do at least a tiny bit of consumer protection.\nInformation Overload #   ∏·µâÀ¢ ·¥µ À¢·µâ·µâ ·µó ∞·µâ ·∂¶ ≥·µí‚Åø ∏ ·∂¶‚Åø ·µÉ ·µñ·µíÀ¢·µó ·µó ∞·∂¶À¢ À°·µí‚Åø·µç\nBobby Mikul, Times Square :CC0 \u0026ndash; Source Information overload is increasingly becoming a problem. As more and more information is accessible at our fingertips and more advertisements have the opportunity to be beamed via any one of a number of surrounding screens directly into our retinas we need a way to filter it down to levels the human brain can cope with and digest.\nThis is a complicated subject, on one hand, it\u0026rsquo;s amazing to have an infinite wealth of information. On the other, an ever growing amount of that information is shit and irreverent, and eats away at our very limited mental processing time for the day, we can only ingest and actively pay attention to or throw out so much information, and when much of the information we seek to avoid (ads) are actively doing everything in their power to demand attention from our brains, be it with sex appeal, bright colors, or even humor, it\u0026rsquo;s an uphill battle. So what can we do? Well, a good start would be to legally limit advertising to be less distracting from normal content and make the advertising more easily distinguishable from the real content. But I don\u0026rsquo;t think that\u0026rsquo;s enough. I think if we\u0026rsquo;re going to make systems that have machine learning to get better and better at sucking our time we need to put in just as much effort to making design that promotes health and consumption in moderation.\nAn example of this is Netflix\u0026rsquo;s \u0026lsquo;Are you still watching?\u0026rsquo; while this was implemented on their end to prevent unnecessary usage of data, it has the side effect of letting a user know they\u0026rsquo;ve been on the couch longer than should probably be advised. I\u0026rsquo;m not advocating for interruptions at every corner, just affirmative action by the user before bombardment with data. I do think as much data as possible should be linked to or aggregated, but force me to see more than what I request plus some surface level information. For something like YouTube this might mean playing a playlist is fine, but don\u0026rsquo;t start playing another \u0026lsquo;related\u0026rsquo; video when that list is over.\nBeyond that, keeping the design minimal but powerful. I think markdown is a great example of this. Users aren\u0026rsquo;t as dumb as people seem to think, we can, and do, learn the ways to make interaction with the things we use daily faster, so make the \u0026lsquo;speed limit\u0026rsquo; as fast as it can be while lowering the need for menu diving and learning to do complex actions. Putting a frequently used option into a menu that needs to be clicked at all is much slower than assigning it a keyboard shortcut.\nBut, okay, back to information overload: The biggest problem is still that there\u0026rsquo;s just too much. I don\u0026rsquo;t really think there is a solution, maybe Banning Outdoor Ads like Brazil\u0026rsquo;s Largest City Did, would be a start. Maybe requiring that the Terms of Service for any service a user signs up to be a limited length and actually commendable would help. But I just don\u0026rsquo;t know. I think the world has just simply progressed to a point where FOMO has gone from a fear of missing out has gotten to a point where missing out is just a fact of life as 500 hours of content are uploaded to YouTube every minute.\nWhat I do know is that trusting the YouTube or Facebook or Twitter algorithm to decide the content I see is incredibly dangerous, but that the alternative is overwhelming.\nMeanwhile, legislation that has been passed to try to fix some of this often results in other issues, like all the \u0026lsquo;Can we give you cookies?\u0026rsquo; prompts on websites: Why The Web Is Such A Mess (Youtube - Tom Scott)\nUpdates after Initial Draw #  Fuck your shit. Compute first, then display.\nThis may be the most irritating thing I encounter with modern computers. Our brains and bodies, as much as we may wish them to, don\u0026rsquo;t respond to stimuli right away. So, when I search for something, go to click something, and then while I\u0026rsquo;m moving the mouse to click the screen updates and a different link or icon is now in the spot I meant to click it\u0026rsquo;s really fucking annoying.\nWindow\u0026rsquo;s built in search, especially with web results on, is a huge offender on this but Google and other search engines do it too.\nIt\u0026rsquo;s not just search either, I\u0026rsquo;m sure everyone has encountered this in various places.\nAll you have to do is not change shit until you\u0026rsquo;re done computing the answer, and then only change it once. This is about as simple as it gets and it avoids magical re-arranging menus that make everyone lose their shit.\nEverything needs to be more damn responsive #  Fuck your ùíªùí∂ùìÉùí∏ùìé animations. I love eye candy, and a little bit is fine, but I shouldn\u0026rsquo;t have to wait as a menu slowly drops down with some pretty animation. If I\u0026rsquo;ve used that menu before I probably already know where I want to click, and now because I expect to be able to do so instantly I just clicked whatever is behind it. Fuck that. If the animation is masking some load time, sure, but as soon as it is loaded, quit it, and show the damn content. If the animation is necessary to avoid suddenly flipping from black to white and blinding users, again, I get it. But it doesn\u0026rsquo;t need to take more than 100ms.\nAdvertising #  If I have to spend more than a fraction of a second to process what is being shown to me is an ad, it should be fucking illegal. If you want to put ads mixed into the content, then it should be required to be a lot of a lot more visually obvious.\nOriginal:\n Edited:\n  Here the original at least has some color differentiation (Using the Boost app to view Reddit) but on the official Twitter client I actually have to stop and look to avoid accidentally clicking an ad link. That\u0026rsquo;s some bull shit.\nYunno what else is bullshit? The fact that all of these ads are \u0026lsquo;personalized\u0026rsquo; to the point that collecting crazy amounts of information on individuals is expected and almost inevitable online, even with a pile of tracking blocking extensions and a DNS blackhole like pi-hole. This could, and should, be a rant of it\u0026rsquo;s own. Being spied on by our own devices is 100% not okay and it\u0026rsquo;s one of the biggest reasons that they way we interact with computers sucks.\nStoring Information Sucks #  Storing your data blows. Users have to contend with backups, backups for you backups, bitrot, file size vs compression, what file system to use, how to make backups actually convenient, mirroring information between systems with limited bandwidth, etc. But to start somewhere let\u0026rsquo;s look at archival:\nArchival #  Digital archival on \u0026lsquo;cold storage\u0026rsquo; sucks. For one, that cold storage is often either a PITA to attach in the first place, Usually using either using a slow USB interface, an expensive and far-from-universal thunderbolt one, or, if you want to go very bulk storage, requiring a specialized PCIe card which is meant for servers which brings along it\u0026rsquo;s own pile of issues.\nBut even once you have everything attached, most of the time backups are pain to run. You can always do the lazy copy-and-replace-existing method, but that\u0026rsquo;s painfully slow as it has to check all the current files instead of just doing the logical thing and comparing two indexes, but, of course, most file systems don\u0026rsquo;t support this index based method. Sure, there\u0026rsquo;s software to add it, like Bvckup, but most that I can find is paid or not something I would trust.\nUsing Git (or GitAnnex) is of course an option, but that has a higher barrier to entry to learn than seems reasonable. At the same time having actual file versioning needs to be a thing, something better than having untitled.docx, untitled.docx,untitled3final.docx, and untitled3.5.finaler.docx, even if it is still storing the file in full (though hopefully compressed) behind the scenes.\nBut, on the note of indexes, why are tools to provide a disk-offline index not better. From what I can find, catcli and Virtual Volumes View are the main two options, and both are bit out of the way to use, compared to just having it be natively in the file browser.\nPhone ‚Üî PC is the fucking worst. #  MTP needs to die a very painful death. USB Mass Storage, that is, devices that show up the same way a flash drive does, are infinitely easier to work with. On Android, with large folders, I\u0026rsquo;ve found adbfs, a tool that lets you do file transfer over Android Debugging Bridge, to be much better than MTP, but, really? No \u0026lsquo;normal\u0026rsquo; user should be expected to use that. Hell, a lot of people are just uploading files to the cloud and then downloading them on the target device because it\u0026rsquo;s easier. There\u0026rsquo;s also a growing number of apps that let users to transfers over wifi by hosting an Samba server on the phone, but why would something wireless be better? It\u0026rsquo;s absolutely crazy that things have gotten this bad.\nWe\u0026rsquo;re using ancient formats #  Look, jpeg and png are perfectly fine formats. For 2000. It\u0026rsquo;s 2020. HEIF (or BPG) really should be standard. Instead, it\u0026rsquo;s a motherfucker because M$ is too damn cheap to include the HEVC extensions which it relies on it without either having the user pay $0.99 (or claiming to be the OEM) because a collection of jackasses have it patented so hard and require licensing fees such that it may as well not exist. HEIF/HEIC or BPG I think have a good chance because of the preexisting hardware acceleration, but other formats like hific, which uses GANs to do compression, look promising too.\n As a note about why I wrote about HEIF/C in particular, most phones are capable of storing images in this format now, and IPhones do by default, which is a real PITA if an apple user emails these pictures to a Windows user.\n Of course the same applies in other formats. .flac is replacing .wav for high end audio, but why not Direct Stream Digital (DSD)?\n All the best formats are a pain in the ass  format shifting sucks, opening them sucks, patents suck   People use some really, really shit formats A lot of formats are needlessly complicated and not human or computer readable to anyone but the software vendor  Bit rot? #  XKCD #1683 Data on the internet gets compressed, saved, recompressed, resaved, upscaled, re-colored, and deep-fried pretty quickly.\nThis combined with more traditional bit rot, where errors result in flipped bits, is a massive PITA.\nSure, tools like Waifu-2x help with the first problem, but using AI-up scaling to fix the loss of data isn\u0026rsquo;t ideal. For actual bit rot, tools exist to detect bit errors in most formats and you could always use a better file system that does check summing, but both of these require more technical skill than most people have.\nWhile not exactly related, data accumulation and near-duplication (think having two pictures with one having just a 2px cropped off the top) is a big problem. Trying to sort though a mounting of images, text, or audio files can be nearly impossible if put off for too long, making good digital hygiene a must despite the fact that nobody ever tells anybody how to have good digital hygiene in the first place.\nAI tools to tag and identify images and audio help, but those tools are still limited and often only work well on uncompressed data, so no .jpgs or .mp3s for you.\nWith all of this combined keeping your files in order, not corrupted, and not having duplicates becomes a growing issue.\nStorage Hardware and File systems suck. #  The hardware issue is mostly a side effect of trying to market technical differences to people who ultimately just want a place to drop their files. A normal user shouldn\u0026rsquo;t have to know what all the various specs of a HDD or SSD mean to know what to buy.\nThat said, holy shit do manufactures suck at this. Everything from Western Digital redefining \u0026lsquo;RPM\u0026rsquo; to Western Digital uses SMR on NAS drives,\n SMR, or Shielded Magnetic Recording, has a few issues that make it problematic for Network Attached Storage (NAS) systems using multiple disks, particularly if the NAS is running ZFS, a common file system made exactly for this use case.\n on hard drives, to DRAM-less SSDs and Bait-and-switch in regards to SSD performance.\n why the fuck are we still using NTFS and EXT4 and not ZFS and LVM  Microsoft, not merging some fucking filesystems https://github.com/maharmstone/btrfs (WinBtrfs)   Hard drives are just, bad  Screaming at them makes them run worse Shouting In The Datacenter  I have a subwoffer right next to mine   Feeling the inertia in a laptop    Cloud Storage is a terrible idea #  To keep the core of this issue brief: The cloud is just someone else\u0026rsquo;s computer. You can\u0026rsquo;t ever be certain of what they\u0026rsquo;ll do to your data, if they won\u0026rsquo;t have some random DMCA complaint take something down, if they won\u0026rsquo;t suddenly increase price and essentially hold continued access to your data at ransom, if they\u0026rsquo;ll mine your data for targeted advertising, or if you\u0026rsquo;re data will accidentally be public because of bad security. Just\u0026hellip; don\u0026rsquo;t.\nThat said, I will admit two valid uses:\n Collaborative Editing. GSuite is actually pretty cool. Backup but only if the service is only backup and you already have at least an on site backup. For example, I think Backblaze is actually a pretty neat service and it seems like they do things reasonably. The ship you a hard drive option here is what makes it make sense to me. Note, I\u0026rsquo;ve never actually used Backblaze.  But 1. still has it\u0026rsquo;s issues, especially if the format the collaborative documents are saved as are only viewable on that cloud platform.\nI\u0026rsquo;d also like to mention the idea of distributed computation here as well, as It can be used for both the storage of and computation on data. I think that having a true distributed system in place, one where all users contribute compute and storage for it\u0026rsquo;s use, makes sense. The obvious ask is to get it to be self sufficient. This brings up the idea of balanced usage to contribution, I think the easiest solution is to simply use a system of computational debt tied to each user account. If the user is creating more computational debt than the average debt the system can sustain then that user should be handicapped in bandwidth accordingly. This does sort of bring us full circle in \u0026lsquo;can I just trade debt with someone, or sell them my computational time\u0026rsquo; such that we\u0026rsquo;re back to crypto based services again though, and I really don\u0026rsquo;t like this idea for two reasons:\n This system needs real time computation and bandwidth, and these vary in value just like how electricity peak hours cost more. This incentives simply paying for compute time instead of actually contributing computational power to the network like it actually needs, which in turns creates an incentive for people to do this at scale annnndd look at that we\u0026rsquo;re back to centralization.  The biggest problem with this is that home Internet users very rarely have symmetric connections, so people would probably be very pissed off if their download speed were suddenly tied to their upload speed. This could be offset by building up credit, as previously mentioned, but that has the issues, as previously mentioned. I suppose there could simply be a credit cap, but setting that would be exceedingly awkward as a logical number to use would vary by user and how they use the system.\nI do hope that someone has a better idea than me for the future of distributed computation, because I really can\u0026rsquo;t see any good solutions despite wanting it to be part of the future.\nI\u0026rsquo;d also be remiss if I didn\u0026rsquo;t mention Boinc, a tool you can use to donate unused computational resources from when your computer would be otherwise idle to good causes such as Searching for Extraterestial Life or Folding protiens to look for cures to various diseases.\nTransferring Information Sucks #  I mostly mean networking, but things like flash drives too.\nThe Internet Sucks #  Well, okay, the internet is honestly fucking awesome. But some of it is designed horribly and some of it is nowhere near as good as it could be because of users making stupid choices.\nTo start with, let\u0026rsquo;s look at how horribly shit was designed. As a start, I recommend reading IPv6 Is a Total Nightmare ‚Äî This is Why by Teknikal, it explains the issues with both IPv4 and IPv6 beautifully. There are other issues with the web, like the fact that neither DNS or IP were designed to be encrypted (and so private) by default, so instead we\u0026rsquo;ve had to patch on fixes like https. Of course, there network security problems are found regularly, such as Nat Slipstreaming, a nasty issue that made the rounds recently.\nThere are also issues of access. In the US at least, most places are part of an ISP regional monopoly. Often they\u0026rsquo;ll argue that you do have options, such as satellite internet. However, this is complete and total bull shit. You do technically have the option, sure, but this option is slow, usually has data caps, and just generally sucks. If you\u0026rsquo;re in a rural area, you\u0026rsquo;re lucky if the copper in the ground is still good enough to get you something fast enough to watch a YouTube video. Then, ontop of all this BS, the ISPs regularly get caught for doing shit to your traffic, weather it be injecting ads, terminating connections early, blocking services (often torrenting), not letting you forward ports, etc. Oh, and then they try to charge you for a modem you don\u0026rsquo;t even have- thankfully that was just made illegal.\nTLDR; ISPs are evil.\nCentralization Sucks #  https://lbry.io/\nhttps://datproject.org/\nhttps://ipfs.io/\nTransferring Your Profile Sucks #  AnIdiotOnTheNet\u0026rsquo;s Comment on This Hacker New\u0026rsquo;s Submission - \u0026lsquo;Re-Thinking the Desktop OS\u0026rsquo;\n [\u0026hellip;]\nSwitchable \u0026ldquo;user profiles\u0026rdquo; instead of \u0026ldquo;user accounts\u0026rdquo;, which are an artifact of giant shared computer systems. User profile just contains personalized settings and can be located anywhere, including removable media so you can take yours to other computers. If you want to keep things safe from others, encrypt them. Otherwise there are no permissions except those applied to applications themselves.   I think Solid, a project by Prof. Time Berners-Lee, the guy behind the World Wide Web, is a decent implementation of this if it were to gain enough traction to actually be used.\n Solid\u0026rsquo;s central focus is to enable the discovery and sharing of information in a way that preserves privacy. A user stores personal data in \u0026ldquo;pods\u0026rdquo;, personal online data stores, hosted wherever the user desires. Applications that are authenticated by Solid are allowed to request data if the user has given the application permission.\n Solid Wikipedia Article But the point I\u0026rsquo;m trying to convey is that right now setting up a new device or logging into a service sorta blows. The user profile needs to be secure, user-owned, and decentralized. For those that know Linux, it\u0026rsquo;s what making your ~/.config folder into a git repo should be like.\nLocal Backups By Default #  Most web pages are reasonably small, especially if you ignore java script crap. Why do browsers not just backup all web pages we go to (on desktops and laptops where storage is a non-issue) ? This would provide the benefit of being able to do a local text search of everything browsed recently as well as backups in case the page goes offline or moves.\nThere are tools that do this already (like Archivebox) which can be automated but it\u0026rsquo;s still not user friendly to normies. There are also sites like Waybak Machine and Perma.cc that will save copies of websites for you and provide a link that should always work, even if the website goes down or the address changes, but again, this is a bit of a pain. It also can lead to copyright issues for these services.\nWhy can‚Äôt you easily search all of the text you read on any screen (desktop + mobile) over the past day?\nIt‚Äôs strange how much obvious, low-hanging fruit of this form still exists.\n‚Äî Patrick Collison (@patrickc) January 15, 2018  Physical Interaction #  I also think the boundaries of physical and digital should be more blurred. I\u0026rsquo;d love if I could set a book on my desk and search though it for an idea or concept by mere image recognition of the cover, or if it\u0026rsquo;s an unknown book at least being able to digest any pages shown to it explicitly. Say a section was highlighted? It would be great if that were automatically added to a personal journal file of sorts for future reference, especially if related data were automatically associated with online sources, or links made to people who are interested in similar subjects.\nThe Screenless Office (Screenl.es) and Dynamic Land both show this idea pretty well.\nCreating New Information Sucks #  Or, People Will Only Make Stuff That Is As Good As The Tools They Have\nNote the Will and not Can. A very talented musician can make a shovel sound good, a talented photographer doesn\u0026rsquo;t need a good camera. But in general that\u0026rsquo;s setting the required bar of talent - and therefore time - higher. The better and more efficient our tools are, the better content people can make without putting in more time than they\u0026rsquo;re willing to.\nA better camera won\u0026rsquo;t make you a photographer, but it might be the difference between unusable pictures and a saved memory\n I think I\u0026rsquo;ve generally made the case that our tools suck so far, but here\u0026rsquo;s where I think things can get really interesting.\n[TODO]\n Faster input  WYSIWYG sucks Needing to compile your views also sucks   Tools need to scale in complexity with the user  Start by showing an intro UI, let the user add more features to the UI as needed Great in application documentation Included examples on UI help and highlighting   Program data type interopability  Common in-progress formats for video editors, image editing, sound editing, etc.   Variety of formats, hard to shift between  mp4 or .gif?   Copyright is a real pain  As far as how all of these tools should work and interact, well, I think they should all use standardized file formats, even if they have to abuse them a little to do so and that they should all have a common Application Programming Interface (API) for interaction. This would hopefully mean that any extension written for one program would work for another, and any program could talk to another. For example, currently the realm of music software has a little bit of this with VSTs and MIDI. but it still leaves a lot to be desired. I\u0026rsquo;d actually like to take it a step further though and ask that all data of any kind use a common enough format that it can be processed with any extension/program written with this API in mind. Imagine if you could use a synthesizer as a static generator for image manipulation, or color management controls as an EQ. Both would and should behave in strange way, and it\u0026rsquo;s this very lack of defined behavior that could lead to interesting art forms. I\u0026rsquo;d love to see a \u0026lsquo;Master\u0026rsquo; API that works across all formats and ideas with a common data type that allows for program‚ü∫program, program‚ü∫extension, program‚ü∫hardware, etc. communication even in long, complicated chains. After all, if you\u0026rsquo;ve taken a signals and systems course you know that basically any data can be treated as a signal.\nThis could be done with some sort of node based programming system. While I don\u0026rsquo;t actually know how to use it, I think Luna demonstrates this concept fairly well:\nthough there are plenty of other examples, like the node editors used for making shaders or programming in Unreal Engine\nPotentially this could also plug into the entire OS as well, making it so an image manipulation program\u0026rsquo;s extension could for example modify anything output to the screen in real time, or an audio program could effect the output of anything. For developer\u0026rsquo;s this may even offer more power, making possible things such as inter-process communication (think pipes, like $ls -la | grep png) a matter of connecting two nodes, or reading disk information such as activity, space, or even writeback and inode information, this would literally allow any one piece of information to be accessible to any other. This does have obvious permission issues, but unix permissions should already have this under control. If something like this could also be tied into the previously mentioned internet search and socialization \u0026lsquo;web\u0026rsquo; without massive security concerns the potential use cases are as simple as getting color information from an image hosted online to as complicated as remote access or distributed computing.\nOh, and our systems are fucking racist and suck for anyone with special needs. #  Racist, how can a computer be racist? #  Well, okay, this depends on the definition of \u0026lsquo;racist\u0026rsquo; I guess, but there\u0026rsquo;s definitely some issues. There\u0026rsquo;s the more mundane and debatable stuff such as using \u0026lsquo;Master/Slave\u0026rsquo; to denote device control schemes or using the terms whitelist and blacklist for allowed and dis-allowed lists respectively, but those are all results of human naming decisions.\nThe bigger issue is with AI. There have been a ton of stories now where facial recognition software, used for test taking or by government and police, have built in racial biases as a result of learning the same racial biases that made up the data sets to begin with. This is, to put it extremely mildly, not great.\nSpecial Needs? #  Well, yeah. How often do you see more common needs like color blindness accounted for, let alone issues like screen readers. If anything, some of these things are getting worse. For example, web design is becoming more and more javascript heavy, which can often result in screen readers just not being able to process much of the text on screen. Meanwhile, applications that everyone is expected to use are becoming complex enough, with more and more rarely used features being shoved into sub-menus that it\u0026rsquo;s harder to interact with them in non traditional ways.\nSure, we\u0026rsquo;re making better hardware to tackle these issues, but a lot of it is pretty expensive.\nThere\u0026rsquo;s also the problem of making computers accessible to people with metal handicaps. And I\u0026rsquo;ll be honest, this one\u0026rsquo;s rough. Just like how power tools are an extension of our ability to do physical works, computers, I think, are naturally an extension of the mind. If a subset of users have less capable minds to begin with, it\u0026rsquo;s going to be really hard to design around that.\nI\u0026rsquo;m not the best to talk on these issues to begin with though as for the most part my body and mind don\u0026rsquo;t impede the way I work or require special tools. So, instead I\u0026rsquo;ll link to some other articles:\nSoftware development 450 words per minute\nChapter 3 of \u0026lsquo;Buliding Accessible Websites\u0026rsquo; by Joe Clark (I think this is written a bit\u0026hellip; bluntly. I don\u0026rsquo;t agree with everything here. That said, it\u0026rsquo;s still a good resource)\nAccess #  While not an issue strictly pertaining to race or disability, there\u0026rsquo;s certainly a bias for those groups to also be poor or in worse circumstances that limit their internet connection or hardware\u0026rsquo;s speed. The solution? Stop making shit so fucking bloated. If you\u0026rsquo;re developing on a high end computer with umpteen cores and enough ram to store the English-only copy of Wikipedia (12) make sure to at least try it on something else and see if it still works.\nWe basically don\u0026rsquo;t even own our computers anymore #  Like many things in this far-to-long article, this could be post on its own, but I do think it\u0026rsquo;s necessary to bring up the fact that there\u0026rsquo;s an on going war against general purpose computation. If you\u0026rsquo;ve got an hour to kill (or half an hour if you can tolerate 2x speed), this video is basically required viewing:\n A few notes on this video.\nSOPA, the Stop Online Piracy Act, is mentioned because at the time it was a big deal. Thankfully, it was indeed stopped.\nIllegal Numbers are a thing, and the history of them is incredibly interesting\n There are also issues on ownership, for example:\nAmazon Sued For Saying You\u0026rsquo;ve \u0026lsquo;Bought\u0026rsquo; Movies That It Can Take Away From You\nMicrosoft Is Closing Its Ebook Store and Taking the Books With It\nChapter 3: What\u0026rsquo;s Else Is Needed? #  Script all the things! But Not Like That‚Ñ¢ #  [TODO]\nVisual Programming but still supporting text based programming, natural language scripting\neverything is a file/folder (inc. full programs)\nOptional Security #  TempleOS is a really weird operating system. From Wikipedia\n TempleOS is a biblical-themed lightweight operating system designed to be the Third Temple prophesied in the Bible. It was created by the late American programmer Terry A. Davis, who developed it alone over the course of a decade after a series of manic episodes that he later described as a revelation from God.\n[\u0026hellip;] using an interface similar to a mixture of DOS and Turbo C. Davis proclaimed that the system\u0026rsquo;s features, such as its 640x480 resolution, 16-color display and single audio voice, were designed according to explicit instructions from God.\n But the part that\u0026rsquo;s cool to me? TempleOS gives no fucks about security, now, that\u0026rsquo;s at least in part because it doesn\u0026rsquo;t have networking (though there is a fork with networking) but even then, there\u0026rsquo;s no concept of an admin or \u0026lsquo;normal\u0026rsquo; user. There\u0026rsquo;s no system-protected processes. You want to flip arbitrary bits, directly send data over IO lines, whatever. The OS will not stop you. The entire thing runs in ring 0, which means you always have total control over the hardware, but it also means there\u0026rsquo;s nothing stopping you from massively fucking everything up and crashing the system, corrupting everything, etc.\nTempleOS (Linus Tech Tips)\nAnd, okay, yeah, that\u0026rsquo;s obviously not ideal for normal use, but I think there\u0026rsquo;s something to be said for having the option to say fuck it, slam your fist down on the manual override button, and take full control of the system. This is what I mean by optional security - no HAL 9000 in the way. No sudo, no \u0026lsquo;no\u0026rsquo;. In this mode it should also be easy to turn off all networking and malware protection, so a super-fuckit No firewallls, no threat scanning, etc. switch.\nRunning as root in Linux is almost this. It could even be argued that it\u0026rsquo;s better since toying with memory though /dev/kmem is probably easier than trying to deduce the physical memory map. That said, there\u0026rsquo;s still some restrictions on the root account compared to running directly in \u0026lsquo;kernel mode\u0026rsquo;.\nBackwards Compatibility via Compatibility Layers #  AnIdiotOnTheNet\u0026rsquo;s Comment on This Hacker New\u0026rsquo;s Submission - \u0026lsquo;Re-Thinking the Desktop OS\u0026rsquo;\n [\u0026hellip;]\nBackwards compatibility should be a high priority, but accomplished via shim layers and/or emulation and/or vms when clean breaks are necessary. A wide array of such should be included with the OS from the beginning. In 2020, there is no excuse for not being able to run old software.\u0026quot;   And yeah, that pretty much sums it up. Currently backwards compatibility is often a choice of actually going to better technology and fixing bugs - like the Excel leap year problem or supporting older files without them massively breaking. There\u0026rsquo;s really no reason we couldn\u0026rsquo;t do both using comparability layers. The cost, I think, would mostly be in accepting that the transition to those comparability layers will be rough and that some thing will just have to be upgraded until that compatibility infrastructure is in place.\nThere\u0026rsquo;s no reason we shouldn\u0026rsquo;t be able to run very old software, but also no reason to use that as an excuse against moving forward.\nA fairly interesting solution to some of this might be to implement hardware compatibility via FPGAs, that is loading either full soft-core CPUs or instruction set translation logic onto a tightly integrated FPGA. Higher end retro console emulators are already using FPGA emulations of the original CPUs anyway, so this isn\u0026rsquo;t some crazy fantasy. To add even further hope, AMD owns Xilinx and Intel own Altera, so the two biggest CPU manufactures both already own the two biggest FPGA manufactures. There\u0026rsquo;s nothing stopping them from making integration standard. (well, other than cost and market segmentation)\nHardware Modularity, Repairability, and Customization #  According to Wikipedia Right to Repair is\n legislation that is intended to allow consumers the ability to repair and modify their own consumer electronic devices, where otherwise the manufacturer of such devices require the consumer to use only their offered services\n This is a big deal, with big player like Apple and John Deer lobbying incredibly hard against it. I can\u0026rsquo;t possibly explain even a fraction of all the nuance in the arguments, so instead I recommend reading this post from the Electronic Frontier Foundation (EFF) for a quick overview.\nAs for modularity and customization, I mean that hardware should be made such that components can be swapped out. For example, most desktop computers do a decent job o f this, where each component - the CPU, graphics card, power supply, RAM, etc. - can be upgraded individually (14). This concept desperately needs to be more widespread. It simultaneously cuts down on eWaste by increasing longevity, allows consumers to only pay for what they need, and lets consumers buy-now-upgrade-later if they can\u0026rsquo;t afford what they really want to start with.\nThe only real downside for the consumer is that the products might be hair bit thicker? Yeah, I think that\u0026rsquo;s a fair trade.\nNetwork Transparency #  Network Transparency is a neat concept, basically, it means you can use a program over the network as if it were local. I think the coolest example of this is the X Window System on Linux, which lets you run graphical programs on a remote computer, even one with no screen attached, and have the window be visible on your own computer. For example, while you could always setup a file server to access file remotely, you could also just use X\u0026rsquo;s network transparency to forward the entire file manager window to your computer and browse files like normal.\nI\u0026rsquo;d love to see more applications and backend software (like X) support this.\nThe Ability to go Back In Time #  A lot of software already runs on an idea of \u0026lsquo;events\u0026rsquo; or \u0026lsquo;transactions\u0026rsquo;, whatever you want to call it. What I want is for these to always be undo-able, at least for window of time or number of past events. This might mean updates, changes to a file, or just scrolling down on a screen.\nA refresh should try to bring you to the previous state, dismissed notifications should be able to be un-dissmissed.\nAs previously mentioned, you should be able to go back to a saved copy of any web page you\u0026rsquo;ve visited. You should be able to revert your system to a restore point (Good idea from Windows, poorly implemented).\nEVERY F**IN\u0026#39;\nTIME\nüí¢\nü¶ä pic.twitter.com/5JGKXqxIwF\n\u0026mdash; FPV üü° ÁúºÈè°„ÅÆÁãê (@F0XnR0LL) January 7, 2021  Open Sensors and Generators #  Hardware is gradually becoming more general purpose, and as this happens it would be amazing if they were opened up enough to allow for experimentation. Think using full on software defined radio chips for Wifi and Bluetooth, such that they could be reconfigured on the fly and a different antenna attached to make use of GPS, cellular, or satellite internet. There\u0026rsquo;s already a mini PCI-e card SDR on the market. like this, but it\u0026rsquo;s my understanding that many wifi chipsets are effectively just limited SDRs running locked down firmware anyway. Why not open it up?\nI also want more platform to have GPIO access. On a full on desktop or laptop this would have to be done with care to avoid people straight up frying devices, but I think the wide array of hats available for the RaspberryPi shows that having this as an option would really allow for some cool hardware to exist.\nI also want senors and IOT devices to be more open and extendable. Give me a serial out, let me wire it up to my own home automation. I mentioned above that I have a CO2 meter from CO2Meter.com, but I\u0026rsquo;m looking at getting this CO2 sensor just so I can get reading out of it easier.\nIOT especially needs to be open. In 2020 alone Wink started charging customers $5/mo for app access to IOT gear they already owned, and Sonos bricked devices with \u0026lsquo;Recycle Mode\u0026rsquo;.\nSoftware that breaks the mold #  [TODO]\nMasterPlan by SolarLune\nHabitica?\nhttps://www.craft.do\nhttp://audulus.com\nhttps://dag.s-ol.nu\nHardware for Open Experimentation #  [TODO]\nMicrofluid computers, diode logic, GPIO\nWasting time on stupid shit that nobody cares about #  Microsoft has been spending a lot of time changing to the new UI, and their calculator has been updated like a dozen times for UI now but still SpeedCrunch remains 1000x more usable and tools like WolframAlpha remain superior yet. Stop spending time on shit literally nobody gives a shit about.\nChapter 4: What points contradict? #  Having Low Level Access and High Level Usability. #  Yeah, this is always a problem. It\u0026rsquo;s always been the dream to be able to describe in \u0026lsquo;natural language\u0026rsquo; what you want and to have the computer parse what you want, inferring intent, and do whatever you want for you, but naturally, this will never be totally possible. This point is only conflicting in the sense that it can be overwhelming- if a user has access to work in something as high as natural language and can manipulate those instructions all the way down an the assembly level, that\u0026rsquo;s a lot of open space. Ideally, each layer of the abstraction would be open to tinker and modify for the sake of getting the solution to work correctly, to pipe data around at any level, or to add functionality in it\u0026rsquo;s most natural language: Some tasks are better suited to describing what\u0026rsquo;s needed in English, some are easier to do down in the dirt.\nMaking everything open this way may sound complicated, but if the UI were presented right it could just be a stack of abstraction that propagates up and down. Changing the assembly could change the source could change the natural language description. Better, the cost of this could be lowered if each layer is only shown and edit-able at request, and that layer just bypassed until needed. Of course, this would mean being able to to make a set of languages that can be can go from higher level to lower level yet have a middle language introduced mid-stack without changing the meaning. This is complicated. It\u0026rsquo;s like asking for a fast python interpreter that can be ran directly or spit out C, then have that C code be editable with it\u0026rsquo;s changes reflected back into the python code. I\u0026rsquo;m aware of how complicated of a problem that is. Add a natural language description above the python level in the above and it just got much, much more complicated. Still, I think this is something we should aim for.\nLatency/Speed vs Things That Are Inherently Heavy #  I\u0026rsquo;m asking for a lot of inclusion of AI/ML tech into the OS and day-to-day use, yet also asking for much, much faster response times in general. To some extent, hardware with dedicated silicon for AI/ML will make this better, but regardless, there\u0026rsquo;s no way around how much this conflicts. I think the only way to fix this is to recognize what latency is and isn\u0026rsquo;t acceptable.\nAs mentioned above in Presentation of Information -\u0026gt; Updates after Initial Draw, there are some things that are particularly egregious to the user from a UI timing perspective. Waiting on the computer sucks, sure, but having to babysit the computer while you wait on a prompt that could easily be given preemptively or make sure a task doesn\u0026rsquo;t time out is completely unacceptable.\nBut even just directly looking at speed and latency, there\u0026rsquo;s still a ton of room for improvement. Why does the root file system not retain at least an index of other file systems to let you browse while a HDD spins up or a network connection is established? Why do so many damn things have s u c h l o n g animations that have to complete before the user can continue? But most of all can we please stop building programs with electron or other things that are just full browsers for one program? Use literally anything else. The best way to lower latency is to use as little code as possible, good data structures, good libraries, and good tools. I said it contradicts to keep latency down when doing things that are heavy, but a lot can be done to make so much of what we use day to day substantially lighter to begin with with no loss in functionality. I understand why projects use Electron, but if you must please just use Flutter or Neutralino or Sciter or Ultralight even a game engine. Just, not something so heavy unless you need it? Please?\nhttps://danluu.com/input-lag/\nCustomizeability vs Defaults #  I\u0026rsquo;m writing this at @292.78 on Day 15 of 12,020. I\u0026rsquo;m typing on a Dvorak, split, ortholinear keyboard in a markdown document using Arch Linux instead of M$ Word on Windows.\nAnd It\u0026rsquo;s fucking awesome.\nThing is, nobody else can use my computer. Moreover, if anyone were forced to learn all these weird formats and behaviors instead of what they\u0026rsquo;re used to, they\u0026rsquo;d give up. What people are used to, that is the defaults make a huge difference.\nDefaults have a lot of power. There\u0026rsquo;s good reason that (for a while at least) Microsoft had to inform users about browser options. What comes ready to use and presented to the user from the start is much more likely to get used than something a user has to go out of their way to get.\nSimilarly, the ability to even make choices in the first place matters a great deal. For example, on modern versions of Windows, you\u0026rsquo;re pretty much stuck with the stock shell (desktop+file manager) as alternatives are either pretty similar to what\u0026rsquo;s there already or mostly dead.\nThe question then becomes what things matter to choose? I think ideally everything should be open enough to be replaced, but that doesn\u0026rsquo;t fix anything if options aren\u0026rsquo;t given. At the same time, Systems like Arch Linux will likely never have mainstream appeal exactly because none of these choices are made for the user. At the end of the day, most users want a system that just works. They don\u0026rsquo;t want to have to choose between a list of 5 different firewall providers, hundreds of desktop environments, and login managers, and shells, and so on. So, defaults have to be chosen.\nFortunately, so long as people have the option to change things if they want to, they can approach a system that works well for them. For me, that\u0026rsquo;s Linux, i3wm, Dvorak, and a bunch of weird hardware. For a lot of people, it\u0026rsquo;s probably just exactly how Windows is now with a few minor tweaks.\nEverything is in the browser now anyway? #  Above I said that all of this should be in the OS and not just browser extensions as people still use a lot of non-browser tools, and I think saying that was rather dismissive. It is definitely true that when using a computer today the vast majority of your use will probably be in-browser. The problem lies in that \u0026lsquo;vast majority part\u0026rsquo; - that\u0026rsquo;s likely because in general people spend a lot more time consuming than creating, and the browser is built for media consumption.\nOn the other hand, most creative software - be it for writing, art, video, music, etc. - is not browser based because, well, it sucks for that. Maybe that will change as WebAssembly makes things faster, but I don\u0026rsquo;t see it happening, so I think we still need full OS integration for it to really matter.\nThe other point to make here is the browser probbbbabbllyy isn\u0026rsquo;t the best place to implement a lot of what I\u0026rsquo;ve mentioned so far given a lot of it is performance sensitive, works with private information, and relies on deeper tie in to the OS - something which for security sake the browser shouldn\u0026rsquo;t really be capable of.\nOn the other hand, one of the things I mentioned repeatedly was portability. Browsers actually have this working pretty damn well at this point, syncing beautifully between devices compared to how things are on Windows or Linux (I wouldn\u0026rsquo;t know about mac ¬Ø\\(„ÉÑ)/¬Ø)\nUnification vs Diversity #  Or why \u0026ldquo;I wish everybody used Linux!\u0026quot; is probably not the wisest thing to say.\nTo keep this short, if everybody used Linux, there\u0026rsquo;d be less incentive for Linux to compete with Windows. If everybody used Windows, M$ wouldn\u0026rsquo;t have incentive to further their OS. Boiled down, competition is a good thing.\nThat said, there are limits to how much diversity (in the context of computing) is a good thing too. If I search the Arch User Repository for \u0026ldquo;i3lock\u0026rdquo; there are 28 results + original they\u0026rsquo;re all forked (13) from. And, okay, not all 28 of those are actual forks, but you get the point. There\u0026rsquo;s a lot of work being duplicated on open source projects, instead of just everybody working together to make one, really good thing.\nAnd, yeah, this provides more choices, but does anybody want to research 28 choices for anything to figure out which is best? Especially when most of them are super similar? With desktop environments on Linux at least each is typically novel enough to fun to look at, but if it\u0026rsquo;s something boring, like the given screen-locker example, really?\nChapter 5: What Might Radically Change Things? #  Body Modification and Bio-Engineering #  Another point is the idea of biohacking and body augmentation. The most common biohacks include implanted RFID tags (which I actually have) and magnets for sensing electromagnetic fields, but these are still pretty mundane. This Ted Talk I think shows what might be possible a bit better:\n But I still think there\u0026rsquo;s room for a lot more. Last semester I was fortunate enough to take a class with Dr. Massimilliano Pierobon who is currently the director of the Molecular and Biochemical Telecommunications Lab (MBITE) at UNL, and while I\u0026rsquo;m far from knowledgeable enough to understand everything that they do there I know they\u0026rsquo;re doing some very interesting work that could be summarized as hacking the chemistry and existing networks in biological systems (inc. humans). Here\u0026rsquo;s some work from the MBITE lab I found particularly interesting:\nBi, D., Deng, Y., Pierobon, M., and Nallanathan, A. \u0026ldquo;Chemical Reactions-based Microfluidic Transmitter and Receiver Design for Molecular Communication,\u0026quot; IEEE Transactions on Communications (Early Access), 10.1109/TCOMM.2020.2993633, May 2020. [PDF]\nMarcone, A., Pierobon, M., and Magarini, M. \u0026ldquo;Parity-Check Coding Based on Genetic Circuits for Engineered Molecular Communication Between Biological Cells,\u0026quot; IEEE Transactions on Communications, vol. 66, no. 12, pp. 6221-6236, December 2018. [PDF]\nHanisch, N., Pierobon, M. ‚ÄúDigital Modulation and Achievable Information Rates of Thru-body Haptic Communications,‚Äù In Proceedings of the SPIE International Conference on Defense + Security (DCS), April 2017. [PDF]\n These articles, and others from the MBITE lab at UNL, can be found here Seeing this makes me wonder if the future of bio-hacking might be a bit more tightly integrated into how our bodies already work, rather than just tossing some electronics inside some silicon or glass to implant somewhere.\nBrain Computer Interfaces #  I don\u0026rsquo;t know that BCI are really the future. Elon Musk is working on Neuralink which is neat and all, but I\u0026rsquo;m not sure I\u0026rsquo;m convinced. I would welcome the faster computer to brain link as the keyboard-\u0026gt;eyes-\u0026gt;brain loop is far to slow, but I don\u0026rsquo;t really see anyone going in to have their skull drilled into for elective surgery unless it\u0026rsquo;s to correct or treat something else neurologically. There have been efforts to do BCI without implants, but I suspect that would suffer from a lack of bandwidth.\nI do very much hope to be wrong, as I think BCI has the opportunity to be the biggest leap humanity has ever taken. Soon, it may even be necessary to even deal with how quickly our would is changing and the amount of information we need to process every day.\nBrain Computer Interface article on Wikipedia\nWrapping up #  In all honestly I\u0026rsquo;m not exactly sure what everything I just wrote is about. Mostly it\u0026rsquo;s just a lot of ranting, but hopefully it has been interesting. To round things off with a bit of a closing note though, I don\u0026rsquo;t actually foresee many of the things I mentioned becoming common place or many even being possible, if not simply because they\u0026rsquo;re require so many people to agree on standards, but there is one glimmer of hope, and it\u0026rsquo;s one of proof of uniformity. The terminal. Yes. This terminal:\nThe terminal emulator above is still compatible with the VT220 from 1983 (as are most terminal emulators) yet from it, with a good shell (like ZSH) I can do everything I can really think of: browse the web, chat with friends,listen to music, basically anything. I\u0026rsquo;m not saying we should all stop using chrome, but I think part of the reason so many neck beards and sysadmins still use the terminal is you can do so much with it, everything that uses it as a common interface, and it has programming capabilities. You can automate or string together just about anything, exactly as I described above.\nFinally, I\u0026rsquo;d like to say I understand we don\u0026rsquo;t all get the choice, be it by monetary, physical, or other restrictions, to have a \u0026lsquo;perfect\u0026rsquo; work environment. If you live in the city there will be noise, If you live in the country, you may be limited by your internet connection, I get that. Obviously I don\u0026rsquo;t expect everyone to go out and make their own versions of some of the high tech, borderline art installations that I linked either. I also don\u0026rsquo;t think everyone\u0026rsquo;s down to go get an RFID tag in their hand. I just wanted to present what I see as \u0026lsquo;the future\u0026rsquo;. It probably won\u0026rsquo;t come in 2021 or even 20021. I do, however, hope this has inspired you to look at the way you work, the environment you work in, and how you can improve it.\nOther hardware and software pushing things forward #  [TODO]\nhttps://hookproductivity.com \u0026ndash; Link all the things\nAtlas Informatics (TechCrunch Article) - search all the things\nhttps://apse.io \u0026ndash; a photographic memory of all the text that goes across your screen\nhttps://desktopneo.com \u0026ndash; a UI mockup for a better system\nhttps://arcan-fe.com/2020/02/10/leveraging-the-display-server-to-improve-debugging/ - it\u0026rsquo;s in the URL\nOther people that have ranted about similar things, but usually a bit more politely #  A Proposal for a Flexible, Composable, Libre Desktop Environment (Michael McThrow)\nWhat do I care the open web is dying? (Abhinav Sharma, Cofounder Insight. ex Mozilla \u0026amp; Facebook)\nI hate computers: confessions of a sysadmin (TechCrunch)\nalright, so, yes they're still expensive as all hell, but like if you go DIY then I think they're mostly attainable to most people. I'm sure there's a bit of privlidge talking there, but ‚ïÆ(‚îÄ‚ñΩ‚îÄ)‚ï≠ Programmer's Dvorak is a thing and honestly I want to know if anybody actually uses it? Having the numbers like that hurts my brain. Seriously, check these out. You won't believe some of what's in here. MIDI is currently in a transition period from MIDI on a 5-pin Din to over TRS exactly because of this reason. Unfortunately, there's now two competing versions of MIDI over TRS called TRS-A and TRS-B where the signals on each pin are mixed around. Making it even worse, there's even a version that runs on 'mono' TS cables. It's a mess. Sub-Pixel Rendering is effectively abusing the fact that monitors will have a sort of trippled horizonal resolution, where each individual R, G, and B sub pixel is treated like an individual pixel that can be rendered to. This can make text look substantially sharper, but is why when you take a screenshot and blow it up you might see weird colors around the text. It's a hacky work around. The interface on your display matters greatly as well, the most common at the are HDMI, Display Port, DVI, and VGA\nVGA is the worst option here, as it's an analog signal. This means the signal can do strange things, getting corrupted between your computer and the monitor. Typically this is a blue, screw in connection with many pins DVI is still pretty common and looks like an even larger VGA connection, with a typically white, screw in connector. This signal is normally digital, though there is a variant of DVI that can be adapted into VGA. Of note, DVI can also be adapted to HDMI though you will not have audio, as DVI does not carry sound\nHDMI, probably the most well known connector, has multiple revisions, the revision determines many things such as the maximum resolution, refresh rate, and weather or not more obscure things such as HDR are supported. HDMI is usually considered the best of these three options\nTaking the crown however, is Display Port (DP). Like HDMI display port does have multiple revisions which do differentiate similar things; however, Display Port will generally support high resolutions and more features at any given point. Assuming you're running a bog-standard 60hz 1080p display however, you'll find no difference between DVI, HDMI, and DP - unless you need sound, in which case you'll want to use HDMI. FreeSync is the open standard made by AMD, and, even most FreeSync monitors will work fine on Nvidia card. GSync is Nvidia only and is more expensive to impliment - in part because it uses a full damn FPGA shoved into the back of the monitor - but does offer more features except when it doesn't and it's just rebranded FreeSync with a lil' Nvidia Approved sticker. It's complicated and a mess to understand. As of the time of writing both Freesync and GSync are supported on Linux, but quite rough around the edges. I will concede the C920 can be made significantly less shit by just turning off most of the 'auto' settings and setting everything by hand. This can be done on Linux with GuvcView, but on Windows I've found all the recent drivers make it impossible, so, I stand by it still being shit. In the case of things that can be used standalone, not connected to a computer, like my afforementioned MorningStar MC6 midi controller, it makes some sense.  Fuck Adobe. The Launchkey MK2 has an almost impressively bad keybed. Roli, the company behind the Seaboard Block and Lighpad Blocks is a bit controversial. Not like, Behringer levels of controversial, but still. ‚ïÆ(‚îÄ‚ñΩ‚îÄ)‚ï≠ Currently 17.5Gb - https://dumps.wikimedia.org/enwiki/20201001/ for the non-technical people: A fork is just when you take an existing project and add your own features on top, usually with a rename. If I don't also keep my project up to date with the original, they'll diverge in features even more significantly with time. With the normal limits of compatability, you can't drop a crazy fast graphics card in without upgrading the power supply, and often the CPU, Ram, and motherboard all need to be from the same generation.  if you have a link to add, feel free to tweet at me @Vega_DW "}),a.add({id:11,href:'/posts/slowdown/',title:"Slow Down!",section:"Blog",content:"I use VCV Rack a lot. I normally use it on Windows as running VSTs in Linux is still a bit of a PITA and If I\u0026rsquo;m going to make music I want to have access to all of my tools. However, I still want to be able to use VCV on Linux for processing guitar when taking breaks from working on other things without having to reboot over to Windows.\nUnfortunately, for a good while now VCV has had an annoying bug. I\u0026rsquo;m not sure when the bug first appeared, but at some point it started eating my GPU. Like, absolutely wrecking it.\nRadeontop (GitHub) It was still technically usable, in fact it ran butter smooth\u0026hellip;\nOh wait, I wonder if killing picom, the X11 compositor I use will help\nNopeeee.\nAlright, obviously this is far from ideal. I actually only knew to check the FPS because of an interesting quirk, I think when the FPS got this high my GPU was getting jobs at that rate, so 930ish times per second, but still finishing them quickly enough to cause the GPU load to constantly change going 100% ‚Üí 0% ‚Üí 100% ‚Üí 0% \u0026hellip; in a loop, really fast. It caused the physical GPU, an AMD Vega56, to whine in my tower. I don\u0026rsquo;t think it was coil whine, but it was also very loud and sounded similar.\nFirst I tried just changing the FPS target value in VCV and then I tried playing with settings in the settings-v1.json file, but nothing worked.\nMy next attempt to fix it was to try rebooting and loading my system with the Zen Linux kernel as I knew it used a different scheduler and did some extra stuff for real time computation (nice to have anyway when doing audio stuff like VCV).\nUnfortunately, that was a bust. Still rocking the 930 FPS.\nFrom here I had to ask for more help. Thankfully, a friend in my modular music chat on telegram was able to point me to a few ideas. I ran glxinfo, made sure everything looked sane, and it was. Next I tried using LIBGL_THROTTLE_REFRESH=1 and WGL_SWAP_INTERVAL=1 with no luck either.\nFailing other ideas I Googled \u0026ldquo;linux limit frame rate environment variables\u0026rdquo; and one of the top results was libstrangle (GitLab) which limits frame rate by using LD_PRELOAD to dynamically link it\u0026rsquo;s own library that does the FPS limiting. This reeks of hacky bullshit. But I\u0026rsquo;m always down for some hacky bullshit. For S\u0026amp;Gs I check, and `lo and behold it\u0026rsquo;s in the AUR.\nI still have no idea what\u0026rsquo;s going on. The easy guess is \u0026ldquo;You have a Vega56, it\u0026rsquo;s a weird GPU with HBM2\u0026rdquo; and, yeah, that makes sense, but then there\u0026rsquo;s This Issue in VCV Rack\u0026rsquo;s GitHub repo where someone else is having the same problem on an Nvidia card on Ubuntu. I\u0026rsquo;m using an AMD Card on Arch! Other than the commonality of Linux, these systems couldn\u0026rsquo;t be much more different.\nThat issue shows the original poster had traced it down to one line, but I\u0026rsquo;m hesitant to accept that explanation when VCV works fine for me on Windows and the issue has no other comments from other people with the same issue.\nprior to this fix, VCV could outright lockup my entire system as my GPU screamed bloody murder, but it got me thinking- while VCV is by far the most violent I\u0026rsquo;ve seen this issue get, I think I\u0026rsquo;ve seen it elsewhere, and yep:\nThis is the example project for Nuklear, \u0026ldquo;A single-header ANSI C immediate mode cross-platform GUI library\u0026rdquo;, exhibiting the same issue. I\u0026rsquo;m curious how many projects based on Nuklear this affects.\nLibStrangle again works to fix this, but without it my graphic card still makes an annoying whine, a whine that I don\u0026rsquo;t get under even very high load when gaming.\nI won\u0026rsquo;t include anymore FPS screenshots, but I get the exact same behavior in Radium, a neat tracker-like Digital Audio Workstation.\nI suspect there are many, many more. I\u0026rsquo;m not going to go checking every program on my system, but I found this behavior weird enough to be worth documenting.\n"}),a.add({id:12,href:'/interviews/soatok/',title:"Soatok",section:"INTERVIEWS",content:"An Interview With Soatok Dreamseeker #  12/3/2020\nThank you for taking the time for this interview Soatok. Your blog at https://soatok.blog shows that you\u0026rsquo;re a furry crypto nerd, but I\u0026rsquo;d like to hear how you\u0026rsquo;d put it, so, to get started, can you describe yourself?\nWhenever I\u0026rsquo;m asked, I usually say something to the effect of, \u0026ldquo;I\u0026rsquo;m a security engineer with a dhole fursona that sometimes writes about cryptography on my furry blog.\u0026rdquo;\nThere\u0026rsquo;s actually a lot more to the story than that, but comical understatement is somewhat an unspoken tradition among my technical friends. (I can\u0026rsquo;t tell if it\u0026rsquo;s humility or impostor syndrome with them.)\nOutside my fandom persona, I\u0026rsquo;ve written the code that helps to secure a double digit percentage of the websites on the Internet. I work on a cryptography team at an unspecified technology company. I\u0026rsquo;m very deeply immersed in this stuff, for the good of the Internet, and even if I didn\u0026rsquo;t set out to talk about cryptography topics, it would leak out (as it often does with my dumb Twitter jokes).\nWhat are some your favorite projects you\u0026rsquo;ve worked on?\nMy favorite project is usually whatever I\u0026rsquo;m working on at a given moment.\nIn the past, I\u0026rsquo;ve implemented a full suite of constant-time JavaScript algorithms, only to discover Thomas Pornin already did something similar for C.\nMy current project involves creating a series of open source libraries to make it easier for JavaScript developers to implement end-to-end encryption in their own applications.\nWhy Javascript?\nCryptographers have an orthodoxy that loosely follows the same battle lines as infosec opinions on programming languages: PHP bad, JavaScript harmful.\nI think the intent is, if they neglect these languages, they can exert some sort of bastard lovechild of market pressure and darwinism to coerce developers onto programming languages that are more suitable to secure cryptography than the ones they\u0026rsquo;re already using.\nIn practice, this just means that the programming languages that most of us use are less safe than they could be, and the ivory tower academics and infosec thought leaders just hold their nose up to the thought of meeting them halfway. This makes the Internet less secure for us all.\nIt\u0026rsquo;s interesting to me that you\u0026rsquo;re so openly furry and mix that in with all of your more technical posts about cryptography, much like I have here on OpGuides. Why did you make the decision to do both under one unified identity and what has the reaction to that been like?\nI love the furry fandom and I\u0026rsquo;m deeply fascinated by security topics, so it\u0026rsquo;s an obvious cross-over for me. But there is more to it than just that!\nI mentored a few folks over the years, and tried to nudge many more towards supportive, accepting, and uplifting venues. Almost everyone involved in that was deathly terrified of, for example, hiring managers finding out about their fandom participation.\nWe both know this, but a lot of business people do not: The furry fandom is widely regarded as a LGBT subculture. Discriminating against people who participate in our community is a good way to undermine your own diversity and inclusion initiatives.\nBeing openly and shamelessly my furry self is an easy opportunity for me to normalize our community to companies that hire security analysts, programmers, or cryptographers. This has a few effects:\n Hiring managers are more exposed to furries in tech, which makes them less likely to react badly if someone discloses their hobbies during an interview (whether or not they intended to). Neophytes get to see someone with a lot of experience in the industry be openly weird, so they will be a little more comfortable in their own fur. Queerphobes that use anti-furry hate as a dog-whistle out themselves on social media in droves, which helps identify which companies should be avoided. The rarest consequence, but has happened to me about a half-dozen times in my career: More tech people that were incidentally furry become open about it when they see no significant ill befall me.  I hope it\u0026rsquo;s clear that the end result is a net positive, even if the prospect of doing what I do is a little scary to a lot of people.\nIf you could go back and make the decision to post under two different personas, would you? at least in part?\nNope! Game Theory says it\u0026rsquo;s the optimal strategy.\nCryptography is under constant attack from the US government. Do you think there are things the US government should do related to crypto?\nThe US government should really stop trying to give the Department of Justice a backdoor.\nLike, I get it: Their bottoms still need a regular powdering after Edward Snowden revealed the NSA was literally spying on everyone. They wanted to keep abusing their power with impunity and secrecy, and now they can\u0026rsquo;t. Boo hoo.\nBut if they\u0026rsquo;re really as interested in \u0026ldquo;protecting the children\u0026rdquo; as they like to claim, they\u0026rsquo;d invest more in end-to-end encryption and tougher privacy protections; especially but not exclusively for kids!\nWhat are your thoughts on cryptocurrency? Are you concerned about the environmental cost from the electricity mining uses?\nCryptocurrency is a mixed bag, and it\u0026rsquo;s hard to give a succinct answer.\nOn one paw, it\u0026rsquo;s one of the most reliable revenue sources for advancements in cryptography. A lot of the work on practical zero-knowledge proofs happening today is the result of Zcash and Ethereum developers trading recipes and not being preoccupied with Line of Business development work at their dayjob.\nOn the other, it\u0026rsquo;s a magnet for unscrupulous hacks and ancap tech bros. You know the type: They hate the state and want governments to get off their back, but they love the hierarchies of capitalism and the privileges of private property and systemic state violence that serves the interests of the wealthy? If you see \u0026ldquo;Bitcoin maximalist\u0026rdquo; in someone\u0026rsquo;s Twitter bio, 99 times out of 100, you\u0026rsquo;re dealing with that beast.\nWhat changes do you think should be made to social media platforms to give users the best combination of privacy, ease of use, and security?\nPublic messages (e.g. tweets) should have slightly more granular access controls than the current all-or-nothing approach (Is your account public or private?).\nPublic messages should be editable (with a public changelog). Replies should be clearly marked if they were directed at a previous version, and the option to view them in context should be available.\nPrivate messages should be end-to-end encrypted, using keys that the platforms cannot access.\nIf you could go back and redesign any part of how the internet works, what would you change?\nI would have encrypted every packet from day one, rather than slowly bolting it on years later. For example: Email encryption is still opportunistic in 2020. We\u0026rsquo;ve only started addressing DNS privacy. (Note: DNS privacy is a good problem to solve; DNSSEC is stupid.)\nLast week the CEO\u0026rsquo;s of Facebook and Twitter just went to a congressional hearing about ¬ß230 of the CDA, where many senators expressed concern about biases in how tweets and posts are flagged for misinformation and how accounts are suspended for Terms Of Service violations. How do you think this problem should be addressed moving forwards?\nAssuming they\u0026rsquo;re being even mildly honest about anything (which I don\u0026rsquo;t really believe), Silicon Valley needs to get over their fear of the perception of having anti-conservative bias. This fear leads to them tolerating hate speech and rallying cries for racist and transphobic violence.\nFacebook is unsalvageable.\nI previously touched on defeating coordinated inauthentic behavior at scale in my Medium writing days.\n(My Medium writing days ended because I got tired of their constant pressure to monetize my writing. I\u0026rsquo;m happy to pay for the privilege of publishing my ideas, ad-free, without a paywall.)\nHaving just gone though the 2020 election, with what seem to be mass unfounded allegations of voter fraud, do you think electronic voting, potentially over the internet, should have been used?\nNo.\nWhat\u0026rsquo;s the failure mode for a hacked election? You can\u0026rsquo;t just roll back a political career advancement.\nThe threat model for elections is incompatible with the BYOB mental model of consumer electronics (which is what people imply when they talk about electronic voting).\nPaper ballots. You need an audit trail that technology cannot tamper with.\nThe repository for YouTubeDL, a popular tool for downloading videos off of many more sites than just YouTube, was taken down from GitHub recently as a result of a DMCA take down notice from the RIAA, in part because they were using copyrighted videos in their test cases to ensure their method of bypassing YouTubes \u0026lsquo;Rolling Cipher\u0026rsquo; code worked. What do you think about this?\nThe RIAA is a blight upon the Internet and needs to be dismantled, but only after we tear down JSTOR and Elsevier. Remember Aaron Swartz.\nThe EFF does a lot of good work to oppose tyrants like the RIAA.\nWhat are your thoughts about bypassing Digital Rights Management (DRM) in general?\nDRM is diametrically opposed to endpoint security, transparency, and trustworthy computing. Only corporate shills that sold their soul to the intellectual property machine ever think DRM is a good idea for consumer devices.\nThat being said, the notion of using DRM to run code in \u0026ldquo;the cloud\u0026rdquo; that the cloud service providers cannot understand or tamper with is very attractive. But that\u0026rsquo;s an inversion of the normal power dynamic.\nDo you think society has been negatively or positively impacted by the way the Internet and social media has changed how people interact?\nI think it\u0026rsquo;s mildly positive. It\u0026rsquo;d be significantly more positive if tech companies took coordinated inauthentic behavior, misinformation, and propaganda more seriously 10 years ago.\nThere\u0026rsquo;s a lot to hate. But I wouldn\u0026rsquo;t have known about the furry fandom\u0026ndash;let alone ever participated in it\u0026ndash;if it weren\u0026rsquo;t for the Internet and social media.\nAs time moves on there is at least some growing public understanding of cryptographic security, like HTTPs and why someone may want their phone to be encrypted, etc. - Do you think it\u0026rsquo;s necessary that the public have an even better understanding than what is currently normal? What things do you think most people miss that could be easily taught?\nPeople don\u0026rsquo;t need a graduate course in number theory and CS101 descriptions of RSA, which is what the cryptography orthodoxy pawned off on the public.\nI wrote a guide to learning cryptography as a programmer earlier this year.\nWe as an industry need to spend some time talking to the UX experts, technical writers, and science communicators of the world and devise a concise and coherent public education strategy. Until that happens, we\u0026rsquo;ll continue to flounder around in the dark but some of us will make better and easier-to-use tools, so things won\u0026rsquo;t be so bad.\nIs there any skill you wish you had developed in a formal education that you didn\u0026rsquo;t?\nThere\u0026rsquo;s a lot of academic formality that I missed out on, including:\n How to write a whitepaper for a scientific journal. In   \\( \\LaTeX \\)  . Familiarity with the mathematician jargon (especially lambda calculus) that obfuscates intuition. How to not be a filthy degenerate (or so my detractors say).  When doing crypto stuff, what does your work environment look like?\nIt depends what I\u0026rsquo;m doing.\nMost of my open source security work over the years involved a web browser with Github.com on one monitor, and Notepad++ in the other. Nothing too fancy.\nIf I\u0026rsquo;m reverse engineering (e.g. Android apps), I\u0026rsquo;ll boot up a Virtualbox machine and fullscreen it on one of the monitors.\nI do find good background music indespensible to deep analytic work. Time I by Wintersun and Malcom Robinson\u0026rsquo;s Chrono Trigger Orchestral Selections are two playlists you\u0026rsquo;ll hear emit from my bedroom all day long.\nI\u0026rsquo;ve worked from home for most of my career, and for the entire past 6 years, so my home computer setup is pretty sweet.\nIs there any skill that you spent too much time developing that you wish you hadn\u0026rsquo;t?\nNot particularly. There‚Äôs no such thing as useless knowledge; only stuff you don‚Äôt want to use, or don‚Äôt know how.\nWhat\u0026rsquo;s the most important skill that you\u0026rsquo;ve taught yourself?\nActive listening. Hands down.\nThe most stressful problems you will ever encounter in almost any profession is either, at its core, a communication problem, or the consequence of one.\nThat being said, I didn\u0026rsquo;t entirely teach it to myself. My close friends (a.k.a. chosen family) were all deeply involved in those lessons. :3\nWhat do you do for fun? Any books, movies, TV shows, etc. that you\u0026rsquo;d recommend?\nI frequently play co-op video games with my chosen family. We\u0026rsquo;re currently experiencing Final Fantaxy XIV together, and looking forward to Corepunk when it comes out.\n(Sometimes we even stream our gameplay, but usually on this channel.)\nWhat\u0026rsquo;s the biggest \u0026lsquo;Oh Shit\u0026rsquo; moment you\u0026rsquo;ve ever had, be it one you caught in time or not?\nOne time I was migrating a PostgreSQL cluster at night, and I accidentally typed the rm command into the wrong terminal.\nI called my boss and then we discovered the backup software had been failing for nearly a month. (I did have a manual snapshot from a week ago, but that was a week of data lost.)\nNot a fun year.\nWho are your biggest inspirations? What creators do you think are way to underrated and deserve a shout out?\nThere are too many people to list. I feel like I\u0026rsquo;d do everyone a disservice if I tried. Too many artists, too many musicians, too many videographers, too many photographers, too many dancers.\nMaybe if I could Ctrl+A, Ctrl+C the furry fandom (sans the alt-right), that\u0026rsquo;d be closer to the comprehensive list.\nOutside of the fandom, my best friend of 12+ years recently made a fursona.\nI\u0026rsquo;m very fortunate to count @SwiftOnSecurity among my friends too.\nWhat\u0026rsquo;s the best advice you\u0026rsquo;ve ever received? Worst?\nBest (all from my best friend over the years):\n Just because you can doesn\u0026rsquo;t mean you should. The truest measure of a person is what they do when they think no one is watchng. Power is temporary; what you do with it when you have it is what counts.  Worst:\n You need to find God \u0026ndash; annoying person in my high school  How do you stay motivated to keep doing cool things?\nAt this point, it\u0026rsquo;s a habit for me. But early on, I was motivated largely by spite.\nI got my start in tech by playing with a program called RPG Maker, and I decided to make a website for my personal projects. The indie game community back then was super toxic, so people in the community kept hacking my website. (My early PHP wasn\u0026rsquo;t very good.) I got angry and decided I would learn about web application security to stop them from breaking in.\nYears later, one of the perpetrators admitted to me what they were doing. By then, I was long over it.\nWhat hobby do you want to get into but haven\u0026rsquo;t had a chance to dive into yet?\nI have absolutely no musical talent. I\u0026rsquo;m getting a fursuit soon. Therefore, I figured learning to dance would be pretty cool :3\n"}),a.add({id:13,href:'/posts/xx80/',title:"xx80",section:"Blog",content:"The year is 198x. #  I stare at my amber terminal. Hexadecimal fills my screen and my mind has become lost in the flow of 6502 assembly, as I hand optimize the code flow.\nI\u0026rsquo;m interupted when I recieve a message from my friend, _Maverik, he\u0026rsquo;s excited about the ground breaking CGI in Tron.\n Nostalgia is a weird feeling. We can forget when things happened, and misttribute things to entirely different decades. But, I think there\u0026rsquo;s something even more interesting going on with the now-sorta-fading nostalgia for the 80\u0026rsquo;s that could be seen when 2014\u0026rsquo;s Guardian\u0026rsquo;s of the Galaxy (or Vol. 2 in 2017) or 2011\u0026rsquo;s Ready Player One book (and 2018 movie) were a huge deal. These movies aren\u0026rsquo;t just appealing to a generation of Millennials that are pissed off that the world is going to shit because of the mistakes of their parents and grandparents- they\u0026rsquo;re appealing to a generation of people that has only ever known that mess. The kids, like me, that are in the awkward spot of being told just how awful it was to watch the news on September 11th, 2001 but not actually directly rembering it.\nSo, why would we be nostalgic for a time that we were never alive for? I think it\u0026rsquo;s because we\u0026rsquo;re hopeful.\nThe 1980\u0026rsquo;s were not a better time really. The Cold War was still a thing, being publically LGBT was crazy, Chernobyl happened, Computers were still mostly 8-bit, Asbestos was still being used, and, despite the numbers declining already, cigaretts were still way more common.\nAll that aside, the was something the 80\u0026rsquo;s had that we don\u0026rsquo;t have now. I\u0026rsquo;m hesitent to call it \u0026lsquo;hope\u0026rsquo; or \u0026lsquo;vision\u0026rsquo;, and honestly, I\u0026rsquo;m not sure there even is a good word for it. Regardless, I wasn\u0026rsquo;t even around to experiance it first hand given I wasn\u0026rsquo;t born until 1998. But, from what I\u0026rsquo;ve seen of the remnants, the parts that people try to remember- the good stuff that people drink as heavily sweetend, carbonanted nostalgia - there was an atmosphere of possibility. The Demo Scene was in full swing, as people pushed the 8-bit hardware of the time to it\u0026rsquo;s absolute limits. Computers were progressively being used to do more, impressive things. Culture from that era is portrayed in a way that gives you a mental image of crackin' a cold one and just enjoying life. Movies from the era- Back to The Future, Footloose, Weird Science - all told stories that were hopeful and fun and made a point of how the future is going to be better.\nIt took me a while to realize all of this, but I\u0026rsquo;m not nostalgic for the 1980\u0026rsquo;s. I\u0026rsquo;m nostalgic for the xx80\u0026rsquo;s. A time that only exists in the minds of people like me, nostalgic for something they never experienced. The next cultural revolution where we can band together under a banner of making things better. Where technological advancements have postivie cultural impact instead of negitive. Where the talk of the year isn\u0026rsquo;t about how damn partisan we are but is about the power of humanity to do amazing things. It just happens that having some sort of outlet to map that nostalgia to is helpful, and that the 1980\u0026rsquo;s that kids from that era remember is the best analogy that people of my generation have. So when I wear a shirt with Rocket Raccon or put up art of the Comodore 64, I\u0026rsquo;m not showing my admiration for those things themselves. I know the real 1980\u0026rsquo;s weren\u0026rsquo;t that. Instead I\u0026rsquo;m giving myself physical reminders of a place and time that only exists in my own mind and making that much more concrete my dreams for a better future.\nInstead, for now, I\u0026rsquo;m stuck in real world. I\u0026rsquo;m in 2020 where my student loan debt is piling up, there\u0026rsquo;s a raging pandemic, and I fear that I\u0026rsquo;m watching the not-so-perfect union around me crumble. But, then I look around my room, and I see the \u0026lsquo;retro\u0026rsquo; tech and art, and for a little while I feel like it might be possible that we\u0026rsquo;ll do better, that maybe I\u0026rsquo;ll live to see the xx80\u0026rsquo;s come.\nSo for those that are older than me, please don\u0026rsquo;t mistake our hope for blind romanticism or a warped-sense of nostalgia. We know. I don\u0026rsquo;t think I was born in the worng generation because I didn\u0026rsquo;t experiance the 1980\u0026rsquo;s. I\u0026rsquo;m pissed that the time I did get to experiance as a kid and that I\u0026rsquo;m living in now has been ruined by giant media conglomerates, corrupt politicians, broken social values, and people that have resigened themsevles to an attidude of \u0026ldquo;it\u0026rsquo;s going to hell anyway, so why bother?\u0026rdquo;. You got IRC, I get spyed on and manipulated by Facebook. You got real movies, I got sequels. I\u0026rsquo;m not going to pretend my generation is unique in dealing with the mistakes of the last, but instead of having hope we have record rates of suicide and depression. It\u0026rsquo;s just that it\u0026rsquo;s easier to have physical attachment and hope mentally assigned to something that\u0026rsquo;s already happened than it is to have blind faith in the future.\n The following response is from Nicole Replogle, born in 1984.\n The 80s represented a time when the future had limitless potential. When everyone was excited to see what the next decade held in store. The boomers had the opportunity to realize that future, and instead of making something good and beautiful and exciting, they made sure they had the distinction of being the first \u0026ndash;and last\u0026ndash; generation to ever have that kind of opportunity. There\u0026rsquo;s so much 80s stuff right now\u0026hellip; thinking about Stranger Things, and then stuff like I Am Not Okay With This which is like, present time with the serial numbers filed off in an \u0026ldquo;80s but make it gayer\u0026rdquo; kind of way\u0026hellip; Even a lot of the \u0026ldquo;present day but with the numbers filed off\u0026rdquo; stuff feels like \u0026ldquo;present day but the future is open and maybe isn\u0026rsquo;t full of possibilities, but it\u0026rsquo;s not empty of it and that\u0026rsquo;s the best we can imagine\u0026rdquo;.\nGod, the future was so fucking BRIGHT in the 80s and I think a big part of why millennials are harder to fire up than gen Z is that we knew what life was like before and nobody knows how to process the loss of countless futures that they witnessed as children and young adults. We\u0026rsquo;re living with grief we can\u0026rsquo;t even begin to communicate and we\u0026rsquo;re going to live with it until we die.\nLike, you know what\u0026rsquo;s had me fucked up for a couple weeks? I work so hard trying to live inflicting as little harm as possible on people and the environment, knowing it\u0026rsquo;s a losing battle, and come to find out that the whole plastic recycling movement was a giant fraud, that it only existed as an anaesthetic to the guilt of our parents so they\u0026rsquo;d fuel the rise of single use plastics. And because millennials on down are recycling their waste at high levels, it\u0026rsquo;s easier to drop the act rather than put in the work because society would grind to a halt without single use plastics now.\n The following response is from Krista Carlson, born in 1980.\n Actually, the 80\u0026rsquo;s themselves were more hopeful. We had some problems with depression and suicide, but not like today, and the enxiety almost everyone feels today was very rare. There was still poverty, but less pressure. There was less crime, and more freedom. Kids could be kids, and overall, there was a feeling of innocence about the 1980\u0026rsquo;s. The early 1990\u0026rsquo;s was when we as a nation became teenagers. We had boomboxes and were rebelious. We were loud and colorful. Then came the sobering reality of watching the twin towers crumble in 2001, and I think that, more than anything else, changed American culture. We lost our security and innocence and faced a whole new era of sobering reality. Now, we know the politicians are all corrupt. Now, we know we live in a society that is crumbling. Kids deal with adult problems. I\u0026rsquo;m not sure you can put the genie back in the bottle, but I suppose it is nice to keep the bottle around to remember the days when there was still magic in the world.\n"}),a.add({id:14,href:'/posts/anti-consumer/',title:"Anti Consumer",section:"Blog",content:"As I walked to my car after class I could smell the ashes of a cigarette and hear the echos of a train scraping on its tracks. The cool foggy air held still beams of light. It looked like a scene from Blade runner, but I couldn\u0026rsquo;t help but feel like the Android\u0026rsquo;s of it\u0026rsquo;s inspiration, lusting after something to make me feel alive.\nThe drive home was mentally taxing. The fog so dense that cars ahead seemed to be balls of light floating in the distance and keeping sight of the lines to stay in my lane took a constant effort. After a little over half an hour of focus and 80\u0026rsquo;s synthwave music I pulled into my driveway.\nMy day had been long, and I hadn\u0026rsquo;t had a hood meal to speak of so I heated up some leftovers and talked with my parents as I ate. My mom was distracted by writing her next book and my dad was lost in a sea of Facebook memes, which he was showing us between intermittent laughter. I wasn\u0026rsquo;t really amused, in fact I was irritated.\nI ranted to him about something I know he\u0026rsquo;s heard from me before, the spheel of how Facebook is evil. How computers deprive us of our privacy and we willingly feed a machine that is well documented in its atrocities, and as usual he failed to see the point.\nHe used the same defense everyone does \u0026ldquo;All of my friends are on Facebook\u0026rdquo;\nHow many of those \u0026lsquo;friends\u0026rsquo; do you really talk to? How many of them just repost meaningless memes and jokes, while providing no insight, let alone basic updates on their life.\nSome of my absolute best friends are people I\u0026rsquo;ve met online or only know online, but none of them are people I stay in contact with though Facebook.\nThis isn\u0026rsquo;t a Facebook rant though, its a personal connection rant. So many of my friends and family consume social media to the point they don\u0026rsquo;t want to admit it but don\u0026rsquo;t even take the time to maintain the relationships they do care about. That stereotype about calling your mother? Yeah, there\u0026rsquo;s a point of reality in it. I dont know what it was like before Facebook, honestly, I really don\u0026rsquo;t. But I think we valued the connections we did have a lot more. Our friends may have been those from high school sure, but I know there used to be more tight night local communities that shared interests, but now the convince of social media has devalued the local meeting of friends. Which is ironic in a way. I\u0026rsquo;ve been in communites which would have never stood a chance of existing without social media to bring together the band of misfits but Ive also seen social media start massive amounts of drama that spiral out of control and destroy the local community.\nWorst of all though, I\u0026rsquo;ve seen social media devalue the importance of what people do. I figure maybe one or two people will read to this point, having lost interest long before now, and the same goes for much of the honestly great long form reporting I find online, or the longer stories people post for free for our entertainment. Creativity is becoming devalued as memes and short \u0026lt; 100 word posts become our new limits. Works of art that take time to digest and see meaning it get overlooked, poetry is dead, and heaven forbid you want to discuss politics in a civil matter. Hell, for many even the idea of playing a videogame or watching a movie is second to the instant gratification of short form content like Youtube, Reddit, or Facebook.\nIm not innocent in this, not by a long shot but I have two rules for myself which have helped:\n  For every two hours consuming content, I should spend at least an hour making something\n  At least 1/2 of my time consuming should be longer form content: be it full stories, books, movies, etc. Not YouTube, Reddit, Facebook, etc.\n  But when much of what I make, be it writing, music, or whatever is ignored because it\u0026rsquo;s not a viral meme or it\u0026rsquo;s too long to hold someone\u0026rsquo;s attention it seriously hampers my motvation, and I find it easier and easier to break my two rules. I\u0026rsquo;ve been doing a decent job, and as with any addiction it takes time to get out of and falling back is easy, but the reward of creating and consuming more filling content is much like having a nice home cooked meal instead of a super sugary diet.\nI just wish more people would appreciate each other\u0026rsquo;s cooking instead of eating candy all day. I want to work with people on these things, but if everyone else just stays addicted it\u0026rsquo;s hard to keep going. We\u0026rsquo;re inevitably social creatures and we do what our friends do, and doing things with friends is always better. Being on Facebook or Reddit, watching YouTube videos- these may trick your brain into thinking you have what you want, but being on the other side I really wish some of you would join me.\nI\u0026rsquo;m always down to hang out, to wonk together on making something cool, or talk about life, you just have to reach out not wait for me to post a funny meme for you to comment on. Lets talk about your hobbies and projects and what you care about and stop posting memes and Tumblr screenshots.\n"}),a.add({id:15,href:'/interviews/loial/',title:"Loial",section:"INTERVIEWS",content:"An Interview With Loial Otter #  9/23/2018\nIntroduction:\nI\u0026rsquo;m Matthew or LoialOtter, a crazy person up in western Canada who likes to make stuff. I work at Kron Technology as an engineer mainly in FPGA, electronics design and hardware design.\nI don\u0026rsquo;t have any credentials except a certificate in baking and pastry arts. I\u0026rsquo;m self-taught mostly due to not being ever able to afford going to school. I suggest others do when the have the opportunity but it isn\u0026rsquo;t absolutely required.\nObviously working at Krontech has been a super cool experience of yours that has probably dominated the majority of your recent work, but what projects that you\u0026rsquo;ve done outside of Krontech did you have the most fun working on or do you find the most interesting?\nMy passions all lie around the crossover between digital and physical worlds. I love motion control and am absolutely thrilled when I can make some code move something or control something in the real world.\nA few years ago I attempted to make my own 3d printer company and designed a motion platform that was rigid and quite a bit larger than what was available at the time. It was also very high speed to handle the greater build areas. Unfortunately the business ran out of money before I was able to get the unit to market; a mistake on my part. The excitement, though, of getting a machine partly built and get it working through it\u0026rsquo;s own control loops is just\u0026hellip; amazing.\nI\u0026rsquo;ve done many other things both through work and out on my own; I\u0026rsquo;ve made PLCs cycle engines in cold weather to keep heavy equipment ready to run and operating in extreme conditions. I\u0026rsquo;ve hacked cars and reverse engineered the protocols in use to adjust the handling of all-wheel-drive systems. I\u0026rsquo;ve done heavy adjustments to my laser cutter, the small mill we have at my house and stuff like that as well.\nThe mill is another great example. The first thing I cut on it was the mounting brackets for it\u0026rsquo;s own steppers to CNC it. I had the thing partly CNC\u0026rsquo;d within a week of getting the mill installed and fully working within three weeks (Z-axis was a little more tricky). I continued on to add a fourth axis and then rebuild the fourth axis using another way when the first one proved too weak.\nThe most interesting part of any project is getting through all the tough design challanges and getting the hardware proven. The least-liked, for me, is software. I dislike it enough that I\u0026rsquo;ve always been searching for a way to write scripts that do the tieing together of the internal parts and have finally found something that nearly covers what I want: micropython. I\u0026rsquo;ve been working on a software replacement for the Lerdge-X 3d printer control board, a cheap board from china that\u0026rsquo;s surprisingly well built. It\u0026rsquo;s running micropython but behind the scenes I want an interrupt driven lowlevel control system that\u0026rsquo;ll manage the actual movement and thermal loops. This will allow me to quickly hack the board into what ever type of robot I want, use what ever control language I want and yet still have a reliable control loop that\u0026rsquo;ll properly handle being starved for motion updates. You can follow that at https://github.com/LoialOtter/micropython and https://github.com/LoialOtter/Open-Lerdge-X\nWhat part of what specific project has been the most difficult and/or most rewarding thing you\u0026rsquo;ve ever worked on?\nHard to say the most difficult and/or rewarding. There was a very good one when working on the all-wheel-drive system where due to a very small detail in the readout protection on STM32 devices we weren\u0026rsquo;t able to replace the boot code on devices that were already shipped. It was a very troubling issue as the bootloader I had built was causing check-engine lights on very select vehicles (ones that I didn\u0026rsquo;t test on). The issue was that the bootloader wasn\u0026rsquo;t passing CAN traffic within the window given for connection before the final software started. The fix, of course, was to patch the new bootloader but due to the first 4KB being locked down and non-erasable without bricking the device, it wasn\u0026rsquo;t possible to make a payload image that\u0026rsquo;d just reflash the CPU.\nThe solution was a little unusual but worked well enough. When stepping through the original bootloader I noticed that a function used to clear ram on the device was located outside the 4KB block over at about 7.6KB. I wrote a special C function that had inline assembly which reset the CPU manually to a known state, set up the interrupt table so it was at a different location and then fiddled the stack both so the return from the function would call reset and it would unwind the stack to zero when doing so.\nIt took about a month to find a solution, develop the return function and get through all the nitty gritty bits and testing. The result was updating the bootloader on all the devices in the field, fixing the issue as well as making the system a little more resiliant to similar problems.\nWhat in general as you work on something causes you the most issues- that is what reoccurring problems do you / have you had? This could be related to your field or how you work.\nGetting going on software. I have way too many projects that are sitting around with full hardware almost working but the inertia of getting going on the software is easily the most difficult hurdle even though it\u0026rsquo;s often one of the simplest. The issue is sorta a form of analysis paralysis; deciding how software is to be laid out is one of those things that changes how software works for the entirety of it\u0026rsquo;s life. The first few lines of code usually defines the rest of the whole thing and I\u0026rsquo;ve written the wrong first few lines so many times that it scares the crap out of me.\nWhat is your favorite \u0026lsquo;hidden gem\u0026rsquo; tool, this could be software or hardware (or say both)\nMicroPython (not Circuitpython, sorry). It\u0026rsquo;s totally OP in getting past that initial difficulty as long as you don\u0026rsquo;t have to write underlying systems for it. On STM32 devices, especially, it\u0026rsquo;s amazing as you have a USB interface that offers a filesystem as well as the REPL, a command line interpreter for python. The filesystem is where your code will end up once it\u0026rsquo;s working. It\u0026rsquo;s saved in source form and compiled on load to bytecode or machine code depending. The overall speed of it is amazing; the bytecode is fast and works with nearly everything within Python 3.4 while the machine code types are way faster but lack the ability to allocate new memory and such (so ints are a little weird - don\u0026rsquo;t go past 28bits in machine code).\nREPL is utterly amazing. It allows you to simply open up a console and start poking at the CPU. As there\u0026rsquo;s a memory mapping system (machine.mem32/mem16/mem8) you\u0026rsquo;re able to write drivers for hardware in python and just get the whole system up and running very quickly.\nI\u0026rsquo;ve made a watch that\u0026rsquo;s been shown some around including part of the interview on the Amp Hour a few months back. That watch runs micropython even to the point where the display is being driven by DMAs and PWMs both fully set up in python. The watch took a day to get all the software up and running on including making the drivers for the DMA, timers, the accelerometer on the unit and i2c parallel expander as well. By the end of the day I had the buttons all working, it showing the time when you tilted it to the right angles, even was doing the whole charge regulation and such.\nWhat is the most valuable lesson you\u0026rsquo;ve learned \u0026lsquo;the hard way\u0026rsquo; when it comes to engineering\nWhen something\u0026rsquo;s too complex to work on directly, you need to step back and decide if you should start from scratch. Often rewriting software or redesigning a board from scratch takes a tenth the time as you already know what the requirements are. You also know to a greater degree how it\u0026rsquo;s supposed to work which you often don\u0026rsquo;t know when you start a project. Sometimes there\u0026rsquo;s a large loss of time due to it as you already spent so much time working on the thing but that\u0026rsquo;s often similar to the gamblers fallacy; If you keep going at it long enough it\u0026rsquo;ll get better and work better.\nIt needs to be assessed though because sometimes rewriting it will be far harder than just fixing it - this is a very difficult decision and always will be. With experience you\u0026rsquo;ll get a better handle on how much effort will be needed for both rewriting and fixing.\nEvery engineer faces the problem of feature creep in any project, how do you deal with this on things you work on?\nFirst off, make sure you start with a modular design. This is why the above comment that the first few lines are often the most important. If you make everything monolithic and all the parts talk to each other and are woven together, you will have a hell of a time designing for every possible addition later. The other benefit is that given a modular design you can look at all the shiny features you want and realize that you can implement them later - they aren\u0026rsquo;t important now. You can keep features from entering the design docs because the design docs should be the base parts to get the system going.\nYou can extend the design with all the cool features you want by documenting those features seperately and working on them as you need/want rather than throughout the whole process. If you need a break from the core of the project, you can take on one of those features that normally would be considered feature creep and work on them to keep you from going mad doing just the core (I have ADHD; this is one of my coping mechanisms).\nIs there any major skill you wish you had developed in formal education that you didn\u0026rsquo;t?\nAs I don\u0026rsquo;t have formal education outside an unrelated field (ask me some time about how related it is to electronics though); I don\u0026rsquo;t have a direct answer. I really feel that my project management and time management abilities would be far greater had I gone through formal education. I feel that engineering university, though great at giving you a good core of general knowledge that skims over most parts of engineering, isn\u0026rsquo;t really there to teach you that. It\u0026rsquo;s there to teach you time management and how to deal with crisis and priorities. The skills of being able to assess what\u0026rsquo;s absolutely critical right now to work on because you only have time to finish the work for one out of three classes and you have a final coming\u0026hellip; that\u0026rsquo;s amazing skills for when you\u0026rsquo;re getting near release and you\u0026rsquo;ve got a product almost working with four or five parts that are critical but you don\u0026rsquo;t have time to complete them all. What is going to make the user-base the most happy and do the best job fulfilling the requirements of the product. Are there parts that you can postpone and fulfill later?\nUnlike at university, real life has fuzzier time limits on things. Understanding that you can also trade off getting things done with how late you\u0026rsquo;ll be on development is also key; this is something I entirely didn\u0026rsquo;t know or understand when I was working on the 3d printer business. If you delay too long and have taken pre-payment, you may have to pay some people back and have extremely negative press from those people - getting a product out that does 90% of what they need and offer to get the last 10% done over the next period may be way better than delaying four or six more months. Also be prepared to check over everything, the other edge of such a move is that you didn\u0026rsquo;t fully vet the design out and may either have to break a promis to include a feature or to recall the product, a nightmare nobody wants to do.\nMost of those skills are in assessing situations and making critical decisions of what\u0026rsquo;s important and what\u0026rsquo;s not. School teaches these as a side-effect of their format. Even the point of money for schooling is often an eye opener: you may be able to cook everything for yourself, but how much are you loosing for time to do your work\u0026hellip; is that important enough to be a reasonable trade off? How can you manage your finances so when those crunch times come you\u0026rsquo;ll be ready for needing more lunch money to stay afloat.\nIs there any skill that comes to mind you spent to much time developing that you wish you hadn\u0026rsquo;t?\nFar too many things to count. As I think I mentioned I\u0026rsquo;m poor at time management. A number of times I\u0026rsquo;ve become too engrossed in things and don\u0026rsquo;t realize that I\u0026rsquo;ve led myself into a dead end in development. There are plenty of times I\u0026rsquo;ve had to step back and realize that I could have spent that time much better going through and defining the problem. My 3d printers are a great example of it took too long to develop and I screwed myself over on it because of that.\nAnother major trap of getting too deep like that is you\u0026rsquo;ll sometimes find yourself partway, looking like you got the hardest part done then figure out what you did, though tough, was just a fraction of what was needed for the next part. I have an FPGA debugger block that fits this; I have the verilog all written and overall it looks good but as soon as I went to start testing it I hit a major problem; I have to get the software working that\u0026rsquo;ll read out the data given. The real problem is that I have to write those programs in C/C++ and cross-compile them for the target and due to complexity involved that\u0026rsquo;s going to be a hellish thing. What I really needed was a scripting environment on the target and\u0026hellip; well\u0026hellip; the whole debugging system is on hold until we get the camera upgraded so I can get scripts running on it\u0026hellip;\nGetting away from engineering for a bit, What do you do for fun?\nMore engineering!\nOh wait, other than that\u0026hellip; probably more designing\u0026hellip;\nOkay fine; I like to go camping and on road trips and travelling and such. I love going to conventions. Most of my disposable income seems to be eaten up by personal projects, though, so I tend to just build more stuff on the side.\nAny good books, movies, TV shows, etc. You\u0026rsquo;d recommend?\nI recommend stop watching TV; If you like a series, wait until the whole series is finished then buy/aquire it and watch it all at once - so much easier to get work done when you\u0026rsquo;re not always distracted by what\u0026rsquo;s going to happen next or all the silly ideas that tv/movies/etc. give you\u0026hellip; or at least the ones they give me.\nI use movies as a drug of sorts. I get a rush due to the stimulus response and fanale of them. After a movie I\u0026rsquo;m working off that high for a while so I have to make sure that after movies I can stay up late and get work done. The actual movie isn\u0026rsquo;t very important though stuff like Deadpool is great.\nIf you could meet anyone, living or not, who would it be and why?\nThere are a few people I would love to meet and talk to: Chris Hadfield, Elon Musk, Peter Mansbridge (Moosebridge, heheehe). Top of that list is definitely Chris Hadfield though; his experience, his attitude towards things, he\u0026rsquo;s so nice\u0026hellip; and he\u0026rsquo;s so smart. Runner up would be Peter Mansbridge; he\u0026rsquo;s again extremely smart and has a tun of experience.\nAssuming you can talk about it, what\u0026rsquo;s the biggest \u0026lsquo;Oh Shit\u0026rsquo; moment you\u0026rsquo;ve ever had, be it one you caught on time or not? (I\u0026rsquo;m particallarly interested in the \u0026lsquo;almost did something lethal\u0026rsquo; scenarios)\nFirst one would be the bootloader mess-up earlier.\nAnother great example would be the time I was going and trying to repair a VFD (Variable Frequency Drive) and decided that, since I couldn\u0026rsquo;t see the signal right, attaching the negative side of the scope to the negative rail on the input rails of the VFD was a good idea. I had the thing powered up and was connecting the ground side aligator clip. The next moment I realised there was now a blind spot in the middle of my vision, my hearing was ringing from the bang the \u0026lsquo;gator clip made when it vaporized and my hand was strangely warm. It took a few moments to realize what had happened after pulling what was left of the clip away; I realized my hand was now electroplated with what was the aligator clip. I had shot -280V through the ground side of the probe and was lucky as hell. The end result was that most of my vision returned within a few minutes, a small amount of it took about two days to recover (or my brain to blot out the darkened spot). The probe I was using lost it\u0026rsquo;s dc coupling so I must have vaporized something internal to it; luckily the scope was fine.\nBecause of the engineer anti-social stereotype, I\u0026rsquo;m curious, do you think we as a species have been negatively or positively impacted by the way the Internet and social media has changed how people interact?\nBoth, heavily. Things like twitter and other social media systems as well as the near-anonymous commenting on things like youtube have made it seemingly encouraged to troll and/or abuse people. Without a face attached it\u0026rsquo;s easier for people to do absolutely shitty things to others.\nAt the same time, global communication makes doing high tech stuff possible. I learned electronics mainly through the internet and through communication with people who were hardly ever in my own province or country let alone my own town. I have more friends now than I did at almost any other point in my life with the only other time being when I was helping with conventions and even that was entirely because of the internet.\nYou expressed on your interview with the AmpHour that you developed your VFD pendent as a method to help you with ADHD, how has that been working for you?\nIf I hadn\u0026rsquo;t accidentally vaporized some traces on one of the boards, fantastic. The watch pendant was doing the job of reminding me to pay attention to if I needed to eat or drink and to check what I was working on to make sure it was effective. Since it\u0026rsquo;s no longer working as of a few weeks ago, that has been a really big problem again. I really need to make a new revision and possibly bodge together another test one so I have one again.\nAs I\u0026rsquo;m sure this\u0026rsquo;ll be asked, the watch lasted about 6 months of hell being worn. When moving some boxes I had previously crushed a few of the buttons and had to adjust the code so the damaged buttons weren\u0026rsquo;t either always pressed or draining the battery due to being shorted to ground (changed the pull-up to a pull-down on the input and ignored the input). I had drained the battery to zero volts a few times which had also impacted battery life but not terribly, it still got about 4-6 days off each charge. The thing that did it in was a partial short on the vibration board to GND which caused the battery to empty and worse, the current limit to keep the cell from charging. While trying to resurect the device, a process of using some sharp probes on a multimeter to jump the dropper resistor past the analog switch used for charging so it could get enough initial charge to boot the CPU and get things operating correctly again, I inadvertently shorted to another point and vaporized one of the traces going to the battery (LiFePO4 has an amazing current capability, it can easily vaporize traces if given the oportunity).\nWho are your biggest inspirations?\nMy mom and oldest brother. My mom took a job when I was quite young teaching early childhood education in northern bc. It was a small program and the position didn\u0026rsquo;t pay great but was better than most of the oportunities down on the coast. While growing up I watched her take this tiny little program that was sharing a chemistry lab in the college and grow it to cover most of western canada. She developed distance education systems back when the internet was just starting to reach northern bc. She had so many people telling her that it was impossible to make distance education work and that the program would never ammount to anything and rather than just arguing, she took their issues, studied and understood them and engineered the course system to work around or even embrase some of the issues to flip them on themselves to improve the whole system.\nMy brother taught me algebra or the beginnings of it in kindergarten. He taught me most math functions in advance of school and mentored me in programming. He did things with the early computers such as 3d engines that I didn\u0026rsquo;t even know were difficult until later when I started looking at what was possible.\nThere are, of course, others who were great inspirations though often in odd ways; I love Sherlock Holmes, for instance, because he is intelligent and understanding enough to know that lawfullness is not always the best coarse of action when solving things. I also strive to be like Horratio Hornblower (look up the BBC production, it\u0026rsquo;s amazing\u0026hellip; and i so should\u0026rsquo;ve listed this above)\nWhat creators (youtube, twitters, etc) do you think are way to underrated and deserve a shout out?\n Tesla500; damn, I work for him\u0026hellip; This Old Tony is awesome; absolutely love his humor and what he does is great. Marco Reps; again, great humor. He does tend to sell things a lot but hey, the content is still pretty good.  What\u0026rsquo;s the best advice you\u0026rsquo;ve ever received? Worst?\nBest:\nThose without dirty hands are wrong or at least assume that. Nothing will ever be perfect, aim for it but don\u0026rsquo;t expect to hit it and you\u0026rsquo;ll be great when you get 3/4 of the way there.\nWorst:\nHmm\u0026hellip; that\u0026rsquo;s much more difficult as I tend to forget most advice. Oh, I know, that guy who once told me not to bother making my own stuff because people have made so much better than everything I could make.\nWhat would be your perfect work environment?\nIt\u0026rsquo;d contain a nice kitchen with a gas range. It\u0026rsquo;d have a hammock with some monitor mounts around it so I can still get my multi-monitor setup. It\u0026rsquo;d also have tools for everything from CNC milling through electronics assembly.\nHow do you stay motivated to keep doing cool things?\nDo small cool things even when you don\u0026rsquo;t feel like it; It won\u0026rsquo;t always work but hey, sometimes it does. Watch single-episode tv shows if you\u0026rsquo;re really stuck, or go watch a movie\u0026hellip; use the internal drugs from the movie to motivate. Hug your mate/partner\u0026hellip; eh, totally doesn\u0026rsquo;t help in the short run but they will more than you can imagine. When your stuck, don\u0026rsquo;t just sit there and stare at it, go do something else for a bit (don\u0026rsquo;t invest too much time though, you still want to come back to this one) Sitting around and BSing about stupid ways of doing things is great brainstorming\nAlso don\u0026rsquo;t sweat the days you can\u0026rsquo;t fullfill a 120% like you normally drive for; that\u0026rsquo;s fine. If it goes on too long, do something you can\u0026rsquo;t ignore to remind you to do stuff\u0026hellip; haircut, paint your nails some weird colour, whatever\u0026hellip; what ever will give you that reminder that is hard to ignore. That\u0026rsquo;s what\u0026rsquo;s saved me a few times (Minecraft, I\u0026rsquo;m looking at you!).\n"}),a.add({id:16,href:'/design/3d/',title:"3 D",section:"DESIGN",content:"3D Modeling, Sculpting, Painting, Shading, and Rendering #  This chapter will be using various programs, not all of which are free. I\u0026rsquo;ll do my best to recommend things that are open source if I can, otherwise I\u0026rsquo;ll try to keep the cost down as much as possible. You definitely can do everything in this chapter for free, just be aware that without some of the paid tools it may be substantially harder. Before we get started, let\u0026rsquo;s look at some examples of cool art made using 3D modeling and Blender:\nI chose these examples because I think they show off how wide ranging the idea of 3D modeling can be. You can do everything from make a stylized 3D piece of art like the example from @beastpunks to full blown animated shorts to crazy physics modeled art with realistic lighting. The sky is truly the limit.\nupdate for @ForestFright! pic.twitter.com/arKk6OLpiR\n\u0026mdash; greyüåøüê∫ (@beastpunks) December 1, 2020       Unfortunately, the limitless options are also a bit of a curse as there is a lot to learn. Blender, the 3D modeling and animation tool that all of these examples used and that we\u0026rsquo;ll be using as well, is basically a crazy amalgamation of software in one at this point. You can use it to sculpt 3D models, texture them, rig them, animate them, shade them with a node-based shader, paint in 2D vector layers and animate those, edit video, composite video and your animation, render those animations with various rendering engines, do motion capture, simulate physics\u0026hellip; and more.\nThat is to say, this software is incredibly dense. It\u0026rsquo;s going to be overwhelming and scary. Just, take a deep breath and start slow.\nTo simulate the universe, you must first make a Donut.\nSeriously, watch this Make-A-Donut series (24 videos, ~6hours). I\u0026rsquo;m going to assume you have for everything past this point.  TODO\n  3D Game Shaders For Beginners (GitHub)\n  Intro to the core ideas assume covered by the donut video. Need to watch though and see what\u0026rsquo;s missed\n Start a bit technical, with vertices/Meshes Go into basic blender \u0026hellip; blockout \u0026hellip; Sculpt \u0026hellip; Rig \u0026hellip; Nodes (Shading \u0026amp; Geometry)    https://en.wikipedia.org/wiki/Z-fighting\n Need to compare https://quixel.com/mixer and https://armorpaint.org as substance painter is wayyy to expensive.\n\u0026hellip; probably Armor Paint is it runs on Linux. It\u0026rsquo;s not free, but it\u0026rsquo;s open source (so you can be a cheap bastard) and it\u0026rsquo;s only ‚Ç¨16 (at time of writing) one-time compared to Substance Painter at $20/mo, so not at all reasonable for just learning. It may be massively better, but, uh, fuck that.\n   Blender Daily on Twitter\n  100+ Tip to Boost Modeling in Blender (YouTube - CG Boost)\n  Z-fighting\n  "}),a.add({id:17,href:'/design/photo/',title:"Photo",section:"DESIGN",content:"Photography #  [TODO]\nThis Guy Flipped an Element in an Old Lens and Got ‚ÄòMagic‚Äô Bokeh (PetaPixel)\n"}),a.add({id:18,href:'/engineering/24-/',title:"24",section:"Engineering",content:'Chapter 24 - #  This chapter has been merged with another, leaving the space open for now, I\u0026rsquo;ll put something else here\u0026hellip;\nMaybe reverse engineering? This would seem a bit out of place though. I might need to do some rearranging of chapters 26-34 anyway https://github.com/mytechnotalent/Reverse-Engineering\nIf you\'re reading this, you have javascript off.\n document.querySelector("body  main  div  article  div  p").innerText = "If you can read this you have JavaScript on" '}),a.add({id:19,href:'/engineering/a3-bom/',title:"A3 Bom",section:"Engineering",content:"Appendix C - BOM #  As the guide isn\u0026rsquo;t anywhere near a usable state yet, this page should be ignored for the most part. OpGuides is free. Unfortunately all the tools and programs you\u0026rsquo;ll need to follow along aren\u0026rsquo;t necessarily. While you probably could do everything in this guide without getting the things in this Bill OF Materials (BOM) it will massively help to have it.\nI\u0026rsquo;ll do my best to keep the cost as low as possible though. If you need help confirming something in your cart is correct just hit me up.\n   Item Price/item (approx, in USD) Quantity     Backup Hard Drive 40/Tb optional   Thumb Drive 8 1   Arduino nano 5/board 2   ESP8266 5/board 2   STM32F103C8T6 w/ programmer 8 Optional   ICE-Breaker FPGA 80 Optional   74-series logic IC\u0026rsquo;s 25 Optional   Assorted Resistors 10    Assorted Potentiometers 5    Assorted Capacitors (Ceramic) 10    Assorted Capacitors (Electrolytic) 10    Assorted Inductors 5    Assorted transistors 8    Assorted Diodes 10    Op-Amps (UA741) 5/10    Assorted LEDs 5    Assorted Crystal osc     555 Timers 4/10    Hook up wire     jumper wire     Solid Core wire  Optional   Breadboard 10/3pcs, dont cheap out. Cheap ones super suck. These are decent. 3 should be plenty, but more if you\u0026rsquo;ll have more in-progress projects   Proto PCB 12 ish, but varries Something like this, which has pre connected lanes like a normal breadboard is nice ‚ïÆ(‚îÄ‚ñΩ‚îÄ)‚ï≠ depends on how many projects you want to keep   Buttons 7/50pcs ~32 (They break easily)   DIP Switches 8/5pcs ish, get 4 or 8 switch blocks or a variety pack at least 32 total switches   7-segment display 1.5/IC For learning, get the raw pins, not the multi modules.  Optional   tiny OLED display 6 ish, varries by size and pixel count. Optional   Accelerometer 4 ish, varries by accuracy and other features Optional   Servo Depends on size and what you want to do with it. Just to learn, a 2 \u0026lsquo;micro servo\u0026rsquo; is fine. Optional   Relay board 6 ish for a 4 relay traditional relay board  not a significant difference to go for Solid State relays, which are much quieter and faster switching Optional   Lab Power Supply 35 for a shit, 300ish for something multi channel and nice  As with the OScope, it\u0026rsquo;s up to you on the investment 1, 2 optional   Soldering Iron (TS100) 75 (full kit)    Solder 9/spool. Varies in quality, you get what you pay for.  You\u0026rsquo;ll want to make sure it\u0026rsquo;s pretty thin.    Flux 10 or so. Varies in quality, you get what you pay for.    Osciliscope 30 for a shit, 350 for a good one, not really an in between :( Optional-ish   Multimeter 35    Logic Analyzer 10 for a cheap Saleae logic clone, ~65 for a good one  obviously you can spend as much as you want for  more channels or faster reads 1   Software Defined Radio 150ish for a HackRF or Lime Mini optional   Proxmark3  very optional             TOTAL BASE ;OPTINONAL     Also we\u0026rsquo;re going to be building a little server, for this you\u0026rsquo;ll want\n   Item Price Quantity     ASRock J3455-ITX 75 1   ITX, SFX case (APEX MI Series MI-008, with power supply) 50    DD3L 40/8Gb 1   1Tb 2.5\u0026quot; hard drive (Redundant Storage) 55/dive 2   120Gb SSD (OS) 20    Extra Network interface card 25 Optional   Total (Barebones)     Total (Optional)      OR\nYou can find a used Dell Poweredge r610 or poweredge 1950. Many of these will come with out drives, but this option is probably cheaper than the above for better specs. However; these servers are LOUD, loud enough to not be comfortable in the same room and absolutely drink power. As mentioned in the server section, the hardware you use really doesn\u0026rsquo;t matter, you\u0026rsquo;ll just want at least two hard drives, an OS drive, and multiple network interfaces are encouraged. These things can all be added to just about any desktop though, so going to electronics thrift stores or auctions and finding a desktop works too.\nGetting things for cheap #  salvage, auctions\n"}),a.add({id:20,href:'/engineering/circuits/circuits1/',title:"Circuits1",section:"Engineering",content:"Chapter 22 - Intro to Angry Pixies #  A simple guide to electronic components (YouTube)\nThe Tools of the Trade #  Building, fixing, and analyzing circuitry requires the use of a few tools and appliances. While there are many more than those listed here, these are the most important ones and should be all you need for most even very advanced applications.\nThe Multimeter #   note, the above video uses U=IR instead of V=IR like \u0026lsquo;normal\u0026rsquo;. You\u0026rsquo;d think that engineers could just get along and pick consistent symbols, but, nope. The \u0026lsquo;normal\u0026rsquo; V (voltage) = I (current) * R (Resistance) is often E=IR [TODO] textual description of all multimeter functions\nResistance and the OHM meter #  Resistors do one thing- resist current. Using the ohm meter function of your multimeter you can find out the amount of this resistance measured in ohms (ohms are represented with a capital omega, Œ©) using an ohm meter is simple, just poke and prod with at least one component in between the leads. If there\u0026rsquo;s nothing in between - that is the leads are touching one another- there will be no resistance, if there\u0026rsquo;s no way for a DC voltage to get from one point to the other, that will be infinite or \u0026lsquo;overload\u0026rsquo; resistance\nVoltage, Ground, and the Volt Meter #  Voltage can be thought of as the \u0026lsquo;pressure\u0026rsquo; in a hose. However, this pressure is relative to another point, the point we usually take reference to is called \u0026lsquo;ground\u0026rsquo;, though this doesn\u0026rsquo;t have to be the case- you can measure the voltage across a single resistor or other component too. Just remember measuring the voltage with both probes at point or along the same wire doesn\u0026rsquo;t make sense because a volt meter only tells you the voltage difference between two points. This would be like seeing the pressure difference in hose between two nearby points, obviously the pressure of one point minus the other will be 0.\nIn general there are two primary ways you will work with voltage- AC or DC, these stand for Alternating Current and Direct Current. DC is simply a constant voltage level output. AC on the other hand is any time varying signal, usually periodic (repeating) and most commonly a sine, though many other waves are used like square, triangle, saw, and any mixture of these, including the same signal with a DC offset. Not here that AC is technically referring to the current having this shape and not the voltage, it\u0026rsquo;s just that in the basic scenario with a constant load, the current and voltage waves will look the same    Your multimeter will likely have two different settings for measuring voltage, one for DC and one for AC. Of note, most inexpensive multimeters are not true RMS (Root Mean Square) meters, meaning the reading of AC voltage is not an accurate measure of how much energy the wave can deliver unless it\u0026rsquo;s a clean, no DC offset sine wave. Imagine a square wave like the above, with the same height, but where the the peaks are thinner, with longer periods of rest in between (this is known as having a lower duty cycle), in this case the wave would still have the same Voltage Peak-to-Peak (Vpp) value but on average wouldn\u0026rsquo;t be able to carry as much energy. That\u0026rsquo;s where RMS comes in, it is effectively the measure of how much energy that waveform can deliver and is much, much more useful in general. RMS is a topic we\u0026rsquo;ll be covering later, but to wet your apatite, this from Wikipedia may help:  https://en.wikipedia.org/wiki/Root_mean_square\n  Of note, from a mathematical perspective all time varying signals can be represented as an infinite number of sine waves added together, this is actually used to do practical computation in many things, and what is used if you ever want to get into digital signal processing. I only mention it here because I foresee it being a rabbit hole someone could fall down when trying to gronk what RMS is. Again, we\u0026rsquo;ll talk more about all of this latter, so I\u0026rsquo;m going to move on for now.\nhttps://en.wikipedia.org/wiki/Fourier_series#Examples\nIf you\u0026rsquo;re feeling really adventurous Chapter 6 - Math, Section 11 has more resources on this topic\nCurrent and the Ammeter #  If voltage is the pressure in the hose, then current is how much water actually flows. This analogy holds up too, because if we use a resistor to kink the hose and the flow is restricted the current will go down. If you were to stick a wire directly into the wall outlet all the current the wall can give will try to flow though, but it can be restricted. To measure the current though a circuit we can\u0026rsquo;t just probe between two points as before though. Instead the probes need to form the exclusive path that part of the circuit can flow through.\nIn practice this means the wire you want to measure current through would need to be cut and the ammeter\u0026rsquo;s probes hooked up at either end, making the meter part of the circuit.\nCurrent, just like voltage, can vary, and in AC circuits usually does. This leads to some more interesting cases like power factor, but we\u0026rsquo;ll get to that later.\nContinuity Tester #  The continuity tester does exactly what it\u0026rsquo;s name implies, it makes sure two points are connected electrically. If you have a piece of metal and put both probes on it it should beep, but if you put the probes on rubber, they clearly will not be. The continuity tester isn\u0026rsquo;t really much different from the ohm meter in operation, and many will actually display the resistance if there is any. The main use is that it beeps when the resistance is low enough to be confident two points are electrically connected.\n[TODO] day to day use, why you want one #  OHM\u0026rsquo;s Law #  + with power wheel\nThe Lab Power Supply #  Power Supply Units or \u0026lsquo;PSU\u0026rsquo;s are useful because unlike your phone charger which puts out a singular voltage of 5 volts (ignoring fast charging) they can have their output voltage varied usually between 1 and 35-ish volts. Furthermore, they provide current limiting, useful when you\u0026rsquo;re unsure of how much current your circuit might sink or need it for safety.\n[TODO] add picture, mention ATX psu, current safety\nThe Frequency or Waveform Generator #  Frequency generators can be used to output a signal that is alternating, unlike the DC signal of the Lab PSU. Usually they\u0026rsquo;ll support a range of wave shapes, frequencies, amplitudes, and DC offsets. Many support far more than this, though the applications for the more advanced modes are few. If you\u0026rsquo;re just starting out you can (with precausions) actually just use the audio output of your computer or buy an inexpensive one for under $20, unlike the expensive example below:\nhttps://en.wikipedia.org/wiki/Arbitrary_waveform_generator\nThe Oscilloscope #  The oscilloscope (or OScope or simply Scope) allows you to see an AC signal and how it varies over time as a plot of Voltage on the Y axis and time on the X, Most OScopes will allow you to look at multiple signals at once, with one overlaid on the other. Furthermore, most support X-Y mode, where the plot is actually the voltage of one input as the X axis and the voltage of another as the Y, moving a dot and it\u0026rsquo;s trail around the screen. In fact, this is how the first computer monitors worked:\nModern OScopes look much different than their phosphorescent green ancestors though:\nHowever, a decent \u0026lsquo;Digital Storage Oscilloscope\u0026rsquo; or DSO like the one above run a minimum of $300 at the time of writing, so many hobbyist opt for older scopes like this one:\nor a cheap, low resolution, low speed one from Ebay. For most uses, both of these will be perfectly fine. For just starting out though I\u0026rsquo;d recommend a logic analyzer (I\u0026rsquo;ll talk about that next) and oscilloscope combo tool, like the LHT00SU1 The which can be found on Ebay pretty easily. Be aware they can fry your USB port or worse though.\n[TODO] updated recommendations with DSLogic from Ebay and a cheap scope\n[TODO] \u0026hellip; or the Analog Lab from Diglent?\nBut what are these actually used for day to day, and why would you want one? [TODO]\nQuake on an oscilloscope (YouTube)\nThe Logic Analyzer #  Logic Analyzers\u0026hellip; analyze logic. Who knew? But what does that mean? Well, in reality they are somewhat similar to an oscilloscope in that they show a voltage over time, the difference is they only show either on or off over time based on the set TTL (Transistor‚Äìtransistor logic) voltage. This lets you eavesdrop on the digital communication going on over a wire. Here\u0026rsquo;s an example output:\nIn this particular encoding, the longer high bumps represent a 1 and the short high bumps a 0, so you\u0026rsquo;re looking at the binary that was sent over a wire. It\u0026rsquo;s actually pretty rare that a wire sends raw high for a 1 and low for 0 so other schemes, like the one above, are used. For most schemes the software can actually be used to decode the received data into raw binary or if it was human readable characters even that.\nUsing a logic analyzer is pretty simple, most today are connected to your computer over USB and then use software like Pulseview as shown above, then you just select the sample rate (how many times per second to check the wire, here 1MHz) and the number of samples to collect and hit start. You may want to setup a trigger too (speaking of, it\u0026rsquo;s worthwhile to look up how triggering works on an OScope [TODO]) Most logic analyzers support 8 or more simultaneous data streams, though in the picture above I\u0026rsquo;m only using one.\n[TODO] explain when a logic analyzer is actually used, and look at a quick example decode\nSoldering #  https://www.digikey.com/en/maker/blogs/rohs-vs-non-rohs-soldering\nSoftware Simulation #  [TODO]\nCircuit Simulator\nSimulide\nVCV Rack?\n[TODO- following title needs split up, possibly new chapter?]\nOHM\u0026rsquo;s law, Nodal \u0026amp; Mesh Analysis, Superposition, Thevanins #  [TODO]\nResistors #  [TODO]\npotentiometer read from arduino full range (center tap or max resistor)\nCapacitors #  [TODO]\nTrue, Reactive, Apparent \u0026amp; Deformed Power\nWhy electrolytic capacitors are actually kinda shitty üí© (YouTube)\nIdeal Capacitor\u0026rsquo;s aren\u0026rsquo;t real\nInductors #  [TODO]\nRGB LED, Inductively Powered, Frequency Controlled (YouTube)\nMotors\nTransformers, Variacs #  World\u0026rsquo;s Most Powerful Pancake Slayer Tesla Coil? Melts Copper! (YouTube, Plasma Channel)\n[TODO]\nButtons, Switches, and Knobs #  [TODO] SPST DPST etc. Pots V encoders, encoders with buttons, slider pots. (inc motorized) etc.\nRelays #  [TODO] solid state vs old school\nDecibels #  [TODO]\nHow to read logarithmic first, example for why they\u0026rsquo;re needed: log-scales demo in uPlot (github)\n Filters #  [TODO]\nPassive V Active\nRC Low Pass Filter (YouTube - All About Electronics)\nSeries Resonance in RLC Circuit (YouTube - All About Electronics)\nTransient Analysis of the RLC Circuit (YouTube - All About Electronics)\nFurther Reading #  [TODO]\nhttps://learn.sparkfun.com/tutorials/voltage-current-resistance-and-ohms-law/voltage\nhttps://en.wikipedia.org/wiki/Transmission_line\n"}),a.add({id:21,href:'/engineering/circuits/circuits2/',title:"Circuits2",section:"Engineering",content:"Chapter 23 - Circuits \u0026amp; Semiconductors #  When I was a kid I thought about circuits as being alive, like Cells at Work!, only little electrons going around busily keeping the heart of my toy working instead of anthropomorphic red blood cells working in the human body.\nNow, as an adult - and a computer and electrical engineer at that - I still find this thought endearing. Though I\u0026rsquo;ve now come to see the physics and art of electronics to be even more beautiful when their true nature is really understood.\nThere\u0026rsquo;s a joke you\u0026rsquo;ll hear about those that work with these low level physics or that arrange logic gates to make full CPUs- that our job and passions boil down to teaching rocks to think.\nSo, let\u0026rsquo;s lean how to teach some rocks.\n ¬©Vega, made with Noisedeck    [TODO]\nShow everything in a circuit sim, fix heading levels (this is a mess)\nPossibly break up this chapter? Transistors, the opamp, etc alone may each justify their own chapters\nThat said, I don\u0026rsquo;t want to get to in the mud of transistor physics. I really want to focus on how/when/why to use what, not how they work as the physics is both pretty hard to grasp and not super useful. Still would like to mention that switching is what uses power and like process size things, but maybe not the chemistry or electron tunneling effects, at least not in great detail\nChapter 23.1 - Semiconductors #  TODO, looks very good briefly scrolling though it: https://lcamtuf.coredump.cx/electronics/\nDigilent\u0026rsquo;s \u0026lsquo;Real Aanlog\u0026rsquo; course looks okay too, and I might write this guide assuming their analog parts kit: https://learn.digilentinc.com/classroom/realanalog/\nSemiconductors? #  Will gallium nitride electronics change the world? (YouTube, Engadget)\n[TODO] pic of silicon bulb\nhttps://en.wikipedia.org/wiki/Wafer_(electronics)\nP/N junctions, etc.\nDiodes, the one way road #   A diode is a two-terminal electronic component that conducts current primarily in one direction (asymmetric conductance); it has low (ideally zero) resistance in one direction, and high (ideally infinite) resistance in the other.\n Diode page on Wikipedia (which is actually super good) Alright, so in very basic terms, it\u0026rsquo;s a part that only lets current flow in one direction (idealy). A one-way road for current. If you put a sine wave in, you\u0026rsquo;ll get a sine-wave chopped in half out. Now, this assumes everything is ideal, as you\u0026rsquo;ll really get more like the top 40% of the wave out, but we\u0026rsquo;ll get to those details in a bit. For now, I recomend watching this video:\n [TODO]\nzeener, normal, bipolar\n varistors , sparkgaps Leds - getting current both ways, LED safety  Zener Diode (YouTube - EEVblog)\nVaricaps (Wikipedia)\nTunnel Diodes (Wikipedia)\nDIY Diode (Simplifier) Part 2 Part 3 Part 4: Power Diode\nDiode Logic #  The Diode Clock\nTransistors #  [TODO]\nTransistor Families (JonDent - Blogspot)\nBipolar Transistor @ electronics-tutorials.ws\ntubes and how they work\nDIY Triode (Simplifier) Part 2 Part 3 Part 4 Part 5: Power Triode Part 6: Power Triode 2 Part 7: Portable Triode, Tetrode\nPNP V NPN #  tIGBT, Mosfets? #  Tubes #  That Elusive Valve Amp Sound, For Not a Lot! (There has to be a Catch) (hackday.com)\nIntegrated Circuits #  [TODO]\nhttps://hackaday.com/2019/05/20/integrated-circuits-can-be-easy-to-understand-with-the-right-teachers/ Uncovering the Silicon: Demystifying How Chips are Built and How They Work (YouTube)\nReverse-engineering the TL431\nDistortion pedal with all homemade semiconductors, only one external component (cap for AC coupling) pic.twitter.com/M7t3Gl1m5P\n\u0026mdash; Sam Zeloof (@szeloof) July 6, 2020  Finally I learned how to do focus stacking with my macro (non-microscope) shots. 226 shots, 50¬µm camera shift per frame. Laowa 25mm F2.8@F4 on WeMacro rail. Stitched in Helicon Focus (pyramid, smoothing=1). 1 original photo for comparison. #WeMacro @laowa_lens #heliconfocus pic.twitter.com/yCdCIBXMRv\n\u0026mdash; Zeptobars (@Zeptobars) March 12, 2019  555, OpAmp, 74-Series Logic #  555 Timer IC (YouTube)\n555 as an amplifier (don\u0026rsquo;t actually do this!)\nTiny Transistors' Clever TT555 Is a Pin-Compatible 555 Timer Built from Discrete Components (Hackster.io)\npotato semi\nChapter 23.2 - Op-Amps \u0026amp; Filters #  Op-Amps #   Optical Electronics #  [TODO]\nCrystal Oscillators #  [TODO]\nPiezoelectricity - Why hitting crystals makes electricity (YouTube)\nPWM #  [TODO]\nDriving a PAL tv over RF thanks to PWM harmonics (Hackaday)\nADC/DAC #  [TODO]\nhttps://en.wikipedia.org/wiki/Fourier_transform\nNyquist\nActive Filters #  http://sim.okawa-denshi.jp/en/\nChebyshev Filters (YouTube - All About Electronics)\nButterworth Filters (YouTube - All About Electronics)\n[TODO]\nWaveguides #  Waveguides Explained (YouTube)\nAudio Devices #  [TODO]\nspeakers, piezos, amps, mics and pickup patters\nTODO #  add motors, analog meters, various connection standards, radio, flex/pressure sense, grounding (chassis, digital, analog, ground planes, etc.), solar/photo reactive,\nRelating AC and Music #  [TODO]\nRelate back to things like ADSR, Distortion, Reverb / Echo, Decibels (audio), etc. Use VCV RACK\nChapter 23.3 - Rare and Dangerous Componets #   Dangerous  Tesla coils High voltage/current/hot/whatever Don\u0026rsquo;t pretend to be an electrician Don\u0026rsquo;t use ATX psus for dumb things   Rare/Expensive  Tubes, NOS parts, etc.    Continued Reading: #  [TODO]\nAt this point I highly recommend \u0026lsquo;Practical Electronics for Inventors\u0026rsquo; ISBN 978-1259587542, namely chapters 2-12, and 15-16. It\u0026rsquo;s a very large, detailed book that does it\u0026rsquo;s best to keep things, well, practical.\nhttps://taleri.files.wordpress.com/2014/02/practical_electronics_for_inventors_-_scherz_paul.pdf\nHardware isn\u0026rsquo;t generally copyrightable\nHackady.io 2020 Circuit Sculuture Challange\nRGB LED, Inductively Powered, Frequency Controlled (YouTube, Wolf Tronix)\nHow to protect circuits from reversed voltage polarity! (YouTube, AfroTechMods)\nCircuit Sculpture Workshop (Hackaday, Kristina Panos)\nCurrent Loop (Wikipedia)\n"}),a.add({id:22,href:'/engineering/circuits/digitallogic/',title:"Digitallogic",section:"Engineering",content:"Chapter 24 - Digital Logic #     Binary (0b) Hex (0x) Decimal     0000 0 0   0001 1 1   0010 2 2   0011 3 3   0100 4 4   0101 5 5   0110 6 6   0111 6 7   1000 8 8   1001 9 9   1010 A 10   1011 B 11   1100 C 12   1101 D 13   1110 E 14   1111 F 15      lineart by https://merveilles.town/@chirrolafupa, I (Vega) filled it in and turned it into a gif.\n  To access the original line art, use a gemini browser to go to gemini://caracolito.mooo.com/coloring-computers/\n   [Todo, insert intro about Minecraft redstone]\nWhat is digital logic? #   ignoring the analog world (10%/90%)\nTruth Tables, K-Maps #  min/max terms, Don\u0026rsquo;t cares, SOP/POS, multiple out\n[TODO] http://nandgame.com\nBasic Logic Gates #  [TODO] truth tables, circuit symbol, discrete logic symbol for all.\nNot #     Input Output     0 1   1 0    Truth table, transistor implementation pmos/nmos, cost, power consumption at switch\nAND #  A‚àßB, AB,\n   Input A Input B Output     0 0 0   0 1 0   1 0 0   1 1 1    NAND #     Input A Input B Output     0 0 1   0 1 1   1 0 1   1 1 0    Or #  Nor #  Exnor #  Xor #     Input A Input B Output     0 0 0   0 1 1   1 0 1   1 1 0    Exor #  Transmission, #  Mux #  Demux #  Encoders #  Basic combinational logic #  propagation delay, fan in/out, POS/POS\n2\u0026rsquo;s Compliment, Floating Pt, Math #  overflow, carry, ripple, fast, mul, shift-and-add mult, divider,\nLatches and Flip Flops #  SR, Dl, edge triggering, Dff, Tff, JKff,\nRegisters #  Counters #  Making Some Circuits #  There\u0026rsquo;s a ton of simulators out there for making simple circuits educationally, but most sorta suck, so I\u0026rsquo;m going to delve right into something fun: Minecraft\n If you don\u0026rsquo;t own MineCraft and can\u0026rsquo;t afford it, MineTest with mesecons is an option. It\u0026rsquo;s\u0026hellip; not great. (sorry MineTest team, I still love what you\u0026rsquo;re doing \u0026lt;3 ) But it is Open Source. If you\u0026rsquo;re using Arch Linux (and updates haven\u0026rsquo;t broken things since writing) you should be able to install MineTest from the community repo and mesecons-git from the AUR.\n Minetest Circuit Challange\nMore Digital Logic resources #  We\u0026rsquo;ll come back to look at more complex digital logic in chapter 28 \u0026ldquo;Let\u0026rsquo;s try out programmable logic\u0026rdquo; and 29 \u0026ldquo;Let\u0026rsquo;s make our own CPU\u0026rdquo; , but if you\u0026rsquo;re hungry for even more, here are some resources\n  "}),a.add({id:23,href:'/engineering/circuits/embedded/',title:"Embedded",section:"Engineering",content:"Chapter 25 - Embedded Systems #  [TODO]\nWhat is an Embedded System? #  [TODO] need source PWM, SPI, I2C, What\u0026rsquo;s going on?! #  Driving a PAL TV over RF thanks to PWM harmonics (Hackaday)\nPlaying around - Hello World and blink #  Making an Embedded System project - 1 - Humidity Sensor #  Making an Embedded System project - 2 - MIDI Controller (with piezzo) #  Making an Embedded System project - 3 - Stepper Motor Music #  adapted from floppy drives, but less expensive\n [TODO] From Zero to main() (Interupt)\nReal Time Operating Systems #  RIOT-OS, MBED, etc\n[TODO note, MBED was used on the euclidean drum project for its event queue]\ntalk about scheduling (CFS, etc)\nOther weird and cool projects: #  a lot of people have been mocking this video but having tried it, I can confirm this is actually the most reliable way to fake keyboard events on windows 10. https://t.co/kTz5a6YlTI\n\u0026mdash; foone (@Foone) April 6, 2020  Of Course It Leaks!\n\u0026ldquo;The Simplest of Pseudo Random Number Generators\u0026rdquo; - Hackaday\nReverse Engineering an Unknown Microcontroller (Dmitry.GR)\nChapter 14.1 - Embedded Hardware comparison #  [TODO, Pi V RockPi4 V Arduinos V x86, ref architecture information from chapter 3.3]\nmention pi sd card performance / stability limits and pi advantages in how common it is\nArduino ‚â† Atmega32p #  I really want to make this clear: Arduino is a framework. Not a specific hardware platform. Different Arduino devices can run with wildly different specs and support wildly different features. STM 32 #  The \u0026lsquo;Black Pill\u0026rsquo; (STM32F411) is replacing the \u0026lsquo;Blue Pill\u0026rsquo; (STM32F103) (Hackaday)\nFirst up is the brains of the operation: an STM32F103. Not a lightweight chip: It\u0026#39;s a Cortex M3 @ 72MHz. It\u0026#39;s got 256kB of flash and 48kB of RAM and that\u0026#39;s a 100-pin TQFP package!https://t.co/oPCeo7XMpe pic.twitter.com/niDPuIFBPT\n\u0026mdash; Stargirl üå† (@theavalkyrie) November 17, 2020  Getting Started in Robotics (Arthur Allshire\u0026rsquo;s Blog)\nThings you\u0026rsquo;ll want to know exist that I don\u0026rsquo;t know where else to put: #  "}),a.add({id:24,href:'/engineering/circuits/pcb/',title:"Pcb",section:"Engineering",content:"Chapter 26 - Let\u0026rsquo;s make our own PCB #  [TODO]\n Make it work Make it not emit a ton of RF or go to shit when around it (everything is an antenna) Make it pretty  ref that weird russian autorouter as limits on this   Make it repairable Know when to do a PCB or a Perma-Proto Assuming parts will only be available for so long  First things first, we\u0026rsquo;re going to be using Kicad, so you\u0026rsquo;ll want to go grab that from the repos. While that\u0026rsquo;s downloading and installing give this a watch to get the basics down:\n                                       image/svg+xml     1) Create a project File  New Project  New Project    cheatsheet  2) Eeschema : draw the schematic  Add components : A   Move item1 : M  +   Copy item : C  +   Copy selection :  + Shift      Delete item : Del  +   Delete selection : Shift    Ctrl   + +   Rotate item : R  +   Mirror item : Y  + X  /   Add wires : W   Edit properties : E   Add power symbols : P   Add no-connect : Q   Add text : T   Add labels : L   List of shortcuts : ?   Grab item1 : G  +   Edit value : V   1grab keeps connections, move doesn't  3) Create new components as necessary If editing an existing library : Select working library  Draw component  Add pins Library editor  / Load component to edit from current library  Create new component   Save current component to new library  / Update current component into current library   Preferences  Component libraries   How to load the new library in Eeschema : Component library files Add   Select your .lib file  P   4) Create and assign footprints Footprint Editor  If editing an existing library : Select active library  Draw component  Add pins  / Load footprint from library New footprint Create new library and save current footprint  / Save footprint in active library   Run CvPcb to associate components and footprints   Preferences  Footprint libraries   How to load the new library in CvPcb : Append with wizard  Select your .pretty folder  Generate netlist   6) Export Gerbers File  Plot   Generate Drill File  Plot   +   Check result using GerbView   Anthony Gautier - http://silica.io http://kicad-pcb.org/help/documentation/  5) Pcbnew : design the layout  Read netlist Select top layer : Copy item : Rotate item : Add via : Switch posture : Add tracks : Switch track width : Drag track : Fill zones : 3D viewer : Design Rules  Layers Setup  Design Rules  +  Grab item1 : M  +  C  +  R  +  V  Q  X  W  D  B  + 3  Alt  Shift    + ( )   G  +  1grab keeps connections, move doesn't (Only for AZERTY keyboards)  Move item1 : Select bottom layer : PgDn   PgUp       Sorce: Foalyy @ https://forum.kicad.info/t/cheatsheet-for-kicad/5247 https://llllllll.co/t/pcb-art-artfully-shaped-copper-traces/22027/2t\nThese 0.3mm PCBs are crazy flexible. Makes it difficult to evenly polish down to extract all the metal layers, but we\u0026#39;ll fix it in post üòâ pic.twitter.com/ylP0lc34g2\n\u0026mdash; David Hulton (@0x31337) May 19, 2021  Always double check your footprints. üò¨ pic.twitter.com/BdTq9e9Byq\n\u0026mdash; Greg (@GregDavill) April 22, 2020  Let KiCad and Python design your PCB Coils [Hackaday]\nKiCad STM32 + RF + USB Hardware Design (YouTube, Phil\u0026rsquo;s Lab)\nI quite like this combination I soldered today: @oshpark \u0026#39;s After Dark PCB with purple LEDs. This is my COPXIE project, which is inspired by PIXIE from @lixielabs . More information can/will be also found here: https://t.co/BLMhnu95Vu pic.twitter.com/Ssg1d1uNFN\n\u0026mdash; Alex (@tinyledmatrix) October 22, 2020  The whole family - top ones are the oldest and the two test prototypes I made. There was issues with the micro I was using and I couldn\u0026#39;t get it low enough power to run. Also assembly was really difficult. pic.twitter.com/3mKgYs83Nr\n\u0026mdash; Loial Otter (@LoialOtter) April 15, 2020  Chapter 26.1 - PCB Components #  [TODO] Antennas (2.4ghz mostly), Spark gaps, coils, PCB capacitor, distributed element filters, flexible PCB as connectors\nand technically resistors and fuses, albeit \u0026hellip; eh.\n0-ohm resistors to keep 1-sidded\nChapter 26.2 - PCB \u0026lsquo;Badges\u0026rsquo; #  Source: @AkioOhtori on Twitter\nHacked @DCFurs badges to broadcast AWOO beacons! pic.twitter.com/6CUdRlKHn1\n\u0026mdash; caudamus (@caudamus) August 10, 2019  Furby Theremin Badge (Tindie, Harbinger LTD)\nhttps://github.com/badgeek/svg2shenzhen\n"}),a.add({id:25,href:'/engineering/deeper/comparch/',title:"Comparch",section:"Engineering",content:"Chapter 29 - Let\u0026rsquo;s make our own CPU #  This Chapter will be split into three parts:Part 1, understanding the interval workings of a CPU. This is effectively just a computer architecture class, and will be by far the largest section.Part 2, making that CPU on an FPGA.Part 3, making that CPU do something. [TODO] http://www.lighterra.com/papers/modernmicroprocessors/\n[TODO] A Density Metric for Semiconductor Technology - past nm for sizing\nPart 1: Computer Architecture #  Motivation: #   Any sufficiently advanced technology is indistinguishable from magic.\n Arthur C. Clarke\u0026rsquo;s 3rd law Computers, to a normal user look like magic. In previous chapters I\u0026rsquo;ve shown you how to harness this magic though programming, and revealed at least some of it\u0026rsquo;s internal worknings in Chapter‚Äà3, Into The Hardware. But this is all low level magic, the sort the lowest level mages can handle. To truely master the craft one must dive deep into the dark arts and study the origin of magic itself and understand how we breathe life into otherwise inanimate rock. Back in Chapter 14, Semiconductors I covered how the basics of the very, very low level work to form semiconductors, then in Chapter 15, Digital Logic we saw how transistors could be chained to give rise to the fundamental logic gates. Finally, last chapter we looked at the basics of FPGAs to see how they let us make large scale logic circuits quickly. That all builds to this, making complex logic circuits that actually do useful work. These can be everything from application specific tasks, like bitcoin miners or hardware encoders and decoders for video codecs to the generic CPU. For this guide, I\u0026rsquo;ll focus on the CPU. However, I think this can be realatively boring without further motivation, so, before we actually get to the CPU, let me show you how and why CPUs have evolved\n[TODO] loop memory operations w/ godbolt, cisc/risc, chiplets, core counts, branch prediction, N/S bridge to chipset (memory controller), etc. Moore\u0026rsquo;s Law ending, voltage minimums, minimum transistor sizes before quantum effects, etc.\n Here you can see there are three memory operations(2x MOV and one ADD that have DWORD PTR in them). With 4-byte ints on a 4Ghz CPU, this works out to $ 3 \\times4(Bytes) \\times (4 \\times10^9(hz)) = 48GB/s $. This is pretty close to the 55GB/s that this linux tool reports that I get, per core, on my system. Fortunately, most modern CPUs have ways of parrelizing these operations internally, having multiple integer units per core as well.\n[TODO] newer systems, https://www.cerebras.net/cerebras-wafer-scale-engine-why-we-need-big-chips-for-deep-learning/, https://www.anandtech.com/show/14750/hot-chips-31-analysis-inmemory-processing-by-upmem, intel optane\n[TODO]\nData-Level, Task-Level, and Instruction-Level Paralleism (Application Parrallelism)\nIntstruction Level Parrelism (Pipelining), Thread-Level and Request-Level Parellism (Architectural Parallelism)\nSingle Insturtion Stream, Single Data Stream (SISD)\nSingle Instruction Stream, Multiple Data Streams (SIMD)\nMISD is not used commercially\nMultiple Instruction Streams, Multiple Data STreams (MIMD) (tightly and loosely coupled)\nIn Memory Processing\nNeuromorphic Computing\nPower wall, max Silicon freq, max density before tunnling\nBranch predictor: How many \u0026ldquo;if\u0026quot;s are too many? Including x86 and M1 benchmarks! (Cloudflare Blog)\nPart 2: What Make a CPU tick? #  [TODO]\nhttps://computersciencewiki.org/index.php/Architecture_of_the_central_processing_unit_(CPU)#Major_parts_of_a_CPU\nmaybe Ben Eaters bread board CPU series?\nPart 3: Making the CPU #  Part 4: Making It Do Something #  Before we start, I\u0026rsquo;ll warn you this isn\u0026rsquo;t easy, but it\u0026rsquo;s also not as bad as it sounds, and it\u0026rsquo;s certainly not as bad as it used to be\n[TODO]\nFPGA Linux Kernel drivers\nAn FPGA that only plays Doom\nThe DooM-chip! It will run E1M1 till the end of times (or till power runs out, whichever comes first).\nAlgorithm is burned into wires, LUTs and flip-flops on an #FPGA: no CPU, no opcodes, no instruction counter. Running on Altera CycloneV + SDRAM. (1/n) pic.twitter.com/wd7j4JnfWn\n\u0026mdash; Sylvain Lefebvre (@sylefeb) May 8, 2020  My Nor - \u0026ldquo;a single board computer that does not have a CPU. Instead, the CPU consists of discrete logic gates from the 74HC series. This computer also has no ALU. Only a single NOR gate is used to perfom all computations such as addition, subtraction, AND, OR and XOR.\u0026rdquo;\nChapter 29.1 - FPAAs #  ZRNA FPAA\nWeird Things #  https://hackaday.com/2020/11/23/a-cpu-less-computer-with-a-single-nor-gate-alu/\n"}),a.add({id:26,href:'/engineering/deeper/compileassemble/',title:"Compileassemble",section:"Engineering",content:"Chapter 27 - Compilers and Assemblers #  https://lee.earth/til/compiling-c-code-a-step-by-step-guide/\n[TODO] Better Firmware with LLVM/Clang\nCommon Flags and When to Use them #   These flags are not universal, instead they\u0026rsquo;re from GCC. GCC and Clang are the big two compilers you\u0026rsquo;ll see a lot and these flags should be mostly the same between the two. Of course, there are many, many other compilers, but I\u0026rsquo;m going to start with the common stuff\n -o (Output) #   Note, this is a lowercase \u0026lsquo;o\u0026rsquo;\n You should\u0026rsquo;ve seen this already, I\u0026rsquo;m mentioning it mostly to give a brief review of what a flag is, it\u0026rsquo;s basically just another term for an argument to a program where the program is run as program-name argument1 argument2 ... but, usually flags are prefixed by - or --\nin the case of -o it just means, use the next argument as the output name, so using\ngcc input.c -o myprogram gives you an executable named myprogram instead of just input.\nWarnings #  Just, read this: https://interrupt.memfault.com/blog/best-and-worst-gcc-clang-compiler-flags - It\u0026rsquo;s a lot more in depth than anything I could write here. It\u0026rsquo;s focused on Embedded development, but should be broadly applicable.\n-S (aSSembly) #  -v (Verbose) #  Optimization #   Note, this is an uppercase \u0026lsquo;O\u0026rsquo;\n And now we can get to fun stuff. -O is generally used in levels, here with no space, so there\u0026rsquo;s -O, -O2, -O3, and -Ofast are for speed, and -Os is for size of the binary. (or -Oz for clang)\n Technically, -Ofast can break your code. This is rather unlikely though.\n Each of these will take longer to compile but be more aggressive about optimizing the assembly code that is generated from your input. For example, let\u0026rsquo;s look at the code\n1 2 3 4  int mult(int m, int n){ char a[m][n]; return sizeof(a); }   This is a very stupid multiply function. Effectively, it\u0026rsquo;s multiplying two numbers by making a matrix of size m by n, and then counting the number of spots in that matrix instead of just multiplying the two numbers. I\u0026rsquo;ve embedded a GodBolt page below with this code on the left, and it\u0026rsquo;ll show the assembly output on the right. At the top you should be able to see a box to type compiler options, go ahead and put in -O. You should see a huge long mess of assembly that used multiple imul (multiply) instructions be reduced to 3 lines of assembly with only a single multiply. The compiler has figured out that what we were doing was a stupid multiply and optimized it for us.\n Here there\u0026rsquo;s no difference between -O and O3, but with more complex code there often is. Just keep in mind that this is a trade off, there is the upfront cost of a longer compile time.\n[TODO] Code Size Optimization: GCC Compiler Flags (Interrupt)\n-march, -mtune, -flto, -msse4.2, -mavx, -mavx2 #  -ansi #  Stripping (Not like that, perv) #  Strip command [Wikipedia]\nUnderstanding compilers and common compiler flags #  How expensive is integer-overflow trapping in C++? / Hacker News Comments on article\nHow the cpython compiler works\nCS 6120: Advanced Compilers: The Self-Guided Online Course\nRecommended compiler and linker flags for GCC (Red Hat)\n[TODO]\nMaking a compiler and assembler, DIY language eso-lang style\nMaking an interpreted language #  Making a compiled language #  https://medium.freecodecamp.org/the-programming-language-pipeline-91d3f449c919\nGarbage Collection #  Garbage Collection Algorithms + Writing a memory allocator\nContinued Reading #  At this point I highly recommend \u0026lsquo;The Art of Exploitation\u0026rsquo; by Jon Erickson\nFun things #  Malloc Geiger (Github)\n"}),a.add({id:27,href:'/engineering/deeper/fpga1/',title:"Fpga1",section:"Engineering",content:"Chapter 28 - Let\u0026rsquo;s try out programmable logic #  Before we get started, please be sure you\u0026rsquo;ve read Chapter 24 - Digital Logic  Simulation of an Intel 4004 in TICS (The Integrated Circuit Simulator) a (abandoned?) WIP by Oni, Download the interpreter here, the repo has pleanty of examples.\nSomething a bit less cool but similar is https://github.com/martinkirsche/wired-logic\n [TODO]\nFinite State Machines, VHDL, Verilog, FPGA \u0026amp; CPLD internals\nChapter 28.1 - Field Programmable Analog Arrays? #  [TODO] https://hasler.ece.gatech.edu/FPAA_IEEEXPlore_2020.pdf\n "}),a.add({id:28,href:'/engineering/engineering/',title:"Engineering",section:"Engineering",content:"Hey there, #  My name is Vega. I know there are plenty of tutorials and ways to learn online be it on YouTube, SkillShare, or online classes provided for free by various universities. The difference here is there is no content you\u0026rsquo;ll never use, it\u0026rsquo;s more entertaining than a text book, and there\u0026rsquo;s lots of bias as a result of personal experience. My views of things like what programming languages are bad or what hardware you should buy to learn on will be expressed directly and bluntly. This isn\u0026rsquo;t to say I won\u0026rsquo;t explain my reasoning, just that I\u0026rsquo;m not going to be apologetic when I say Javascript, PHP, Java, Arduino (at least the 328p), and Windows 10 are trash - though I will still likely talk about all of these things.\nI by no means expect you to share my same biases, in fact, I hope you do not and that at one point or another we can discuss why you think I am wrong, as that is the only way I can learn.\nSo, What is this? #  This is a guide for understanding the power the humble electron has in our lives.\nElectricity, digital logic, code, computers, embedded systems, these things are all around us every second of everyday. As I type this I\u0026rsquo;m wearing a smart watch, I have a smart phone in my pocket, and I\u0026rsquo;m using a desktop computer. Each of these devices contains dozens of smaller computers, power supplies, wireless interfaces, etc. My goal with this is to teach you how all of this works and how to use it from transistors to high level code to useful user applications.\n A beam of electrons deflected in a circle by a magnetic fieldMarcin Bia≈Çek, CC BY-SA 4.0, via Wikimedia Commons   I will be assuming you are of reasonable technical ability already- that is the concept of how to proficiently use most types of generic software like text editors, navigation of a file manager, etc. Furthermore, while I will go into high level math, chemistry, and physics, I don\u0026rsquo;t think they\u0026rsquo;re strictly needed for every reader as knowing these things is typically not actually useful in the daily life of someone who works on any of this beyond those that are doing cutting edge research or are planning to teach. In either of those cases you should actually go to college instead of reading this. For everyone else, welcome. This site aims to save you going to college, getting hundreds of thousands of dollars in debt, and taking classes full of useless information you will inevitably forget and for which employers don\u0026rsquo;t care about to begin with.\nFollowing along will require a few things. The first of which is dedication and time. If you don\u0026rsquo;t have the desire to put in at least a little bit of work there is simply no way I can help, that said, if you\u0026rsquo;re reading this instead of watching Netflix I believe that\u0026rsquo;s already proof enough you want to learn. Next is hardware and software, namely you\u0026rsquo;ll be needing a few development boards and Linux, but I\u0026rsquo;ll get into those with time.\n Before we get started there are a few things I recommend reading and watching first. These should give you a bit of an overview of some of the things that will be covered to give you at least a tiny bit of familiarity as each concept comes up.\nWhile I will be covering a lot more than just Computer Science, I recommend this overview of the topics covered in CS: Map of Computer Science by Dominic Walliman\nIf you want to go though a really gentle introduction to a lot of what this guide will cover, This Crash Course: Computer Science series on YouTube is pretty good too.\n"}),a.add({id:29,href:'/engineering/intro/howtolearn/',title:"Howtolearn",section:"Engineering",content:"‚Ö° - Learn how to learn #  I\u0026rsquo;m going to keep this short and sweet: Nobody learns (effectively) by being shown what to do. You can watch hundreds of hours of people playing guitar, even explaining how they do it, but you wont be able to randomly pick one up and play if you never have before. Furthermore, as much as you can learn from direct reading and instruction, it has it\u0026rsquo;s place and limits. This guide, book, whatever you want to call it, was never meant to be followed like instructions. You should go out on your own and poke around, get lost in the weeds as you go. If you find a topic dull, don\u0026rsquo;t read it as in depth. I don\u0026rsquo;t want you wasting your time.\nBreak things. Make mistakes. By the end of this you should know what a burning resistor smells like, what it\u0026rsquo;s like to try to recover from a Linux system that just won\u0026rsquo;t boot, and how it feels when a bug has been eluding you for hours and your code still doesn\u0026rsquo;t work. The only way that happens (unless I made a mistake which is also probable) is if you try ideas when you get them and do more than what\u0026rsquo;s in this book.\nThis struggle is part of learning and proof that you\u0026rsquo;re doing well. These experiences should teach you things in their own right. The smell of burning electronics may help you diagnose a future circuit, the lesson to not fall into a pit of technical debt may help when a bug has engulfed your code, and the late night of terminal only based work as you try to get your computer working again will teach you more than this book ever can.\nTo quote someone much smarted than myself:\nTips to really Master Something\n1. Move away from basics as quickly as possible\n2. Constantly expose yourself to stuff you don\u0026#39;t understand and later revisit what you thought you understood (but actually didn\u0026#39;t)\n3. Do cross-disciplinary research to develop a deeper understanding https://t.co/vHm223qoYe\n\u0026mdash; LiveOverflow üî¥ (@LiveOverflow) September 5, 2018  You should also constantly be looking for how to break, modify, or look into how things work. For example, try right clicking on this sentence and select Inspect, like this:\n OwO, What's this?   You should see a \u0026lt;p hidden\u0026gt; element, try editing it to remove the word hidden, then the text from that elment should appear above this. (this sometimes doesn\u0026rsquo;t work correctly right away, so you might have to right click and inspect twice, but then you should see the HTML source for this section of the page)\nBut try to take this lesson elsewhere, try renaming a .docx (word) file to a .zip and extracting it, or looking though the ventalation of your electronics to see if you can see what makes them tick, whatever. Curiosity is my primary incentive to learn, and often taking a peak into the innards of electronics or code or machines can reveal a lot.\nFinally, there\u0026rsquo;s\n Cunningham\u0026rsquo;s Law states \u0026ldquo;the best way to get the right answer on the internet is not to ask a question; it\u0026rsquo;s to post the wrong answer.\u0026rdquo; (source) - Cunningham\u0026rsquo;s Law on Wikipedia   but note, you should keep in mind the standard warning that comes when first using sudo if you plan to use Cunningham\u0026rsquo;s law to your advantage:\n We trust you have received the usual lecture from the local System Administrator. It usually boils down to these three things:\n Respect the privacy of others. Think before you type. With great power comes great responsibility.   Other things:\nUse Google like a pro\nLearn about problems, not solutions (Gareth Dwyer)\nHow to learn things at 1000x the speed (Pranay Prakash)\nMy Engineering Axioms (Martin Rue\u0026rsquo;s Blog)\n"}),a.add({id:30,href:'/engineering/linux/arch/',title:"Arch",section:"Engineering",content:"Chapter 2 - Installing Arch Linux #   Some Background #  Unlike Windows or Mac which are primarily differentiated by versions (Windows XP, Vista, 7, 10\u0026hellip;), Linux has two important things to look out for:\n The distribution name (Arch, Ubuntu, Mint, Debian, etc.) Kernel version number (5.12 last time this page was updated)  So, what do each of these mean?\nWell, Linux is actually just the name of the underlying \u0026lsquo;core\u0026rsquo; of the system, known as the kernel, as such, there are literally thousands of Linux variations or \u0026lsquo;distributions\u0026rsquo;. Some of the well known variants include Ubuntu, Fedora, OpenSuse, and Arch (No disrespect to the other distros out there!). Each of these has a different target audience, with some meant for servers, some meant for casual users as an alternative to Windows, others as work station for hard core computing. They also ship with different software pre-installed to be accessed after the first boot.\nThe other differentiating factor is the version of the Linux Kernel that they use. Some chose to use an older, battle hardened kernel that is known to be very, very stable, others chose a nice middle ground, while yet others continuously release an update to the newest available kernel. There are pros and cons to each model and each has its place; however, the distro I\u0026rsquo;m going to have you install, Arch, uses the (almost) the newest available, updating very regularly. Arch has a reputation as one of the hardest distros to work with, but also one of the most cutting edge, fun to tinker around in, and best documented.\nArch is what\u0026rsquo;s known as a rolling release distribution, which means it gets the bleeding edge features and the newest kernel pretty much as fast as possible, though really the biggest thing that makes Arch special is how bare bones it is out of the box, shipping with basically no pre-installed software. In fact, when you first start it up the only thing you\u0026rsquo;ll see is a screen to type and run commands, and that\u0026rsquo;s where we\u0026rsquo;re going to start.  Arch Linux Logo from archlinux.org   For most distros like Ubuntu or OpenSuse (feel free to look these up, this page isn\u0026rsquo;t going anywhere) there\u0026rsquo;s a nice graphical, point and click installer which helps you install the system and somewhat mitigates potential risk of killing your original OS (Mac/Win) or losing data; however, the goal of this guide is to learn. Arch\u0026rsquo;s install process, entirely by typing commands in this terminal is hard, but that difficulty leads to a deeper understanding and respect for the system as a whole\nWhen we\u0026rsquo;re done you\u0026rsquo;ll have a system that has exactly what you need and nothing you don\u0026rsquo;t. You won\u0026rsquo;t find weird forcibly installed software like Win 10\u0026rsquo;s Candy Crush App here, and your system will only do exactly what you tell it. Of course, this implies you know how to speak it\u0026rsquo;s language and tell it what you want. Thankfully with some practice you\u0026rsquo;ll get used to running Arch and you\u0026rsquo;ll wonder why you ever dealt with other systems to begin with.\nPreparation #  Install instructions will vary dependent on your hardware, but I\u0026rsquo;m going to assume you have a desktop or laptop which shipped with Windows 10 and has a UEFI system. Most laptops newer than ~2016 should be in this category. If your system uses a BIOS or Legacy boot instead, or if you have a mac, this won\u0026rsquo;t apply to you, but you should be able to follow some of the resources I used to make this guide which are linked below along with some searching online to figure it out.\nAlright, so what exactly are you getting yourself into? Well, I\u0026rsquo;ll be real with you, a lot. Installing Arch sucks. Things can go wrong, it\u0026rsquo;s not user friendly at all, and is generally a pain, and if you screw up you\u0026rsquo;ll need someone who can restore your computer to at least having Windows on it again so I\u0026rsquo;ll say it again- Make a backup of your entire hard drive before proceeding, if you don\u0026rsquo;t know how to do this, look up how to use Clonezilla.\nSeriously. You should really make a full backup of your computer before doing this, as installing an operating system can rather easily lead to lost files when you reformat or reparation your drive or when you change settings in the BIOS/UEFI and swap the bootloader. Okay, so, with that said let\u0026rsquo;s dive into it. After you have a backup, you\u0026rsquo;ll need to head on over to https://www.archlinux.org/download/ and if you have a torrent client installed use the provided BitTorrent Downloads, if you have no idea what that is, look at the below box\nBitTorrent: Torrenting is type of download that runs over distributed peer to peer connections, this means you\u0026rsquo;re directly downloading the file from multiple people rather than from one large server. Popular clients on Windows include uTorrent, qBittorrent, and Deluge  You may want to go grab a coffee while it downloads depending on your connection, though the image should be rather small. Once that\u0026rsquo;s done downloading your torrent client should automatically confirm the image by checksum, but as this is a good learning opportunity let\u0026rsquo;s do a manual double check as well.\nchecksum: a mathematical summing of the bits in a file combined with some sort of cypher to produce a \u0026lsquo;hash\u0026rsquo; which can be checked to against one that is known, any modification would result in a different hash. This protects against malicious actors putting bad things in the code as well as from a corrupted download.   Windows Windows open up a command prompt by pressing ctr+r and typing \u0026lsquo;cmd\u0026rsquo; then enter, and we\u0026rsquo;ll need to navigate to the location of the downloaded file it should be named something along the lines of archlinux-20xx.xx.xx-x86_64.iso and be in your Downloads folder. When you open a command prompt on Windows it should start out in your user folder (C:\\Users%username%). To list the folders in this folder you can type \u0026lsquo;dir\u0026rsquo; and press enter. You should, at minimum, see folders like \u0026lsquo;Downloads\u0026rsquo; \u0026lsquo;Desktop\u0026rsquo; and \u0026lsquo;Documents\u0026rsquo; to enter the Downloads folder simply type \u0026lsquo;cd Dow\u0026rsquo; and press tab, the line should auto-complete to \u0026lsquo;cd Downloads\u0026rsquo;, then press enter. Now you can type \u0026lsquo;certutil -hashfile arch\u0026rsquo; , press tab to complete it to \u0026lsquo;certutil -hashfile archlinux-20xx.xx.xx-x86_64.iso\u0026rsquo; then add \u0026lsquo;sha1\u0026rsquo; on the end so the finally command looks like\n1  certutil -hashfile archlinux-20xx.xx.xx-x86_64.iso sha1    Note, if this spits out \u0026ldquo;The process cannot access the file because it is being used by another process.\u0026rdquo; you\u0026rsquo;ll need to close your torrent client or stop seeding the file first!\n So let\u0026rsquo;s look at this command. The first part, certutil, is a program on your computer, \u0026lsquo;-hashfile\u0026rsquo; says the next string of text is the name of the file we want to examine, and the last part sha1 is the checksum as mentioned before. Finally, if you go back to https://www.archlinux.org/download/ and look under \u0026lsquo;Checksums\u0026rsquo; you can compare the output of the command you just ran against the SHA1 sum provided to be sure you didn\u0026rsquo;t have any errors in the file. This is mostly a security check as in theory someone could provide a \u0026lsquo;bad\u0026rsquo; version of the OS containing malware, but such a version would produce an incorrect checksum, in practice this is extraordinarily uncommon. Though this does also serve to ensure the download wasn\u0026rsquo;t corrupted in any way either.\nMac Mac open up a terminal by going to the Utilities fore in Applications and open \u0026lsquo;Terminal\u0026rsquo;. The mac terminal is very, very similar to what you\u0026rsquo;ll use in Linux actually, and the commands here are actually identical. You should see something like\n1  MacBook:~ username$   waiting for input.\nThat ~ represents that you\u0026rsquo;re in your user or \u0026lsquo;home\u0026rsquo; folder, and assuming you downloaded Arch\u0026rsquo;s install image to your downloads folder you should be able to type\nMacBook:~ username$ shasum -a 1 Downloads/arch\nfollowed by pressing tab to make that auto complete to something like\nMacBook:~ username$ shasum -a 1 Downloads/archlinux-20xx.xx.xx-x86_64.iso\nupon pressing enter the terminal should print out a long string of text.\nSo let\u0026rsquo;s look at this command. The first part, shasum, is a program on your computer, \u0026lsquo;-a 1\u0026rsquo; says to use the sha1 algorithm instead of something like sha256, and the last part is the filename we want to compute the checksum of. Now, if you go back to https://www.archlinux.org/download/ and look under \u0026lsquo;Checksums\u0026rsquo; you can compare the output of the command you just ran against the SHA1 sum provided to be sure you didn\u0026rsquo;t have any errors in the file. This is mostly a security check as in theory someone could provide a \u0026lsquo;bad\u0026rsquo; version of the OS containing malware, but such a version would produce an incorrect checksum, in practice this is extraordinarily uncommon. Though this does also serve to ensure the download wasn\u0026rsquo;t corrupted in any way either.\n  Okay, so we have the OS, how do you install the damn thing? Well, get ready for a fun time. The first thing you\u0026rsquo;ll need is a flash drive with nothing on it you care about, as it\u0026rsquo;s going to be reformated, which will wipe any data on it. To install an OS you have to create \u0026lsquo;bootable media\u0026rsquo; this used to be done with a CD, though mostly it\u0026rsquo;s done with flash drives now. You\u0026rsquo;ll actually be putting the OS on the flash drive and then using that to put it on your hard drive.\nLet\u0026rsquo;s not get ahead of ourselves though, we need room to put the new operating system in! Thankfully Linux is small- really small. Even 50Gb should be plenty for the OS, all your programs, and tons of room to spare for data, but I typically recommend at least 100GB, and since we\u0026rsquo;ll be installing a lot of development tools, it makes sense to do this right to begin with.\nWindows Windows When you got your computer with windows is likely that all of the room on your hard drive was preallocated for windows (as it should be!) so we\u0026rsquo;ll need to shrink this down and make room for Linux to live along side Windows. Open the start menu and type \u0026lsquo;disk manag\u0026rsquo; and hopefully \u0026ldquo;create or format hard drive partitions\u0026rdquo; will show up as an option. At the bottom you should see a few bars showing partitions on your disk(s). If you have multiple hard drives there will be multiple rows of bars, otherwise there will be only one row. If you have multiple drives it\u0026rsquo;s likely that one is a larger hard drive (HDD) and the other a smaller solid state drive (SSD), if you have room on your SSD use that, if you don\u0026rsquo;t using the HDD will be fine, but the OS may feel slower than you\u0026rsquo;re accustomed to. If you only have one drive, ignore this. Right click in what is likely the largest box, labeled \u0026lsquo;primary partition\u0026rsquo; and chose \u0026lsquo;Shrink Volume\u0026rsquo;. After it finishes querying available disk space enter 102400 as the amount of room to shrink (This is 100GB as there are 1024MB in a GB) or a lower or higher value as you please, but realize this is data you will not be able to access from windows.\n If the window shows 0MB of available shrink space first try running disk cleanup and choose cleanup system files, try turning off system restore, and finally disable the page file. In my experince it\u0026rsquo;s usually the pagefile, which kinda sucks. If none of this works, you do have another option: wiping everything and installing linux. This is actually easier, however, it\u0026rsquo;s a bit more extreme, as you won\u0026rsquo;t be able to boot back to windows for anythig. You may instead want to try linux out on an old usused computer first. Either way, you do you, but I\u0026rsquo;m not liable if things go wrong. https://medium.com/@terajournal/increasing-size-of-available-shrink-space-for-hard-drive-partition-in-windows-8fffa50535d3\n Alright, we\u0026rsquo;re getting there I promise. You should now have a gray block next to that blue block of space that shows unused space, that\u0026rsquo;s perfect. Next up we\u0026rsquo;ll need to turn Fast Boot off. In my experience turning this off doesn\u0026rsquo;t effect windows boot time at all, and by having it off we\u0026rsquo;ll be able to access window\u0026rsquo;s file from inside linux later. To do this: go to \u0026lsquo;edit power plan\u0026rsquo;, then in the top bar navigate back to \u0026lsquo;Power Options\u0026rsquo;, select \u0026lsquo;Chose what the buttons do\u0026rsquo; on the left side, click \u0026lsquo;Change settings that are currently unavailable\u0026rsquo; and then un check \u0026lsquo;Turn on Fast Startup\u0026rsquo;.\nOkay, now we\u0026rsquo;re finally ready to copy the OS to a flash drive so we can install Arch, to do this, you\u0026rsquo;ll need to download a program called rufus https://rufus.ie/. Download, run, etc. When it opens select the flash drive as your \u0026lsquo;device\u0026rsquo; , press the select button under that and select the archlinux-20xx.xx.xx-x86_64.iso file we downloaded earlier. Everything else should be fine, so click start. This may take a second, in the mean time, open this guide on another computer as the next few steps will require a lot of restarting and doing things outside of windows.\nMac Mac Before we go any further I really want to warn you of two things, one, it\u0026rsquo;s going to be harder to follow this guide on a MAC. More steps are involved, and some work arounds are necessary, and more importantly, I have no experience with it. so I\u0026rsquo;m mostly regurgitating other things I\u0026rsquo;ve read. Pages like https://wiki.archlinux.org/index.php/Mac#Installation may prove helpful later.\nFirst, you\u0026rsquo;ll need to open up \u0026lsquo;Disk Utility\u0026rsquo; in Applications/Utilities, then pick your disk and click \u0026lsquo;Partition\u0026rsquo; and click the \u0026lsquo;+\u0026rsquo; button to make a new partition. Choose how much space you want to leave on the disk for MacOS and how much you want for Arch. The format of the new partition doesn\u0026rsquo;t matter.\n Note, if your disk is encrypted, you\u0026rsquo;ll need to decrypt first.\n Now, you\u0026rsquo;ll need to open a terminal like you did back when checking the checksum. Plug in either an empty flash drive or one which you don\u0026rsquo;t mind erasing, and run\ndiskutil list and you should see something like /dev/diskX (external, physical) which is your flash drive. Now run diskutil unmountDisk /dev/diskX where X is your flash drive disk number from above, then finally run dd if=path/to/arch.iso of=/dev/rdiskX bs=1m. Note that the of part has /rdiskX . The path to your arch iso is probably something like ~/Downloads/archlinux-20xx.xx.xx-x86_64.iso\nThis command won\u0026rsquo;t print anything while it\u0026rsquo;s running, but when it\u0026rsquo;s done you\u0026rsquo;ll see a new line asking for input. Two more notes ripped straight from https://wiki.archlinux.org/index.php/USB_flash_installation_media#In_macOS:\n To view progress, send SIGINFO by pressing Ctrl+t. Note diskX here should not include the s1 suffix, or else the USB device will only be bootable in UEFI mode and not legacy. After completion, macOS may complain that \u0026ldquo;The disk you inserted was not readable by this computer\u0026rdquo;. Select \u0026lsquo;Ignore\u0026rsquo;. The USB device will be bootable.\n Now you should be good to carry on with the guide\n  of note, the following guide will be assuming you\u0026rsquo;re installing Linux on the same drive as Windows or MacOS, making it applicable for most systems right away; however, I strongly recommend getting an extra SSD and giving Linux it\u0026rsquo;s own disk outright instead. This is far easier to do in a desktop, but if you have a laptop with a CD drive you may be able to put a SSD in it\u0026rsquo;s place. SSD prices have been steadily declining over the pas few years, but as of the time of writing a 250Gb ssd should be available for under 50 USD. I\u0026rsquo;d recommend a larger disk though, with 500Gb being plenty for most people\n While this guide should lead you though step by step, it may be helpful to follow the offical installation guide as well, which is available at https://wiki.archlinux.org/index.php/installation_guide. Furthermore, while slightly outdated, this flow chat is a nice refrence as well: https://i.imgur.com/Hokk8sK.jpg\ndespite the technically complexity to get to it, the best place for Arch Linux support, even for installation, is in the IRC (Internet Relay Chat) channel #archlinux on Freenode. https://wiki.archlinux.org/index.php/Arch_IRC_channels\nObviously if you need this you\u0026rsquo;ll need IRC open on a different device than the one you\u0026rsquo;re installing from. There are plenty of IRC clients available for any platform though.\nInstallation #  ‚ò†‚ò†‚ò† Seriously, backup your shit. I've done this countless times and have still managed to accidentally wipe a drive. There's a non-0 chance you're about to completely murder your windows install, It shouldn't happen, but it can. This is a necssary evil to learn, and I assure you'll be happy you've done all this, but this next bit is actual hell for people. I'm sorry it gets so bad so early. I promise it's worth it, okay? The next section requires a lot of reboots and has steps where you can't have this guide open on the computer you're working on, so you may want to have a spare system next to you to follow these insturctions on and Google if anything goes wrong.‚ò†‚ò†‚ò†  To be fair, you should probably be doing backups anyway. We\u0026rsquo;ll talk about this at some point, but, if you don\u0026rsquo;t have a regular back up solution + an occasional full disk backup and you\u0026rsquo;re already pretty nerdy, you might want to remedy that sooner rather than later\n  MAC USERS: Beware, none of the following was writen with a MAC in mind, and as such I strongly recommend you read https://wiki.archlinux.org/index.php/Mac#Installation and look for where my instructions deviate from what\u0026rsquo;s recommended here.\n Now you\u0026rsquo;ll need to power off your computer. Turn it back on and as you do mash the everliving hell out of both f2 and delete (unless you know what key gets you into the UEFI / BIOS settings). This should bring up a menu that either looks super fancy or looks stright out of the 80\u0026rsquo;s. Either is fine. The setting we\u0026rsquo;re looking for is \u0026lsquo;Secure Boot\u0026rsquo; it\u0026rsquo;s probably under a menu called \u0026lsquo;Boot\u0026rsquo; or \u0026lsquo;Security\u0026rsquo;. You\u0026rsquo;ll need to shut this off. In theory secure boot should protect against a nasty kind of virus called a rootkit, in practice it doesn\u0026rsquo;t and only serves to make installing Linux more annoying, don\u0026rsquo;t worry, I\u0026rsquo;m a security nut and am comfortable leaving it off. Exit and save settings, and as your computer boots again mash F11 or whatever key gets you to a boot menu, and select your USB key. If it shows up twice try the first one first, if that doesn\u0026rsquo;t work try the other one. (If you end up back in Windows just restart and go back into the bios settings, go to \u0026lsquo;Boot\u0026rsquo; and reorder the boot menu entries so your flash drive is the first option) The system should boot first to a screen with a few options, pick Arch Linux if you have to or just wait for it to move on. You should, with any luck, see a list of text flash down the screen that looks roughly like\n1 2 3  [OK] doing thing [OK] starting thing [OK] did thing    If something comes up as [FAILED] even though you still get to the login prompt, don\u0026rsquo;t worry about it for now\n Then, you should be greeted by a minimal prompt that looks like\n1  root@archiso ~ #   and that\u0026rsquo;s it. Congrats, you\u0026rsquo;ve already made massive progress.\nThis is arch, but it\u0026rsquo;s not actually installed yet, right now your entire computer is running off the flash drive. So let\u0026rsquo;s get it installed.\nYou\u0026rsquo;ll need an internet connection to do anything, if you can connect you computer to the network though ethernet directly, that should be much, much easier than doing things though wifi. If you absolutely must do things though wifi, well, first, really don\u0026rsquo;t. I mean, you can, but\u0026rsquo;s a solid pain. I\u0026rsquo;m going to assume you\u0026rsquo;re not. Cool.\nIf you didn\u0026rsquo;t connect your computer to ethernet before you started arch, the first thing you should type in this prompt is\n1  systemctl restart dhcpcd   this manually restarts the service that asks the network for an IP address, which you need to do since currently the system is in such a minimal state it won\u0026rsquo;t do that automatically.\nNow, try\n1  ping archlinux.org   if you see something like 64 bytes from apollo.archlinux.org, congrats! You\u0026rsquo;re online! If not, you may try a different network or wireless if applicable (seriously, it\u0026rsquo;s a pain)\nFrom here, you\u0026rsquo;ll need to see the names of the hard drives on your system. run lsblk -f.\nbut what does that even mean? well, let\u0026rsquo;s learn about another command! - man\nFor most commands on Linux if you type man before the command with no flags (the -x things after the command) it\u0026rsquo;ll open a manual page for the command. Read here to figure and try to figure out what lsblk is and what -f does.\nlsblk lists information about all or the specified block devices. The lsblk command reads the sysfs filesystem to gather information.\nThe command prints all block devices (except RAM disks) in a tree-like format by default. Use lsblk \u0026ndash;help to get a list of all available columns.\u0026hellip;\nThe default output as well as default output from options like \u0026ndash;topology and \u0026ndash;fs is subject to change, so whenever possible you should avoid using default outputs in your scripts. Always explicitly define expected columns by \u0026ndash;output columns in environment where a stable output is required.\u0026hellip;-f, \u0026ndash;fs : Output info about filesystems. This option is equivalent to \u0026ldquo;-o NAME,FSTYPE,LABEL,MOUNTPOINT\u0026rdquo;. The authoritative information about filesystems and raids is provided by the blkid(8) command.\n Okay? Well, that probably doesn\u0026rsquo;t mean much so lets focus on the important bits\n\u0026ldquo;lsblk lists information about all or the specified block devices. The lsblk command reads the sysfs filesystem to gather information.\u0026rdquo;\nBlock devices are devices that have \u0026lsquo;blocks\u0026rsquo; of information, like hard drives, flash drives, solid state drives, sd cards, etc.\n\u0026ldquo;-f, \u0026ndash;fs \u0026hellip; Output info about filesystems.\u0026rdquo;\nThis means we\u0026rsquo;ll be able to see what type of file system is on each block device.\nSo, we can use this command to see information like we saw graphically back when we opened disk management in windows, only now with their Linux names. In Linux each block device is actually stored as a file, as bizarre as that may seem. This file is actually located in the /dev folder which sits on top the root folder. The root folder is simply designated by a single / so a normal file structure may look like /home/USERNAME/Documents/office/ and so on. It\u0026rsquo;s worth noting that / is actually a folder in itself, it\u0026rsquo;s just the absolute bottom folder, hence it\u0026rsquo;s called the root folder. So the /dev folder is located at /dev. In /dev there\u0026rsquo;s a lot of things, but at the moment what we\u0026rsquo;re really concerned about is the storage devices. so, looking at this example output from lsblk you\u0026rsquo;ll see three storage devices /dev/sda, /dev/sdb, and /dev/nvme0n1\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  vega@linux ~ # lsblk -f NAME FSTYPE LABEL UUID FSAVAIL FSUSE% MOUNTPOINT sda ‚îú‚îÄsda1 ‚îú‚îÄsda2 ‚îú‚îÄsda3 ‚îî‚îÄsda4 sdb ‚îú‚îÄsdb1 ‚îî‚îÄsdb2 nvme0n1 ‚îú‚îÄnvme0n1p1 ntfs Recovery 36C8A86BC8A82B57 ‚îú‚îÄnvme0n1p2 vfat E2AB-10F2 ‚îú‚îÄnvme0n1p3 ntfs DE54B4D854B4B51D ‚îî‚îÄnvme0n1p4   What do these mean? Well, most drives in Linux are simply designated by a /dev/sdX where x is just the next available letter in the alphabet, though on some newer systems like mine, you may find some blazing fast SSDs actually use that other odd nvme syntax. Both work exactly the same way for what were doing.\nlooking at that output again you\u0026rsquo;ll see each device has multiple things under it. For example /dev/sda has /dev/sda1 all the way though /dev/sda4. Each of these are the separate partitions. In this particular example, sda is actually the flash drive we\u0026rsquo;re running off of, so you can see that it is currently where our root file is / on /dev/sda1 and that it\u0026rsquo;s an ext4 file system (I\u0026rsquo;ll explain this a bit more in a bit) you\u0026rsquo;ll also see there\u0026rsquo;s another partition that\u0026rsquo;s formatted as fat32 for boot, but all of these are on the flash drive because they\u0026rsquo;re on sda.\nFor Simplicity now we\u0026rsquo;re actually going to look at a simpler lsblk -f output with only /dev/sda and sdb. sda is still the boot usb stick you\u0026rsquo;re on, but sdb is now the singular drive in a laptop that has windows installed and available free space in accordance with this guide.\n1 2 3 4 5 6 7  root@archiso ~ # lsblk -f sdb ‚îú‚îÄsdb1 ntfs Recovery 36C8A86BC8A82B57 ‚îú‚îÄsdb2 vfat E2AB-10F2 ‚îú‚îÄsdb3 ntfs DE54B4D854B4B51D ‚îî‚îÄsdb4   alright, so now on sdb we see there\u0026rsquo;s 4 partitions (sdb1,2,3,4) where in this case we have sdb2 as a ~512Mb vfat partition, sdb3 as a 300Gb NTFs partition, and then that blank partition we made on sdb4. That 512Mb partition contains the bootloader for windows, but soon we\u0026rsquo;ll add Linux. The larger NTFS file system is where Windows and all your programs documents and other things you\u0026rsquo;ve done on your computer in the past live. I hope now it\u0026rsquo;s obvious why I urged backups, as we\u0026rsquo;re about to play around with things a bit.\nWe\u0026rsquo;re going to need to make some changes to this list tough, as we actually need one more small division in the partition table. run the command\n1  root@archiso ~ # cfdisk /dev/sdb   this should bring up a strange command line based almost graphical interface which you can used to edit, add, or remove partitions. With that 100Gb (or whatever you chose free space we made earlier), let\u0026rsquo;s divide it into two partitions, one that\u0026rsquo;s 8GB and the other that\u0026rsquo;s just what\u0026rsquo;s left. We\u0026rsquo;re doing this so we have somewhere to put SWAP in a second, but let\u0026rsquo;s get to that later, for now just use your arrow keys and highlight the large empty block and select new, select primary, then make it 8GB, which is 8*1024Mb or 8192, and then select end. Finally write it, then quit. Whew. Bit stressful even for me. Don\u0026rsquo;t worry, Linux gets much much easier, especially when we get our graphical tools back.\nnow, run lsblk again. You should see something like\n1 2 3 4 5 6 7  root@archiso ~ # lsblk sdb ‚îú‚îÄsdb1 ntfs Recovery 36C8A86BC8A82B57 ‚îú‚îÄsdb2 vfat E2AB-10F2 ‚îú‚îÄsdb3 ntfs DE54B4D854B4B51D ‚îú‚îÄsdb4 ‚îî‚îÄsdb5   so now we need to format these partitions with a file system. For the root file system, where we\u0026rsquo;re gonna put all the programs, files, and the OS itself we\u0026rsquo;ll use the ext4 file system. It\u0026rsquo;s by far the most common file system for linux. To do this look at the lsblk output and look for the large empty space we left (not the 8Gb space we just made!) and run\n1  root@archiso ~ # mkfs.ext4 /dev/sdxy   Where xy is the correct letter and number for your partition, in the above example that\u0026rsquo;s /dev/sdb4, as sdb5 is the 8Gb partition we just made\nalright, that\u0026rsquo;s actually most of the really hard stuff done. Now we need to mount both the file system we just made and the boot filesystem. run:\n1 2  mount /dev/sdbx /mnt mount /dev/sdby /mnt/boot   where x is the same as the above x and y is the number of the partition with the windows boot manager. sdby should be roughly 500 megabytes and be vfat, it may appear as \u0026lsquo;EFI partiton\u0026rsquo; in cfdisk if you\u0026rsquo;re unsure.\nNext up we need to install the base of the os to these drives, this is actually pretty easy just run\n[TODO] Arch linux\u0026rsquo;s install has changed a bit since this was written. Now, more arguments are required at install time as the base Linux kernel is no longer included in base. I\u0026rsquo;ve changed this here slightly, but it\u0026rsquo;s very likely still missing some things.\n1  pacstrap /mnt base base-devel linux systemd   then, we need something that tells the system the names of our partitions and how to mount them at boot. Thankfully, the system can generate (most) of this for us, just run\n1  genfstab -U /mnt \u0026gt; /mnt/etc/fstab   what this command does is looks at the id\u0026rsquo;s of the drives in /mnt (the ones we manually mounted when we ran mount a few commands ago) and redirects those id\u0026rsquo;s and the settings used to mount them (which were default) and writes that output using \u0026lsquo;\u0026gt;\u0026rsquo; as a redirect to a file stored in /mnt/etc/fstab. Because /mnt is the location where we mounted the harddrive, it\u0026rsquo;s actually writing a file to the hard drive now, just as pacstrap just did.\nAlright, next we need to use a command that you\u0026rsquo;ll probably never use again- chroot. This changes your root directly to be higher up the chain, effectively cutting off access to lower files, though we need to do this to install our bootloader, again this is easy\n1  root@archiso ~ # arch-chroot /mnt   which will change the above to look like: ' root@archiso ~ # ' to ' root@archiso / # ' as that \u0026lsquo;~\u0026rsquo; was actually a shorter representation of being in /home/root (there\u0026rsquo;s actually a user nammed root by default, and the user has it\u0026rsquo;s own home directory. It\u0026rsquo;s easy to confused root the user with root the directory, but you\u0026rsquo;ll get it eventually if you don\u0026rsquo;t now that\u0026rsquo;s okay c: )\nnow we can install the bootlooder with\n1  root@archiso / # bootctl install   Now we need to add a bootloader entry for arch. We\u0026rsquo;re going to use a very simple command line text editor called nano. it\u0026rsquo;s sorta like notepad on windows.\n1  root@archiso / # nano /boot/loader/loader.conf   this will bring up a text editor, it says how to operate it at the bottom (ctr+o to write out = save, crt+x to exit, etc)\nenter, exactly: (Note line 2 says linuZ-linux, that\u0026rsquo;s not a typo, and replace the x with your root partiton)\n1 2 3 4  title Arch Linux linux /vmlinuz-linux initrd /initramfs-linux.ing options root=/dev/sdbx rw   and for our last trick before we reboot save and exit nano with ctr+o, ctl+x then, run\n1  root@archiso / # nano /boot/loader/loader.conf   and enter\n1 2  timeout 3 default arch   then, we\u0026rsquo;re ready to reboot into the new OS!\nrun consecutively,\n1 2  root@archiso / # exit root@archiso / # reboot   and pull the flash drive out. If all went well your system should boot to Arch. If it didn\u0026rsquo;t, first make sure it\u0026rsquo;s set to boot to arch in the BIOS/UEFI\u0026rsquo;s boot settings, and then if things are still broken try to figure out why, there are plenty of people in the community willing to help, including me.\nAssuming it booted back up to a similar looking prompt but with no flash drive we have to do some house keeping but you\u0026rsquo;ll have a bad ass system in no time.\nFirst things first enter \u0026lsquo;root\u0026rsquo; for the user name, this should let you login.\nthen run \u0026lsquo;passwd\u0026rsquo; this will prompt you to set a password. For the love of god don\u0026rsquo;t forget it.\nNext you\u0026rsquo;ll need to set a hostname, this is how your computer id\u0026rsquo;s itself on the network, so might help if you make it something sensible like \u0026lsquo;usernamelinux\u0026rsquo; to do this run\n1  echo \u0026#39;mynewawesomehostname\u0026#39; \u0026gt; /etc/hostname   then let\u0026rsquo;s add a user, as using root all the time is very unsafe. To do so run:\n(I recommend using the same password you used for root)\n1 2 3 4 5  useradd -m -G wheel mycrappyusername followed by, passwd mycrappyusername   I swear to you we\u0026rsquo;re getting there.\nrun\n1  EDITOR=nano visudo   then find the line that says\n1  # %wheel ALL=(ALL) ALL   and remove the \u0026lsquo;#\u0026rsquo;\nAs an explanation, the \u0026lsquo;#\u0026rsquo; is turning that line in that file into a comment, in programming it\u0026rsquo;s common practice to use comments to disable sections of code so say we had a program:\n1 2 3  for i in range(5) #print(i) print(i/2)   the # before print(i) is preventing it from actually executing so the output of this would be {1/2,1,3/2,2,5/2} instead of {1,1/2,2,1,3,3/2,4,2,5/2,5}\nAnyway, with that out of the way let\u0026rsquo;s find fix up networking so we can get online and run updates\nrun ip link and look for the name of your network interface. If it\u0026rsquo;s a wired adapter it should be enpXsY where X and Y are number, wif is similar but uses wlp instead of enp. To make sure the network brings itself up on each boot let\u0026rsquo;s enable dhcpcd - that service we restarted way back when- on that interface. Just run\n1 2 3 4 5 6  systemctl enable dhcpcd@enpXsY.service this enable it at each boot however we should start it now because this is the frist time systemctl start hdcpcd@enpXsY.service   next up, we should make sure things know what language we speak. Assuming you want to use US english just run\n1 2 3 4 5  locale-gen followed by, localectl set-locale LANG=en_US.UTF-8   Timezones, run each independently\n1 2 3 4 5 6 7 8 9  tzselect timedatectl list-timezones timedatectl set-timezone Zone/SubZone hwclock -systohc -utc timedatectl set-ntp true   It\u0026rsquo;s worth noting Linux and Windows use differenent clock standards so every time you reboot between the two windows will messup the clock, to fix it in WINDOWS you can run\n1  reg add \u0026#34;HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\TimeZoneInformation\u0026#34; /v RealTimeIsUniversal /d 1 /t REG_DWORD /f   in an admin command prompt\nAlright, we\u0026rsquo;re getting close to graphical stuff now, I swear. Remember that 8Gb partion we made a while ago, time to use it. Now that we\u0026rsquo;re in the full OS the\u0026rsquo;re a good chance the location names of the partitions changed so run lsblk -f again and figure out where that 8Gb portion is\n1 2 3 4 5  lsblk -f mkswap /dev/sdXY swapon /dev/sdxy   then, we need to edit the fstab file we generated earlier.\nLet\u0026rsquo;s look at what the fstab file looks like right now. We can read a file from the command line without opening it up for editing with cat, so run\n1  cat /etc/fstab   and you can see what it looks like. See all those super long UUID\u0026rsquo;s? We need the right one of those for our new swap area. Thankfully there\u0026rsquo;s an easier way to do this than writing it down on a sticky note.\nif we run lsblk -no UUID /dev/sdxy (obviously substitute x and y) you\u0026rsquo;ll get this UUID, so let\u0026rsquo;s just append it onto the end of the fstab file!\nRemember how we used the \u0026lsquo;\u0026gt;\u0026rsquo; character before to write the output of genfstab to /etc/fstab, well you can also use two of that same character to append an output to a file. However, before we do that let\u0026rsquo;s be safe rather than sorry and make a backup of the fstab file by first moving to the /etc directory then making a copy of the file\n1 2 3  cd /etc cp fstab fstab.bak lsblk -no UUID /dev/sdxy \u0026gt;\u0026gt; fstab   note we didn\u0026rsquo;t need to type /etc/ before each fstab because that\u0026rsquo;s a file in the folder we\u0026rsquo;re already in.\nbut we\u0026rsquo;re not done yet. use nano to open up the fstab file and edit it so the last line we just appended looks more like:\n1  UUID=whateverthisis none swap defaults 0 0   Save and close nano and then to finish up swap all we need to do is edit one more file\n1 2 3 4 5  nano /etc/sysctl.d/99-sysctl.conf and add the single line vm.swappiness=10   Alright, lets run an update and reboot!\nFor now to do updates we\u0026rsquo;ll use pacman (short for package manager)\nrun \u0026lsquo;pacman -Syyu\u0026rsquo;\nThe -S says to Sync, or actually apply the updates, the double y\u0026rsquo;s say to force grab the newest database (usually only use one y) and u means upgrade. If you want more detail run man pacman\nOnce that\u0026rsquo;s done you can run systemctl reboot\nFinally, we\u0026rsquo;re going to get a graphical environment running.\nOnce the system reboots login with your username, not root. When you type your password you won\u0026rsquo;t see anything, but it is actually typing!\nthen run:\n1  sudo pacman -S xf86-video-vesa mesa   This command uses sudo or \u0026lsquo;superuser do\u0026rsquo; because you\u0026rsquo;re now logged in as a user, and as such need admin privileges to install software. This is part of why Linux is so secure. Pacman, again, is just \u0026lsquo;package manager\u0026rsquo; , -S tells pacman to sync the requested packages from the server and the other two things are the two packages we want right now, both are used for video output.\nTo install the correct driver for your graphics hardware you can run\n1 2 3 4 5 6 7  these next few commands use \u0026#39;pipe\u0026#39; the character above enter on most US keyboards lspci | grep -i VGA and if that doesn\u0026#39;t turn up anything lspci | grep -i 3D   to find the vendor of your graphics card. If the output contains NVIDIA run\n1  sudo pacman -S xf86-video-nouveau   for INTEL run\n1  sudo pacman -S xf86-video-intel   and for AMD run\n1  sudo pacman -S xf86-video-amdgpu   if you have multiple, it\u0026rsquo;s safe to install both.\nAlright, now we need to install the desktop environment. Because this guide to this point is probably already melting your brain I\u0026rsquo;ll take it easy for a bit and we can install KDE-Plasma.\nKDE Plasma is pretty big though, so we\u0026rsquo;re gonna want to be sure we\u0026rsquo;re using fast mirrors before we do anything else\n1  sudo pacman -S reflector   then we\u0026rsquo;re going to temporarily switch to the root account using su all you have to do is type su and enter, then type the password\nnow run\n1  reflector -c us -n 25 -f 5 \u0026gt; /etc/pacmand.d/mirrorlist   Finally to install Plasma run\n1  sudo pacman -S xorg-server xord-utils xorg-xinit xterm plasma kde-applications   then\n1 2 3  sudo systemctl enable ssdm amixer sset Master unmute   and finally, lets see the epic payoff of all the effort\n1  sudo systemctl start ssdm   Note that KDE Plasma is fairly large to download and a bit resource intensive. As an alternative if on older hardware\n1  sudo pacman -S xorg-server xorg-utils xorg-xinit xterm mate mate-extra lightdm   1 2 3 4 5 6 7  sudo systemctl enable lightdm amixer sset Master unmute and finally, lets see the epic payoff of all the effort sudo systemctl start lightdm   Alright, now you can take a few minutes to get used to how your new computer works, play with settings, etc.\nbefore you wrap up lets do a tiny bit of housekeeping\n1 2 3 4 5 6 7 8 9  sudo pacman-key --init sudo pacman-key --populate sudo pacman -S git --needed git clone https://aur.archlinux.org/yay.git cd yay makepkg -Acs sudo pacman -U yay -S zsh chsh -s /bin/zsh   from now on you can just open a terminal and type yay followed by your password to run updates.\n[TODO] Make NTFS drives accesible and auto mount\nSo Why Did I do all of that exactly? #  Linux makes development of code particularly easy, so, let\u0026rsquo;s write some code!\nThe first language we\u0026rsquo;re going to try out is called python. Python is an interpreted language, meaning each block to be executed can be run one at a time, to show you, let\u0026rsquo;s install it.\nBecause we installed yay earlier you could use either that or pacman, but let\u0026rsquo;s just use yay for simplicity. From here on out I\u0026rsquo;ll be coping directly from what my terminal prompt looks like. Yours, for now, probaly looks similar to:\n1  username@root /current/folder : command -to -be executed   However, mine looks like\n1 2  ‚ï≠‚îÄvega@lyrae /current folder ‚ï∞‚îÄ‚û§ command -to -be -executed   so, install python just like we\u0026rsquo;ve installed other programs with python or yay\n1 2  ‚ï≠‚îÄvega@lyrae ~ ‚ï∞‚îÄ‚û§ yay -S python   once that\u0026rsquo;s done you should be able to start the python interpreter by simply typing python and pressing enter. This will give you a new prompt that takes python code as input\n1 2 3 4 5 6  ‚ï≠‚îÄvega@lyrae ~ ‚ï∞‚îÄ‚û§ python Python 3.7.2 (default, Jan 10 2019, 23:51:51) [GCC 8.2.1 20181127] on linux Type \u0026#34;help\u0026#34;, \u0026#34;copyright\u0026#34;, \u0026#34;credits\u0026#34; or \u0026#34;license\u0026#34; for more information. \u0026gt;\u0026gt;\u0026gt;   the \u0026gt;\u0026gt;\u0026gt; is the prompt asking for input, go ahead and just try 1 + 1 for now\n1 2  \u0026gt;\u0026gt;\u0026gt; 1 + 1 2   Okay, who cares though, right? let\u0026rsquo;s try something a bit cooler. Say you wanted to add up all the odd integers up to 72? This isn\u0026rsquo;t something that\u0026rsquo;s trivial to do on most calculators and would be a real pain by hand, but it\u0026rsquo;s trivial to do in python. The code to run this in python is\n1 2 3 4 5 6 7  #note, this is to 37 because we\u0026#39;re multiplying i by 2 below, so we only have to go until 2*i = 72 or i = 36. #EXCEPT, the range function includes the first number and excludes the last, so we actually use range(1,37) sum = 0 for i in range(1,37): sum = sum + (2*i+1) print(sum)   when you type this in the prompt you\u0026rsquo;ll actually be able to enter multiple lines when you write the for loop. There\u0026rsquo;s no clear way to explain this in text, you\u0026rsquo;ll just have to try it and see how it works, note the way python set up looping is by indentation, so you\u0026rsquo;ll need to press tab when the prompt lets you type the line sum = sum + i so that it\u0026rsquo;s obviously a \u0026lsquo;child\u0026rsquo; of the for loop.\nafter you run the print statment you should see the output\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  ‚ï≠‚îÄvega@lyrae ~ ‚ï∞‚îÄ‚û§ python Python 3.7.2 (default, Jan 10 2019, 23:51:51) [GCC 8.2.1 20181127] on linux Type \u0026#34;help\u0026#34;, \u0026#34;copyright\u0026#34;, \u0026#34;credits\u0026#34; or \u0026#34;license\u0026#34; for more information. \u0026gt;\u0026gt;\u0026gt; sum = 0 \u0026gt;\u0026gt;\u0026gt; for i in range(1,73): ... sum = sum + i ... \u0026gt;\u0026gt;\u0026gt; print(sum) 2628 \u0026gt;\u0026gt;\u0026gt; exit() ‚ï≠‚îÄvega@lyrae ~ ‚ï∞‚îÄ‚û§   telling us the answer is 2628. To make you feel like a bad ass, you actually just wrote code that\u0026rsquo;s equivalent to this math   \\( \\sum_{n=1}^{72} n \\)  pretty cool right? But that\u0026rsquo;s math? Who cares? Let\u0026rsquo;s do something cool!\n If you\u0026rsquo;re not familiar with math like this, this is the sum from n=1 to n=72 of n, so it\u0026rsquo;d be 1+2+3+\u0026hellip;+72\n Python code doesn\u0026rsquo;t have to be written in line by line, you can put it an a file and the computer will run that file as a program, so let\u0026rsquo;s do that! But to do that we\u0026rsquo;re gonna need something better than a terminal editor or an equivalent to notepad. There are actually text editors that make writing code much easier. Let\u0026rsquo;s go grab the \u0026lsquo;Visual Studio Code\u0026rsquo; editor. Hopefully by now you know the command! (The name of the package is just code)\nsuper quick detour: while you can open graphical programs though the start menu down in the lower left hand corner just like on Windows, you can actually open a program directly from the terminal. Interestingly, this can make a program that opens in a new window a \u0026lsquo;child process\u0026rsquo; of the terminal, which is why we normally don\u0026rsquo;t do this. What this normally means is that if you start a program from the terminal - the parent- and then close the terminal, the child process, in this case the graphical program you started, will die too. Strangely, VSCode actually separates itself from it\u0026rsquo;s parent process almost immediately, which is why we can start it from a terminal and then close the terminal and it should stay running. so, let\u0026rsquo;s do that.\n1 2  ‚ï≠‚îÄvega@lyrae ~ ‚ï∞‚îÄ‚û§ code   and a new window should pop up. It\u0026rsquo;ll probably open with a few tabs welcoming you, asking if you want to install a theme, if you are okay sending VSCode usage info, etc. Uncheck boxes so these don\u0026rsquo;t come up each time and answer questions as you please. Then, we\u0026rsquo;re going to go up to the top and chose\nfile -\u0026gt; new file Then, down at the bottom right of the editor you should see something that says plain text click that and a box will appear asking for the name of the language you\u0026rsquo;re working with. Obviously chose python.\nalright, now we\u0026rsquo;re ready to code! Let\u0026rsquo;s put a bit more interesting of a program in and then we\u0026rsquo;ll talk about what it does line by line. I stole this code from https://matplotlib.org/2.0.2/examples/animation/animate_decay.html\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45  #!/bin/python3 import numpy as np import matplotlib.pyplot as plt import matplotlib.animation as animation def data_gen(t=0): count = 0 while count \u0026lt; 1000: count += 1 t += 0.1 yield t, np.sin(2*np.pi*t) * np.exp(-t/10.) def init(): ax.set_ylim(-1.1, 1.1) ax.set_xlim(0, 10) del xdata[:] del ydata[:] line.set_data(xdata, ydata) return line, fig, ax = plt.subplots() line, = ax.plot([], [], lw=2) ax.grid() xdata, ydata = [], [] def run(data): # update the data t, y = data xdata.append(t) ydata.append(y) xmin, xmax = ax.get_xlim() if t \u0026gt;= xmax: ax.set_xlim(xmin, 2*xmax) ax.figure.canvas.draw() line.set_data(xdata, ydata) return line, ani = animation.FuncAnimation(fig, run, data_gen, blit=False, interval=10, repeat=False, init_func=init) plt.show()   So you can just copy and paste all of this into VSCode, then use ctrl+s to save it, and let\u0026rsquo;s save it in the Documents folder as test.py - the .py extension is for python files.\nBefore we talk about our code, let\u0026rsquo;s see it run!\nOpen up a terminal, and run cd Documents to get to your documents folder, ls to see what\u0026rsquo;s in there, then ./test.py to run the program.\n1 2 3 4 5 6 7  ‚ï≠‚îÄvega@lyrae ~ ‚ï∞‚îÄ‚û§ cd Documents ‚ï≠‚îÄvega@lyrae ~/Documents ‚ï∞‚îÄ‚û§ ls test.py ‚ï≠‚îÄvega@lyrae ~/Documents ‚ï∞‚îÄ‚û§ ./test.py   Oops! that probably didn\u0026rsquo;t run. If you look at the errors it will tell you you\u0026rsquo;re missing matplotlib ad numpy, let\u0026rsquo;s go get those\n1 2  ‚ï≠‚îÄvega@lyrae ~/Documents ‚ï∞‚îÄ‚û§ yay -S python-matplotlib python-numpy   Now it should work! run ./test.py again, and now you should see a decaying sine wave. Still not exactly something that get\u0026rsquo;s the heart racing, but it does prove the power of programming! The code did all of that in under 50 lines of text!\nFrankly, the code that makes this work is a bit complicated but we can go over some of the important bits\nat the very top there are four important lines:\n1 2 3 4  #!/bin/python3 import numpy as np import matplotlib.pyplot as plot import matplotlib.animation as animation   the first line uses a shebang #! followed by python\u0026rsquo;s location, this tells Linux to use python (specifically python3) to run the code underneath, actually, that\u0026rsquo;s the location of the python program we installed earlier. In Linux, most of your programs can be found in /bin\nNext we have a bunch of imports. In most programming lanuges you don\u0026rsquo;t want to reinvent the wheel so you\u0026rsquo;ll use libraries. These are well documented, heavily tested, and optimized blocks of code you can use that you don\u0026rsquo;t really need to understand how work under the hood, only how to use them. Although not used here, the most basic example would be advanced math in the math library, like\n1 2 3 4 5 6 7 8 9 10 11  ‚ï≠‚îÄvega@lyrae ~ ‚ï∞‚îÄ‚û§ python Python 3.7.2 (default, Jan 10 2019, 23:51:51) [GCC 8.2.1 20181127] on linux Type \u0026#34;help\u0026#34;, \u0026#34;copyright\u0026#34;, \u0026#34;credits\u0026#34; or \u0026#34;license\u0026#34; for more information. \u0026gt;\u0026gt;\u0026gt; import math \u0026gt;\u0026gt;\u0026gt; math.sin(1) 0.8414709848078965 \u0026gt;\u0026gt;\u0026gt; math.pow(2,4) 16.0 \u0026gt;\u0026gt;\u0026gt; exit()   on line 6 the math library, which gave us access to sin and exponent functions, was imported. We don\u0026rsquo;t know how math.sin() works, but we know it does, and that\u0026rsquo;s fine.\nThe same is true for numpy and matplotlib above, both of these are libraries, matplot lib is what handled actually putting the data on the screen, and numpy as can be seen on line 12 of the program:\n1  yield t, np.sin(2*np.pi*t) * np.exp(-t/10.)   is used for doing some of the math. Numpy is a common python library used for doing more advanced math really fast, we\u0026rsquo;re not going to worry about that right now though.\nthe next thing you should notice is how the code is organized into blocks with def name(): like def data_gen(t=0): or def init(): these blocks of code are called functions and they let programmers break up code into re-usable pieces or just wrap up a lot of complicated things to make code more readable, for example imagine a function that takes two numbers and does hundreds of lines of complicated math with them (eww)\n1 2 3 4  def mathyMess(num1, num2) num1 = math.sin(num1) + math.pow(num1,num2) # imagine hundreds more lines here return result   this would make it so latter in your code anytime you needed to do this math again you could just use\n1 2 3  thing = mathyMess(42, 12) otherThing = mathyMess(0, 2) finalThing = thing + otherThing   this is much, much easier to read than a copy and pasted version without these functions or \u0026lsquo;blocks of code\u0026rsquo; furthermore, if you accidentally made a mistake somewhere in the math in mathyMess you can fix it there rather than in each independent copy individually.\nFor now, we\u0026rsquo;re going to take a bit of a break from code, but we\u0026rsquo;ll be back.\nOkay, so what? #  So, yeah, you can develop python just fine in Windows. Installing it is just a matter of going online and fetching an exe installer and checking the right boxes. There\u0026rsquo;s nothing here you can\u0026rsquo;t do in windows. If that\u0026rsquo;s the case why do any of this.\nFrankly the answer is complicated. The gist of it is that Linux actually exposes things in a way that while might be possible in windows will probably be much more difficult. Even in the above, when we installed python and a few libraries there was no need to open a web browser and each package is maintained and verified in a way that makes installation easy, secure, and reproducible.\nBut more than that, Linux actually exposes the system to the user and doesn\u0026rsquo;t try to hide it\u0026rsquo;s inner workings, rather, for many things Linux implies that you should manually edit the config files, look at how programs use various resources, and peer into how the system actually handles any given task.\nYou\u0026rsquo;ll start to see this more as we move forward though these next few chapters. Speaking of\u0026hellip;\n"}),a.add({id:31,href:'/engineering/linux/firstgoal/',title:"Firstgoal",section:"Engineering",content:"Chapter 1 - The first goal #  Art by @monoxromatik Every journey needs a place to start, and while many may like to start slow I think a head first approach is best. So that\u0026rsquo;s exactly what we\u0026rsquo;re gonna do. The very first thing we\u0026rsquo;re going to do is install a new Operating System (OS)(1) on your computer. This is a pretty involved process. It will require you to Repartition(2) your drive, change settings in your BIOS or UEFI(3), and install a new Bootloader(4). I know this sounds really hard, but it\u0026rsquo;s not as bad as it sounds and I assure you it\u0026rsquo;s worth it. The OS we\u0026rsquo;ll be installing is called Linux. Linux is actually what powers both Android and ChromeOS, and is a common descendant of the same system as Mac OSX. Linux is the OS that almost all of the servers on the internet use - from massive website like Facebook and Google to small Minecraft servers you can rent online to play with friends. What\u0026rsquo;s cool about Linux is it lets you get much closer to the hardware and see what\u0026rsquo;s going on, and it just generally makes writing code much easier.\nFurthermore, it\u0026rsquo;s super easy to set up an amazing development environment in Linux for getting work done with code or electronics, and at the end of the day you can still watch YouTube, play most games that are on Steam, or open up an office suite, just like Windows or Mac. Unlike Windows and (to a lesser extent) Mac though the system is laid out in way so that all the moving parts are exposed and able to be tinkered with. No setting or configuration is locked in and you have total control over your computer with Linux. It\u0026rsquo;s not just easier to run and use software and tools for doing hardware and programming development on Linux, but it\u0026rsquo;s also easier to find and install the tools in the first place, as you\u0026rsquo;ll see shortly. Finally, Linux has a great track record of stability, as there are many Linux servers that run 24/7/365 to serve web pages, host services like games, and crunch big data in real time. In fact, all of the world\u0026rsquo;s top 500 super computers run Linux.\nBeyond that, there\u0026rsquo;s a degree of respect Linux has for the user that Windows and Mac both lack. In Windows 10 ads are being baked into the preinstalled programs from Minesweeper to the Email client, the OS pesters you to use Edge and Bing while simultaneously spying on everything you do. If you attempt to do even remotely system level things it\u0026rsquo;s increasingly easy to get the Frowny Face Blue Screen of Death (BSOD):    Add to this the fact that Microsoft basically laid off their entire testing department, and the nightmare that windows 10 updates have cause, forced online accounts, or well, just read this list. You\u0026rsquo;ll see pretty quickly why most \u0026lsquo;nerds\u0026rsquo; have a pretty deep seeded hatred for Microsoft.\nHonestly, the big one for me is just how much Windows tries to force their tools down my throat.\nI mean, this was a real error message I saw when trying to upgrade my system from 8.1 to 10:\n Image source   do you really think Microsoft is at all competent anymore?\n Note, for everything above, I mostly picked on Microsoft and Windows as that\u0026rsquo;s what most people run. I have just as many, if not more, complaints for Apple and OSX. It\u0026rsquo;s just that I suspect there will be far more Windows users reading this than Apple users.\n According to Wikipedia, \"An operating system (OS) is system software that manages computer hardware and software resources and provides common services for computer programs.\" put simply on your hardware this is probably Windows or Mac OS, and it's what everything else runs on top of To partition a drive means to take all the space on the hard drive and divide it into partitions onto which you can put a file system. Most operating systems like Windows, Mac OsX, or Linux, use multiple partitions for the operating system to function. Usually a filesystem is set up on each of these partitions, in windows this is typically NTFS for Hard Drives and FAT32 for flash drives, these file systems are effectively the index for all the files you'll put on the drive, and as you may have multiple partitions and multiple file systems on one disk each will have an index to match. As complicated as it may seem this means the partition table can be seen as an 'index of inecies' of sorts. Don't worry if that's a lot to understand right now, we'll come back to this topic in depth.You may also need to know how your drive is formatted, this is if it is using MBR (Master Boot Record) or GPT (GUID Partition Table), again, we'll cover this. Don't stress over all the new terms. The Binary Input Output System (BIOS) or Unified Extensible Firmware Interface (UEFI) is the thing you see before you computer loads the operating system, usually prompting to press delete or f2 to change settings. This is the system that is used to change the way all the components around the computer talk to one another and at what speed. The bootloader sits at a special place on the hard drive selected for boot in the UEFI or BIOS, and is what the computer uses to load the full operating system, most will let you chose what operating system you want to boot if you have multiple installed on you computer at once "}),a.add({id:32,href:'/engineering/linux/git/',title:"Git",section:"Engineering",content:"Chapter 5¬Ω - Git. #  ./missing-semester - Version Control  The above link does a better job of covering the vast majority of what I\u0026rsquo;d say than I could hope to put here. Just check it out. But do come back here! Oh, hai! Welcome back.\nSo, a lot of people conflate Git and Github, the largest git cloud service on the internet. This isn\u0026rsquo;t totally without out reason: Github is actually super nice to use, and is often the only way a lot of people use git. For better or worse, you\u0026rsquo;ll probably want to know how to use it and use it well.\nOne of the first things you should have to do when using Github is setup authentication, that is a method for logging in from the command line so that you can push your changes in your code to Github\u0026rsquo;s servers. For security reasons, you can\u0026rsquo;t just use a password (This is a good thing) and instead need to setup key based authentication.\nI\u0026rsquo;m going to save the nitty gritty about how public-private key based authentication works for the Security \u0026amp; Exploitation chapter, but for now what you need to know is having a key pair will let you securely access git and ssh services on various servers, so we need to get keys setup.\n[TODO]\n Bit, an alternative git cli (Github)\nlearngitbranching.js.org (more than just branching)\nŒºGit- DIY Git in python\n[TODO] Show how to setup SSH keys for Git\nSSH keys article on the (Arch Wiki)\nssh-keygen\nAfter you have a key generated, you\u0026rsquo;ll need to add the public key to github,\nyou may need to change existing repo to use a git based origin rather than an https one:\n1 2 3 4 5 6 7 8 9 10  ‚ï≠‚îÄvega@lyrae ~/git/local/opguides ‚Äπmaster‚Ä∫ ‚ï∞‚îÄ‚û§ git remote -v origin	https://github.com/VegaDeftwing/opinionatedguide (fetch) origin	https://github.com/VegaDeftwing/opinionatedguide (push) ‚ï≠‚îÄvega@lyrae ~/git/local/opguides ‚Äπmaster‚Ä∫ ‚ï∞‚îÄ‚û§ git remote set-url origin git@github.com:VegaDeftwing/opinionatedguide.git ‚ï≠‚îÄvega@lyrae ~/git/local/opguides ‚Äπmaster‚Ä∫ ‚ï∞‚îÄ‚û§ git remote -v origin	git@github.com:VegaDeftwing/opinionatedguide.git (fetch) origin	git@github.com:VegaDeftwing/opinionatedguide.git (push)   [TODO] show graphical git tools\nhttps://desktop.github.com\nhttps://extrawurst.itch.io/gitui\nhttps://aurees.com\nhttps://gitfiend.com\nhttp://cong.tools (Windows only)\nhttps://gitahead.github.io/gitahead.com/\nhttps://github.com/FredrikNoren/ungit\nhttps://gitextensions.github.io (Windows only)\nhttps://tortoisegit.org/download/ (Windows only)\n[TODO] comparison of Bit, Git, GithubCLI\n[TODO] .gitignores\n[TODO] show git log --all --graph --decorate --oneline and adding it to the gitconfig\n[TODO] git diff\nhttps://github.com/dandavison/delta\n[TODO] Git on not-github, diy hosting\nhttps://dhwthompson.com/2019/my-favourite-git-commit\n[TODO] Files Git works with\nhttps://blog.martinfenner.org/2014/08/25/using-microsoft-word-with-git/\n[TODO] Not commiting private info to Git\nWhat will happen when you commit secrets to a public Git repo? \nhttps://onlywei.github.io/explain-git-with-d3/\nNotes on GitHub and competition #  Stop using number of git commits as any metric (u/Sajjon on Reddit)\n\n generated using https://github.com/ryo-ma/github-profile-trophy, the above are the stats on my github profile\n  ahh, much better. Made using https://github.com/gelstudios/gitfiti, inspired by someone else that wrote the same thing, but I can\u0026rsquo;t find the original.\n Other Version Control Systems #  Git is by far the most used VCS out there. If you want to use something else I encourage you to try it and learn it, but realize if the point is to work with others it might be a pain [TODO]\nSubversion\nMercurial\nCVS\nFossil\nWeird Git #  https://radicle.xyz\nCSS in Github READMEs\nFurther Reading #  ./missing-semester - Metaprogramming\nChapter 6¬æ - Documentation #  Lets talk about changelogs, or, how I loathe \u0026lsquo;bugfixes and performance improvements\u0026rsquo; (Remy van Elst\u0026rsquo;s Blog)\n"}),a.add({id:33,href:'/engineering/linux/hardware/',title:"Hardware",section:"Engineering",content:"Chapter 3 - Into The Hardware #  One of the nifty things about Linux is you don\u0026rsquo;t need to install extra software to check out the deeper parts of your hardware. While on windows you might need a tool like CPU-Z to look at information about the CPU on Linux you can do it out of the box. Let\u0026rsquo;s get started on that then!\nThe CPU #  These are CPUS or Central Processing Units. They\u0026rsquo;re the beating heart of your computer, doing the day-to-day number crunching. The rectangular one of one of the first CPU\u0026rsquo;s in the lineage leading up to CPU\u0026rsquo;s like the ones used in desktop\u0026rsquo;s today, with further successors shown in order from top left to the bottom right. The metal-capped one at the bottom right, while old, is visually quite representative of a modern desktop CPU, though the CPUs in a laptop or smart phone do look quite different still.\nOne of the nifty things we do pretty easily in linux is get information about our hardware directly. Just as when we were installing Arch and we used lsblk to see an overview of the disks on the system, we can use some other tools to find out some other information about the system. Let\u0026rsquo;s start off basic and see what CPU you have. Go ahead and run\n1 2  ‚ï≠‚îÄvega@lyrae ~ ‚ï∞‚îÄ‚û§ cat /proc/cpuinfo   This is actually just using that same cat command we used before. This time we\u0026rsquo;re using it to read the system generated file that tells us about the processor in this system. I\u0026rsquo;m going to provide the output from my system for reference:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  processor : 0 vendor_id : AuthenticAMD cpu family : 23 model : 1 model name : AMD Ryzen 7 1700 Eight-Core Processor stepping : 1 microcode : 0x8001137 cpu MHz : 2018.119 cache size : 512 KB physical id : 0 siblings : 16 core id : 0 cpu cores : 8 apicid : 0 initial apicid : 0 fpu : yes fpu_exception : yes cpuid level : 13 wp : yes flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl nonstop_tsc cpuid extd_apicid aperfmperf pni pclmulqdq monitor ssse3 fma cx16 sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw skinit wdt tce topoext perfctr_core perfctr_nb bpext perfctr_llc mwaitx cpb hw_pstate sme ssbd sev ibpb vmmcall fsgsbase bmi1 avx2 smep bmi2 rdseed adx smap clflushopt sha_ni xsaveopt xsavec xgetbv1 xsaves clzero irperf xsaveerptr arat npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold avic v_vmsave_vmload vgif overflow_recov succor smca bugs : sysret_ss_attrs null_seg spectre_v1 spectre_v2 spec_store_bypass bogomips : 7688.44 TLB size : 2560 4K pages clflush size : 64 cache_alignment : 64 address sizes : 43 bits physical, 48 bits virtual power management: ts ttp tm hwpstate eff_freq_ro [13] [14]   Alright, that\u0026rsquo;s a whole lot of information, let\u0026rsquo;s break it down.\nFirst of all, almost all modern Central Processing Units (CPUs) have multiple cores, and as with most things in computers the\u0026rsquo;re counted from 0, so on a 4 core computer you\u0026rsquo;ll have cores 0, 1, 2, and 3. Multiple cores simply let your computer do things in parallel, running multiple programs or tasks at the same time\nNext is the vendor ID, family, model, name, and stepping. My processor is an AMD Ryzen 7 1700. There\u0026rsquo;s a pretty good chance your CPU will be made by Intel, and as such the family, model, name, and what not will reflect that. AMD and Intel are practically the only two laptop and desktop CPU providers, though in the feature we\u0026rsquo;ll work with boards that use CPU\u0026rsquo;s made by other manufactures. Really, most of this doesn\u0026rsquo;t matter. Some CPUs are nicer than others, and if you follow the market or care it\u0026rsquo;s easy to get a sense of a CPU\u0026rsquo;s speed just based on it\u0026rsquo;s name, but let\u0026rsquo;s move on for now.\nNext is\n1 2 3  microcode : 0x8001137 cpu MHz : 2018.119 cache size : 512 KB   Each of these things is very important, but I\u0026rsquo;m going to start with cpu MHz as it\u0026rsquo;s probably the easiest to understand, however, to understand this we\u0026rsquo;ll need to get even a bit lower level than this and learn about the electronic component that changed humanity: the transistor.\nClock Speed #  However, to get to that we\u0026rsquo;ve gotta go just a bit further down the rabbit hole to the relay. Relays are super simple to understand, they\u0026rsquo;re just a metal switch that is pulled open or closed using another input signal (usually a magnet pulling/pushing the switch closed/open) basically imagine a light switch, where the switch itself is controlled by yet another electrical signal. Relays are slow though, they require a physical metal plate to move to change the connection. Because of this they have limited reliability and worth note they\u0026rsquo;re actually loud. You can hear an audible click of the switch as they change state.\n If this is already interesting to you, here\u0026rsquo;s a video demonstrating a relay computer you can actually buy\n Enter the vacuum tube. Though rarely used today outside of high end audio and old radios, for a period of time the logic inside a computer used these tubes. Essentially theres three important parts of the tube, the Cathode, Plate and Grid. Put very simply the Cathode emits electrons and the Plate collects them. Where it gets interesting is the grid in between. By applying a voltage to the grid a signal can be controlled giving us the same ability to turn something on or off by a third wire as in the relay.\n Worth note but irreverent for digital electronics, tubes and transistors can actually pass only a percentage of the input back out, based proportionally on the input. This actually means that both tubes and transistors can act as an amplifier, using a small input range to control a much larger signal. A single tube or transistor in conjunction with other supporting components can be used to make a functional amplifier.\n Though the real break though here was the fact that this was no longer a mechanical system. With relays there was a very slow limit on the rate at which they could respond reliably, but with tubes this increased exponentially. Tubes were still expensive, large, and power hungry though. However, with their advent early computers saw a massive boost in speed with a decrease in cost\nFinally, enter the transistor. The physics here isn\u0026rsquo;t that far removed from the vacuum tube, only now instead of a vacuum the electrons are moving though a semiconductor - typically silicon. Again this brought a massive shrink in physical size and increase in that rate at which it could respond. Pictured above are two discrete transistors, however, this is where things get mind blowing:\nThe Ryzen 1700 CPU in the computer I\u0026rsquo;m typing this on has 4,800,000,000 transistors in a package that is only 213 mm¬≤, and finally, we can refrence the number output by cat /proc/cpuinfo\nAt the moment I got that output the transistors where being turned on and off at a rate of 2018Mhz. or 2Ghz. However, this system can run up to roughly 3.8Ghz. The faster this speed the faster your computer; however, your CPU will also use more power and run hotter. It\u0026rsquo;s for this reason that most systems adjust the speed based on load. Doing simple things like writing this document and as seen with that output my system runs at nearly half speed which is actually the slowest it can run. Because the computer is hardly doing anything right now the majority of that switching is actually just doing nothing but using power running \u0026lsquo;no operation instructions\u0026rsquo; the functional equivalent of just running 0+0 while it it waits for something to do.\nThe OS itself actually tells the processor what speed it should be running at. In Windows, when you change your power plan to \u0026lsquo;high performance\u0026rsquo; one of the major things it does is not allow the processor to run at a slower speed, and in Linux you can similarly control this using some cpu speed commands. We\u0026rsquo;ll get to that later though.\nFinally it\u0026rsquo;s worth note that on some systems, primarily high end desktops, you can actually run your processor outside of factor specifications by increasing the maximum clock rate of the processor. Doing this can lead to system stability issues and obviously leads to a higher power usage and heat output though. This process is known as \u0026lsquo;overclocking\u0026rsquo; as your taking the internal clock of the processor beyond it\u0026rsquo;s rating. My CPU, a Ryzen 1700, has actually been over clocked in order to get 3.8Ghz at all times on all of the cores.\nMicrocode #  Modern processors are very, very complicated. So complicated in fact that there is a full very tiny computer in your processor. This computer does multiple things, but the main one we\u0026rsquo;ll talk about is the translation between types of machine code. In order to understand this we\u0026rsquo;ll need to look a basic program written in the language \u0026lsquo;C\u0026rsquo;.\nThis code first makes two integers, a and b, gives them values, then adds them together and stores the result back into a. Finally, the program returns a 0 to the operating system in order to say \u0026ldquo;I ran without errors\u0026rdquo;.  1 2 3 4 5 6 7 8  int main() { int a; int b; a = 8; b = 16; a = a + b; return 0; }      Unlike python which get\u0026rsquo;s converted to something the computer can understand as it executes C is compiled before hand. This makes it so programs written in C are much, much faster than those written in python, though obviously C code is more difficult to write. Compilation is the process of turning a program into a file full of instructions the computer actually understands. This happens in two steps, first the program is turned into assembly code, for the above code this results in the output to the right:  1 2 3 4 5 6 7 8 9  push rbp mov rbp, rsp mov DWORD PTR [rbp-4], 8 mov DWORD PTR [rbp-8], 16 mov eax, DWORD PTR [rbp-8] add DWORD PTR [rbp-4], eax mov eax, 0 pop rbp ret   As you can see, this is incredibly difficult to read to a \u0026lsquo;normal\u0026rsquo; person, so even though we\u0026rsquo;re not there yet.\n  This in turn gets turned into binary as can bee seen by this screenshot generated using https://godbolt.org/\n   Binary (0b) Hex (0x) Decimal     0000 0 0   0001 1 1   0010 2 2   0011 3 3   0100 4 4   0101 5 5   0110 6 6   0111 6 7   1000 8 8   1001 9 9   1010 A 10   1011 B 11   1100 C 12   1101 D 13   1110 E 14   1111 F 15     See the weird numbers next to each instruction? like 4004b255? That\u0026rsquo;s a base 16 number or hexadecimal usually referred to as \u0026lsquo;Hex\u0026rsquo;. Hex is what is used by most computer guys to represent numbers because computers operate in base 2, or binary- like 01001100, which is very difficult to read and type accurately, however, base 10, the normal numbering system your used to, makes translating between binary and decimal a bit uncomfortable as the common factor is 5, an number that is both odd and in turn not a factor of two, where as 16 is 2^4 (2*2*2*2) so that means we can easily represent binary like this:\nOkay, so now those 1\u0026rsquo;s and 0\u0026rsquo;s are what your computer actually reads to run instructions. We\u0026rsquo;ll come back to this later, but since we\u0026rsquo;re here I\u0026rsquo;ll drop this link\nWhere you can see how these 1\u0026rsquo;s and 0\u0026rsquo;s are arranged to tell the computer what to do. That is super advanced for where we are now though, so let\u0026rsquo;s get back on track- what the hell is micro code already?\nWell, it turns out that modern processors are still compatible with some really, really old code. All the way back to the first 8086 processor made by Intel in 1978. It was here that the x86 instruction set - the instructions like \u0026lsquo;mov\u0026rsquo; , \u0026lsquo;push\u0026rsquo;, and \u0026lsquo;add\u0026rsquo; above that define the x86 architecture were born. Originally these were 16bit CPUs, that is each instruction only had 16 1\u0026rsquo;s and 0\u0026rsquo;s but soon the i386 came along and used 32bits. Back when 32 bit computers were common this is what this was in reference to.\n  As with all things technology progressed and 64bit cpu\u0026rsquo;s came along. Many attempts were made to make 32bit programs run with backwards comparability at high speeds on these CPU\u0026rsquo;s, though in the end AMD made the method used today, dubbed the x86_64 instruction set. Overtime this instruction set was expanded with various additions. We can actually see the names of these additions that are available on the CPU in the system by looking yet again at the output of cat /proc/cpuinfo and looking at the flags section. While not all of these signify instruction set additions, many do. The most common \u0026lsquo;famous\u0026rsquo; if you will is SSE, of which there have been multiple revision, the first version alone adds 70 instructions, which are used to make math faster\nAlright, so finally, enter Mircocode. At some point all of this became a lot to manage and processor designs evolved even further, getting exponentially more complicated and faster with more and more instructions, so they added this little computer which has the primary duty of turning the mess of countless possible instructions into yet even smaller instructions that the heavy duty \u0026lsquo;real\u0026rsquo; processor does. Every once in a while a problem will be found in the way this is done, or a security vulnerability in the hardware itself may be found, and your CPU manufacture will release a microcode update.\nThat update version is what you see on that line of cat /proc/cpuinfo\nNow, at the beginning of this guide I said I wouldn\u0026rsquo;t provide useless information, and I\u0026rsquo;m sure that all looks pretty useless without more context. In general, this is interesting because you can (and will need to) write some assembly code by hand every now and then. Thankfully, its usually not x86 assembly which is very, very difficult to write but instead assembly on much smaller, micro controllers (basically really tiny computers), where that assembly is necessary because the system is so limited.\nCache #  Okay, next up is cache. Cache, just like in the real world, is a small place to store things. Most people like to think the majority of what a computer does is raw number crunching, doing hard math, but the truth is more often than not it\u0026rsquo;s just moving data around. This follows a path from slowest and cheapest storage up to the fastest but most expensive. Typically this order looks a bit like\nHard Drive -\u0026gt; Solid State Drive -\u0026gt; Ram -\u0026gt; Cache -\u0026gt; Registers , where the price for storage on a hard drive can be under $0.10Gb, Ram upwards of $10Gb, and Cache and registers, which are storage baked directly onto the CPU, cost much, much, more to implement. It\u0026rsquo;s of note that these not only are digitally faster with each jump, but also usually physically close. A hard drive can be 10\u0026rsquo;s of feet of wire from the CPU while the RAM can be a few inches at best, and the cache and registers are physically in the CPU dye. Most of the data above the HDD/SSD level is actually just smaller subsets of each previous pool. In fact, on modern CPU\u0026rsquo;s there are actually usually 3 levels of cache, each with a progressively smaller size but increase in proximity to the executed instruction.\nPut simply, just as with adding more Random Access Memory (RAM) to your system, having more cache means more information can be within arm\u0026rsquo;s reach of the CPU to do work on at any moment.\nLet\u0026rsquo;s take a look. install the hwloc package using yay and then run lstopo and you should get an output that looks a bit like this\nThe stuff on the right are connections around the system, you can ignore those for now, but see the various cache layers, designated by L3, L2, L1d and L1i, and you can see how each core has it\u0026rsquo;s own cache. Finally, you can see that each core has two processing units? Hey, wait, what\u0026rsquo;s that all about?\nHyper threading, or SMT, or whatever the new term is for it, is a way of adding paths for doing things to keep every part of the CPU active. We\u0026rsquo;ll go into this more later, but for now, suffice it to say it\u0026rsquo;s a way of getting just a bit more performance out of a system.\nInterrupts #  While not listed in the /proc/cpuinfo output , it\u0026rsquo;s still relevant to bring up CPU interrupts, which are, fittingly, listed in /proc/interupts\n Output of cat /proc/interupts on my system\n  Output of information for the first 3 cores on my system displayed graphically using Netdata\n CPU interrupts are a bit confusing because the term interrupt can refer to the action itself, the code that executes, or the general concept. In general a CPU interrupt is when something needs to poke the CPU to tell it to interrupt what it\u0026rsquo;s doing. This can be when physical pin in the CPU gets a signal, a timer going off, or a program dividing by 0. We\u0026rsquo;ll cover this more in depth later, but from the hardware perspective what\u0026rsquo;s relevant is the CPU is generally so fast compared to other actions that the rest of the system mostly just triggers an interrupt to let the CPU know that a task the CPU asked to be done has completed. The most common example is requesting data from disk (Hard drive or SSD) takes so long, even at just a few milliseconds, that the CPU can get millions of things done while it waits for the request to be fulfilled. So rather than waste that time having the CPU poke the device asking \u0026ldquo;Are you done yet? Are you done yet?\u0026rdquo; the disk (or the controller it\u0026rsquo;s hooked up to, like the chipset) issues an interrupt to the CPU to let it know a task has completed. USB works in a similar way, though the really old keyboards with the circular connector (PS2) actually did interrupt the CPU directly on each key press.\nWe\u0026rsquo;ll come back and explore this more later, but if you\u0026rsquo;re really interested you can read ahead by going over these links and reading these man pages: Oreilly on Interupts, Oreilly cont., man trap, man syscall,\nPower #  the CPU is one of the most power hungry parts of your computer, and as such it does some interesting things to try to keep it\u0026rsquo;s power usage lower. Namely, it\u0026rsquo;ll turn it\u0026rsquo;s clock speed to do less operations per second as previously mentioned, but theres other things like entering sleep and hibernation states the processor is also capable of. The main thing you might want to concern yourself with from a performance to power consumption stand point is how aggressive this clock speed changing is. You can go as extreme as to tell the system to never let the processor get to full speed or to say \u0026lsquo;only run at max speed all the time\u0026rsquo;. The latter is actually quite useful as often it can take quite a few clock cycles after a heavy load is started for the processor to come up to speed, but if it\u0026rsquo;s always running full steam ahead this is a non issue. This entire topic is particularly relevent to laptops, and on Arch you may want to install a program to manage some of this for you or set sane defaults to save battery. I\u0026rsquo;ve had good luck using the tlp package. the cpupower package is helpful for looking at how arch handles cpu scaling and it lets you directly set these min and max frequencies or pick the scaling governor to handle how aggressive the switching is.https://wiki.archlinux.org/index.php/CPU_frequency_scaling#cpupower\nI very strongly recommend looking into this on any system though, as by default some CPUs will run at the minimum frequency only.\nIf you want to actually see how much power is used, rapl should do the trick, just be sure to actually put the system under load first- stress-ng --cpu 16 (or whatever your thread count is) should work.\nWe\u0026rsquo;ll talk about delivering power to the CPU in a bit, when we talk about the Voltage Regulation Module (VRM) on the Motherboard.\nPhysically, what and where is this thing? #  The CPU is on a square or rectangular board that is usually covered by a large heat sink used to keep it cool under load. It connects to the motherboard via hundreds of small, gold plated pins to send and receive signals (which well will discuss in depth later) from all around the system. Even though most modern CPUs are x86_64, generation to generation and cross manufacturer there are changes in the number of pins and the way they are arranged, meaning getting a new processor that\u0026rsquo;s not from the same generation usually won\u0026rsquo;t work. Furthermore, most laptops have soldered on processors that can not be upgraded to begin with.\nNuma Nodes? Chiplets? Die Yield? #  [TODO]\nBranch Prediction \u0026amp; Pipelining #  I don\u0026rsquo;t want to dive toooo deep into the weeds, but because of the Meltdown and Spectre vulnerabilities, I find it necessary to briefly talk about branch prediction.\nBasically, modern CPUs do a very good job of guessing what path of code will be executed on branches, that is code like this:  1 2 3 4  if condition == True: doThing() else: doOtherThing()      The CPU will do a good job guessing which path will actually be taken. This is done because CPUs are actually pipelined.\nCPUs have to do a few things per each instruction, generally they need to FETCH the instruction, DECODE what that instruction is telling the CPU to do, EXECUTE that instruction, and then WRITE BACK the result of the computation.\nThis could be done in order,\nbut because the CPU uses different parts internally, they can be pipelined, sort of like an assembly line. While one instruction is in WRITE BACK, the next instruction is being EXECUTED, the next-next instruction is being DECODED, and the next-next-next is being FETCHED.\nNow, there\u0026rsquo;s a lot more that goes into this, times where this doesn\u0026rsquo;t work -like if two instructions work on the same data, have to wait for write back before that data can be executed on- but the relevant bit here is that as much as we can, we want to keep this pipe line full. That is, we want to keep each point in the assembly line busy. To do this, the above code with an if utilizes branch prediction, and assuming it\u0026rsquo;s correct, is able to keep the pipeline full and running like normal. If it\u0026rsquo;s wrong, it has to empty the pipeline, go back, and do the correct instructions instead.\nThe issue with this that lead to the Spectre bug was that the assumed correct path to be executed may include a security level elevation, that is, it might be code that should only be able to be executed by the administrator (root) user, but in the prediction code there\u0026rsquo;s no check there, so if the prediction can be abused, code can be executed as an admin- a doomsday level vulnerability.\nMeltdown is similar- you can read how it works on Wikipedia (actually human readable and explained well).\nA note on x86, vendors, and CPU politics #  [TODO]\nchina trying to make their own silicon , apple to own SOC (Called it), etc.\nhttps://www.agner.org/forum/viewtopic.php?f=1\u0026amp;t=6\nOther things done by the CPU: #  The CPU has a lot of dedicated hardware inside for specific functions, for example many CPUs have a dedicated hardware random number generator.\nFurther Reading #  If you want to know about the internals of the CPU itself, check out Chapter 29 - Let\u0026rsquo;s Make our own CPU which goes into the componets of the CPU, why they\u0026rsquo;re made the way they are, and what the future of CPU architecture may look like.\nWhy you should use \u0026lsquo;nproc\u0026rsquo; and not grep /proc/cpuinfo\nSpyware at The Hardware Level - Intel ME \u0026amp; AMD PSP (YouTube, Mental Outlaw)\nRAM #  This is RAM or Random Access Memory. The above two sticks are the normal sized used in desktop PCs, this form factor is called a DIM while the bottom two are from laptops and are called SO-DIMS, the placement of the notch is an indicator of the generation of RAM, with nearly all modern ram being a consecutive generation of the DDR standard. At the time of writing (Q2,2019) DDR4 is common in new, medium to high end devices, with many DDR3 devices still being used. Of note many more compact devices solder the ram chips directly to the board, meaning there is no form factor to consider.\nJust like the CPU, RAM has a speed at which it operates as well, Typically it\u0026rsquo;s listed in MHz still, but speeds range from ~1.8Ghz to ~3.8Ghz at the time of writing, dependent DDR3 or 4. While DDR4 has faster clock speeds, it does typically have a higher overall latency, meaning there\u0026rsquo;s a longer delay between when when data is requested to when it\u0026rsquo;s delivered, albeit at a much higher total throughput. This is a massive topic in of itself, yet is also pretty niche as outside of some pretty specialized applications RAM speed and latency has a relatively minor impact, though faster is typically better.\nokay, let\u0026rsquo;s move on to ram in Linux.\nWhile support for this will vary depending on your motherboard, you should be able to see information about your ram by running sudo dmidecode --type 17\nThe output will probably repeat multiple times, printing once for each physical stick of ram in your system. I actually have 4 sticks, but I\u0026rsquo;ll just be showing one:\nYou should note that many of the things mentioned above can be seen here, though I do want to look at some things here.\nFirst, size. This is an 8Gb or 8192Mb stick of ram. Obviously the more ram the better, but you may find strange ram configurations where there\u0026rsquo;s a mix of ram sizes in a system. This can be bad for performance though, because of memory channels.\nMost modern systems use 2 or 3 memory channels, to simplify a bit, it makes it so two sticks of ram can have their speed be used in parallel. Think about it like a parking lot, if you have a total of 4 parking lots you could, theoretically, hook them all up in a straight line with one entrance/exit shared among them. This would be pretty stupid though, as it would severely bottleneck traffic going though. Instead you may want to add a separate entrance and exit for each, but that quickly becomes expensive. Instead, most systems use a mix of the two, connecting a pair of sticks together, allowing for added capacity, but allowing for multiple pairs to be inserted independently. A lot of people don\u0026rsquo;t fully fill all the available memory slots on their motherboard though, so instead of having 4 lots with 2 entrances you should be able to have 2 and 2, unless you mistakingly put the sticks in wrong, leaving one \u0026lsquo;entrance\u0026rsquo; closed entirely while the other now has a ton of capacity. On my motherboard these \u0026lsquo;lots\u0026rsquo; are labeled A1, A2, B1, and B2. Looking above you can see the stick we\u0026rsquo;re looking at here is the A1 lot. It\u0026rsquo;s because of this that you should ideally have a multiple of as many sticks of ram as you do memory channels. For example, if you have a two channel motherboard and CPU then you want either 2, 4, or 8 sticks of ram. Most motherboards top out at 4 sticks though, with 2 channel and 2 sticks being the most common configuration.\nNext, I want to look at the line that says \u0026lsquo;Type Detail: Synchronous Unbuffered (Unregistered)\u0026rsquo; this is referencing another type of ram, which is buffered and error correcting (ECC) memory. I\u0026rsquo;ll come back to this.\nI also want to point out the voltage. Much like a CPU the voltage a Ram module runs at is important, and needs to be kept very stable. However, it may need bumped up if the RAM is running at a particularly high speed or if it\u0026rsquo;s set higher than factory (overclocked).\nSome RAM actually includes a special memory profile, often called XMPP, which can be applied in the BIOS/UEFI settings to make sure you\u0026rsquo;re getting the absolute best performance out of you RAM before manual overclocking. This may actually overclock your CPU a bit as well as a bit of a side effect.\nThere\u0026rsquo;s a program on your system called free which can be used to see how much RAM you have, how much is in use, etc. Let\u0026rsquo;s run free with the -h flag so we can see the amounts with nice units.\n1 2 3 4  ‚ï≠‚îÄvega@lyrae ~ ‚ï∞‚îÄ‚û§ free -h total used free shared buff/cache available Mem: 31Gi 4.5Gi 23Gi 488Mi 3.3Gi 26Gi   You can see I have 32Gb of RAM total (it get\u0026rsquo;s truncated to 31 because it\u0026rsquo;s actually like 31.99, units are weird), with ony 4.5Gb used. Most people complain about Chrome eating all their RAM but the truth is unused RAM is wasted RAM. The OS will manage RAM for you, and if you run out start using swap (that partition we made eariler).\nLet\u0026rsquo;s take a deeper dive, reading the man page for free with man free we can see it uses information from /proc/meminfo, so lets look at that file ourselves using cat /proc/meminfo.\nOne of the most interesting things to point out here is the concept of Dirty memory.\n\u0026lsquo;Dirty\u0026rsquo; memory is the amount of information that has been modified in memory, but that has not been saved back onto the permanent storage (SSD/HDD). If you were to suddenly lose power this information would be lost.\nPagefaults and misses are also important. Because these topics are a bit hard to summarize I\u0026rsquo;m going to recommend you read the Wikipedia page on Pagefaults and on Cache Misses. It\u0026rsquo;s okay if you don\u0026rsquo;t understand everything you\u0026rsquo;re reading. Hopefully as you read more later and gain more experience the terms you didn\u0026rsquo;t know will \u0026lsquo;click\u0026rsquo; and you\u0026rsquo;ll understand.\nGoing back to when cache was mentioned though, RAM\u0026rsquo;s primary job is to hold bulk information that\u0026rsquo;s in use a bit closer to the CPU. For example if you load a large image file it\u0026rsquo;ll first get copied to ram and then be processed though cache in chunks, this is because there just simply isn\u0026rsquo;t enough cache on the CPU to hold a large image.\nVirtual Memory #  Dirty bit #  Pages #  [TODO] Huge Pages ref this\nMemory issues, ECC, and Memtest86 #  Memory can have quite a few issues, sometimes resulting in random Blue Screen of Death (BSoD) or Linux Kernel Panics, other times just occasionally corrupting data with no way to know.\nIf you\u0026rsquo;re working with super critical data, you can at least know that something has gone wrong by using Error Correction Code (ECC) memory. In an ideal world ECC would just be standard on everything. Unfortunately, Intel is a bag of dicks and uses it for product segmentation and people are cheap: ECC is also more expensive because it requires an extra bit for every byte. This also means that instead of the normal 8 memory dies per stick of RAM, ECC memory actually has 9 dies (usually). The reason there are normally 8 dies is simple- there\u0026rsquo;s 8 bits in a byte. Servers don\u0026rsquo;t work on some magic 9-bit in a byte system, instead, this extra bit per byte is used to ensure the data hasn\u0026rsquo;t been corrupted.\nThe math to do this is generally capable of detecting and fixing a single bit flip per byte, and at least detecting a double flip.\nThis video explains how that works if you\u0026rsquo;re interested:\n    It is worth noting that along with being more expensive, ECC is also usually a tad slower. There\u0026rsquo;s also such thing as Registered/Buffered memory, which you may see with ECC as well. Buffered memory is basically just adding an extra \u0026lsquo;buffer\u0026rsquo; between the read/write and again, it\u0026rsquo;s a server thing- you\u0026rsquo;re unlikely to ever see it on a consumer platform. Just know that if you\u0026rsquo;re buying RAM for a server you may need to be careful to ensure you\u0026rsquo;re getting the right thing.\nWhen DDR5 comes along, ECC is built into the spec for all levels to some extent because as memory speeds have increased, the likelihood of an error has as well. It\u0026rsquo;s becoming necessary for basic functionality at DDR5 speeds.\nNow, ECC would be great and all, but the memory in the system you\u0026rsquo;re reading this on almost certainly isn\u0026rsquo;t using it, so what can you do?\nWell, for one, you need to get a feel for when something might be a memory error. Generally, if you see issues that you can\u0026rsquo;t attribute to anything in software, where there\u0026rsquo;s no obvious pattern, it\u0026rsquo;s a good bet that it\u0026rsquo;s memory. Assuming you\u0026rsquo;re on an x86(_64) system, like most laptops or desktops, you can check with Memtest86(+) (Wikipedia). It often needs to run for a few hours to find anything, but when it does you\u0026rsquo;ll get a big red error.\nUnfortunately, this probably means you need to buy new RAM. In the absolute worst case, maybe a new CPU if the memory controller has gotten damaged, but this is unlikely.\n Image by –ê–Ω–¥—Ä–µ–π –ö—Ä–∏–∂–∞–Ω–æ–≤—Å–∫–∏–π on Wikipedia, Public Domain   You\u0026rsquo;re far more likely to get RAM errors if you Overclock your RAM as well, so just be smart if you do OC your RAM- though I really don\u0026rsquo;t recomend doing so beyond applying the XMP profile (Tom\u0026rsquo;s Hardware) your RAM may have shipped with.\nThe Future of RAM #  [TODO]\nIn-Memory Processing by UPMEM\nIntel Optane Persistant Memory\nRow Hammer #  Row Hammer is vulnrability that arrieses due to the way memory is arranged physically and electrically on a memory stick. It let\u0026rsquo;s you flip bits you shouldn\u0026rsquo;t be able to by \u0026lsquo;hammering\u0026rsquo; on the row above or below the target row, hoping that you can induce a bit flip in the target row.\nRow Hammer\u0026rsquo;s Wikipedia Page has some a very good overview as well as some example assembly to explain the exploit\n    The Motherboard #  This is an older motherboard, but still new enough to have modern parts. Let\u0026rsquo;s start by looking at the the most obvious physical features and move to smaller things from there.\nThe most obvious thing to point out is the size of the motherboard. This is a mATX motherboard, which is considered the normal size for most systems. Most gaming or DIY computers will use full size ATX motherboards, which look very similar but are a bit longer vertically, allowing for more expansion slots - those horizontal black bars - among other features. Other form factors include ITX, a smaller form factor with only a single expansion slot, eATX (extended ATX) which is rarely used now, and SSI and EEB which are both server motherboard sizes.\nThe large, white square is the CPU socket. This is an older board made for an AM3+ processor. The AM3+ processor line, as well as most consumer processors from AMD use a PGA or Pin Grid Array socket. these CPUs have many pins on the bottom which fall into these holes to make contact. Before the CPU is inserted the metal leaver arm, seen at the bottom of the socket if you look carefully, is raised and the CPU should smoothly plop right in, after which the arm can be lowered. Modern Intel CPUs follow a similar-ish mechanism, only instead of having a bunch of pins that go into holes the \u0026lsquo;pins\u0026rsquo; are actually tiny springy pieces of metal on the motherboard which make contact with pads on the CPU, that socket looks a bit like this, albeit this is an old one:\nimg source If you\u0026rsquo;re looking at a server or high end workstation you may actually run into a single motherboard with multiple CPU sockets. These are becoming less common with time, but even though there are multiple CPUs the system still operates as one larger system. For example, I have access to a system with 4, 8 core, 16 thread cpu\u0026rsquo;s to give for a total of of 64 threads. Giving this beautiful sight:Clearly, a server with that much horsepower will use a lot of electricity though, and there is some overhead for the system when getting information from one physical CPU to another.\nAbove and left of the CPU on you\u0026rsquo;ll see a bunch of copper coils in little boxes and some small metal cylinders, as well as a cluster of these with a large, 4-hole plug a bit further left, directly above the big aluminum heat sink. This all makes up the VRM or Voltage Regulation Module. The connector there is where the CPU power plug from the PC power supply would be plugged in. The power needs to be carefully controlled, filtered, and adjusted based on the needs of the CPU, that\u0026rsquo;s what all of this is for. Generally the beefier and faster a CPU, the larger the VRM. The VRM also needs to dissipate a good amount of heat on higher end systems so many nicer motherboards will cover this up with a large heatsink.\nMoving on from the CPU you\u0026rsquo;ll see 4 vertical slots next to socket, these are where the RAM sticks are inserted. You\u0026rsquo;ll notice they\u0026rsquo;re color coded as to indicate which slots share the communication channel, so in this case you\u0026rsquo;d want to put the first memory stick in the blue slot closest to the socket, followed by the black slot closest to the socket, then repeat.\nWhile we\u0026rsquo;re looking at this side of the board- next to the RAM slots you\u0026rsquo;ll see two things of note. First, that black circular thing is actually a little buzzer. A lot of even modern systems have these on board to buzz error codes out in morse code if something goes wrong. Below that is a large, 20 or 24 pin connector (most modern systems use the 24pin varient) which is where the power supply is plugged in to provide power to the motherboard (with the exception of the CPU) as well.\nOn the other side of the CPU and down a little you\u0026rsquo;ll see a sizable metal heatsink. This is covering the chipset. We\u0026rsquo;ll come back to what the chipset does in a bit. This motherboard is actually a bit weird, on most motherboards the chipset is found almost directly below the RAM, but in general look for a large heatsink and it\u0026rsquo;s probably under that.\nBelow the chipset here are 4 expansion slots, all of which use the PCI-e standard in this case. We\u0026rsquo;ll come back to these in a bit.\nIn the bottom right of the motherboard there are 6 SATA connectors, here each is a different color (for no apparent reason?). These are for connecting storage like hard drives.\nVertically in line but closer to the center of the board you\u0026rsquo;ll also spot a coin cell battery. This is so the system can keep time with use of an on board Real Time Clock (RTC) even when fully powered down and disconnected from wall power.\nAlong the bottom you\u0026rsquo;ll see various connectors with pins sticking out, these are mostly for front panel connections- where the USB, audio, power button, etc. from the front of your case connect.\nFinally, along the top of the back left edge you\u0026rsquo;ll see the metal tops of the main \u0026lsquo;rear i/o\u0026rsquo; for the computer. These are all the main connections for your system. The bulk of the system\u0026rsquo;s USB ports, networking, and audio ports will be found here.\nSo, how do we get any information from the motherboard? Well, in case it wasn\u0026rsquo;t already obvious, the motherboard isn\u0026rsquo;t really one thing. It\u0026rsquo;s more a common interconnect point and routing system than anything; however, it does have some of it\u0026rsquo;s own responsibilities. To start small let\u0026rsquo;s look at one small, but exceedingly import role of the motherboard: fan and temperature control.\nTo see what your fans are doing on Linux you\u0026rsquo;ll need to grab the package lm_sensors with yay, then you can run run sudo sensors-decect and mash enter until it\u0026rsquo;s done. After this you should be able to run sensors and see an output similar to this one:\nOf note, depending on your system, there\u0026rsquo;s a small chance nothing will be detected at all or that some information will be wrong. Even in my case this is true as my CPU fan is reporting 0 RPM. Actually entering your motherboard\u0026rsquo;s UEFI or BIOS settings may expose more information, but we\u0026rsquo;ll talk about that more later.\nAlright, so that\u0026rsquo;s coll and all, but what else can you do?\nAlright, let\u0026rsquo;s move on to seeing the system buses, namely, the pci bus.\nThe pci bus is where most of the system\u0026rsquo;s add in cards, controllers, and the like connect. Here\u0026rsquo;s a shortened version of the output of lspci from my system\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32  00:00.0 Host bridge: Advanced Micro Devices, Inc. [AMD] Family 17h (Models 00h-0fh) Root Complex 00:00.2 IOMMU: Advanced Micro Devices, Inc. [AMD] Family 17h (Models 00h-0fh) I/O Memory Management Unit 00:01.0 Host bridge: Advanced Micro Devices, Inc. [AMD] Family 17h (Models 00h-1fh) PCIe Dummy Host Bridge 00:01.1 PCI bridge: Advanced Micro Devices, Inc. [AMD] Family 17h (Models 00h-0fh) PCIe GPP Bridge ... 00:08.1 PCI bridge: Advanced Micro Devices, Inc. [AMD] Family 17h (Models 00h-0fh) Internal PCIe GPP Bridge 0 to Bus B 00:14.0 SMBus: Advanced Micro Devices, Inc. [AMD] FCH SMBus Controller (rev 59) 00:14.3 ISA bridge: Advanced Micro Devices, Inc. [AMD] FCH LPC Bridge (rev 51) 00:18.0 Host bridge: Advanced Micro Devices, Inc. [AMD] Family 17h (Models 00h-0fh) Data Fabric: Device 18h; Function 0 ... 00:18.7 Host bridge: Advanced Micro Devices, Inc. [AMD] Family 17h (Models 00h-0fh) Data Fabric: Device 18h; Function 7 01:00.0 Non-Volatile memory controller: Phison Electronics Corporation E12 NVMe Controller (rev 01) 02:00.0 USB controller: Advanced Micro Devices, Inc. [AMD] X370 Series Chipset USB 3.1 xHCI Controller (rev 02) 02:00.1 SATA controller: Advanced Micro Devices, Inc. [AMD] X370 Series Chipset SATA Controller (rev 02) 02:00.2 PCI bridge: Advanced Micro Devices, Inc. [AMD] X370 Series Chipset PCIe Upstream Port (rev 02) 03:00.0 PCI bridge: Advanced Micro Devices, Inc. [AMD] 300 Series Chipset PCIe Port (rev 02) ... 03:07.0 PCI bridge: Advanced Micro Devices, Inc. [AMD] 300 Series Chipset PCIe Port (rev 02) 07:00.0 USB controller: ASMedia Technology Inc. ASM1143 USB 3.1 Host Controller 08:00.0 Ethernet controller: Intel Corporation I211 Gigabit Network Connection (rev 03) 0a:00.0 PCI bridge: Advanced Micro Devices, Inc. [AMD] Device 1470 (rev c3) 0b:00.0 PCI bridge: Advanced Micro Devices, Inc. [AMD] Device 1471 0c:00.0 VGA compatible controller: Advanced Micro Devices, Inc. [AMD/ATI] Vega 10 XL/XT [Radeon RX Vega 56/64] (rev c3) 0c:00.1 Audio device: Advanced Micro Devices, Inc. [AMD/ATI] Vega 10 HDMI Audio [Radeon Vega 56/64] 0d:00.0 VGA compatible controller: NVIDIA Corporation GP106 [GeForce GTX 1060 6GB] (rev a1) 0d:00.1 Audio device: NVIDIA Corporation GP106 High Definition Audio Controller (rev a1) 0e:00.0 Non-Essential Instrumentation [1300]: Advanced Micro Devices, Inc. [AMD] Zeppelin/Raven/Raven2 PCIe Dummy Function 0e:00.2 Encryption controller: Advanced Micro Devices, Inc. [AMD] Family 17h (Models 00h-0fh) Platform Security Processor 0e:00.3 USB controller: Advanced Micro Devices, Inc. [AMD] Family 17h (Models 00h-0fh) USB 3.0 Host Controller 0f:00.0 Non-Essential Instrumentation [1300]: Advanced Micro Devices, Inc. [AMD] Zeppelin/Renoir PCIe Dummy Function 0f:00.2 SATA controller: Advanced Micro Devices, Inc. [AMD] FCH SATA Controller [AHCI mode] (rev 51) 0f:00.3 Audio device: Advanced Micro Devices, Inc. [AMD] Family 17h (Models 00h-0fh) HD Audio Controller   Alright, clearly there\u0026rsquo;s a lot going on here, and on first glance it doesn\u0026rsquo;t even look all that useful. But let\u0026rsquo;s look deeper. From this output we can see some interesting things. Starting from the top you\u0026rsquo;ll see there\u0026rsquo;s a lot of internal AMD things that are just handling routing, really these probably don\u0026rsquo;t matter. the first interesting things to look at is 01:00.0 Non-Volatile memory controller: Phison Electronics Corporation E12 NVMe Controller (rev 01) which is telling me that my super speedy NVMe solid state drive is at the address 01:00.0 on the pci bus and despite being made by a consumer brand (I think mine\u0026rsquo;s a Silicon Power? though I have another that\u0026rsquo;s made by Samsung) the actual controller on the device is made by Phison, a reputable brand for NVMe controllers.\nnext thing of note is\n1 2  02:00.0 USB controller: Advanced Micro Devices, Inc. [AMD] X370 Series Chipset USB 3.1 xHCI Controller (rev 02) 02:00.1 SATA controller: Advanced Micro Devices, Inc. [AMD] X370 Series Chipset SATA Controller (rev 02)   You can see here that I have a separate controller for my USB 3.1 ports and that it\u0026rsquo;s sharing pci lanes with my sata controller. In theory, this means If I\u0026rsquo;m working one or both of these really hard, the other may be slower.\nnext is:\n1 2  07:00.0 USB controller: ASMedia Technology Inc. ASM1143 USB 3.1 Host Controller 08:00.0 Ethernet controller: Intel Corporation I211 Gigabit Network Connection (rev 03)   What\u0026rsquo;s interesting here is I have another 3.1 controller, on an entirely different set of lanes. Really, this is a fault of USB that it\u0026rsquo;s not very clear, this is actually a USB 3.1 gen 2 controller, so each port has a top speed of 10gb/s, compared to the 5gb/s of the other controller.\nYou\u0026rsquo;ll also see that my network interface is being handled by an Intel network controller, despite this system having an AMD CPU.\nmoving on:\n1 2 3 4  0c:00.0 VGA compatible controller: Advanced Micro Devices, Inc. [AMD/ATI] Vega 10 XL/XT [Radeon RX Vega 56/64] (rev c3) 0c:00.1 Audio device: Advanced Micro Devices, Inc. [AMD/ATI] Vega 10 HDMI Audio [Radeon Vega 56/64] 0d:00.0 VGA compatible controller: NVIDIA Corporation GP106 [GeForce GTX 1060 6GB] (rev a1) 0d:00.1 Audio device: NVIDIA Corporation GP106 High Definition Audio Controller (rev a1)   Here you\u0026rsquo;ll see some devices can actually use multiple IDs for one physical device. both of the 0c:00.x \u0026lsquo;devices\u0026rsquo; are actually for the \u0026lsquo;Vega56\u0026rsquo; graphics card (Often called GPU for graphics processing unit) made by AMD Radeon, while the 0d:00.x devices are for the GTX1060 card made by Nvida that I have in this system as well. Of note, having both of these in one system is exceedingly uncommon, and my use case is strange; however, It is common to see systems which have a gpu integrated into the CPU (which will still appear in this list) and have a separate larger GPU in the system as well.\nIf you continue down this list you\u0026rsquo;ll see there\u0026rsquo;s yet another USB controller and a audio controller among other things.\nWhat\u0026rsquo;s cool is this information relates back to something we saw earlier when looking at the CPU:\nSee all those PCI ids on the right side, those directly correlate with a lot of the above.\nFinally, if you want a lot more information you can run sudo lspci -v to see even more info about anything, for example, here\u0026rsquo;s the output about my GTX1060 GPU:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  0d:00.0 VGA compatible controller: NVIDIA Corporation GP106 [GeForce GTX 1060 6GB] (rev a1) (prog-if 00 [VGA controller]) Subsystem: Micro-Star International Co., Ltd. [MSI] GP106 [GeForce GTX 1060 6GB] Flags: bus master, fast devsel, latency 0, IRQ 78 Memory at f6000000 (32-bit, non-prefetchable) [size=16M] Memory at c0000000 (64-bit, prefetchable) [size=256M] Memory at d0000000 (64-bit, prefetchable) [size=32M] I/O ports at c000 [size=128] Expansion ROM at f7000000 [disabled] [size=512K] Capabilities: [60] Power Management version 3 Capabilities: [68] MSI: Enable+ Count=1/1 Maskable- 64bit+ Capabilities: [78] Express Legacy Endpoint, MSI 00 Capabilities: [100] Virtual Channel Capabilities: [250] Latency Tolerance Reporting Capabilities: [128] Power Budgeting \u0026lt;?\u0026gt; Capabilities: [420] Advanced Error Reporting Capabilities: [600] Vendor Specific Information: ID=0001 Rev=1 Len=024 \u0026lt;?\u0026gt; Capabilities: [900] Secondary PCI Express \u0026lt;?\u0026gt; Kernel driver in use: nouveau Kernel modules: nouveau   The most notable thing here is actually at the end:\n1 2  Kernel driver in use: nouveau Kernel modules: nouveau   tells us I\u0026rsquo;m using the nouveau driver and kernel modules instead of one of the alternatives on the Nvida card in my system If I wanted to I could switch this over to the proprietary Nvidia driver to get a pretty nice speed boost in some applications.\n I\u0026rsquo;m not really worried about this because I\u0026rsquo;m mostly just using the Vega56 card. The nvidia card is there strictly for CUDA support in some workloads.\n Much like lspci, there\u0026rsquo;s also lsusb, which as you can imagine, tells us information about the USB devices on the system. I have a LOT of usb devices on this system so I\u0026rsquo;ll just paste in a snippet:\n1 2 3 4 5  Bus 002 Device 001: ID 1d6b:0003 Linux Foundation 3.0 root hub Bus 001 Device 003: ID 0c45:6340 Microdia Camera Bus 001 Device 008: ID 28de:1142 Valve Software Wireless Steam Controller Bus 001 Device 006: ID 258a:0013 Bus 001 Device 005: ID 05e3:0745 Genesys Logic, Inc. Logilink CR0012   You\u0026rsquo;ll see here that USB hubs, input devices, webcams, etc. all show up. Anything that\u0026rsquo;s hooked up through USB should appear here. The device with ID 258a:0013 isn\u0026rsquo;t really telling us anything though. What we do know is the first part is the USB Vendor ID. This is an ID that vendors of USB devices have to purchase to uniquely id their products.\nupon looking this id up online, it appears it\u0026rsquo;s used for a generic USB keyboard.\nFor completeness I\u0026rsquo;ll mention, the first part of the id, the x\u0026rsquo;s in xxxx:yyyy is the vendor id, while the y\u0026rsquo;s are the product id.\nFinally, I\u0026rsquo;d like to mention dimdecode. according to the manual page:\n dmidecode is a tool for dumping a computer\u0026rsquo;s DMI (some say SMBIOS) table contents in a human-readable format. This table contains a description of the system\u0026rsquo;s hardwarecomponents, as well as other useful pieces of information such as serial numbers and BIOS revision. Thanks to this table, you can retrieve this information without having to probe for the actual hardware. While this is a good point in terms of report speed and safeness, this also makes the presented information possibly unreliable.\n we\u0026rsquo;ve already used this to get information about the system ram, but other things can be read as well. For example, going back to the pci slots from above running sudo dmidecode --type 9 will tell you what physical slots correspond to what bus address among other information, for a full list of available types simply look at the dmidecode man page with man dmidecode.\nChipset #  The chipset is a chip usually located in the bottom right 1/4 of a motherboard underneath a heatsink. The chipset coordinates the data flow between the processor and most of everything else- excluding the few direct-CPU attached things like the Graphics card. Older systems had both a Northbridge and and a SouthBridge as two separate chips, but everything modern has just the single chip, as the Northbridge, which had memory the memory controller, isn\u0026rsquo;t necessary on modern systems where the memory controller has been integrated into the CPU itself.\nFor the most part, the chipset on a motherboard will match a certain CPU socket, that is each generation of CPU will have it\u0026rsquo;s own chipset and socket; however, this is not always the case as sometimes one chipset may support multiple CPU generations or a CPU generation will work with multiple chipsets. This is the case with AMD\u0026rsquo;s ryzen line where a first generation Ryzen CPU such as the Ryzen 1700 will work in a motherboard with an x370, x470, or x570 chipset, and a third generation Ryzen CPU such as the Ryzen 3700 will work in any motherboard with one of those as well, albeit running a generation mis-match may result in degraded performance or missing features (such as lacking PCIe 4.0).\nFinally, it\u0026rsquo;s notable that the chipset typically acts as a PCIe lane \u0026lsquo;splitter\u0026rsquo; of sorts, turning (usually) 4 lanes into may more so that more devices may be attached. This can be particularly important when many high bandwidth devices are attached though, as even though these lanes are split, there\u0026rsquo;s still only that original 4 lanes of bandwidth to go around.\nImage Source Image Source Expansion slots #   Two PCI-e 1x expansion cards, one for USB 3.0 and one for audio. Of note, most modern motherboards have both functions built in.\n Most modern expansion cards connect though the PCI Express or PCIe bus. This standard, much like DDR, has gone though multiple generations of bandwidth doubling. Currently consumer devices offer up to PCIe 3.0 but devices with both 4.0 and 5.0 should be on the market shortly.\nPCIe cards are used for just about anything you could imagine, form adding a more powerful graphics card, more usb ports, a higher end sound card, to some more esoteric things like specific task accelerators (encryption, compression) or even a software defined radio.\nNo matter what the device is you have to keep in mind its physical and electrical requirements. That is, do you have a slot long enough to accommodate the card and can you provide power to it.\nThis may seem odd, but unlike most connections (think USB or Ethernet) which may support varying speeds (usb2 vs 3) but are still physically the same size, the more bandwidth hungry a PCIe device, the larger the physical connection. The largest available is a 16x connection, while the smallest is a 1x. The most commonly used lane arrangements are 1x, 4x 8x, and 16x. The motherboard shown above has one 16x connector and three 1x connectors. If you have a card that is electrically wired for 4x it will definitly work in any slot physically designed for 4x or greater, and it will still work in a 1x slot of that slot is open ended- this means the \u0026lsquo;back\u0026rsquo; of the slot is open, allowing the card\u0026rsquo;s connector to go past the actual physical connection. Similarly, many 16x physical slots only have 8x actually wired. If you use a card which elecrically needs more connections it will almost certainly still work, but may have degraded performance. Similarly, if you have a card which expects a PCIe gen 3 16x connection but the best you have available is a PCIe gen 2 connection, it will run at half speed. To be extra clear:\nPCIe 1 @ 16x == PCIe 2 @ 8x == PCIe 3 @ 4x\nSimilarly, putting a card which only supports PCIe Gen 2 into a Gen 3 slot will not suddenly make the card faster, even if it was to compensate, that is, if the card is made for PCIe Gen 2 @ 16x and you put it in a PCIe Gen 3 @ 8x slot, it will still run at half speed because it\u0026rsquo;s the lowest gen number of the card or the slot that determines how many lanes are actually needed.\nUnfortunately, PCIe lanes, that is if you add together all the available 16x\u0026rsquo;s and 8x\u0026rsquo;s etc. on a given CPU are usually pretty limited. If the only extra card you plan on adding is a graphics card, you\u0026rsquo;ll be fine, but if you intend to add a graphics card, sound card, network card, etc. all at once you may find that you\u0026rsquo;ve either run out of physical slots or that a card is running with less than ideal bandwidth as a 16x slot may \u0026lsquo;give up\u0026rsquo; 8 of it\u0026rsquo;s lanes becoming an 8x slot so that another card can function at all.\nOf note, the number of physical lanes and slots the mother board has probably greatly exceeds the number of lanes actually going to the CPU, so even if it appears you have plenty of room to add cards you may end up accidentally starving one for bandwidth.\nFinally, from a power perspective most motherboards will supply up to 75 watts to a card through the motherboard, but power hungry cards like the Nvidia and AMD graphics cards in my system may require external power connections. Also, some server boards cap PCIe power delivery to only 25 watts without an external power supply, so just be careful with compatibility.\nThere are some other standards other than PCIe worth mentioning though.\nOlder standards such as PCI, AGP, and ISA were all used before the widespread adoption of PCIe and while their availability is declining, PCI cards are still often for sale, you need to be very careful to only get PCIe cards and not PCI cards if your system doesn\u0026rsquo;t support them.\nBoth AGP and ISA have been phased out a long time ago, but very old cards may poke up now and then. If you\u0026rsquo;re into vintage computers you may want to look the standards up to learn more.\n Top: a 16x pci-e graphics card and a 1x pcie networking card\nBottom: an ISA networking card and an AGP graphics card, not pictured is the PCI connector\n ROM/BIOS/UEFI #  Motherboards have to coordinate the communication of all the peripherals on the system and their own internal buses, furthermore, they have to have some sort of minimal configuration settings for setting things like which drive to boot off of or what speed the CPU or RAM should run at. These configuration settings are stored in some ROM or \u0026lsquo;Read Only Memory\u0026rsquo;, which is an independent chip on the motherboard. This configuration is read by the Binary Input Output System (BIOS) or the Unified Extensible Firmware Interface (UEFI). UEFI is essentially just the newer replacement for BIOS, and usually includes a compatibility mode for BIOS based hardware. When you first turn on the system you can typically mash either the delete or F12 key to enter this configuration page. It\u0026rsquo;s typically from this interface that you\u0026rsquo;d select your boot device, change your CPU or RAM clock speed, and set the system time. On that note, the system also likely has a battery on board which power\u0026rsquo;s the on-board real time clock, which allows the system to maintain the time even when disconnected from power. On some systems the ROM is actually volatile meaning if this battery dies and the system is disconnected from power you may loose the BIOS/UEFI settings.\nOf note, you may need to update the UEFI or BIOS of a system which is sometimes done via a special admin command within windows but more commonly done by downloading a file to flash drive, putting the drive in a specific usb port, and loading the update file. When this is done it\u0026rsquo;s common to lose all UEFI/BIOS settings as well, as it overwrites the ROM.\nFinally, it should be noted that it\u0026rsquo;s pretty easy to make your system not boot or boot-loop if you break things here. So, be careful. If you set your fan speeds slower to make the system quieter then everything overheats and dies, well, „ÉΩÔºà¬¥„ÉºÔΩÄÔºâ‚îå\nBecause this varies per motherboard there\u0026rsquo;s no universal way to describe how it looks or works. Some boards will support a lot more configuration than others, with really the only nearly definite options you\u0026rsquo;ll find at the time of writing being a switch to enable virtualization extensions (for running virtual machines) and a switch to turn of Secure Boot, which you likely had to do to install Arch to begin with.\nFurther reading How To Geek: What Is UEFI, and How Is It Different from BIOS?\nVRM #  The VRM or \u0026lsquo;Voltage Regulation Module\u0026rsquo; serves a simple but important task of ensuring that the CPU (or processor in question) receives a constant voltage or voltage that makes sense for it\u0026rsquo;s current clock speed.\nEssentially the VRM may contain multiple stages of current and voltage regulation modules. The more of these stages the more stable the voltage and the more current can be delivered. For most cases, this can be left alone, but it\u0026rsquo;s incredibly important when over clocking, as to overclock a CPU or GPU it\u0026rsquo;s usually necessary to increase the voltage, which is typically done from within the BIOS/UEFI or from a configuration utility inside the OS in the case of the GPU.\nYou can typically tell how strong a particular VRM is by counting the number of \u0026lsquo;chokes\u0026rsquo; on the board.\n[TODO, add pictures of chokes]\nGraphics Card (or integrated graphics) #   A wide array of graphics cards spanning multiple generations. The majority pictured are made by Nvidia\n Most \u0026lsquo;beefier\u0026rsquo; systems have a graphics card, but (almost) every computer that can output a video signal has dedicated graphics processing of some sort. For many lower end or low power systems (especially laptops) this graphics processing unit, or GPU, is built into the CPU and uses the systems same ram for video. For larger systems there\u0026rsquo;s typically a larger graphics card (often the graphics card is called a GPU as shorthand; however, the GPU is technically just the processor on the board), which is a separate device hooked up though an expansion connection (like PCIe). Typically these cards differ from their integrated into the CPU counterparts in that they\u0026rsquo;re much, much faster and drink much more power. In general the GPU is required because while CPUs are great at very fast consecutive operations like taking \u0026lsquo;1+1=a, a+1=b, b+1=c\u0026rsquo; the GPU is really good at parallel operations like \u0026lsquo;1+1=a, 2+2=b, a+b=c\u0026rsquo;, where both of the first two operations can be done at the same time by different processing units before being manipulated together in the third operation. In reality, this is because the modern GPU really only treats pushing color data to the screen as a secondary operation, instead it\u0026rsquo;s main purpose is to do complex matrix and vector math which is what goes into drawing polygons in a 3D scene, and these matrix operations are massively parallel. So while a CPU has at the high end a dozen cores, a GPU may have multiple thousand. These cores are much more limited in what they can do of coarse, and typically run at a lower clock speed than the CPU, but for their purpose they absolutely shred though large data. This has given rise to GpGPU Computing, or General Purpose Graphics Processing Unit Computing, where in the GPU is used for things other than graphics, like accelerating data base searchers or training AI models.\nAs a brief note, historically graphics cards served primarily to actually draw to the screen, with some only having a fixed number of characters they could draw for rendering a text interface and others having a quite limited color palette that dictated how final images would look.\nToday, there are three primary manufactures of GPUs: Nvidia, AMD, and Intel.\nThe largest player in the space, Nvidia, makes cards targeted primarily to gamers in their GTX and RTX lineup, and has cards meant for professional/compute tasks in their Tesla and Quadro lines. While the two lines are very similar technically they vary mostly in drivers and compute bit depth, with the professional cards providing the ability to do higher resolution floating point calculations easier. This is primarily done for market segmentation though- to prevent professional from buying the much cheaper (albeit still far to expensive) \u0026lsquo;gaming\u0026rsquo; cards. All of Nvidia\u0026rsquo;s cards support CUDA, a programming framework that makes it easier to take advantage of Nvidia\u0026rsquo;s cards for GpGPU purposes.\nAMD is currently offering little competition to Nvidia in the high end; however, their more midrange cards have found great success as they perform plenty well for the majority of games and compute work loads at what is often a fraction of the cost. Of note, AMD cards do not support CUDA, though they do support a variety of open standards that serve the same purpose. This is still an issue though, as many programs that can take advantage of GpGPU acceleration depend on CUDA and therefor require an Nvidia card. Nvidia has frequently been quite hostile to the open source community and their drivers significantly lag behind in quality and performance compared to AMD\u0026rsquo;s for Linux.\nAlso of note, AMD makes many \u0026lsquo;APU\u0026rsquo;s or Accelerated Processing Units, which is just branding for their take on graphics integrated into the CPU. However, AMD\u0026rsquo;s integrated graphics, at least at the moment, far out do Intel\u0026rsquo;s offerings. Intel, at the moment, only offers integrated graphics that are less than stellar performers. Despite this, laptops with Intel Integrated Graphics are very common due to their low power usage. Intel\u0026rsquo;s Integrated Graphics have very good drive support though, both on Linux and Windows.\nAs of the time of writing, Intel is starting to send prototype graphics cards to vendors in a bid to break out of the integrated graphics only space.\nMoving into the actual hardware itself let\u0026rsquo;s look at three graphics units, starting with Intel Integrated.\nBoth Intel and Amd offer integrated graphics of various capability that usually pair reasonably well with the CPU they share the die with. Below is an image of the inner workings of a ryzen cpu with integrated graphics, showing the actual CPU cores (I believe this is a 4 core eight thread system?) in CCX0, the memory controller, and the very large Vega series GPU on the right. This looks to be a Vega11 GPU as you can count the 11 stacks of Compute Units in the GPU section. Of note, if you get a CPU with integrated graphics and don\u0026rsquo;t actually use it because you\u0026rsquo;re getting a separate, more powerful card , then you\u0026rsquo;re effectively paying for a large amount of hardware you\u0026rsquo;re not using. As you can see below, if the GPU was not there, there would be a lot more room to add more CPU cores or other features to the CPU to make it more powerful. Unfortunately, due to market segmentation even if the actual cost to add these extra cores would be the same or less as the iGPU\u0026rsquo;s cost, a CPU of the equivalent size would likely be much more expensive.\nFinally, it should be noted the iGPUs share system memory for graphics memory, which is actually one of their most limiting factors- as system memory (RAM) is optimized for a different kind of access pattern, it is not nearly as fast as GDDR or HMB2, both of which are memory technologies that have been optimized for use with graphics devices.\nImage Source Moving on to graphics cards, Looking above at the stacks of graphics cards above, you\u0026rsquo;ll probably notice that a graphics card is basically just a full separate motherboard and processor on a card. Really, this is pretty accurate, as there is a separate compute device (the GPU), ram (GDDR or HBM), and io (fan control, etc.) on the board. Of course, the Graphics card can\u0026rsquo;t really be used as a full separate computer, but thinking about it as such isn\u0026rsquo;t entirely wrong either. In fact, graphics cards really harken back to much older systems where it was common to add a math co-processor chip along side the CPU to make some mathematical operations faster.\nFurther reading on GPU hardware:\n\u0026ldquo;World\u0026rsquo;s Simplest TTL VGA circuit?\u0026rdquo; - George Foot on Hackaday\nHardware Accelerated Decode #  [TODO]\nhttps://utcc.utoronto.ca/~cks/space/blog/web/Firefox80VideoAccelConfusion\nHardware Acceleration #  Cerebras Wafer Scale Engine: Why we need big chips for Deep Learning\nStorage #   Pictured here are 3 hard drives, 2 of which are \u0026lsquo;full size\u0026rsquo; at 3.5\u0026quot; and the the other a \u0026lsquo;laptop drive\u0026rsquo; at 2.5\u0026quot;, the left most hard drive has been opened up, which has certainly ruined it as dust has gotten in. Below the smaller Hard drive is an NVMe ssd, a micro sd card, and a flash drive. All of which are examples of solid state storage\n Permanent storage is rapidly evolving, but the old guard: hard drives and tape storage aren\u0026rsquo;t going anywhere either. But why use one over the other? How do you interact with them in Linux?\n[TODO] mention hdd, ssd, sata, nvme, usb-storage, sd, scsi, u.2, m.2, tape, floppy, zip\nhdparm\nHDDs #  Hard disk drives or \u0026lsquo;HDDs\u0026rsquo; are sometimes called \u0026ldquo;spinning rust\u0026rdquo; because unlike other modern storage devices they\u0026rsquo;re fundamentally mechanical.\nLooking at the delidded hard drive you\u0026rsquo;ll see they\u0026rsquo;re pretty simple in their basic construction: a magnetized needle(s) move across (a) platter(s) and flip bits accordingly. These platters typically spin at 5400 or 7200 RPM, with the faster meaning data can be read and written faster as well. Hard drives generally are not used for speed though, as compared to other alternatives they\u0026rsquo;re extraordinary slow. Instead, they run at \u0026lsquo;good enough\u0026rsquo; speeds for most things- like storing video, music, etc. while being much less expensive than solid state options and with a proven reliability and without suffering from data loss when left without power for long periods of time. That said, just like any storage medium, over time data can be corrupted, so backups are still a must.\nWhen a Hard drive is powered off, the head will typically \u0026lsquo;park\u0026rsquo; off the platter (this is part of why the delidded plater above died, as it parked incorrectly) and transportation should be pretty safe, however, when running and spinning quickly they\u0026rsquo;re pretty fragile, and this is why so many older laptops have dead drives: the gyroscopic effects of spinning something that fast make it resistant to a change in orientation, causing things to scrape, scratch, or otherwise go wrong. Thankfully most 2.5\u0026quot; hard drives have been hardened against this now; however, it\u0026rsquo;s still a good idea to store and run hard drives with as much protection from vibration and shock as possible. In fact, yelling at a hard drive has been shown to hurt performance.\nAt the end of the day, for bulk media storage that you still want to be able to access quickly or for backups, hard drives are still one of the best options.\nMost hard drives connect though either SATA or SAS, with almost all consumer drives being SATA, and enterprise drives using a mix. SAS has some extra features and depending on the drive may be capable of writing an reading at the same time, a nifty trick SATA drives can\u0026rsquo;t do without alternating between the two rapidly.\nFor bulk storage servers you can get insane capacities, and building one yourself isn\u0026rsquo;t all that hard. Here\u0026rsquo;s mine: A modified powervault MD1000 with a hard drive poking out and the computer - being used an archive server - it connects to. It currently is only housing three, 3Tb SAS hard drives.\n For working with hard drives in Linux you\u0026rsquo;re best friend is hdparm lets use it to look at some disks. First we need to pick a disk to look at, running lsblk you should be able to see all the disks on your system, and I\u0026rsquo;ll be looking at my main data drive which is a 3.7Tb drive on /dev/sdg\nThe first thing we should do is get an idea about the disk usage, to do that I\u0026rsquo;ll go to the mount point of the disk on my system ( it\u0026rsquo;s mounted at /run/media/vega/raid despite the fact it\u0026rsquo;s no longer in a raid array, we\u0026rsquo;ll come back to this)\nso first I\u0026rsquo;ll run df -h , that -h on most Linux commands means to make the output human readable, printing things in terms of Gigabytes or Terabytes etc instead of just a raw byte count.\n1 2  Filesystem Size Used Avail Use% Mounted on /dev/sdg2 3.7T 2.3T 1.5T 62% /run/media/vega/raid   Alright, so I already have the disk 62% used, let\u0026rsquo;s give that a closer look by firing up ncdu at the mount point. This will take a little while to scan, the more files the longer it will take. After spending a few minutes to analyze the disk I\u0026rsquo;m greeted with this:\nFrom this you should be able to plainly see that the majority of the hard drive is taken up by Archived files, Music, Games, Videos, and Pictures. Pretty Mundane, but I could easily dive into the Archives and see why they\u0026rsquo;re so big and save myself some space\nNone of this is really all that interesting though, so what about speed? How fast or slow is the hard drive? Now is where hdparm comes in. Reading the man page you\u0026rsquo;ll find the the -T and -t flags both perform disk read bench marks, one cached reads, the other raw, so let\u0026rsquo;s run sudo hdparm -Tt /dev/sdg\nThis gives:\n1 2 3  /dev/sdg: Timing cached reads: 22946 MB in 2.00 seconds = 11492.36 MB/sec Timing buffered disk reads: 556 MB in 3.01 seconds = 184.91 MB/sec   You should immediately notice that cached reads are absolutely insanely high compared to buffered, in reality it\u0026rsquo;s because it was using RAM for cache, and RAM really is that fast. The reads of bulk data on the other hand? A little under 200MB/sec is actually quite fast for a hard drive. Anything between 1-200 is normal. You\u0026rsquo;ll soon see that compared to SSDs though, this is kind of disappointing.\nBut, moving on, another few interesting flags available in hdparm are -g which displays the \u0026ldquo;geometry\u0026rdquo; of the drive: cylinders, heads, sectors, etc., -H for tempature. This begs the obvious question: what are cylinders, heads, and sectors [TODO]\nAnother thing of note is S.M.A.R.T tests, while not exclusive to hard drives, they\u0026rsquo;re particularly useful for them as most hard drives give a lot of warning signs before failing out right. In order to get in-depth S.M.A.R.T info on your drive, you\u0026rsquo;ll likely need to run a test first, after which you can view the results. To do this on Linux you can run\n1 2  yay -S smartmontools sudo smartctl -i path/to/disk   Hard drives, being the last remaining mechancial part in a computer (aside from fans or liquid cooling pumps) are also pretty prone to failure. If you want to avoid this keep vibrations to a minimum (see Shouting in the Datacenter (YouTube)), look for disks that are rated for your use case (being on 24/7, being next to many other hard drives, etc) and check the drives MTBF or Mean Time Between Failure. You want this number to be as high as possible, often something like 1,000,000 hours.\nFinally, a quick note about Western Digital Green drives: Linux eats them. Thankfully you can use hdparm to fix this. From the man page:\n -J Get/set the Western Digital (WD) Green Drive\u0026rsquo;s \u0026ldquo;idle3\u0026rdquo; timeout value. This timeout controls how often the drive parks its heads and enters a low power consumption state. The factory default is eight (8) seconds, which is a very poor choice for use with Linux. Leaving it at the default will result in hundreds of thousands of head load/un‚Äê load cycles in a very short period of time. The drive mechanism is only rated for 300,000 to 1,000,000 cycles, so leaving it at the default could result in premature failure not to mention the performance impact of the drive often having to wake-up before doing routine I/O. WD supply a WDIDLE3.EXE DOS utility for tweaking this setting, and you should use that program instead of hdparm if at all possible. The reverse-engineered implementation in hdparm is not as complete as the original official program, even though it does seem to work on at a least a few drives. A full power cycle is required for any change in setting to take effect, regardless of which program is used to tweak things. A setting of 30 seconds is recommended for Linux use. Permitted values are from 8 to 12 seconds, and from 30 to 300 seconds in 30-second increments. Specify a value of zero (0) to disable the WD idle3 timer completely (NOT RECOMMENDED!).\n Western Digital is trying to redefine the word ‚ÄúRPM‚Äù (arstechnica)\nWhat Is ZFS?: A Brief Primer (YouTube, Level1Linux)\nNon-Posix File Systems (G√∂ran Weinholt\u0026rsquo;s Blog)\nSSD #  Solid state drives, like HDDs, come in many capacites, speeds, and form factors; however, SSDs come in many, many more than HDDs. The primary two of note at the moment are SATA SSDs and NVMe SSDs. Sata SSDs are typically the same size and shape (though sometimes a bit thinner) as the normal 2.5\u0026quot; laptop hard drive; however, some other standards are used such as mSATA (about a half-credit hard in size) and m.2 (a bit bigger than a stick of gum). Unfortunately, the m.2 spec is slightly confusing, with some drives being SATA based and some being NVMe based, and the m.2 slot itself supporting any mix (just SATA, just NVMe, or both), so when getting a drive you need to be careful that your motherboard\u0026rsquo;s m.2 slot and the drive are compatible.\nThe main reason you\u0026rsquo;d want to use NVMe is because it\u0026rsquo;s much, much faster. NVMe drives are often many times faster than their SATA equivilents (usually because Sata is limited to 600MB/s tops), and as of the time of writing, only slightly more expensive, albeit not supported on all systems. Do keep in mind though that NVMe drives will use some of your limited PCI-e lanes, so if you want to add a lot of expansion cards like a GPU, sound card, extra usb ports, etc. you\u0026rsquo;ll need to be careful about that.\nAll SSDs, regradless of type, consist of 3 main parts: The Controller, the NAND, and, if they\u0026rsquo;re not garbage, some RAM. (Seriously, don\u0026rsquo;t buy a DRAM-less SSD)\nAll three of these can make difference to both perfromance and reliability, though honestly, this is one situation where just sticking name brand is probably the best way to ensure you don\u0026rsquo;t get boned. Samsung, Intel, Silicon Power, Kingston, Crucial, Western Digital, Sandisk, Micro, ADATA, and Toshiba should all be safe bets. It\u0026rsquo;s really not worth saving a buck on a no-name brand when your data is at stake.\nIf you do care about the nerdy nitty-gritty, you sholud read about Multi Level Cell Flash (Wikipedia), with the general take away that more levels means more space but worse speeds and durability.\nIt\u0026rsquo;s also worth mentioning that new flash types, controllers, and methods to make things even faster keep coming out. One of the most interesting is Intel\u0026rsquo;s Optane SSDs which use 3D XPoint, which, is fast, very low latency, and more durable than flash, but more expensive. It\u0026rsquo;s actually fast enough that in some exotic systems its\u0026rsquo;s starting to be used as an alternative to RAM that can also keep it\u0026rsquo;s data though a reboot (unlike normal RAM).\nRecovering File Systems from NAND Flash (YouTube, Defcon 28)\nCloud Storage (Some one else\u0026rsquo;s drives) #  This is opinioned guide, so now that\u0026rsquo;s about to show: Dont do it. All cloud storage is is someone else\u0026rsquo;s disks. If you want to use it as a backup sure, but I don\u0026rsquo;t see why- it\u0026rsquo;s much less expensive to just backup the reallly important stuff to a hosted server continually and periodically (weekly, monthly, whatever) backup to some external disks that you keep somewhere else. Not to mention the privacy concerns. Like, really? You want to put allllll your family pictures under the all seeing eyes of Google or Microsoft. Nah. I\u0026rsquo;ll pass.\nIf you reallllly insist, then check out https://www.backblaze.com/cloud-backup.html (I\u0026rsquo;m not affiliated in anyway, nor do I use the service) as it\u0026rsquo;s probably the safest option and they have good recovery options, like sending you a physical hard drive with your data on it.\nBut, seriously, only use cloud for a backup if you have to and never ever ever ever ever use it as a primary storage medium.\nThe cloud is not your friend.\nPortable #  Most fixed disk enclosures (Think your normal, off the shelf portable driver) suck, albeit they can be less expensive. I\u0026rsquo;d recommend getting a portable multi-drive enclosure that runs over whatever the fastest connection you have is (Thunderbolt, USB 3.1, etc.). You can even get usb-\u0026gt;nvme adapters, albeit they have a nasty amount of bandwidth limiting.\nMost off-the-shelf flash drives have ass cooling and will over-heat them selves to death when you use them for things like installing operating systems regularly, so I recommend just getting a bulk pack of cheap, low capacity ones to toss when they finally kick the bucket and a few nice USB-\u0026gt;SATA or USB-\u0026gt;NVME adapter for your main portable storage needs. Failing that, you can always use your phone if you\u0026rsquo;ve got a nice high capacity SD card in it or plenty of spare internal storage. The problem with that is MTP or \u0026lsquo;Media Transfer Protocol\u0026rsquo; is a buggy, slow mess, and there\u0026rsquo;s no other clean way to transfer things from a phone. So ¬Ø\\(„ÉÑ)/¬Ø\nRecuperaci√≥n de datos de ¬µSD nivel: F*cking Master of the Universe. pic.twitter.com/B9egCrW4WJ\n\u0026mdash; ChuxMan Skywalker (@MrChuxMan) July 28, 2020  You might also want to look into Hard Drive Schucking if you\u0026rsquo;re in need of as much storage as you can get your grubby lil\u0026rsquo; r/DataHoarder hands onto.\nThe Past #  Floopy, Zip Disks, and Tape? Really? Yes. And yes, they\u0026rsquo;re still used, so you should probably know at least a little about them.\n[TODO]\nFloppy, Zip, tape\nRAID and Disk Pools #  [TODO]\nZfs, hardware raid, software raid, emulated hardware (bios), etc.\nNetwork Interfaces #   Pictured here are three Network Interface cards or NICs. The three on the left are for WiFi (though some of this form factor may include bluetooth as well) while the one on the right has an ethernet port for wired access. Most computer\u0026rsquo;s will not have a separate card for the wired interface though, as most motherboard\u0026rsquo;s have a wired network interface built in.\nNICs also include the wireless chipset used for connecting to a cell tower and really any radio communication device in general.\nOlder NICs include those used for Dial-Up connections and some obscure wireless methods that predate WiFi.\n  Ethernet #  [TODO] rj45, ethernet over infiniband, speed bases\nWiFi #  [TODO]\nChannels 12, 13, 14. 2.4 v 5, wifi 6, weird authentication, etc\nHigh Bandwidth #  [TODO], infiniband, DMA, 10GbE+, Multigig\nAt the end of the day, nothing is faster than a truck filled with drives. [TODO xkcd link]\nThe Future #  [TODO]\nwifi6, 10gbe rj45 and beyond, cellular, sdr\nThe Past #  [TODO]\ncoax network, infrared, sneakernet\nPower Supply #  The Power Supply Unit or PSU does what you think. It takes power from the wall and turns it into power for the computer. This isn\u0026rsquo;t the chapter on voltage and current, so I\u0026rsquo;ll spare some of the details, but effectively you want a power supply that can deliver plenty of power and that has clean power. A given power supply usually has a rating like \u0026lsquo;500w\u0026rsquo; for 500 watts, but this is usually a bad indicator, as they could be referring to multiple things- you see a desktop power supply usually outputs multiple voltages (-12, +12, +5, +3.3) and each one of those lines will have a different maximum power output. Typically, the one that\u0026rsquo;s most relevant is the +12 rail, as both the GPU and CPU will likely run on that and they\u0026rsquo;re what draws the most power. So, you can actually check just this rail by taking the voltage (+12V) times the max current (amperage) on that line (let\u0026rsquo;s use 20A) to see the max power (so 12*20=240 watts)\nAlso note that the power supply itself may be of varrying quality, with the voltage \u0026lsquo;ripple\u0026rsquo; and the efficiency being important as well. Voltage ripple occurs when the supposed-to-be 12V line instead outputs a signal that\u0026rsquo;s varying a little, so let\u0026rsquo;s say you measure the +12V line and it reads 12.2V now, then a minute later reads 11.8V, that\u0026rsquo;s quite a bit of ripple when you expect a constant +12V. Generally you can trust the power supply is decent about this though so long as the power supply is also pretty efficient. Telling efficiency is easy too, as there\u0026rsquo;s a nifty specification that most PC PSU\u0026rsquo;s have called \u0026ldquo;80 plus\u0026rdquo; and it\u0026rsquo;s rated by a metal-value system, so an 80+ bronze power supply is already (typically) much better than one without the rating, and an 80+ Gold is even better, going on up to Platinum.\nMost PC PSU\u0026rsquo;s are in the ATX format, the same specification used to size motherboards, and the majority of desktops use a standard ATX power supply, though smaller systems may opt for one of the smaller standards such as SFX. Servers typically have their own power supplies which look a bit strange as they\u0026rsquo;re basically the shape of an elongated brick, but they\u0026rsquo;re like that so they can be easily swapped in and out. Often server power supplies are redundant so a new one could be put in while the system is still on in many cases.\nMain takeaway here, if some one is talking about an ATX PSU they\u0026rsquo;re talking about the power supply in a desktop. Often they\u0026rsquo;re (less than safely\u0026hellip;) used in other applications as they\u0026rsquo;re cheap and often easy to find used or salvaged from old systems.\n[TODO] add pictures, ATX 12VO, don\u0026rsquo;t use ATX for lab purpsoses, please.\nCooling #  Blower, air flow vs static pressure, fan size liquid, heat pipes, pwm vs DC control\nPeripherals #  USB #  [TODO] all the annoyences of USB standards\nUSB3: why it\u0026rsquo;s a bit harder than USB2\nKeyboards #  HID or Human Interface Device, is the standard over which most mice, keyboards, and game controllers talk to the computer. Unfortunately, it\u0026rsquo;s also a pretty lame standard. You can\u0026rsquo;t just input arbitrary Unicode or send fancy data back to the keyboard to control fancy RGB lights, because of this it\u0026rsquo;s common to need extra drivers per device\n[TODO]\n5pin din, PS2, USB\nWhat Happens When (Github)\nHere\u0026#39;s a terrible idea for a keyboard that I\u0026#39;m annoyed I didn\u0026#39;t invent first.\nType out morse code by closing your laptop lid! from https://t.co/FfXB2etRUu pic.twitter.com/YMJ5XVm8io\n\u0026mdash; foone (@Foone) April 2, 2020  Chapter 3.1 - How to know what to buy #  [TODO - possibly move]\nChapter 3.2 - Legacy Hardware #  [TODO]\nParallel, Serial, Tape, CD, gameport\nChapter 3.3 - Architectures #  From the README.md file at https://github.com/radareorg/radare2\n Architectures #  i386, x86-64, ARM, MIPS, PowerPC, SPARC, RISC-V, SH, m68k, m680x, AVR, XAP, System Z, XCore, CR16, HPPA, ARC, Blackfin, Z80, H8/300, V810, V850, CRIS, XAP, PIC, LM32, 8051, 6502, i4004, i8080, Propeller, Tricore, CHIP-8, LH5801, T8200, GameBoy, SNES, SPC700, MSP430, Xtensa, NIOS II, Java, Dalvik, WebAssembly, MSIL, EBC, TMS320 (c54x, c55x, c55+, c66), Hexagon, Brainfuck, Malbolge, whitespace, DCPU16, LANAI, MCORE, mcs96, RSP, SuperH-4, VAX.\n Which is only further complicated by:\n File Formats #  ELF, Mach-O, Fatmach-O, PE, PE+, MZ, COFF, OMF, TE, XBE, BIOS/UEFI, Dyldcache, DEX, ART, CGC, Java class, Android boot image, Plan9 executable, ZIMG, MBN/SBL bootloader, ELF coredump, MDMP (Windows minidump), WASM (WebAssembly binary), Commodore VICE emulator, QNX, Game Boy (Advance), Nintendo DS ROMs and Nintendo 3DS FIRMs, various filesystems.\n and\n Operating Systems #  Windows (since XP), GNU/Linux, GNU/Darwin, GNU/Hurd, Apple\u0026rsquo;s {Mac,i,iPad,watch}OS, [Dragonfly|Net|Free|Open]BSD, Android, QNX, Solaris, Haiku, FirefoxOS.\n plus, the above lists are by no means exhaustive. Clearly there\u0026rsquo;s no shortage of CPU architectures (virtual or physical) that can be present on a system which can be running any of a number of operating systems which may use a variety of ways of actually storing the executable instructions, so, let\u0026rsquo;s take a look at what all of this actually means. First, let\u0026rsquo;s start with the different architectures you\u0026rsquo;re likely to run into and what makes them different:\n[TODO]\nFor more information on embedded architectures and in-depth comparisons look at Chapter 14.1. For info on Virtual machines (for hosting Linux or for languages like Java) look to Chapters 8 and 17\n[TODO] note on hackintoshes\nhttps://manybutfinite.com/post/how-computers-boot-up/\n"}),a.add({id:34,href:'/engineering/linux/howwework/',title:"Howwework",section:"Engineering",content:"Chapter 5 - Working on how we work #  The Terminal #  In the world of programming, embedded development, and electrical debugging you will inevitably need to understand how to use a terminal/command line at some point. While the text only interface can look intimidating, it has some clear advantages. Namely it\u0026rsquo;s significantly faster to use the cli or \u0026lsquo;command line interface\u0026rsquo; version of many tools. Because of the nature of this guide you will be using the terminal frequently, so for convince sake information on using it effectively has been moved to Appendix A, I highly recommend you read though it after you finish this page.\nFor now, at bare minimum, I recommend getting autojump (j) setup early as it makes navigating around the terminal much faster, bat makes reading code though cat not suck, and tldr will save you time when you forget how to use tar. Set these up early if nothing else. But really, there\u0026rsquo;s a lot in Appendix A that I think is really cool. Do check it out.\nHeads up, #  With that out of the way, I want to preface this chapter with a big warning: Getting used to everything we\u0026rsquo;re about to do will be a pretty big leap. There\u0026rsquo;s a good chance you\u0026rsquo;ve never used a computer that works in a way like we\u0026rsquo;re going to be setting up, but it\u0026rsquo;s what I and many of my friends use daily and for good reason. This is probably where more opinions are going to show than anywhere else.\nI\u0026rsquo;m not going to repeatedly state how to install packages on Arch, so here\u0026rsquo;s your lil' guide:\nyay followed by the name or description of a package you want will help you find most packages. For example, running yay i3 wm will come up with multiple numbered results.\nHere I could type 2 followed by pressing enter to install i3-wm. Note that whenever possible, you should prefer packages in core, community, or extra. (or any other repositories you\u0026rsquo;ve added to your /etc/pacman.conf file) over the AUR, as packages in the AUR are maintained to a slightly lesser standard and are often a bit more annoying to update. That said, the AUR is still much better than trying to download a package from some random webpage.\nAlso keep in mind yay is a wrapper for pacman and can download AUR packages (pacman itself can\u0026rsquo;t), but you can always still use pacman directly. Just keep in mind that while yay will call sudo for you internally to request your password, pacman requires it up front, so to do most operations you\u0026rsquo;ll actually need to use sudo pacman.\nSpeaking of, the basic operations you\u0026rsquo;ll need to do with pacman:\nsudo pacman -Syu will run an update, but just using yay is usually better as it will update things in the AUR as well.\npacman -F name-of-program-here will let you know what package provides what program. For example pacman -F lsblk will tell me that the lsblk command comes from the util-linux package.\nsudo pacman -R name-of-package will let you remove a package\nFor more info, read the ArchWiki page on Pacman and the AUR.\nCode editors #  People get defensive about the way they work, and frequently try to claim the way they work is the best way. I of course know that my way is the best üòâ. Really though, it\u0026rsquo;s mostly a matter of settling down into a good workflow and getting very fast with it.\nI have three recommendations for code editors, as silly as that may seem.\nThe first two are terminal based nano and vim\nnano, is the most simplistic of all the editors I\u0026rsquo;ll list here. It\u0026rsquo;s stupid simple to use and for quick just opening a text file and changing one line, probably the fastest. It clearly prints it\u0026rsquo;s instructions at the bottom of the terminal:\nwhere ^ is the ctrl key, and M the alt key. However, you\u0026rsquo;ll quickly find nano rather limiting. You\u0026rsquo;ll still probably need to use it when you\u0026rsquo;re stuck with only having command line access though. That brings me to my second recommendation, vim (or ox). Unfortunately, vim is notoriously difficult to use, to the point that trying to exit vim is a bit of a joke (it\u0026rsquo;s esc‚Üí:wq) this tutorial is pretty good though, and if you want you can get some really nice extensions for vim, or full on plugin packs, like spcaevim.\nOf course, you probably don\u0026rsquo;t want to always use a terminal-based text editor (though you should be able to when you have to) so what\u0026rsquo;s good graphically?\nDespite it being a Microsoft thing, I really recommend Visual Studio Code with Platform IO(1), Bracket Pair Colorizer 2, and GitLens. If you\u0026rsquo;re looking for more extensions than that, there\u0026rsquo;s also a version of Asciiflow for VSCode, and plenty of extensions for live rendering graphical code (live-p5, glsl-canvas, Processing Language). If you\u0026rsquo;re not okay with Microsoft living in your editor, you can grab vscodium instead.\nThis gives you a pretty kick butt editor on par with most full Integrated Development Environments (IDE). I recommend you try out IDEs, especially if for some unholy reason you want to write in Java, but otherwise this will do fine.\nThere are of course a ton of other options, Emacs, Atom, Eclipse \u0026hellip; If what I recommended doesn\u0026rsquo;t suit you, feel free to look into these. Regardless, a text editor should be pretty high up on your list of things to get setup, as it will make the latter steps much easier.\nAlright, some disclosure. I don\u0026rsquo;t really use Vim. I only use nano and VSCode. This is because if I really need to edit something in a CLI (so on a remote server or when first getting a system running) it\u0026rsquo;s almost always the case that it\u0026rsquo;s either a quick n' dirty config file edit that nano is fine for or something complicated enough to justify the annoyance of bringing the file off the server, using VSCode, then uploading it again. Often, I don\u0026rsquo;t even need to do that though, as I\u0026rsquo;m able to edit the file in VSCode using VSCode\u0026rsquo;s Remote Development plugin or just connecting with sshfs. That said, I did still learn vim well enough that I can use it if it is the only editor available, and do still recommend learning it as in a lot of professional contexts the servers will not have these modern conveniences.  The Desktop Environment #  This is the biggest change, I\u0026rsquo;m going to recommend switching from KDE, which we installed when we setup arch, to i3-wm. i3 is a tiling window manager, this means it looks something like this:\nThis is a screenshot of i3-wm with 4 windows open: two instances of Typora (the program I\u0026rsquo;m writing this in), and a file manager (Thunar), a terminal (deepin-terminal-gtk) running ncmpcpp which is what I use for music. The Typora windows are being tabbed by i3 (it\u0026rsquo;s a bit hard to see, but there\u0026rsquo;s two big tabs at the top of the Window). What\u0026rsquo;s cool about i3 is how it will always use space as efficiently as possible by tiling the windows, and you can navigate between the windows (or multiple monitors) entirely by keyboard (mouse still works obviously) and open multiple virtual workspaces. When programming and using a computer for advanced things it\u0026rsquo;s not uncommon to have a dozen windows open and having things organized like this can be a life saver. Plus, as I showed with the typora tabs, programs can also be tabbed instead of tiled, so I could have one tab of firefox, one of typora, and one of a terminal, so they\u0026rsquo;re all still maximized but I can get between them quickly, and these tabs can be mixed with the tiles, as in that screenshot.\nAlright, so i3-wm is great, right? Well yes, but\u0026hellip;\ni3, when first installed, is very, very minimal, it will greet you with a plain black bar and clicking with either mouse button anywhere will do nothing. You should, however, be able to open a terminal by using your modkey (probably the windows or alt key) and enter.\ni3 actually comes in a bunch of separate parts, the most important of which are the window manager itself, the status bar, and the task runner.\nThe window manager is the thing that actually manages the windows, this is the part most people are referring to when talking about i3 (assuming they\u0026rsquo;re not talking about an i3 Intel CPU) and is sometimes refereed to as i3wm. A very popular \u0026lsquo;fork\u0026rsquo; of i3 is i3-gaps which is available in the community repository. It just addes slight gaps at the edge of the screen and between tiled applications for visual clarity. You can customize these gaps to be how ever big or small you want.\nOn top of the raw window manager you\u0026rsquo;ll probably want a status bar of some kind. While the default i3bar which is included with the i3-gaps package is fine when paired with i3status, it does leave a bit to be desired. Many other options are available. I personally use polybar though I have friends that have used lemonbar or i3blocks.\nFinally you\u0026rsquo;ll want a runner/application launcher. While i3-demu is the default, I find it rather annoying to use, and much prefer rofi \u0026ndash; this is much better explained here than I can briefly: https://github.com/davatorium/rofi\nTo further make i3 reasonable to use you\u0026rsquo;ll want a few more things:\npicom is a composite manager. This is used to allow application to have some transparency, prevent screen tearing, and does slight effects, like a shadow behind windows. (You may also see this referred to as Compton, picom is the replacement for Compton)\nlxappearance-gtk3 can be used to set the theme used by various graphical applications. I use Sweet but there are nearly endless options\nFor setting the wallpaper (which you probably wont see much) you can use nitrogen or feh.\nif you have multiple monitors before setting the wallpaper though you\u0026rsquo;ll probably want to arrange your monitors correctly, for this you can use xrandr , read the man page for more information. You can add the command you use to set up your displays to your i3 config file to apply them at each reboot. If you\u0026rsquo;re having issuse with xrandr you may want to use arandr to make the initial config file.\nif you have a high resolution monitor and things are small, you may want to look here: https://wiki.archlinux.org/index.php/HiDPI , the best thing from this is to add the text on the right to your /etc/environment file.  1 2 3 4  QT_QPA_PLATFORMTHEME=qt5ct QT_AUTO_SCREEN_SCALE_FACTOR=1 GDK_SCALE=2 ELM_SCALE=1.5      You\u0026rsquo;ll be needing quite a few different utilities beyond this. for a terminal I highly recommend kitty, rxvt-unicode, or Alacritty, though I actually use deepin-terminal-gtk.\nFor fonts you\u0026rsquo;ll certainly have your own tastes, but I really like Droid Sans Mono, which is in ttf-droid, but ttf-hack and otf-fira-code are pretty cool too. I also recommend installing noto-fonts, noto-fonts-extra, and ttf-font-awesome. The noto packages will provide coverage for weird characters and font awesome is basically icons saved as a font, and many open source projects use it. You\u0026rsquo;ll also probably want nerd-fonts-complete which is in the AUR.\nActually configuring i3, polybar, etc. #  Alright, so I just spit a lot of information at you, let\u0026rsquo;s put some of it to use.\nThe first thing we need to do is get everything installed. If you followed the install guide in Chapter 2, you should have either installed ssdm and kde or lightdm and mate. I had you start with those because they\u0026rsquo;re at least somewhat familiar to most people in how they work. Fortunately, display managers like ssdm and lightdm will let you choose the environment you log into, so for now we can leave everything in place, and just login to it later.\nI\u0026rsquo;m going to give the list of what I want when I get a system set up, you probably won\u0026rsquo;t use all of these right away, but you\u0026rsquo;ll likely need them at some point. Before you do this though, make sure you\u0026rsquo;ve enabled multilib in /etc/pacman.conf, and update (just run yay).\ni3-gaps, rofi, picom ,polybar(AUR), lxappearance-gtk3, kitty, deepin-terminal-gtk, polkit-gnome, thunar, nautilus, mpd, ncmpcpp, evince, vivaldi, vivaldi-ffmpeg-codecs, firefox, pavucontrol, krita, libreoffice-fresh, nomacs, feh, typora (AUR), gparted, deepin-screenshot, audacity, vlc, kicad, obs-studio, wine, firewall-d, zsh, tldr, autojump (AUR), bat, lsd, duf, htop, progress, youtube-dl, hexyl, fzf, optipng, jpegoptim, speedcrunch, caffeine-ng, redshift\n if you want to game, you\u0026rsquo;ll probably want steam too. I recommend using steam-native-runtime and installing steam-fonts. Steam also provides \u0026lsquo;proton\u0026rsquo; which is like wine on steroids. It makes a huge number of Windows games work with no added effort.\n What are all of these things???    Name Use     i3-gaps The thing that tiles and tabs windows, draws the title bar on windows, handles window open/close events, resizes windows, etc. Literally the Window manager.   rofi The \u0026lsquo;runner\u0026rsquo;, opens a window for you to type the name of a program you want to run into   picom The \u0026lsquo;compositer\u0026rsquo; - prevents weird graphical bugs, lets you use transparency and shadows, etc.   polybar provides the bar at the bottom of the screen   lxappearance-gtk3 Lets you change the theme of graphical programs   kitty Terminal emulator   deepin-terminal-gtk Another Terminal emulator   polkit-gnome allows graphical programs to request your password   thunar file manager   nautilus another file manager, a bit slower to use but handles remote connections well   mpd the \u0026lsquo;sever\u0026rsquo; side of the music player I like   ncmpcpp the \u0026lsquo;client\u0026rsquo; side of the music music player I like   evince pdf++ viewer   vivaldi my web browser of choice   vivaldi-ffmpeg-codecs lets you watch youtube videos without the browser shitting itself   firefox spare web browser. Trust me. You want two.   pavucontrol volume control   krita art program   libreoffice-fresh Word, Excel, etc. alternative. Can open word docs.   nomacs good image viewer, with some editing capabilities   feh minimal image viewer   typora markdown document editor   gparted storage manager (reformatting hard drives, etc.)   deepin-screenshot Screenshot with some editing built in.   audacity audio editor   vlc media player (video++)   kicad PCB design software   obs-studio screen recording++   wine run windows programs on Linux. do not use this for driver software, bios updates, etc.   firewall-d Firewall service and config program   zsh shell, better than bash   autojump make shell navigation faster   bat better in-terminal file preview   lsd better in-terminal file listing   duf quick disk usage viewer   ncdu disk usage analyzer, find what\u0026rsquo;s filling your entire disk   htop like Task-manager on steroids   progress view progress of a running terminal app   youtube-dl download videos/gifs from basically any website   hexyl hex-dump file   fzf dependency for many other things, useful to make quick terminal menus   optipng \u0026amp; jpegoptim lossless shrink of image file sizes   speedcrunch fast to use calculator program   caffeine-ng ability to turn off screensaver/suspend from tray   redshift bluelight filter to prevent your eyes from bleeding       This might work, but also might not, installing packages in bulk fails sometimes\n[TODO] one-liner install with \u0026ndash;needed\n First things first, lets get switched over to zsh and setup oh-my-zsh and autojump.\n[TODO]\nPop open your text editor to work on your ~/.config/i3/config file, and go ahead and open up the i3 User\u0026rsquo;s Guide in a browser for reference. We\u0026rsquo;re gonna get cookin'.\n[TODO]\ninside your i3 config file you may want to set specific actions to take place based on a window\u0026rsquo;s name (bind all social applications to a social workspace for example) to do this you\u0026rsquo;ll need to get the windows class using a tool like xprop\nCustomization Resources #  If you\u0026rsquo;re looking for more ways to make your setup the best it can be or config files you can steal from check out r/unixporn.\n[TODO] https://github.com/mjswensen/themer\nThe Physical Environment \u0026amp; Hardware #  Working on a laptop with a mushy membrane keyboard is totally fine for some people, but when you\u0026rsquo;re deep into some complicated work having the best possible setup can save a lot of time, frustration, and mental overhead.\nFurthermore, the work environment can change how long you can work for and how productive your work time really is. Be it for comfort or productivity, there are many reasons to take care in making sure you\u0026rsquo;re setup is right for you.\nIf you are on a laptop some of the following is still applicable, but consider how any of what I\u0026rsquo;m about to mention may be adapted to your own setup.\nDisplays\nThe way you use your monitor is more important the monitor itself. Don\u0026rsquo;t get me wrong, if you have an 11\u0026quot;, 4:3 aspect ratio monitor running though VGA there\u0026rsquo;s a limited amount you can do, but there\u0026rsquo;s still some things.\nFirst and foremost is positioning. I\u0026rsquo;ve helped many a office worker complaining about neck and back pain simply by raising their monitor closer to eye level. Ideally you want your eyes to naturally rest right on the on the top 3rd line of your screen, about the level where the left-most knob is on the wallpaper on my right-most monitor in the picture above.\nUnfortunately, there is no magic rule for how far away your monitor should be from your face, as this highly depends on your vision, monitor\u0026rsquo;s resolution, and size\n on this note, you\u0026rsquo;ll often hear monitors described by their dots per inch, this is a measure of the number of pixels in a square inch on the screen, the higher this is the finer the details, but the smaller any given element on screen will be. Apple\u0026rsquo;s Retina displays for example have a high DPI rating, which is a large part of the reason they look so good\n I personally have my three, 4k (that\u0026rsquo;s 3840x2160, or 4 times the resolution of 1080p) monitors positioned approximately 30 inches from my eyes.\nBefore moving forward though, I think it would make sense to talk about some of this display terminology. With that, I present far too much information condensed into one box:\nAspect Ratio Aspect ratio is the ratio is the ratio of the width to the height of the screen, most modern screens are 16:9, or have 16 units of width for every 9 units of height. Most older displays, often now called square screens, are actually 4:3. Many people actually still prefer this for the extra vertical room it affords at a given size, and some laptops are actually moving back to a more \u0026lsquo;square\u0026rsquo; aspect ratio. On the other hand more exotic ultra-wide displays are also coming out\nSizing of displays is a bit odd. A 27\u0026quot; 16:9 display, is not the same size as a 27\u0026quot; 4:3 display as displays are measured diagonally.\nResolution Resolution of a display refers to the number of pixels, HD technically starts at 720p, or 720 pixels across, though this is generally rather low by modern standards, with acceptable usually considered 1080p, which is technically 1920x1080. You may also see 1080i, this is a strange concept, not actually related to resolution, but more to refresh rate. Interlaced Video (Wikipedia)\nQHD is 1440p and 4k (ignoring the mess of naming there) is usually 2160p. I recommenced against 1440p unless the system is mostly for gaming, as scaling from most content that is in 1080p to 1440p is awkward compared to the direct 2x scaling with 1080p to 2160p\nInterface The interface on your display matters greatly as well, the most common at the are HDMI, Display Port, DVI, and VGA\nVGA is the worst option here, as it\u0026rsquo;s an analog signal. This means the signal can do strange things, getting corrupted between your computer and the monitor. Typically this is a blue, screw in connection with many pins\nDVI is still pretty common and looks like an even larger VGA connection, with a typically white, screw in connector. This signal is normally digital, though there is a varient of DVI that can be adapted into VGA. Of note, DVI can also be adapted to HDMI though you will not have audio, as DVI does not carry sound\nHDMI, probably the most well known connector, has multiple revisions, the revision determines many things such as the maximum resolution, refresh rate, and weather or not more obscure things such as HDR are supported. HDMI is usually considered the best of these three options\nTaking the crown however, is Display Port (DP). Like HDMI display port does have multiple revisions which do differentiate similar things; however, Display Port will generally support high resolutions and more features at any given point. Assuming you\u0026rsquo;re running a bog-standard 60hz 1080p display however, you\u0026rsquo;ll find no difference between DVI, HDMI, and DP - unless you need sound.\nRefresh Rate Next, you\u0026rsquo;ll want to note the refresh rate of your monitor. This is how many times per second your monitor refreshes the screen. Typically monitors run at 60hz and TVs at 30 or 60. Because unlike a TV you\u0026rsquo;re causing things on screen to change though, 30hz is generally considered bad and can even cause motion sickness. While 60hz may be standard, going for something even higher, with many displays offering well above 120hz, is something you may want to consider, especially if you plan on gaming.\nNewer displays may support Freesync or Gsync, and both of these technologies require a supported graphics card in the system as well. These allow the display and computer to adaptively change the refresh rate so the monitor and computer both send and display frames in sync, which can make even a low refresh rate \u0026lsquo;feel\u0026rsquo; much higher. This is a feature typically marketed to gamers and only supported in video games, but this has been changing. Gsync monitors generally have a much better implementation of the technology but it requires an Nvidia graphics card. As of the time of writing both Freesync and GSync are supported on linux, but quite rough around the edges.\nLatency Related to refresh rate is latency. In general this can actually mean two things, one is how long it takes for an image sent to the screen to actually be displayed. The lower this time the better, with good screens being sub 10 millisecond. Unfortunately, there\u0026rsquo;s no standard among the industry to measure this and many get it wrong.\nAlso with latency there\u0026rsquo;s grey to grey times, this is a measure of how long it takes a pixel to go from one shade to another. The lower this is the less motion blur the screen will exhibit.\nColor Depth The color depth of the display determines how precisely a color may be displayed. The higher this is the better, but almost all modern displays will be the same, and unless you\u0026rsquo;re an artist or creative professional you\u0026rsquo;re unlikely to notice a difference\nOn the other hand, you are likely to notice the color gamut or what range of colors the display is actually capable of displaying.\nFor example, two displays may both be capable of displaying 255 levels of red, but if one display\u0026rsquo;s range is only from a dingy red to a dark-ish red, while the other is from a brilliant red to a deep dark red, there\u0026rsquo;s a massive difference in color availability. If this is important to you, notably as a creative professionally in photo or video, you may want to read more at https://en.wikipedia.org/wiki/Gamut\nDynamic Range The next obvious thing to mention is dynamic range, or how deep the blacks are and how vivid the whites are. Again, this is simple, the higher the better. Many display types (LCD, TN-Panel) will have similar specifications in all these areas, but particularly here. OLED is probably the best when it comes to dynamic range as it can display true black by actually turning the source of the light off, but unfortunately these are quite susceptible to burn in and image persistence.\nActually, display technology overall (OLED, LCD, TN, CRT, etc.) will have more of an impact than anything else. But, this is also getting really into the weeds, and I don\u0026rsquo;t want to recommend one technology over the other since depending on many other factors on each display theres no clear winner, as everything is a trade off - OLED is probably the best as it can display true black by actually turning the source of the light off, but it suffers from bad burn in, plus moving the image quickly can result in a \u0026lsquo;purple smear\u0026rsquo; - something you may have noticed when scrolling though images on your phone. You probably won\u0026rsquo;t find an OLED monitor for sale anyways because of this. Great for movies, but when you have un-changing elements on screen for hours at a time it\u0026rsquo;s not ideal.\nThere are some newer displays which feature HDR or High Dynamic Range, which allows the panel to selective change the brightness in an area of the screen, giving much better dynamic range in supported applications than a normal display\nBurn in burn in and image persistence are both negative effects on many displays where a pixel either permanently or temporarily resists change in color. This can lead to being able to read previously displayed bright white text on a now black image for example. More commonly you\u0026rsquo;ll find TVs which have a particular station\u0026rsquo;s logo \u0026lsquo;burnt in\u0026rsquo; to one corner of the screen, persisting even after changing channelsBrightness Brightness is obvious, how bright or dim is the display. The big thing to note here is weather the brightness is PWM or DC controlled. Displays with PWM controlled brightness are much more common, however, it\u0026rsquo;s a bit of a cheat. Instead of actually changing the intensity of the back light directly, they\u0026rsquo;re simply strobing the light on and off to fast for the eye to see. This can cause eye strain over time though, and generally DC control, which actually does change the brightness directly is preferred. If you have a PWM display and don\u0026rsquo;t mind it at full brightness, this should help with eyes strain, as there is no longer a strobe effect as the display\u0026rsquo;s backlight is just constantly on.Subpixels Finally, if fonts look bad on a screen, it may be due to Sub-pixel rendering. Basically, while most screens pixels go R-G-B in order, not all do. To make text look sharper, most font renders will try to abuse this sub-pixel order to get sharper-than-pixel fonts. This is adjustable in lxappearence on Linux, and should be handled by setting up \u0026lsquo;ClearType text\u0026rsquo;. clearly there\u0026rsquo;s a lot to be considered here. A no compromise monitor can cost thousands of dollars, but nice 4k 27\u0026quot; monitors like mine can be found for \u0026lt;250 on sale, and I love them. Just figure out what you need and what would be the most beneficial for you and work from there.\n One of the great things about i3 is how powerful it can be with multiple displays, though even if you\u0026rsquo;re not using i3 having a \u0026lsquo;multi head\u0026rsquo; setup can be a god send for productivity. Even if your monitors don\u0026rsquo;t match it\u0026rsquo;s worth it. If you have the budget to get two matching monitors, great, if not just getting a cheapo used monitor from a thrift store will be a massive improvement. I think 2 is the magic number for most people. 3 monitors take up a lot of room and unless you do some very multi-tasked things you won\u0026rsquo;t see much benefit that using something like i3\u0026rsquo;s workspaces wouldn\u0026rsquo;t provide anyways.\nAnother thing to mention is red-light filters. While I dont personally use one many people find that reducing the amount of blue light coming from their displays significant helps with eyestrain. If this interests you give redshift a shot. I use it every now and then if I have a headache.\nKeyboard\nProbably the most important thing you can do for your workspace is getting a nice keyboard. If you\u0026rsquo;re rocking a rubber dome or membrane keyboard, moving to a mechanical keyboard will make a massive difference.\n(source)\nThe membrane/rubber dome keyboard on the left doesn\u0026rsquo;t give much physical feedback to your fingers when you press a key, compared to the mechanical key switch on the right. A decent mechanical keyboard can be found on amazon for \u0026lt;50 USD, though as with anything in life the more you spend the better the product. One thing to keep in mind is the color of the switch used. Above you can see that keyboard has blue switches, blue switches have a noticeable \u0026lsquo;bump\u0026rsquo;, that is the switch has a spot of higher resistance before it actually bottoms out, and the key actually presses at this point, furthermore, blue keys are clicky - they are loud and some people find this annoying. Finally, they\u0026rsquo;re also pretty light, not taking too much force to push down. Generally, blues are considered the \u0026lsquo;gold standard\u0026rsquo; among typist, but games on the other hand may prefer a brown, red, or black switch.\n    Linear Bump Bump + Click     Light Red Brown Blue   Heavy Black Clear Green     these are the common colors and how they feel for Cherry MX switches. Most other mechanical switches are \u0026lsquo;clones\u0026rsquo; of MX switches- though sometimes these clones are actually superior- but these clones don\u0026rsquo;t always follow this chart\n really it\u0026rsquo;s all a matter of preference, I\u0026rsquo;m actually using a switch not listed here on my keyboard, but generally finding what you like among the above first is a good place to start. If I\u0026rsquo;m not using my main keyboard I generally use Blues. If you\u0026rsquo;d like to try some out before pulling the trigger on a full keyboard you can find switch test boards for sale online.\nFurthermore, there are other types of switches like IBM\u0026rsquo;s old Model M line which use a buckling spring, which are quite stiff and have a very unique, heavy feeling. If you don\u0026rsquo;t want to use a 20 year old keyboard Unicomp makes clones that are quite nice.\nYou should also consider they layout of your keyboard. Some people absolutely need a number pad while others are happy to omit it and have the shorted hand travel to their mouse. Even still others want an extravagant number of keys or a weird split keyboard like mine: This is a custom built ErgoDone keyboard, The Ergodox-ez can be purchased for ~300 USD, or you can build one like mine for a bit under 200\n r/Mechancial Keyboards is a good place to go for inspiration and more information\nBeyond the physical layout you may also consider the keymap or software layout. Not only does my keyboard look weird, but the keys aren\u0026rsquo;t arranged as you\u0026rsquo;d expect either. Instead of typing in QWERTY, I actually use Dvorak. That layout looks a like this on a normal keyboard:    though obviously anything is possible. A lot of programmers like to disable their Caps key for example and put something more useful there, or you may just want to move around a letter or two. Using a standard layout like Dovark is a bit easier though as I can easily load my keymap pretty quickly on any computer. Plain old Qwerty is fine, but I personally like my \u0026lsquo;weird\u0026rsquo; keymap.\nIf you\u0026rsquo;re shelling out big bucks on a nice keyboard anyway, you may also want to get a keyboard which supports QMK, a completely open source firmware which gives you total control of your keyboard, allowing you do to cool things like type greek letters ( Œ© , Œ±, Œ≤) or type parentheses by tapping the shift keys. I find that particularly helpful as my keyboard doesn\u0026rsquo;t actually have enough keys to do have every key nicely available (note how I don\u0026rsquo;t have a function row) for more info check out https://docs.qmk.fm/#/ . You can actually buy an adapter to use a normal keyboard with QMK, but it\u0026rsquo;s a bit hack-y and I really recommend just saving up to get a full keyboard made for it.\nBack to ergonomics, you\u0026rsquo;ll want to make sure your keyboard is a t a comfortable height for you and that you can type in a way that isn\u0026rsquo;t putting your wrists at any weird angles\nFinally, one of the nice things about i3 is the ability to navigate everything entirely from the keyboard as well as bind as much as you want to as many keys as you\u0026rsquo;d like. Want a key combo to launch a file manager? easy. Want a key to navigate to open up a terminal and immediately run a command- no problem. Set things up as you like and enjoy being able to use your system at break neck speed while everyone else drags things around slowly.\nMouse and other input\nSpeaking of dragging things around slowly: The mouse\nSound\nNoise isolation both electrical and physical, headphone types (over, on, in), amplifiers, dacs, ASIO/ sound hardware, connection types\nThe Desk and Chair\nLighting\nAir Quality\nThis Is Your Brain On Stale Air (YouTube)\nVarious Programs: #  Markdown\n[TODO]\nMarktext, Typora, colabrative editing, Github markup, etc\nTaskwarrior \u0026amp; Timewarrior\n[TODO]\nTaskweb\nFile Explorers \u0026amp; Storage Managment\n[TODO]\nRanger, Thunar, Nautilius, Baobab, Gparted\nif you use Nautilius, you may want to run\n1  dconf write /org/gnome/nautilus/preferences/always-use-location-entry true   so that the file paths are displayed in full\nMedia (Music, Video, PDF,)\n[TODO]\nOffice \u0026amp; Creative Software\n[TODO]\nMasterplan\nhttps://github.com/climech/grit\nLibreoffice\nKrita\nAudacity\nDAW? QJackCTL?\nOBS\nKiCad\ndarktable\nEvince\nFeh, nomacs\nWine\nBoxes- vm\nasciiflow\nPackage managment\n[TODO]\nPamac, Steam, AppImg, itch.io, dpkg, snap.\nmaintaining an aur package, pacman conf stuff\nWeb and network protocols\n[TODO]\nVivaldi, Firefox, Syncthing, Beaker, IPFS, IRC - irssi, Telegram, Etherape, Wireshark, gufw,\nGoogle Images Restored\nhttps://nyxt.atlas.engineer\nShell Scripts\n[TODO]\nTools for accessibility #  https://joshwcomeau.com/accessibility/hands-free-coding/\nLil' shoutout\nI\u0026rsquo;ve stolen a lot of config files from r/UnixPorn and other websites over the years, but I\u0026rsquo;d espically like to highlight https://twily.info as twilly actually helped me out a lot when I was a total noob and even helped me steal her website to make my own clone of it at one point\nPlatfromIO is for working with embedded hardware like Arduino or STM32, etc. Unfortunately, it opens an annoying screen at start up. This can be disabled, but at least in the past this has caused other issues for me. If you do work with embedded hardware though it's still by far the best option as the normal ArduinoIDE is absolute trash. "}),a.add({id:35,href:'/engineering/linux/linuxdirtree/',title:"Linuxdirtree",section:"Engineering",content:"Chapter 4 - Getting Rooted In Linux #  We\u0026rsquo;ve been using file in /proc and /dev throughout this, but we never really looked to see what else is in there. Let\u0026rsquo;s do that.\ngo ahead and open up a terminal and run\n1 2 3 4 5  ‚ï≠‚îÄvega@lyrae ~ ‚ï∞‚îÄ‚û§ cd /dev ‚ï≠‚îÄvega@lyrae /dev ‚ï∞‚îÄ‚û§ ls [Very, Very Long Output here]   Alright, I know what you\u0026rsquo;re thinking.\nWhat. The. Actual. Fuck.\nAnd honestly, yeah. But first, lets talk about what we just did.\nPermissions #  if you run ls it normally shows you the all the folders, shortcuts, and files in a directory, except it excludes any hidden files. In linux you can make a file or folder hidden simply by naming the folder with a \u0026lsquo;.\u0026rsquo; at the beginning, so naming a folder .nsfw will mark it has hidden. Hidden doesn\u0026rsquo;t really mean much though as most file managers allow you to view hidden files/folders by checking a box, and in this case, we can see hidden items by using the -a flag for ls. running man ls you\u0026rsquo;ll see the -a flag just stands for \u0026lsquo;all\u0026rsquo; and does exactly what I\u0026rsquo;ve said.\nfurther down you\u0026rsquo;ll see the \u0026lsquo;-l\u0026rsquo; flag gives a \u0026ldquo;long listing format\u0026rdquo; which is an almost impressively bad description. This means that on each listing will be displayed like this:\n1 2 3 4  Permissions numOfLinks owner group size month date time name example: drwxr-xr-x 2 vega vega 4096 Jul 7 2018 Documents   So let\u0026rsquo;s break that up further. Linux permissions are incredibly powerful, and are set up like this\nd rwx rwx rwx , the d, or lack there of, species weather a file is a directory (folder) or file.\nLess commonly you may see l, c, or b, as we do here in the /dev folder.\nl is the easiest to understand, it\u0026rsquo;s a link or shortcut. That\u0026rsquo;s why you\u0026rsquo;ll see an arrow pointing to where it leads at the end\nc is a character special file, b is a special block file.\nFinally, you may also see either p or | here for named pipes- more about that in a bit too.\nThere are other possibilities here two, of which you can learn about by running info ls\nThe vast majority of the time you will only see d for a director (folder) or - designating a file though.\nMoving on to the rwx blocks, these stand for read, write, and execute respectively and each block in order states the permission of the owner of the file, those that are in the same group as the owner, and everyone else, for this reason these permissions will almost exclusively be set such that permissions are lost with each level, for example a file with\n-rwxr--r-- , is a file (no d), which may be read, written, or if it is a program ran (executed), by the owner, but by anyone else in the same group as the owner or anyone else on the system may only be read.\nThat\u0026rsquo;s why it repeats 3 times, there\u0026rsquo;s three access levels- Owner, Group, and Everyone Else. This mostly harkens back to when Linux boxes were shared servers at a university or business that everyone would remote into. You might want a file to only be modify-able (rw-) by you, only be readable (r--) by people in a shared group (Say, other students of the same class at a University or other managers at a business, etc.), and not even readable by others (---), this would give that file a total permission string of -rw-r-----. There are other uses of groups on systems too, usually for assigning who has access to hardware, like you may find that your user is in group called \u0026lsquo;audio\u0026rsquo; if you run the groups command.\nSo if we changed the permissions on that python file we wrote back in Chapter 2 to be this then while anyone else could see the code, they couldn\u0026rsquo;t run it without making a copy.\nwith that let\u0026rsquo;s skip over the number of links, as I\u0026rsquo;ve never found it particularly useful and jump to the owner and group fields. The owner of a file is a single user, usually the one who created it. The root user is often the owner of important system files, which is why we have to temporarily use root account when we do many admin actions, such as updating or installing programs using sudo.\n(note, yay calls sudo automatically and you should NOT run yay with sudo)\nNext is size, this is pretty self explanatory, as its just the size of the file. Directories do take some space on the disk as they have to store the bit of their own permissions, name, and so on. On this note, directories are a bit strange in regards to the \u0026lsquo;execute\u0026rsquo; flag that was previously mentioned. On a directory, rather than stating if a user can execute a directory (this wouldn\u0026rsquo;t make any sense!) it says weather or not a user can see what\u0026rsquo;s in the directory at all, almost like a lock on a file cabinet.\nNext is the file modification time, finally followed by the items name, both of which are self explanatory.\nTo round this off we need to talk about how to change these permissions using chown and chmod\nchown, as the name implies, changes the owner, note, you need to also have permission to change the owner, so often times this require using sudo as well.\nFor example running\n1 2  ‚ï≠‚îÄvega@lyrae ~ ‚ï∞‚îÄ‚û§ sudo chown vega:vega someFile   would change both the owner and group to me, vega (assuming I exist on your system)\nbut what if you want to change every file in a directory?\n1 2  ‚ï≠‚îÄvega@lyrae ~ ‚ï∞‚îÄ‚û§ sudo chown -R vega:vega someFolder   the -R flag (Recursive) means to apply the change to every sub folder and directory\nUsing chmod is pretty easy too, though there are two ways to use it.\nThe first, which is easier to understand is with direct flags such as\n1 2  ‚ï≠‚îÄvega@lyrae ~ ‚ï∞‚îÄ‚û§ chmod +x on a file to mark it as executable   The other uses the octal system to set flags. Octal has 3 bits:\n   Octal       Octal Binary Permission   0 000 \u0026mdash;   1 001 \u0026ndash;x   2 010 -w-   3 011 -wx   4 100 r\u0026ndash;   5 101 r-x   6 110 rw-   7 111 rwx    Now, you should notice some of those options are nonsenes? being able to write to a file you can\u0026rsquo;t read? being able to execute a file you can\u0026rsquo;t read? In practice this leads to only some of these being used, but I digress to use these in chmod simply run\n1 2  ‚ï≠‚îÄvega@lyrae ~ ‚ï∞‚îÄ‚û§ chmod 764 someThing   which would set permissions to -rwxrw-r\u0026ndash;\nFinally one last oddity. Using ls -la you\u0026rsquo;ll see two more files that are very strange one named \u0026lsquo;.\u0026rsquo; and another \u0026lsquo;..\u0026rsquo; ; \u0026lsquo;.\u0026rsquo; is actually the current folder, as bizzare as this sounds, effectively when you run a command with \u0026lsquo;.\u0026rsquo; as an argument it is replaced with the full path to the current folder. In practice this isn\u0026rsquo;t used much, but it means running something like cd . just takes you nowhere. I assure you are practical uses though. More relevant is \u0026lsquo;..\u0026rsquo; which is the previous directory. so if you\u0026rsquo;re currently in /a/b/c/d and you run cd .. you\u0026rsquo;ll be taken to /a/b/c\nTo round this conversation off , as previously mentioned, \u0026lsquo;~\u0026rsquo; represents your home directory. This usually means it expands out to /home/yourUsername which can be particualy helpful if you are say, in /dev and want to get to your documents folder you can use cd ~/Documents instead of cd /home/user/Documents\nWith all of that out of the way let\u0026rsquo;s finally look at /dev !\n/dev, the devices folder #  Alrighty then, first, a heads up. My /dev folder will have some things yours wont. I\u0026rsquo;m on a desktop with a lot of hardware, drives, input devices, etc. And I\u0026rsquo;ve installed hundreds of programs, some of which interface with the system at a low enough level to necessitate extra files in here. For that reason some are going to be skipped over. I\u0026rsquo;ll be breaking up the ouput of ls /dev into a bunch of code blocks below because of how ludicously large this output is.\n1 2 3 4 5 6 7 8 9 10 11 12 13  drwxr-xr-x 22 root root 4600 Feb 8 06:03 . drwxr-xr-x 18 root root 4096 Jan 26 22:05 .. crw-rw-rw- 1 root root 10, 56 Feb 8 06:03 ashmem crw-r--r-- 1 root root 10, 235 Feb 8 06:03 autofs crw-rw-rw- 1 root root 511, 0 Feb 8 06:03 binder drwxr-xr-x 2 root root 520 Feb 8 06:02 block drwxr-xr-x 2 root root 200 Feb 8 06:02 bsg crw------- 1 root root 10, 234 Feb 8 06:03 btrfs-control drwxr-xr-x 3 root root 60 Feb 8 06:02 bus lrwxrwxrwx 1 root root 3 Feb 8 06:03 cdrom -\u0026gt; sr0 drwxr-xr-x 2 root root 5700 Feb 8 06:03 char crw------- 1 root root 5, 1 Feb 8 06:03 console lrwxrwxrwx 1 root root 11 Feb 8 06:02 core -\u0026gt; /proc/kcore   \u0026lsquo;ashmem\u0026rsquo; is something that is on my system as a part of a project with the end goal of running android apps natively on linux called \u0026lsquo;anbox\u0026rsquo; it\u0026rsquo;s still in early development, and is very difficult to run on arch\n\u0026lsquo;autofs\u0026rsquo; is a configurable system for mounting and unmounting storage as it is used\n\u0026lsquo;binder\u0026rsquo; is another component of \u0026lsquo;anbox\u0026rsquo;\n\u0026lsquo;block\u0026rsquo; is a directory which contains numbered links to the file system blocks used previously (such as sda)\n\u0026lsquo;bsg\u0026rsquo; is a directory with files that, again, represent your drives at a hardware level. You can open the bsg folder and run ls followed by lsscsi and compare the outputs to understand. This is practically just an artifact of older systems now.\n\u0026lsquo;btrfs-control\u0026rsquo; is used when you have drives on the system formatted with the btrfs file system, this is a file system that is still in heavy development primarily targeted at storage arrays that are resilient to drive failures\n\u0026lsquo;bus\u0026rsquo; is a folder which contains a folder \u0026lsquo;usb\u0026rsquo; which contains folders for each usb host controller on the system, and then their devices. This is probably the first really cool one we\u0026rsquo;re hitting as you should already be able to see how the system is letting us get data directly. To show this we\u0026rsquo;ll need to have the usbutils package installed so that we can run lsusb. If you do that you should get an output like this\n1 2 3 4 5 6 7 8  Bus 006 Device 003: ID 2109:0812 VIA Labs, Inc. VL812 Hub Bus 006 Device 002: ID 2109:0812 VIA Labs, Inc. VL812 Hub Bus 006 Device 001: ID 1d6b:0003 Linux Foundation 3.0 root hub Bus 005 Device 005: ID 1235:007c Focusrite-Novation Launchkey MK2 49 Bus 005 Device 007: ID 0c45:6340 Microdia Camera ... Bus 005 Device 002: ID 1e7d:2e4a ROCCAT Tyon Black Mouse ...   I\u0026rsquo;ve added ellipsis to the output to make it fit here, but you can see there that my mouse is device 002 on bus 005. If you poke around in here it should be pretty obvious how these correlate. Note, that this is just where the system puts info about the device (it\u0026rsquo;s name, etc) not where the communication with the device actually happens (usually*). That\u0026rsquo;s over in /sys which we\u0026rsquo;ll get to more in depth in a bit, but for example here I could go to /sys/bus/usb/devices/5-2 and run cat product for example to get the human readable name \u0026lsquo;ROCCAT Tyon Black\u0026rsquo;.\n\u0026lsquo;cdrom\u0026rsquo; is actually a link to the new location of cdroms- sr0 , but, still, it\u0026rsquo;s use it pretty duh\n\u0026lsquo;char\u0026rsquo; is a folder which contains links to a lot of other things in /dev for use with legacy things\n\u0026lsquo;console\u0026rsquo; is again a legacy component and is effectively the same as tty, which is always the current terminal. to be explained more when we get to the tty\u0026rsquo;s\n\u0026lsquo;core\u0026rsquo; a link to /proc/kcore is a direct way to read memory, used mostly for debugging\n1 2 3 4 5 6 7 8 9 10 11  drwxr-xr-x 2 root root 60 Feb 8 06:02 cpu crw-rw---- 1 root realtime 10, 60 Feb 8 06:03 cpu_dma_latency crw------- 1 root root 10, 203 Feb 8 06:03 cuse drwxr-xr-x 8 root root 160 Feb 8 06:02 disk crw-rw----+ 1 root audio 14, 73 Feb 8 06:03 dmmidi4 ... crw-rw----+ 1 root audio 14, 121 Feb 8 06:03 dmmidi7 drwxr-xr-x 3 root root 140 Feb 8 06:03 dri crw------- 1 root root 242, 0 Feb 8 06:03 drm_dp_aux0 ... crw------- 1 root root 242, 4 Feb 8 06:03 drm_dp_aux4   \u0026lsquo;cpu\u0026rsquo; is a folder which contains a character file named mircocode. If you enable msr it can also allow you to r/w model specific registers. I don\u0026rsquo;t even know what this means. You\u0026rsquo;ll never work on this directly, moving on.\n\u0026lsquo;cpu_dma_latency\u0026rsquo; is something to do with making sure changing between power states (sleep) doesn\u0026rsquo;t take to long, otherwise the system will just refuse to do. Not used directly by anyone really\n\u0026lsquo;cuse\u0026rsquo; is fuse for character devices, ref fuse below\n\u0026lsquo;disk\u0026rsquo; is the way most modern things access the disk, with separate folders for by id, label, path, or uuid\n\u0026lsquo;dmmidi\u0026rsquo; is for MIDI or Musical Instrument Digital Interface devices. I have multiple on this system.\n\u0026lsquo;dri\u0026rsquo; contains links to your graphics cards, this is part of the direct rendering manager for video things (3D, games, etc)\n\u0026lsquo;drm_dp_aux\u0026rsquo; each represent an output from the GPU, so think of these as the actual cables between the monitor and the computer\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  crw-rw---- 1 root video 29, 0 Feb 8 06:03 fb0 lrwxrwxrwx 1 root root 13 Feb 8 06:02 fd -\u0026gt; /proc/self/fd crw-rw-rw- 1 root root 1, 7 Feb 8 06:03 full crw-rw-rw- 1 root root 10, 229 Feb 8 06:03 fuse crw------- 1 root root 254, 0 Feb 8 06:03 gpiochip0 crw------- 1 root root 254, 1 Feb 8 06:03 gpiochip1 crw------- 1 root root 240, 0 Feb 8 06:03 hidraw0 ------------------------------------------------------------------------------------ to make this output shorter I stripped out hidraw 1-5,10-12 ------------------------------------------------------------------------------------ crw-rw----+ 1 root root 240, 6 Feb 8 06:03 hidraw6 ------------------------------------------------------------------------------------ to make this output shorter I stripped out hidraw 7-9 ------------------------------------------------------------------------------------   \u0026lsquo;fb0\u0026rsquo; is your framebuffer - I can\u0026rsquo;t do this justice https://www.kernel.org/doc/Documentation/fb/framebuffer.txt, in practice you\u0026rsquo;re unlikely to ever use this, but it\u0026rsquo;s very good to know\n\u0026lsquo;fd\u0026rsquo; is for file descriptors, which are now in /proc this is part of how the system internally handles file reads and writes\n\u0026lsquo;full\u0026rsquo; literally just returns no space left when accessed, used to test how a program responds to a disk full error\n\u0026lsquo;fuse\u0026rsquo; Filesystems in User Space is a system which allows for interesting virtual drives (think things like GoogleDrive) to be accessible to the native system among other things. This is a very heavily used part of the system and worth a deeper look if you\u0026rsquo;re interested\n\u0026lsquo;gpiochip\u0026rsquo; is for general purpose input/output like with exposed pins that can be used on development board such as the raspberry pi\n\u0026lsquo;hidraw\u0026rsquo; is for raw communication with Human Interface Devices (mouse, keyboard, gamepad) and allows for custom drivers, like those necessary for RGB backlit keyboards\n1 2 3 4 5 6 7 8 9 10 11  crw-rw---- 1 root realtime 10, 228 Feb 8 06:03 hpet drwxr-xr-x 3 root root 0 Feb 8 06:03 hugepages crw------- 1 root root 10, 183 Feb 8 06:03 hwrng lrwxrwxrwx 1 root root 12 Feb 8 06:03 initctl -\u0026gt; /run/initctl drwxr-xr-x 4 root root 880 Feb 8 06:03 input crw-rw-rw- 1 root render 241, 0 Feb 8 06:03 kfd crw-r--r-- 1 root root 1, 11 Feb 8 06:03 kmsg crw-rw-rw- 1 root kvm 10, 232 Feb 8 06:03 kvm drwxr-xr-x 2 root root 60 Feb 8 06:02 lightnvm lrwxrwxrwx 1 root root 28 Feb 8 06:03 log -\u0026gt; /run/systemd/journal/dev-log crw-rw---- 1 root disk 10, 237 Feb 8 06:03 loop-control   \u0026lsquo;hpet\u0026rsquo; \u0026ldquo;High Precession Event Timer\u0026rdquo; is for internal timer-y things\n\u0026lsquo;hugepages\u0026rsquo; - read this https://wiki.debian.org/Hugepages , these are actually pretty important as they can make a large impact on performance, especially with virtual machines\n\u0026lsquo;hwrng\u0026rsquo; hardware random number generator, rarely used directly, often not trusted due to known faults, typically used though the soon to be mentioned \u0026lsquo;urandom\u0026rsquo; interface - https://main.lv/writeup/kernel_dev_hwrng.md\n\u0026lsquo;initctl\u0026rsquo; part of the init system, just dont touch it\n\u0026lsquo;input\u0026rsquo; is a directory which contains links to all input devices, going to /dev/input/by-id can explicitly tell you how some devices are connected, and can be a way to extract input form devices for input in your own programs\n\u0026lsquo;kfd\u0026rsquo; has little documentation- appears to be for AMD GPU accelerated compute\n\u0026lsquo;kmsg\u0026rsquo; is the i/o of dmesg which itself is the main system log\n\u0026lsquo;kvm\u0026rsquo; is the kernel virtual machine, used for running virtual machines. We\u0026rsquo;ll talk about this more much later.\n\u0026lsquo;lightnvm\u0026rsquo; use for NVMe drives\n\u0026lsquo;log\u0026rsquo; no shit, access using sudo journalctl\n\u0026lsquo;loop-contol\u0026rsquo; - http://man7.org/linux/man-pages/man4/loop.4.html, effectively used to mount images or or other file systems to be read as a separate block device\n1 2 3 4 5 6 7 8 9 10 11 12  drwxr-xr-x 2 root root 60 Feb 8 06:03 mapper crw-rw---- 1 root video 239, 0 Feb 8 06:03 media0 crw-r----- 1 root kmem 1, 1 Feb 8 06:03 mem crw------- 1 root root 10, 57 Feb 8 06:03 memory_bandwidth crw-rw----+ 1 root audio 14, 66 Feb 8 06:03 midi4 crw-rw----+ 1 root audio 14, 82 Feb 8 06:03 midi5 crw-rw----+ 1 root audio 14, 98 Feb 8 06:03 midi6 crw-rw----+ 1 root audio 14, 114 Feb 8 06:03 midi7 drwxrwxrwt 2 root root 40 Feb 8 06:02 mqueue drwxr-xr-x 2 root root 60 Feb 8 06:03 net crw------- 1 root root 10, 59 Feb 8 06:03 network_latency crw------- 1 root root 10, 58 Feb 8 06:03 network_throughput   \u0026lsquo;mapper\u0026rsquo; is primarily used for LVM systems, https://wiki.archlinux.org/index.php/LVM, which is used for more advance disk management but comes with disadvantages in complexity and inter-OS compatibility\n\u0026lsquo;media0\u0026rsquo; is the i/o file for a webcam\n\u0026lsquo;mem\u0026rsquo; is direct access to the system\u0026rsquo;s physical memory. This is dangerous. There\u0026rsquo;s almost no reason to do this directly, unless you\u0026rsquo;re writing a low level driver\n\u0026lsquo;memory_bandwidth\u0026rsquo; - as the name implies. Rarely used\n\u0026lsquo;midi\u0026rsquo; direct access to midi devices. Documentation on dmmidi vs midi unclear\n\u0026lsquo;mqueue\u0026rsquo; used for interprocess comunnication\n\u0026lsquo;net\u0026rsquo; contains virtual network adapters, will likely contain \u0026lsquo;tun\u0026rsquo; by default, used for interprocess communication in weird ways.\n\u0026lsquo;network_latency\u0026rsquo; and \u0026lsquo;network_thoughput\u0026rsquo; is primary used to specify current minimum necessary requirements for the network, used for power saving on wireless adapters\n1 2 3 4 5 6 7 8 9 10 11 12  crw-rw-rw- 1 root root 1, 3 Feb 8 06:03 null crw------- 1 root root 243, 0 Feb 8 06:03 nvme0 brw-rw---- 1 root disk 259, 0 Feb 8 06:03 nvme0n1 brw-rw---- 1 root disk 259, 1 Feb 8 06:03 nvme0n1p1 brw-rw---- 1 root disk 259, 2 Feb 8 06:03 nvme0n1p2 crw-r----- 1 root kmem 1, 4 Feb 8 06:03 port crw------- 1 root root 108, 0 Feb 8 06:03 ppp crw------- 1 root root 248, 0 Feb 8 06:03 pps0 crw------- 1 root root 10, 1 Feb 8 06:03 psaux crw-rw-rw- 1 root tty 5, 2 Feb 8 16:37 ptmx crw------- 1 root root 247, 0 Feb 8 06:03 ptp0 drwxr-xr-x 2 root root 0 Feb 8 06:03 pts   \u0026lsquo;null\u0026rsquo; literally just discards anything it receives. Useful when a command outputs junk when doing things, and getting rid of the junk. \u0026lsquo;/dev/null\u0026rsquo; is referred to regularly in jokes in technical circles\n\u0026lsquo;nvmexxxx\u0026rsquo; the system NVMe storage device(s), will only exist if you have an NVMe solid sate drive\n\u0026lsquo;port\u0026rsquo; used for direct access to i/o ports. Dangerous\n\u0026lsquo;ppp\u0026rsquo; point-to-point protocol. Similar to /net/tun - https://stackoverflow.com/questions/15845087/what-is-difference-between-dev-ppp-and-dev-net-tun\n\u0026lsquo;pps0\u0026rsquo; pule per second provides a pulse once per second\n\u0026lsquo;psaux\u0026rsquo; , ps provides a snapshot of currently running system processes, ps aux, where aux: \u0026lsquo;a\u0026rsquo; is all user processes, \u0026lsquo;u\u0026rsquo; is show user/owner, and \u0026lsquo;x\u0026rsquo; processes not attached to a terminal\n\u0026lsquo;ptmx\u0026rsquo;, pseudo terminal master/slave, used for virtual terminals, like the one\u0026rsquo;s you\u0026rsquo;ve been opening in KDE\n\u0026lsquo;ptp0\u0026rsquo; precession time protocol, links to realtime clock\n\u0026lsquo;pts\u0026rsquo; interval virtual filesystem, used for things like docker. Works closely with \u0026lsquo;ptmx\u0026rsquo;\n1 2 3 4 5 6 7 8 9 10  crw-rw-rw- 1 root root 1, 8 Feb 8 06:03 random crw-rw-r--+ 1 root rfkill 10, 55 Feb 8 06:03 rfkill lrwxrwxrwx 1 root root 4 Feb 8 06:03 rtc -\u0026gt; rtc0 crw-rw---- 1 root realtime 250, 0 Feb 8 06:03 rtc0 brw-rw---- 1 root disk 8, 0 Feb 8 06:03 sda brw-rw---- 1 root disk 8, 1 Feb 8 06:03 sda1 ... brw-rw---- 1 root disk 8, 96 Feb 8 06:03 sdg brw-rw---- 1 root disk 8, 97 Feb 8 06:03 sdg1 brw-rw---- 1 root disk 8, 98 Feb 8 16:37 sdg2   \u0026lsquo;random\u0026rsquo; waits for true randomness and will block things from finishing until enough entropy is generated\n\u0026lsquo;rfkill\u0026rsquo; kills all radio transmission on system\n\u0026lsquo;rtc\u0026rsquo; real time clock, direct access - we\u0026rsquo;ll talk more about real time clocks and time in networking.\n\u0026lsquo;sdxn\u0026rsquo; the \u0026lsquo;normal\u0026rsquo; representation of block devices like HDDs, SSDs, and flash drives to the system. Each number is a partition\n1 2 3 4 5 6 7 8 9 10 11 12  drwxr-xr-x 4 root root 80 Feb 8 06:03 serial crw-rw----+ 1 root optical 21, 0 Feb 8 06:03 sg0 crw-rw---- 1 root disk 21, 1 Feb 8 06:03 sg1 ... crw-rw---- 1 root disk 21, 7 Feb 8 06:03 sg7 drwxrwxrwt 2 root root 80 Feb 8 16:37 shm crw------- 1 root root 10, 231 Feb 8 06:03 snapshot drwxr-xr-x 4 root root 760 Feb 8 06:03 snd brw-rw----+ 1 root optical 11, 0 Feb 8 06:03 sr0 lrwxrwxrwx 1 root root 15 Feb 8 06:02 stderr -\u0026gt; /proc/self/fd/2 lrwxrwxrwx 1 root root 15 Feb 8 06:02 stdin -\u0026gt; /proc/self/fd/0 lrwxrwxrwx 1 root root 15 Feb 8 06:02 stdout -\u0026gt; /proc/self/fd/1   \u0026lsquo;serial\u0026rsquo; contains references to serial devices by id or path\n\u0026lsquo;sgx\u0026rsquo; are mostly just remaps of other devices for legacy support\n\u0026lsquo;shm\u0026rsquo; is for shared memory, to be passed between programs\n\u0026lsquo;snapshot\u0026rsquo; is used for hirenation\n\u0026lsquo;snd\u0026rsquo; sound devices raw access, legacy and probably will not work\n\u0026lsquo;sr0\u0026rsquo; used for optical media\n\u0026lsquo;stderr\u0026rsquo; is the standard error interface, try echo 1 \u0026gt; /dev/stderr - you should see an error return code depending on your terminal setup\n\u0026lsquo;stdin\u0026rsquo; is the standard input interface, try echo hello | cp /dev/stdin /dev/stdout\n\u0026lsquo;stdout interface, try echo hello \u0026gt; /dev/stdout\n1 2 3 4 5 6 7 8 9  crw-rw-rw- 1 root tty 5, 0 Feb 8 15:49 tty crw--w---- 1 root tty 4, 0 Feb 8 06:03 tty0 ... crw--w---- 1 root tty 4, 63 Feb 8 06:03 tty63 crw-rw-rw- 1 root uucp 166, 0 Feb 8 06:03 ttyACM0 crw-rw----+ 1 root tty 4, 64 Feb 8 06:03 ttyS0 crw-rw----+ 1 root uucp 4, 65 Feb 8 06:03 ttyS1 crw-rw----+ 1 root uucp 4, 66 Feb 8 06:03 ttyS2 crw-rw----+ 1 root uucp 4, 67 Feb 8 06:03 ttyS3   TTY\u0026rsquo;s, these are important: #  \u0026lsquo;tty\u0026rsquo; the currently active terminal, try echo 1 \u0026gt; /dev/tty\n\u0026lsquo;ttyx\u0026rsquo; are virtual consoles accessible though ctrl+alt+fx, where fx is a function key. You should ben on tty7 by default (maybe? if not you might have to use ctrl+alt+fx on each number until you find your graphical environment again), go ahead and try it now. Note you may need to hold the \u0026lsquo;fn\u0026rsquo; key as well depending on your keyboard.\n\u0026lsquo;ttyACMx\u0026rsquo; or \u0026lsquo;ttyUSBx\u0026rsquo; are attached USB devices that can be accessed as a virtual terminal. This is mostly used for development boards, and we\u0026rsquo;ll be using this later\n\u0026lsquo;ttySx\u0026rsquo; are serial port terminals, rarely used outside of scientific or server gear. The physical connector usually looks similar to VGA cable. Your motherboard may well have a serial port header for adding this even if you don\u0026rsquo;t physically see one available on the outside of the case\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  crw------- 1 root root 10, 61 Feb 8 06:03 udmabuf crw------- 1 root root 10, 239 Feb 8 06:03 uhid crw-rw-rw-+ 1 root root 10, 223 Feb 8 06:03 uinput crw-rw-rw- 1 root root 1, 9 Feb 8 06:03 urandom drwxr-xr-x 2 root root 200 Feb 8 06:03 usb crw------- 1 root root 10, 240 Feb 8 06:03 userio drwxr-xr-x 4 root root 80 Feb 8 06:03 v4l crw-rw---- 1 root tty 7, 0 Feb 8 06:03 vcs crw-rw---- 1 root tty 7, 1 Feb 8 06:03 vcs1 ... crw-rw---- 1 root tty 7, 7 Feb 8 06:03 vcs7 crw-rw---- 1 root tty 7, 128 Feb 8 06:03 vcsa crw-rw---- 1 root tty 7, 129 Feb 8 06:03 vcsa1 ... crw-rw---- 1 root tty 7, 135 Feb 8 06:03 vcsa7 crw-rw---- 1 root tty 7, 64 Feb 8 06:03 vcsu ... crw-rw---- 1 root tty 7, 71 Feb 8 06:03 vcsu7   \u0026lsquo;udmabuf\u0026rsquo; Uniform Direct Memory Access Buffer https://github.com/ikwzm/udmabuf, you probably don\u0026rsquo;t care\n\u0026lsquo;uhid\u0026rsquo; for Human Interface Device stuff on the system side, you shouldn\u0026rsquo;t mess with this\n\u0026lsquo;uinput\u0026rsquo; https://www.kernel.org/doc/html/v4.12/input/uinput.html, basically you can fake a keyboard or mouse in your program\n\u0026lsquo;urandom\u0026rsquo;, the main source of random numbers. give it a shot but running head -5 /dev/urandom\n\u0026lsquo;usb\u0026rsquo; folder which contains character devices to the HID inputs, used by the system\n\u0026lsquo;userio\u0026rsquo; mostly used for laptop touchpad drivers\n\u0026lsquo;v41\u0026rsquo; part of the video subsystem\n\u0026lsquo;vcsx\u0026rsquo; virtual console memory, used when running a terminal emulator\n\u0026lsquo;vcax\u0026rsquo; virtual console stuff\n\u0026lsquo;vcsux\u0026rsquo; virtual console stuff\n1 2 3 4 5 6 7 8  drwxr-xr-x 2 root root 60 Feb 8 06:03 vfio crw------- 1 root root 10, 63 Feb 8 06:03 vga_arbiter crw------- 1 root root 10, 137 Feb 8 06:03 vhci crw-rw----+ 1 root kvm 10, 238 Feb 8 06:03 vhost-net crw------- 1 root root 10, 241 Feb 8 06:03 vhost-vsock crw-rw----+ 1 root video 81, 0 Feb 8 06:03 video0 crw-rw----+ 1 root video 81, 1 Feb 8 06:03 video1 crw-rw-rw- 1 root root 1, 5 Feb 8 06:03 zero   \u0026lsquo;vfio\u0026rsquo; is used for passing hardware directly to virtual machines, often massively improving performanec\n\u0026lsquo;vga_arbiter\u0026rsquo; if you still have a computer that uses vga I\u0026rsquo;m sorry. This almost certainly doesn\u0026rsquo;t matter to you even if you do: https://www.kernel.org/doc/html/v4.16/gpu/vgaarbiter.html\n\u0026lsquo;vhci\u0026rsquo; used for passing though usb devices to virtual machines\n\u0026lsquo;vhost-net\u0026rsquo; \u0026amp; \u0026lsquo;vhost-vsock\u0026rsquo; used for virtual machine networking\n\u0026lsquo;videox\u0026rsquo; the graphics adapter in the system. Most systems will have only one, some will have two, very, very rarely you may have more.\n\u0026lsquo;zero\u0026rsquo; generates an infinite stream of zeros. Used for generating test files of arbitrary size, among other things.\nAnd That\u0026rsquo;s it, congrats. Now lets go to /proc\n/proc, the fake file system #  /proc doesn\u0026rsquo;t really exist, it\u0026rsquo;s a memory only system used primarily for information about processes, hence the name.\nhttps://www.tldp.org/LDP/sag/html/proc-fs.html \u0026amp; https://linux.die.net/man/5/proc\nLet\u0026rsquo;s dig in by hand a bit though, lets start by opening a terminal and running cd /proc\nif you run ls you\u0026rsquo;ll see a bunch of numbers followed by some strange things, like uptime\nlet\u0026rsquo;s start with the not-number things. We\u0026rsquo;ve already seen cpuinfo and meminfo, but there\u0026rsquo;s other stuff in here too. Running cat uptime will tell us how many seconds the system has been powered on for, for example. A lot of things in here are bit hard to understand, but things like \u0026lsquo;uptime\u0026rsquo; and \u0026lsquo;loadavg\u0026rsquo; can be legitimately useful in our own programs. running cat loadavg you\u0026rsquo;ll see some numbers that represent how much load the system is under. You can use the above links to learn more, but now we\u0026rsquo;re going to dive into the juicy bits!\nBefore we do so though, let\u0026rsquo;s grab a program that will make our lives a bit easier called \u0026lsquo;htop\u0026rsquo;, just use yay to install it.\nonce it installs go ahead and open it up\nyou should see something like this:\nThis is a super powerful equivalent to task manager from windows. You can see the load on all 16 of my cpu threads, the memory usage on the system, uptime, loadavg, and number of tasks running here, but best of all we can see a nice tree of all the processes, and how each one of them is impacting the system. (you may need to press f5 to put it in tree mode) From here you can also see the Process\u0026rsquo;s ID known as the PID, these numbers should directly corolate with those visable in /proc\nLeaving that windows open lets open up two more terminals, in one navigate to /proc and in the other start up python:\nfrom here go back to the window running htop and use f3 to search for python if there are multiple processes that come up just keep pressing i3 until you find one that has a tree that looks like:\n(note your terminal will probably be named either konsole or xterm, not deepin-terminal)\nand look to the left to find the pid of the running python process, in my case it\u0026rsquo;s 754.\nGo over to the terminal where you navigated to /proc and now navigate to the folder with the id of your process, in my case i\u0026rsquo;d run cd 754 then run \u0026lsquo;ls\u0026rsquo; and look at everything in this folder:\nnow, we\u0026rsquo;re gonna run one more thing before we leave, and we\u0026rsquo;ll come back to it later, but I want to show you now, so you can appreciate how cool it is later: go ahead and run sudo cat stack\nyou should see something like:\nbut when we run this in the python terminal:\n1 2  while(1): 1+1   and read the stack again we\u0026rsquo;ll see:\nWhich while may not look overly interesting, I assure you will be something of interest later.\nOne interesting processed to note in here is the process numbered \u0026lsquo;1\u0026rsquo; which, if you look back in htop, you\u0026rsquo;ll see is the init process. This means it\u0026rsquo;s actually possible to look at a mountain of deails about the init process, which we\u0026rsquo;ll talk about in a bit.\nBefore we leave /proc, look back up at all the file that each process has and take note, also notice how some of these relate to what we saw in /dev\nTake a breather,\nAs you can see, Linux gives us a lot of raw access to hardware. There are no training wheels here. While you can use Linux the exact same way you used windows: watch YouTube videos, open a graphical file manager, etc, you can also get down to the nitty gritty of the OS.\n/bin, /sbin, /lib, /lib64 #  [TODO]\nsymbolic links to usr explanation\n/sys #  echoing to change settings, probabaly focus on device\n/usr #  [TODO]\nShare, man, local, var\n/boot #  [TODO]\nboot loaders, init, initrd fs?\n/etc #  \u0026hellip; and etc.\nLiterally. the etc folder contains system configuarion files mostly. Remember back when we installed and you used nano /etc/fstab that was editing the list of file systems that the system loads at boot, a configuration file. When we configure SSH later, it\u0026rsquo;s config files are stored here too. Basically, most of the admin level system config files and default config files (lower priority than the config by the user) files are here. As you learn about your system and tweak things you\u0026rsquo;ll find yourself in this folder rather often. [TODO, add chapter links]\nSome of the more interesting things in /etc are:\n /ca-certificates/ \u0026ndash; we\u0026rsquo;ll talk about these more in networking [TODO] /conf.d/ \u0026ndash; various system default config files for system services /cron.d/,/cron.daily/,/cron.hourly/, etc. are all form the cronie package which can be installed then enabled with systemd. Note, systemd timers are a built in way to do the same thing. cron is the \u0026lsquo;old\u0026rsquo; way of doing thing, but is super simple to use /crypttab is the similar to /fstab but for encrypted partitions /cups is a folder used by cups, which is the backend used for printers in linux /dbus-1/ is used by dbus which is a backend for interprocess communication in linux /dconf/ is a folder used by dconf wich is used to store config settings. dconf is a cli tool for changing these settings /gconf/ \u0026ndash; gconf is very similar to dconf but outdated. Still used by somethings though. /dnsmasq.conf is used by dnsmasq, which will be discussed in networking [TODO] /default/ stores default configuration files, typically these get overriden elsewhere by the user /dhcp_fingerprint.conf,/dhcpcd.conf,/dhcpd.conf, and /ducpd6.conf are all part of dhcpcd and dhcp, used for reciveing DHCP information. This is dicussed further in the networking chapter [TODO] /dkms/framework.conf is used to configure dkms or Dynamic Kernel Module Support which is used to load modules for the kernel without building the kernel from source. In practice this means drivers for various hardware can be loaded even if it\u0026rsquo;s not in the linux source tree. Read more here: https://www.linuxjournal.com/article/6896 /envrioment is a configarating file for pam_env files. Basically, enviroment variables that you want to be loaded at boot can be put here. For example to change the defalut editor used by command line programs you can set EDITOR=vim or EDITOR=nano or whatever you like here. /ethertypes is a file listing various ethernet protolcols, we\u0026rsquo;ll come back to this in the networking chapter [TODO] /exports is used to setup NFS shares, again, in networking [TODO] /firewall.d/,/gufw/ are where firewall settings are stored, dependant on the firewall progarm used /fonts/ holds your fonts, go figgure. You\u0026rsquo;ll need to update the font database if you install things manually: https://wiki.archlinux.org/index.php/Fonts#Manual_installation /foremost.conf is used by the foremost package, it contains information about file headers, footers, and data structures for file recovery purposeses. For example, if you have a backup .img file of a failing hdd and need to scan for .jpg file headers to recover images /freeipmi/ contains config files for Intelligent Platform Managment Inferface Modules. We\u0026rsquo;ll talk about this more in servers [TODO], but essentially it\u0026rsquo;s a way to, using server hardware, set BIOS settings, monitor hardware, and turn the system on/off remotely. /freetds/,/mysql/,/sqlmap.conf,/odbc.ini,ODBCDataSources,and odbcinst.ini all have to do with databases and database connectivity. [TODO_Ch17] /fstab/ short for file system table contains a table of file systems to be mounted at startup and options they should have. Settings here can dramatically effect fs performance or cause your system not to boot, so make sure you know what you\u0026rsquo;re doing. Even if your system doesn\u0026rsquo;t boot because of something here, you should land in an emrgancy shell where you can edit /etc/fstab and fix the mistake /fuse.conf is the config file for fuse, which is dicussed below in file systems. /gdb/gdbinit \u0026ndash; you probably want to put the global gdb config file at ~/.gdbinit not here in /etc. gdb is discussed more in debugging [TODO_Ch18] /group is where linux user groups are defined. You probably want to use the groups,groupadd,groupdel,groupmems, and groupmod commands. /grub.d/ contains config files and boot loader entries for the grub bootloader. Not relevent if you\u0026rsquo;re using systemd boot on a UEFI system /gshadow contains encrypted passwords for each group. !! and ! both indicated no password, though !! is no password has been set before /healthd.conf used to notify if hardware has an issue (temp, fan, etc) \u0026ndash; provided by lmsensors /host.conf \u0026amp; /resolv.conf are used for resolver configuration. More in networking [TODO] /hosts local host configuration file. Very useful, in networking again [TODO] /httpd/, and specifically /httpd/conf/httpd.conf is used to conigure a local web server like Apache. Refrenced in Networking [TODO] and Servers [TODO]  /home, /mnt, /run #  [TODO]\ndiscuss systemd taking over home soon\n/tmp #  Users and Groups #  [TODO]\npermissions discussed eariler, recap here\nDrivers \u0026amp; Kernel Modules #  [TODO] Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum sit amet lacus convallis, finibus neque sit amet, iaculis neque. Nulla consectetur nulla at magna condimentum, sed bibendum risus finibus. Nulla cursus felis vitae odio porttitor ultricies. Aenean mollis est non lorem facilisis, vitae blandit purus accumsan. Sed vitae neque pharetra libero elementum maximus. Quisque vel euismod sem. Nullam eget bibendum arcu. Nulla facilisi. Vestibulum vulputate libero lorem, nec blandit nibh suscipit vitae. Suspendisse laoreet vitae arcu non ornare. Nam aliquet lorem vitae mollis facilisis. Aliquam non accumsan libero, nec consequat ex. Duis dolor urna, facilisis non iaculis vitae, sagittis ut justo. Nulla porta turpis bibendum posuere elementum. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae;  Art by @monoxromatik, made for @Freixfox   https://github.com/orhun/kmon\n[TODO]\nudev rules\nFile systems #  [TODO]\nInodes, Raid, fuse, ext4, ntfs, zfs, tmpfs, fat/fat32/exfat, \u0026hellip;\ninclude bit about named pipes\nmknod\nhttps://wiki.maemo.org/Modifying_the_root_image\nProcesses and Memory #  [TODO]\nloading libs, forks, env variables, process ownership\nlsof, strace, ltrace, nice levels\nSystem Calls #  [TODO]\nhttps://github.com/microsoft/ProcMon-for-Linux\nstart with a syscall table\nKernel Parameters #  [TODO]\nmodprobe\nSystemD and alternatives #  [TODO]\ninit system: https://www.lifewire.com/how-to-use-the-init-command-in-linux-4066930\nSchedulers #  [TODO]\n+real time kernel/preemption\nDbus #  [TODO]\nhttps://github.com/KnowNo/How-Linux-Works-2nd-Edition/blob/master/How.Linux.Works.What.Every.Superuser.Should.Know.2nd.Edition.PDF.pdf\nWe\u0026rsquo;ll explore more of the OS later, but for now I think the information overload is a bit much anyway, so lets move away from screens and into the world of hardware\nhttps://littleosbook.github.io\n"}),a.add({id:36,href:'/engineering/linux/linuxshell/',title:"Linuxshell",section:"Engineering",content:"Appendix 1 - Using the Linux Shell #  ./missing-semester - The Shell\n./missing-semester - Shell Tools and Scripting\n./missing-semester - Data Wrangling\nWhat The Shell? #  Okay, first question you probably have after I\u0026rsquo;ve been using them interchangebly \u0026lsquo;What is a Shell and is it different from a terminal?\u0026rsquo;\nYes, they\u0026rsquo;re different, but before I talk about the shell it\u0026rsquo;s easier to talk about the Terminal.\nThe Terminal is a piece of hardware, or, rather was a piece of hardware. For example, here\u0026rsquo;s an old IBM 3151.\nNow, don\u0026rsquo;t mistake this for a CRT monitor like everyone was using in the early 2000\u0026rsquo;s, this is a terminal it has a serial connection in the back that only reciveves messages of text from the computer it\u0026rsquo;s attached to, and it can only display text on it\u0026rsquo;s dim green screen. Before the days of graphical computing everything was though a text only interface that you\u0026rsquo;d usually read on one of these. Fortunately, technology has gotten much, much better.\nSo in the exact same way that you can emulate an old video game console to play retro games on your computer, the terminal itself is emulated on Linux. If you really wanted to you could hook up an old terminal like the above, but it\u0026rsquo;s much easier to open a terminal emulator. Of course, just as there are multiple different emulators for some old consoles, there are multiple options for terminal emulation. A few different terminals are shown on the right in that picture (Cool Retro Terminal, Terminus Œ±, and Kitty), and just as hardware may have different features, different terminals can as well. Just like the hardware however, the terminals don\u0026rsquo;t do anything on their own, that is where the shell comes in. The shell is the program your terminal is usually running when it opens. By default on most Linux Systems it\u0026rsquo;s Bash and on Windows it\u0026rsquo;s CMD or Powershell, but there\u0026rsquo;s many, many alternative shells. These shells all serve a few main functions\n Work as a sort of dispatcher for other commands. For example, when you run ls the shell let\u0026rsquo;s ls print to the terminal before taking back control) Provide content redirection facilities. For example, when you runls \u0026gt; somefile the shell is handling the \u0026gt; which tells it to take the output from the running program (ls) and put it into the file (some file). Provide scripting capability. Allowing for programming by chaining other commands. We\u0026rsquo;ll look at this more in a bit. Provide basic niceities (history, tab completion, automatic suggestions, etc.)  But others may include some weirder things, for example, xonsh is a shell that will let you mix python and other commands. (note, it tends to act weird for somethings. I like having it as a secondary shell that\u0026rsquo;s available, but use ZSH as my primary shell.)\nIn the above picture, all of the text prompts on the emulated terminals are being generated by ZSH, the difference in color and font is due to the settings for the terminal emulator - again restating how the terminal handles \u0026lsquo;hardware\u0026rsquo; things while the Shell only sends text.\nYou may also here terminals called a TTY or Teletype, both are for historical reasons. On that note, you can change your active tty in Linux by using CTRL+ALT+F[n] where F[n] is any of the function keys. Interestingly, the graphical \u0026lsquo;shell\u0026rsquo; actually runs in one of these TTYs, usually TTY7. You can actually interact with these TTYs by sending text to /dev/tty[n] without switching to it directly, similarly /dev/tty is always your current terminal, so for example echo hello \u0026gt; /dev/tty will echo hello normally, but echo hello \u0026gt; /dev/tty2 will send hello to the terminal you could get to with CTRL+ALT+F2\nAs a very brief aside, you may see pictures in some terminals. This is possible with some neat hackery both on part of the shell and terminal emulator. I\u0026rsquo;ve even seen some that can render 3D graphics. This isn\u0026rsquo;t your grandpa\u0026rsquo;s terminal anymore.\nThe Basic Commands #  Of note, while the majority of these commands should be available on nearly any unix system you may use, many of the alternate recommendations may not be.\n  man \u0026ldquo;man [command/topic]\u0026rdquo;, ex, \u0026ldquo;man ascii\u0026rdquo;, bring up an in depth manual page for a given command/topic.\n  Alternative recommendation: tldr actually digestible and much faster when it gives enough info\n     pwd - Print working directory - literally just a command to tell you the file path to where you are\n  ls - list - list the files/folders in the current directory, lots of flags available\n Alternative recommendation: exa or lsd    cd - change directory, if you can\u0026rsquo;t use this may god have mercy\n Alternative recommendation: j (for autojump) note that cd .. will move back by one folder.    mv - move (or rename) a file to a new location (or name)\n Alternative recommendation: rsync    rm - remove a file\n  touch - create an empty file, or change last accessed time of existing file\n  mkdir \u0026amp; rmdir - make or remove an empty directory (folder)\n  cat - output the contents of a file\n Alternative recommendation: bat, less, more, fltrdr, or an editor like vim or nano    date - output current date and time\n  chmod \u0026amp; chown - change a file or folders permissions or owner\n  ln - make a symbolic / hard link (shortcut)\n  du \u0026amp; df - Disk usage and disk free, df will show you how much room you have left per disk, du serves to help find what\u0026rsquo;s using up your disk\n Alternative recommendation: ncdu and duf    clear - clear the screen of text- (only use in scripts)\n Alternative recommendation: ctrl + l , much faster    passwd - change a users password\n  sudo \u0026amp; su - run a command as another user, typically root\n  head \u0026amp; tail - print a number of lines from the top or bottom of a file\n  tee - mostly used with pipes to print output to terminal as well as put it into a file\n  grep, sed, awk, tr - the \u0026lsquo;big four\u0026rsquo; commands used for text processing in a terminal. grep (and egrep) are used for search, for example running ls | grep myfile to confirm a file is indeed in a folder. sed is used for text/character replacement. awk is a programming language in it\u0026rsquo;s own right, used primarily for selecting text fields by separator, for example only printing the permissions column in the output of ls -l\n  w - show who is currently logged in and what they\u0026rsquo;re running, epically applicable on shared servers if you need to see if there\u0026rsquo;s an active ssh connection to your system\n  tar, gzip, bzip, zip - all used for making compressed folders (like .zip files)\n  ssh , scp, ftp - used for doing remote access, letting you run commands on one system from another\n  diff - show the differences between two files\n  sort - sort input by a number of criteria\n  uniq - remove duplicate entries\n fdupes is recommended if the goal is to identify duplicate files    export - used to set environment variables, these for example use export EDITOR=nano to use nano as your terminal text viewer by default.\n  systemctl - literally system control, wayyy to big to cover quickly, used for everything from setting services to run on boot, shutting down/restarting the system, to viewing logs. Look up Systemd for more information. This is probably the least-universal of the tools listed here, but most linux systems have switched to Systemd now for better or worse.\n  ip, ping, \u0026amp; dig - ip is used to view as well as modify aspects of network configuration at the more hardware-level, such as turning on/off a networking interface. ping allows you to see if you\u0026rsquo;re able to reach a site/ip address, and dig allows you to check if you\u0026rsquo;re able to turn a domain name to an ip, such as checking the ip address that archlinux.org points to with dig archlinux.org\n  ps - process management: listing processing, finding the parent of a particular process, etc.\n Alternative recommendation: procs (Github)    free - display information about system RAM usage\n  top - a graphical-ish view of the running processes, ram, and CPU usage\n Alternative recommendation: htop    kill, murder a process in various ways\n  whereis - find the location of an executable, ex whereis ls will tell you it\u0026rsquo;s in /usr/bin/ls\n  wget, curl - retrieve a web page\n  Alternative recommendation: lynx, w3m, or brow.sh\nHeads up, you may ocassionly see installation instructions for things on github that ask you to use curl www.example.com/script.sh | bash - DON\u0026rsquo;T. It\u0026rsquo;s not safe. Instead, you can curl the script, check that it\u0026rsquo;s something you want to run with cat script.sh, and then run it with ./script.sh.   Parsing HTML with w3m and awk (Joe Ferner\u0026rsquo;s Blog)\n  lynx + fltrdr can be paired together to read web pages super fast\nlynx -dump http://www.example.com | fltrdr w/ shell script below in /bin named 'q' (or whatever you want) you can just run 'q example.com' #!/bin/bash lynx -dump $1 | fltrdr     Tab Completion and faster navigation #  Probably the most useful shortcut for using the shell is tab completion. This is used when you need to type a really long command or chain of commands, say I want to run ncmpcpp, a name that is both long and hard to remember, instead of just typing the full name I can type ncm and press tab, and ta-da suddenly the full name is inserted. If you happen to have another package that has multiple possible endings say you want to run lstopo but you have ls, lsusb, lstopo all on your system, most shells will display a menu underneath with all the possible options. This is nice for commands, but the true power comes in file names, say I want to run cat /etc/pacman.d/mirrorlist while that\u0026rsquo;s not too awful to type out, you could easily type cat /e press tab, get cat /etc/ add pac to get cat /etc/pac press tab, get cat /etc/pacman.d/ type mir and tab and get the full command, while that sounds complicated it actually speeds using the command line up rather significantly and prevents spelling mistakes\nNext up for navigation is directory shortcuts, these can be massive time savers, the most obvious is ~ which is just short hand for the location of the current shell users home directory, so in my case ~ is the exact same as typing out /home/vega. The next two have already been touched on which are . for the current directory and .. for the previous directory. Depending on the shell and arbitrary number of dots may take you back and arbitrary number of directories. Give it a shot! If nothing else you can always use ../../.. to navigate back as necessary. Finally, - represents the last directory you were in so if your in ~/Downloads and then cd /etc/pacman.d/, running cd - will bring you back to downloads.\nThe most advanced form of built in linux navigation comes in the form of pushd and popd, which as their names imply push and pop directories to a stack (a special kind of list) of directories. Like a stack of any item you can put or \u0026lsquo;push\u0026rsquo; an item on top, and take or \u0026lsquo;pop\u0026rsquo; an item off. Running dirs -v will show you a numbered list of the stack, you can navigate to the top item with popd or and arbitrary item with cd ~# where # is the number as shown by dirs -v.\nFinally, there\u0026rsquo;s one more super handy way to get around your file system but it\u0026rsquo;s a non-standard tool so most systems or servers you use other than your own will not have it installed, and that\u0026rsquo;s autojump. Put simply it takes a good guess about where you want to go by only typing part of the name of a folder you\u0026rsquo;ve navigated to before, so say you have a long file path /mnt/data/archived/january2000/pictures/family/vacation/ you can get back to it again by simply running j vac which is obviously much simpler. It works the vast majority of the time in practice, only having issues if you don\u0026rsquo;t include enough letters leading to ambiguity.\nI/O redirection #  for the hard core, you can read good documentation here: https://www.tldp.org/LDP/abs/html/io-redirection.html\n stdin (\u0026lt;) (\u0026laquo;)  [TODO]\n stdout (\u0026gt;) (\u0026raquo;)  [TODO]\n stderr (2\u0026gt;) (2\u0026raquo;)  [TODO]\nNote, \u0026amp;\u0026gt; redirects both stderr and stdout\n pipes ( | ) and nammed pipes  pv - Pipe Viewer\nFinally, the weirdest and rarely used \u0026lt;\u0026gt; operator can be used to directly attch file descriptions and read/write files dirctly, this is rearely used as it\u0026rsquo;s kind of a pita, but if you need to script something advanced it\u0026rsquo;s available. Stollen from the above advanced link:\n [j]\u0026lt;\u0026gt;filename\nOpen file \u0026ldquo;filename\u0026rdquo; for reading and writing, and assign file descriptor \u0026ldquo;j\u0026rdquo; to it. If \u0026ldquo;filename\u0026rdquo; does not exist, create it. If file descriptor \u0026ldquo;j\u0026rdquo; is not specified, default to fd 0, stdin.\nAn application of this is writing at a specified place in a file.\necho 1234567890 \u0026gt; File # Write string to \u0026ldquo;File\u0026rdquo;. exec 3\u0026lt;\u0026gt; File # Open \u0026ldquo;File\u0026rdquo; and assign fd 3 to it. read -n 4 \u0026lt;\u0026amp;3 # Read only 4 characters. echo -n . \u0026gt;\u0026amp;3 # Write a decimal point there. exec 3\u0026gt;\u0026amp;- # Close fd 3. cat File # ==\u0026gt; 1234.67890\nRandom access, by golly.\n Wild Cards \u0026amp; Regex #  Regular Expressions or \u0026lsquo;Regex\u0026rsquo; are an incredibly powerful tool used to match strings in a logical way. For example, say you wanted to find all the phone numbers on page that started with the area code 555, the next three digits were any number, and the last four digits could be represented as either numbers or letters, and \u0026lsquo;-\u0026rsquo; separating each group. With regex that\u0026rsquo;s easy, the regular expression for this looks like:\n5{3}-[0-9]{3}-[a-zA-Z0-9]{4}\nWhich while I could explain, I think just staring at that a little while should make it obvious and ideally the mental effort will lead to a better understanding. Regex can do a lot more than this though. Go ahead and checkout https://regex101.com and give it a shot.\nregex can be used with a bunch of common tools like awk, sed, and grep. This means you can do fancy things like chain ls and grep together with a pipe to find any file matching a pattern or chain commands to rename any file containing characters which may be invalid in NTFS ( The file system used by Windows) to be valid before doing a transfer.\nAlso, you may find The Regular Expression Visualizer, Simulator \u0026amp; Cross-Compiler Tool useful.\nIf you\u0026rsquo;re really lazy, Grex is \u0026ldquo;[automatically generates] a single regular expression from user-provided test cases. The resulting expression is guaranteed to match the test cases which it was generated from.\u0026rdquo;\nNote that not all things that seem like a good fit are a good fit for regex, for example, email.\n[TODO] https://www.debuggex.com\nRegular Expressions - Enough to be Dangerous (YouTube, Engineer man)\nCrex (Octobanana git repo) - \u0026ldquo;Explore, test, and check regular expressions in the terminal.\u0026rdquo;\nJob Control #  [TODO]\n  fg: brings a specified suspended job from the background to foreground.\n  bg: send a specified job to the background or lists background jobs if no jobs are specified\n  jobs: list all running jobs\n  \u0026amp; operator: when added after a command, it runs the job in the background and outputs its PID.\n  Shortcuts #  Jobs #   Ctrl+z: suspend a job to the background. Ctrl+c: sends a SIGNINT to the current running job and kills it; if sent before entering a command, it clears the current line in the prompt Ctrl+d: sends a quit signal - can be used to exit certain applications or exit a terminal jobs -l or ps -a: see jobs  Screen #   Ctrl+l: clear screen except current line Ctrl+u: clear current prompt line  Command History #   Ctrl+r: search through command history in reverse  Directory Navigation #   cd -: to last dir cd: go to home if entered without arguments reptyr to move pushd/popd \u0026amp; dirs to use path stack history, and !‚Ññ to run that cmd ctrl-left/right to nav args expansion with mv /path/meh.{md,txt}  Performance Analysis #  Aliases and customization #  Aliases #  Aliases are custom names assigned to commands. The command alias will display the current aliases set in your shell. An alias maps to a specific command which is run when the alias in entered. Aliases are useful if you have long commands that are used often. Entering alias suinstall='sudo apt-get install' will temporarily allow you to use suinstall instead of typing sudo apt-get install. Any switches and arguments the command takes can be used with the alias. The alias is lost when the current terminal session is closed.\nTo make aliases permanent, add them to your shell\u0026rsquo;s configuration file (.bashrc or .zshrc).\nCustomization #  Aliases are one way to customize your shell. Most shell customization occurs in the shells configuration file, usually stored as a hidden file in the home directory. .bashrc and .zshrc are the configuration files for bash and zsh. The files are loaded every time a terminal is started up and can set up its environment by loading aliases and custom functions and setting terminal colors and variables like PATH and EDITOR.\nhttps://github.com/zsh-users/zsh-autosuggestions\n[TODO]\nShell Scripting #  [TODO] xargs, sed, awk, fzf, grep,\nhttps://shellmagic.xyz/\nhttps://wiki.bash-hackers.org/\n[TODO] text on what shell scripting is  source: b0rk on Twitter, check out https://wizardzines.com for more   Minimal Safe Bash Script Template (Maciej Radzikowski)\n1 2 3 4  for file in * do whatever command on $file done   1 2 3 4  for file in *.png do waifu2x-ncnn-vulkan -n 1 -s 2 -i $file -o $file done   Alternative Shells #  When we installed arch we actually changed the default shell from bash to zsh, but there are other options such as fish, csh, and xonsh among others\n[TODO]\nAlternative commands #   bat  alternative to cat, capable of syntax highlighting and line numbering   exa, lsd  alternatives to ls, eaiser on the eyes You could also use ranger or nnn two fully featured terminal file browsers   fd  altertnative to find, doesn\u0026rsquo;t suck   htop, gtop  alternatives to top, doesn\u0026rsquo;t suck   prettyping  alternative to ping, pretty   diff-so-fancy, icdiff, Delta  alternative to diff, but better   ncdu and dust  while much slower than du it\u0026rsquo;s great for finding out what\u0026rsquo;s eating storage space   choose  user friendly, simple alternative to awk/cut   ripgrep  \u0026ldquo;ripgrep is a line-oriented search tool that recursively searches your current directory for a regex pattern. By default, ripgrep will respect your .gitignore and automatically skip hidden files/directories and binary files. ripgrep has first class support on Windows, macOS and Linux, with binary downloads available for every release. ripgrep is similar to other popular search tools like The Silver Searcher, ack and grep.\u0026rdquo; TLDR: Search into your text files really fast with regex support. RGA is like ripgrep on steroids- seaches though PDFs, ebooks, office docs, compressed files, etc. Semgrep may be a better fit for doing code stuff   echowo  alternative to echo, but significantly furrier    Useful Non-Stock CLI Tools #    tldr\n tldr, \u0026lsquo;for too long didn\u0026rsquo;t read\u0026rsquo; provides a quick, easy to read version of the man page for many common linux commands. Forget how to use tar ? just run tldr tar    autojump\n refrence above description in faster navigation    mpd + ncmpcpp\n \u0026lsquo;music player daemon\u0026rsquo; and \u0026lsquo;ncurses music player client plus plus\u0026rsquo; are two cli tools that work in tandem to provide an experiance that I presonally find superiour to any graphical music player    irssi\n full featured IRC client, chat right from your terminal    screenfetch\n get some nift stats about your terminal, add to your shell\u0026rsquo;s RC file to be one of the cool kids    moreutils\n \u0026ldquo;moreutils is a growing collection of the unix tools that nobody thought to write long ago when unix was young.\u0026rdquo;    hr\n Need some way to visually seperate things, this literally just makes a horizontal line in the terminal    fltrdr\n Wanna read at 1000wpm, this is the tool for you.    crex\n test regular expressions in the terminal    lynx, w3m, browsh\n Browse the web from a terminal (not a joke and actually useful)    entr\n monitor file system for changes    noti\n send a graphical system notification when a command finishes    progress\n start a command and have no way to see what its doing (rsync, cp, etc)? This is your tool    figlet, toilet, banner\n makes big text, run figlet Your Text Here and see your text in big, ascii letters    no more secrets\n reveal text in a martix effect.. I\u0026rsquo;m streching the meaning of useful here    stress-ng\n stresstest your system in pretty much any super specific way you can think of, or hammer your cpu to test an overclock    pandoc\n convert between damn near any text format to any other format    taskwarrior\n keep track of To-Do\u0026rsquo;s and tasks, can also be paired with timewarrior for timetracking    waifu2x (many forks available)\n Upscale and de-noise images zoom-and-enhance style but for real- this ones' a bit GPU intensive because it uses AI    youtube-dl\n despite the name this tool can download videos or audio from almost any page on the internet, even supporting playlists in many cases too.    gallery-dl is good for grabbing albums from photo hosting websites\n  rat\n \u0026ldquo;Compose shell commands to build terminal applications\u0026rdquo;    magic-wormhole\n tool for getting a file between two systems easily and secure, just run wormhole send and wormhole recive on the respective systems    Ix, Gist\n Paste tools, like pastebin    DMIDecode\n get info from BIOS    hexyl\n pretty terminal based hex viewer    UXY\n  \u0026ldquo;UXY tool also wraps some common UNIX tools and exports their output in UXY format.\u0026rdquo;\n\u0026ldquo;UXY is a tool to manipulate UXY format, which is a basically a two-dimenstional table that\u0026rsquo;s both human- and machine-readable.\u0026rdquo;\nThis gives a nice format for manipulation of commands though pipes for super complex shell scripting\n    lsof\n list what files a runnig process has open    glow or mdcat\n display markdown files in the terminal    While some of these may be included, they\u0026rsquo;re some of the OG addons or tools to make included things better:\n  tmux\n multiplex your termianal, open multiple terminals in your terminal, usefull in non-graphicas ttys espically    vim + extensions (neovim, spacevim, etc)\n the old school text editor meets new school    GDB + gef\n GDB, the original debugger, has it\u0026rsquo;s faults. GEF, a config file for GDB on steroids, fixes many of them. While originally made for exploit developers, many people use it for everyday debugging    resh\n replacement for ctrl+r history seach    optipng, jpegoptim\n Each works with it\u0026rsquo;s respective image format and does some trial-and-error magic to re-compress the file no-lossy-er than it was to save space. No info loss but often a large file size reduction!    Displaying Data in the terminal #  [TODO] info about various librarier and tools that show data using text based graphics or via terminals that can render SVGs/images  üí°FAQ about displaying stuff in a terminal pic.twitter.com/XQBOezyJAx\n\u0026mdash; Kate (but with plastic reindeer antlers on) (@thingskatedid) October 13, 2020  graphviz provides dot among other tools, this thread also mentions libsixel, plot.awk, KGT (Kate\u0026rsquo;s Grammer Tools), libFSM for turning regex into FSMs.\n  A note on Graphical-ish terminal programs #  like brow.sh [TODO]\nHow might the terminal evolve? #  CLUI: Building a Graphical Command Line (Repelit)\nCommon Graphical Linux Utils #  [TODO]\nMostly taken from https://wiki.archlinux.org/index.php/List_of_applications and https://github.com/Kickball/awesome-selfhosted\nGraphical Environments++ #  Gnome, KDE, Pantheon,\nRofi, Polybar, j4,\nCompton\nNitrogen, pywal, (feh),\nFree Graphical Utilities #  Office \u0026amp; Daily #  Libreoffice, Xournal++,\nthunar + bulk rename, nautilus, Filezilla, Deluge, qBitTorrent,\nFirefox, Min, Vivalidi,\nMarktext, Typora, Notable\nGeogebra\nEvolution\nEvince\nA/V #  Feh, Nomacs\nRawtherepee, Krita, Gimp, Darktable\nInkscape,\nBlender, Pencil2D, OpenToonz\nGoxel,\nPithos, Gnome-Music,\nCadence (jack2)\nAudacity, Ardour, LMMS, non, Radium\nGiada\nVCV Rack\nGuitarix\nPureData, SonicPi, ORCA\nProcessing, VVVV,\nVLC\nDaVinci Resolve\nCheese, Motion, OBS\nSocial #  Thunderbird\nLBRY\nDiscord, Telegram, qTox, HexChat, SRain, Riot/Fractal ,\nProgramming #  Okteta\nGitkraken\nCode, Atom, Sublime, Code::Blocks, Eclipse, Netbeans, IntelliJ, Sublime\nPyCharm, Spyder\nCutter, Node-Red\nEtherape/cap, Wireshark\nEngineering #  FreeCAD, LibreCAD, KiCad, CircuitSim, Fritzing\nPulseView, Arduino, PlatformIO\nSystem #  Alacritty, urxvt, Deepin-Terminal, Hyper,\nBaobab, Filelight, GParted, VeraCrypt\nSyncthing\nEtcher\nlsusb, lshw, lstopo, usbview,\nFirewall frontend?\nClamAV\ndeepin-screesshot, scrot\nIRL #  Gnome-Maps\nGnome-Weather\nCelestia\nStellarium\nOther #  GnuRadio, SDRAngel\nPaid Graphical Utilities #  Renoise, Bitwig\nSelf hosted / Services #  Netdata\nVPN (Wiregaurd)\nSnort, Suritica\nGitea, Gitlab\nMathics\nLAMP stack\nCouchpotato, headphones\nmpd, ampache\nOwncloud, NextClound\nSamba\nDAT, IPFS\nConvos.by\nIx , 0bin (pastebin)\nMathics\nTaskWeb (TaskWarrior)\nOther Linux Distros that are neat #  Gobo Linux\n GoboLinux is an alternative Linux distribution which redefines the entire filesystem hierarchy.\nIn GoboLinux you don\u0026rsquo;t need a package database because the filesystem is the database: each program resides in its own directory, such as /Programs/LibX11/1.6.9 and /Programs/GCC/9.2.0.\n Bedrock Linux\n Bedrock Linux is a meta Linux distribution which allows users to mix-and-match components from other, typically incompatible distributions. Bedrock integrates these components into one largely cohesive system.\nFor example, one could have:\n Debian\u0026rsquo;s stable coreutils Arch\u0026rsquo;s cutting edge kernel Void\u0026rsquo;s runit init system A pdf reader with custom patches automatically maintained by Gentoo\u0026rsquo;s portage A font from Arch\u0026rsquo;s AUR Games running against Ubuntu\u0026rsquo;s libraries Business software running against CentOS\u0026rsquo;s libraries  All at the same time and working together mostly as though they were packaged for the same distribution.\n NixOS\n Nix builds packages in isolation from each other. This ensures that they are reproducible and don\u0026rsquo;t have undeclared dependencies, so if a package works on one machine, it will also work on another.\n Qubes OS\n see https://www.qubes-os.org/intro/ - basically everything gets it\u0026rsquo;s own VM for security sake\n Tails Linux\n Tails is a portable operating system that protects against surveillance and censorship.\n Debian Dog\n This is the only distro I could find that will actually work somewhat well on systems with ancient x86 CPUs (586,686-pae)\n "}),a.add({id:37,href:'/engineering/making/3dprint/',title:"3dprint",section:"Engineering",content:"Chapter 34 - 3D printing, CNC, and making things #  34.1 - Basic making #  Wood working #  Safety #  Cool projects #  Lichtenberg Figure Table (imgur)\nEpoxy Inlay and Rustic Compass Butcher Block Countertops (imgur) (YouTube)\nWood Tables Embedded with Photoluminescent Resin (Mike Warren)\nMetal Working #  Safety #  34.2 - CNC, 3D, Lasers, \u0026amp; Plotting #  Plotting #  Lasters #  3D Printing #  From personal experiance, I can tell you the really cheap, like sub $200 printers, are mostly shit. I\u0026rsquo;m currently rocking an Ender 3 V2, which is around $300.\n So far I\u0026rsquo;ve had pretty good luck with it. It\u0026rsquo;s not perfect, and if you do get the base kit, you\u0026rsquo;ll still probably need to put some money into it to upgrade it to fix some of it\u0026rsquo;s more glaring issues, but that can be done iteratively and it will still work \u0026lsquo;stock\u0026rsquo;.\nIt\u0026rsquo;s also a pretty popular printer, which means there\u0026rsquo;s a lot of videos on upgrading it and printable upgrade parts on Thingiverse.\nObviously still do your own research, but at least as of the time of writing (Mar of 2021) this seems like the best option at an entry-level price point. If you can\u0026rsquo;t do at least this printer, I\u0026rsquo;d really advise just saving your money, because anything cheaper is really going to be questionable, to the point it may not ever really work.\n   [TODO]\nCalibration @ https://teachingtechyt.github.io/calibration.html\n[TODO] Autoleveling\nModeling #  [TODO] look into https://libfive.com/studio/ instead of OpenSCad as OpenSCad is full of problems\n[TODO] complient design, see 3D Printed Joystick Using Spherical Flexure Joint (Hackaday)\nOpenSCad #  https://github.com/davidson16807/relativity.scad\nhttps://github.com/revarbat/BOSL2\nhttps://github.com/JustinSDK/dotSCAD\n isogrid2020 (GitHub)\nVpype (GitHub) - \u0026ldquo;The Swiss-Army-knife command-line tool for plotter vector graphics.\u0026rdquo;\nLaser Etching Stainless Steel with Mustard (Hackaday)\nAchieve true 3D printing with non planar slicing (YouTube, Teaching Tech)\n3D Printing 90 degree overhangs with non-planar Slicing (Hackaday)\nGiant Mechanical Iris! Cut on a CNC Router (YouTube)\nTopology Optimization makes for some cool shelves (YouTube)\nClearner Laser Cutting With a 3D-Printed Nozzle (Hackaday) ,Links to article by Jesse @Nervous Systems\nElksmaker modifications (YouTube)\nSome neat 3D printable things #  https://www.prusaprinters.org/prints/7876-rotating-rings-toy\nVGA USB cover (Thingiverse)\nFuckofftopus 2.0 (Thingiverse)\nMotorized Scaly Gauntlet (Hackaday)\n34.3 - Aluminum Extrusion #  Getting started with Aluminum Extrusions (Hackaday)\n"}),a.add({id:38,href:'/engineering/making/hamradio/',title:"Hamradio",section:"Engineering",content:"Chapter 35 - Ham Radio #  TODO: https://github.com/jopohl/urh\n\u0026lsquo;137Mhz\u0026rsquo; by u/CashewHut LORA\n2.4Ghz patch antenna\nelectronically tunable filters\nNational Radio Quiet Zone (Wikipedia)\nhttps://newhams.info/2017/02/17/rf-connector-types/\nquestion of the day:\nAnalog TV is shut down in the US, right? so all the over-the-air TV is digital. And existing analog OTA frequencies are getting repurposed to other uses... so what am I seeing on UHF channel 60? it\u0026#39;s got way more structure than the noise everywhere else. pic.twitter.com/Jm9W9JsjgF\n\u0026mdash; foone (@Foone) March 17, 2020  Waveguides Explained (YouTube)\nHow a Crystal Radio Works (YouTube)\nSo You Got an SDR (Twitch, DefCon28) (Youtube, Defcon28)\nRadi-uhoh : What is this SDR thing and how do I use it?: Josh Conway (Youtube)\n2200-meter band (Wikipedia)\nChattervox (Github)\nMonitor Airplane Traffic with a Raspberry Pi and SDR\nSDR: Digital Adventures in Shortwave Radio (Justus.ws Blog)\nIRC over LORA for when things go really south(Tom Nardi, Hackaday)\nA Cleverly Concealed Magnetic Loop Antenna (Jenny List, Hackaday)\n Video courtesy of OH6BPL  Here OH6BPL is using the Computer Craft Minecraft mod to mirror the settings of his radio!   From u/irresponsible_owl on Reddit, in response to a picture of a USB cable with a dozen ferrite cores on it:\n Are you sure the cable is shielded? One quick way to tell is to put a continuity tester on the outside metal parts of each end. If it beeps, the cable is likely shielded. I\u0026rsquo;ve seen tons of cables that aren\u0026rsquo;t, where there\u0026rsquo;s no connection between the jack covers - even though the USB specification says there must be. If there\u0026rsquo;s continuity it doesn\u0026rsquo;t guarantee it\u0026rsquo;s shielded, but lack of continuity is a sure sign it\u0026rsquo;s not.\nIf the cable is shielded you shouldn\u0026rsquo;t need more than 2 ferrites, one at each end.\nSource: I\u0026rsquo;ve been down this road before\u0026hellip;\nEdit: Here are some fun articles to read:\nhttps://www.yoctopuce.com/EN/article/usb-cables-shielding-matters-as-well\nhttps://www.totalphase.com/blog/2020/05/what-are-the-guidelines-for-testing-ground-and-shield-resistance-of-usb-cables/\nYou can get a lot more in depth with the testing if you want\u0026hellip; or just buy a higher quality cable :D\n ?\u0026gt; I\u0026rsquo;ve actually set this up using a HackRF and Rock64. It\u0026rsquo;s pretty neat. Just be aware the ADS-b, the radio signals you\u0026rsquo;ll be picking up to do this, are very line-of-sight so you might need to plop the antenna on your roof or something.\n"}),a.add({id:39,href:'/engineering/making/history/',title:"History",section:"Engineering",content:"Chapter 36 - History #  BBS and Tildie Sites #  tilde.town: A social network over SSH\nTilde.club\nOther Tilde Services?\n https://en.wikipedia.org/wiki/The_Mother_of_All_Demos\nAdam Savage\u0026rsquo;s Computer History Collection! (Youtube)\nPreserving data #  https://media.ccc.de/v/31c3_-_6373_-_en_-_saal_6_-_201412291600_-_the_only_thing_we_know_about_cyberspace_is_that_its_640x480_-_olia_lialina#t=3641\nPreserving hardware #  https://en.wikipedia.org/wiki/Delay_line_memory\nhttp://www.vcfed.org/forum/forum.php\nhttps://skilldrick.github.io/easy6502/\n"}),a.add({id:40,href:'/engineering/math/math/',title:"Math",section:"Engineering",content:"Chapter 6 - Math #   The next few chapters are, regrettably, necessary for developing your knack. Math, Physics, and Chemistry and fundamental to all engineering fields and while something about each of the three subjects finds a way to make the 16 year old high schooler in us release a long, exasperated groan. I think this is mostly due to each of these things being taught in a way that takes the fun and interesting parts out and replaces them with trying to learn skills that have largely been outdated by the advent of calculators, computers, and the internet. I\u0026rsquo;ll do my best to keep this chapter interesting by showing some of the fun parts of math and linking to the most entertaining videos and \u0026lsquo;hands on\u0026rsquo; resources that I can. So, let\u0026rsquo;s get mathy!\nAs with all of OpGuides, please skip around as necessary. I suspect the start of this math chapter will be stuff many readers already know, especially those currently in college. This video on How to Read Math (YouTube, Dominic Walliman) and the cheat sheet from it, How To Read Math, Cheat Sheet (Flickr, Dominic Walliman) may help you get your brain juices flowing.\nIf you\u0026rsquo;re reading this as someone that\u0026rsquo;s trying to refresh on what they learned in high school, I do still recommend reading what I have on this page, but Professor Leonard\u0026rsquo;s College Algebra and Trigonometry course on YouTube is probably your best bet for getting back up to speed, though it is long enough to take a week of full time watching to get through.\nChapter 11 - Math #  [TODO] some motivation, Klein bottle guy, non-euclidean games, fractals, colatz conjecture, math in music, etc.\n1 - Algebra #  This section is a tad bit misnamed, as instead of covering just Algebra I\u0026rsquo;ll be covering most things you\u0026rsquo;d learn in a high school Algebra class along side it, plus probably a bit extra.  Number Systems #  To get started, let\u0026rsquo;s look at \u0026lsquo;Number Systems\u0026rsquo;. Essentially, there are a variety of \u0026lsquo;types\u0026rsquo; of numbers, rather than get all philosophical let\u0026rsquo;s just dive in and I think you\u0026rsquo;ll get the gist.\n‚Ñï - Natural Numbers #  Natural Numbers are the dead basic set of numbers, 1, 2, 3, 4, 5, etc. note, this this doesn\u0026rsquo;t include fractions, decimals, etc. or the number 0. Whole Numbers is the set of natural numbers and the number 0, so 0, 1, 2, 3\u0026hellip;\n‚Ñ§ - Integers #  Alright, Natural and Whole numbers are great and all, but what if we want to represent a deficit or debt? Negative numbers would definitely be nice- introducing Integers, this is just the set of Whole numbers and the their inverses, so \u0026hellip;. -3, -2, -1, 0, 1, 2, 3 \u0026hellip;\nIf you come from a programming background, do note that what programming languages call integers is ever so slightly different. Namely, mathematically integers include arbitrarily large numbers, but in programming most int types are bounded by how many bits they can store, for example, an 8 bit signed integer can only hold values ranging from -128 to 127. ‚Ñö - Rational Numbers #  Alright, so, what if we want to represent the number of slices in a pie? Sure, we could say that pie has been cut into 6 slices and 1 of the slices is gone, so 5 remain, but the obviously natural way to say this is 5/6 of the pie is left, and like that we\u0026rsquo;ve invented rational numbers.\nA rational number is any number that can be written as an integer over an integer. so   \\( \\frac{1}{2} \\text{ and } \\frac{-1}{2} \\)  are both obviously valid. \u0026lsquo;Improper\u0026rsquo; fractions, that is fractions where the top is bigger than the bottom, like  \\( \\frac{4}{3} \\text{ and } \\frac{-3}{2} \\)  are both valid too.\nOf note, these can be written as mixed numbers too, that is  \\( \\frac{4}{3} = 1\\frac{1}{3} \\)  , as  \\( \\frac{3}{3} = 1 \\text{ so the remaining } \\frac{1}{3} \\)  is just written next to it.\nNote, that rational numbers do include numbers with an infinite repeating decimal, that is while  \\( \\frac{1}{2} \\text{ can be written as } .5 \\)  ,  \\( \\frac{1}{3} \\text{ has a repeating decimal, } \\frac{1}{3} = .333333... = .\\overline{33} \\)  , where the line over the 3\u0026rsquo;s implies that the 3\u0026rsquo;s repeat infinitely. This is still a rational number.\n- Irrational Numbers #  Alright then, what\u0026rsquo;s an irrational number?\nWell, this is easier to answer with a few examples, the most well know of which is  \\( \\pi = 3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499... \\)  \u0026hellip; I think you get the idea.\nIrrational numbers are numbers where the decimal doesn\u0026rsquo;t repeat and as such can not be written as an integer over another integer. Because pi is a geometrically defined constant, it may be easier to look at something a bit more tangible.\nthe square root of a number is just the number that when multiplied with itself gives the number in question, so the square root of 4 is 2 because 2*2 is 4, the square root of 9 is 3 because 3*3 is 9, etc.\nBut what about the square root of 2? well  \\( \\sqrt{2} = 1.414213562373.... \\)  you get the idea. Like with pi, it\u0026rsquo;s a number that goes on forever, with no repeating pattern.\nLater on you\u0026rsquo;ll see other irrational constants like  \\( e = 2.718281828459.... \\)  and The Golden Ratio  \\( \\frac{1\u0026#43;\\sqrt{5}}{2} = 1.618033988749.... \\)  ‚Ñù - Real Numbers #  Finally, we\u0026rsquo;re up to the normal number line, that is, we now have the set of all numbers on the number line, all the way from -‚àû to +‚àû, (often written as ¬±‚àû) pick any number, with as many random numbers before or after the decimal point as you want, and that\u0026rsquo;s a real number.\n \\( i \\)  - Imaginary Numbers #  Yep, that\u0026rsquo;s pretty much everyone\u0026rsquo;s first reaction. What in the hell is an imaginary number?\nWell, okay, remember before how I said a square root was just whatever number you need to multiply with itself to get the number, so  \\( \\sqrt{4} = 2 \\)  ? This has a problem, a negative number times a negative number is always positive, so  \\( 3 * 3 = 9, -3 * 3 = -9, \\text{ but } -3 * -3 = 9 \\)  So, what would the square root of a negitive number be? There are no two numbers that can multiply to give us -1, so, we made one up!  \\( \\sqrt{-1} = i \\)  furthermore,  \\( \\sqrt{-4} = 2i \\)  i being equal to  \\(\\sqrt{-1}\\)  has some interesting properties with exponents. Naturally exponentiation is the inverse of a root, that is  \\( 3^2 = 9, \\text{ as } \\sqrt{9} = 3 \\text{ implies that } \\sqrt{9}^2=9\\)  ,\nWhen taken to negitive numbers, we can see this effect, so  \\( \\sqrt{-1}^2=-1 \\text{ implies } \\sqrt{-1}^2 = i^2 = i* i = -1\\)  So what if we keep taking i to higher powers?\n \\( i * i = i^2 = -1 \\text{ and } i * i * i = i^3 = -i \\text{ and } i * i * i *i = i^4 = 1\\)  then this pattern repeats, so  \\( i^5 = i^4 * i = 1 * i = i \\text{ and } i^6 = i^4 * i^2 = -1 \\text{ and so on, } i^7 = -i, i^8 = 1, i^9 = i \\)  and so on.\nNote, you may also see \u0026lsquo;j\u0026rsquo; used instead \u0026lsquo;i\u0026rsquo; to represent imaginary numbers. While you\u0026rsquo;re inital reaction may be \u0026ldquo;Who cares?\u0026rdquo;, I assure you you\u0026rsquo;ll see the value of this in a bit.\n‚ÑÇ - Complex Numbers #  Complex numbers then, the end of this adventure for most sane people, are just Real numbers with imaginary numbers, written together, so this is numbers like  \\( 32 \u0026#43; 4i \\text{ or } 420.69 - 2i\\)  . This brings about something called the complex plane, as now if we want to plot these numbers we can no longer use a simple number line, but instead need an axis for each part, one for the Real (‚Ñù) part, and one for the imaginary part.\nHere\u0026rsquo;s a video to help you understand imaginary and complex numbers, albeit it does assume you\u0026rsquo;ve at least seen both a little bit before.\n Hypercomplex numbers are also a thing, this term includes Quaternions which are used in some very high level physics, but otherwise you\u0026rsquo;ll most likely never work with these.\nInfinity #  Diving into the weeds for a bit, let\u0026rsquo;s poke the concept of Infinity:\n  Notation #  +, -, *, √∑, mod #  If you don\u0026rsquo;t know that addition, subtraction, multiplication, and division are, I think you\u0026rsquo;re in the wrong place\u0026hellip;\nThat said, there are some things you may not be used to. For starters, multiplication can be written in a variety of ways. of course there\u0026rsquo;s the classic  \\( 2 \\times 2 = 4 \\)  but you may also see  \\( 2 \\cdot 2 = 4 \\)  or  \\( 2 * 2 = 4 \\)  or just  \\( 2(2) = 4 \\)  , where parentheses with no operation in between imply multiplication.\nTypically, the  \\( 2 \\cdot 2 = 4 \\)  and parentheses methods are used on paper, while the  \\( 2 * 2 = 4 \\)  is used on computer screens as it\u0026rsquo;s easy to type.  \\( 2 \\times 2 = 4 \\)  is generally not preferred as it can be confused with other operations you\u0026rsquo;ll see later.\nSomething to keep in mind is that addition and multiplication are both, both commutative and associative, while subtraction and division are not. What this means is that while  \\( 2 \u0026#43; 3 = 3 \u0026#43; 2 \\text{ but, } 2 - 3 \\neq 3 - 2 \\)  (The Commutative Property) similarly,  \\( 2 * 3 = 3 * 2 \\text{ but, } 2 \\div 3 \\neq 3 \\div 2 \\)  Furthermore,  \\( (2 \u0026#43; 3) \u0026#43; 4 = 3 \u0026#43; (2 \u0026#43; 4) \\text{ but, } (2 - 3) - 4 \\neq 2 - (3 - 4) \\)  and  \\( (2 * 3) * 4 = 3 * (2 * 4) \\text{ but, } (2 \\div 3) \\div 4 \\neq 2 \\div (3 \\div 4) \\)  , by the Associative Property.\nFinally, for multiplication, you should keep in mind how to do multiplication on grouped items\n[TODO] $a*(x+y)$ and $(a+b)(x+y)$ - FOIL\nFor division, there\u0026rsquo;s some terminology you should know. First of all, in  \\( \\frac{a}{b} \\)  , a is the numerator and b is the denominator. The reciprocal of  \\( \\frac{a}{b} \\)  is  \\( \\frac{b}{a} \\)  . This is actually pretty useful, for example, given  \\( \\frac{a}{\\frac{b}{c}} \\)  you can write this as,  \\( a * \\frac{c}{b} \\)  Modulo is something you\u0026rsquo;ll see in programming a lot, in programming it\u0026rsquo;s usually represented with the percent sign.\nModulo is just the reminder after division, so 7%3 is 1, because 3 goes into 7 twice, with 1 left over.\n^, ‚àö, !, log() #  exponents, written as either  \\( a^x \\text{ or } \\)  a^x or exp(x) if the base is \u0026lsquo;e\u0026rsquo;, that is  \\( e^x \\)  , are pretty simple to understand, they\u0026rsquo;re just repeated multiplication, so  \\( a^3 = a * a * a \\)  This results in a few \u0026lsquo;rules\u0026rsquo; for exponents which are fairly easy to understand, with the exception of the not at all intuitive  \\( a^0 = 1 \\)     Exponent Rule Assume a‚â†0 and b‚â†0     Product Rule  \\( a^x * a^y = a^{x\u0026#43;y} \\)     Quotient Rule  \\( a^x / a^y = a^{x-y} \\)     Power Rule  \\( (a^x) ^y = a^{x*y}\\)     Power of a Product Rule  \\( (a*b)^x = a^x*b^x \\)     Power of a Fraction Rule  \\( (\\frac{a}{b})^x = (\\frac{a^x}{b^x}) \\)     Fractional Exponent  \\( a^{\\frac{x}{y}} = \\sqrt[y]{a^x} \\)     Negitive Exponent  \\( a^{-x} = \\frac{1}{a^x} \\)     Zero Exponent ¬°easy to forget!  \\( a^0 = 1 \\)      alright, so why do I say these are intuitive? Let\u0026rsquo;s take the product rule for example. Let\u0026rsquo;s look at  \\( 2^2 * 2^3 = 2^5 \\)  this is true because  \\( 2^2 = 2*2 , 2^3 = 2 * 2 * 2 \\text{, so multiplied together they\u0026#39;re }(2 * 2) * (2 * 2 * 2) \\text{ and as multiplication is associative that is } 2*2*2*2*2 = 2^5 \\)  , generally, any of these rules can be figured out by just writing out examples like these, expanding the exponent out like this, and seeing what happens.\nAlright, so now we can look at roots. The most common root you\u0026rsquo;ll work with is the square root, which is what is implied when seeing a root symbol with no number in the crevice, though can be written explicitly as  \\( \\sqrt[2]{n} \\)  , though as you should\u0026rsquo;ve notice in the exponent rules other roots are possible, for example the cube root, which is  \\( \\sqrt[3]{n} \\)  is just whatever number you need to multiply with itself 3 times to get n, so for example  \\( \\sqrt[3]{8} = 2 \\text{ as } 2 * 2 * 2 = 8 \\)  As implied by the Fractional exponent rule, roots can be written as fractional exponents, that is  \\( \\sqrt[2]{n} = n^{1/2} \\)  often it\u0026rsquo;s actually more convenient to enter this notation into a calculator or programming language anyway. It can even just be nice for working on paper as when writing something like  \\( \\frac{1}{\\sqrt{ \\text{some really long equation here}}} \\)  it can be easy to miss the top bar and forget it\u0026rsquo;s there, compared to  \\( \\frac{1}{( \\text{some really long equation here})^{\\frac{1}{2}}} \\)  where the power sticks out more.\nNext, there\u0026rsquo;s factorial, written with the !, it just means to multiply the number with the number prior down to 1, so  \\( 4! = 4 * 3 *2 * 1 \\)  Finally, let\u0026rsquo;s look at Logarithms:\n Scientific Notation #  Say you have a really big number like 2,340,000,000,000,000,000 or a really small number 0.000000567 in either case, writing out and counting the zeros is very cumbersome and easy to mess up. For this reason, scientific notation is common. In scientific notation, those numbers would be written as  \\( 2.34 \\times 10^{18} \\)  and  \\( 5.67 \\times 10^{-7} \\)  respectively. In each case, it\u0026rsquo;s just a matter of moving the numbers so that there\u0026rsquo;s only one digit before the decimal, then listing to what power of 10 you need to multiply this number by to get the original number- meaning the power will be the same as the number of 0\u0026rsquo;s in the original number. You may see calculators show this with a big \u0026lsquo;E\u0026rsquo; instead of writing the  \\( x.xxxx \\times 10^{y} \\)  , for example  \\( 5.67 \\times 10^{-7} \\)  is often shown as 5.67E-7\n[TODO] beyond scientific notation for REALLY big numbers video\u0026hellip; numberphile?\n=, \u0026lt;, \u0026gt;, ‚â§, ‚â•, ‚â†, \u0026laquo;, \u0026raquo;, ‚âà, ‚àù #  The equal sign is pretty obvious, it just means that what ever is on each side is equal. The implications of this will lead us deeper into algebra though as we actually solve equations. There\u0026rsquo;s some really obvious equalities, those that lack variables, so things like  \\( 1 \u0026#43; 2 = 3 \\)  or any of the equalities shown to this point really. Where equality gets a bit more interesting is when there\u0026rsquo;s an unknown (variable, same thing). For example,  \\( 1 \u0026#43; x = 3 \\)  here we cane see pretty obviously that x must be 2. We\u0026rsquo;ll go into how to actually solve for these unknowns with non-obvious equations in a bit.\nLess Than and Greater Than are similarly simple, they just state that one side has a bigger number than the other. The \u0026lsquo;\u0026gt;\u0026rsquo; or \u0026lsquo;\u0026lt;\u0026rsquo; symbols should always \u0026lsquo;eat\u0026rsquo; the bigger number, that is the open side faces the bigger number, and the pointy side points to the smaller.  \\( 2 \u0026lt; 3 \\)  and  \\( 4 \u0026gt; 3 \\)  are examples of this. When variable are involved, it usually means there are multiple solutions.  \\( x \u0026gt; 3 \\)  for example, is satisfied for any x greater than 3, right down to 3.0000000000\u0026hellip;00001 all the way up to ‚àû. Similarly, there are \u0026lsquo;or equal to\u0026rsquo; variants of less than and greater than, which are written with a bar underneath so  \\( x \\geq 3 \\)  is satisfied for x equal to 3 to ‚àû, so the 3 is included with the \u0026lsquo;or equal to part.\u0026rsquo;\n‚â† means \u0026lsquo;Not Equal To\u0026rsquo;, and as the name impiles it\u0026rsquo;s just saying the two sides can\u0026rsquo;t be equal so with  \\( x \\neq 0 \\)  , x can be any value, except for 0.\nNext are MUCH greater and less than, written with a double less than or greater than sign, so  \\( \\gg \\text{ or } \\ll \\)  these are weird for people new to the idea, because they\u0026rsquo;re sort of fluid and depend on the situation. Generally they\u0026rsquo;re used to say \u0026ldquo;This number is so small that it doesn\u0026rsquo;t effect the outcome\u0026rdquo; or \u0026ldquo;This number is large that it dominates the outcome\u0026rdquo;\nNext up, is ‚âà or \u0026ldquo;Approximately Equal To\u0026rdquo;. This is for when you know your answer is off by some amount, due to impercesion in computation but it\u0026rsquo;s still close enough for whatever you need to use it for. For example  \\( \\pi \\approx 3.1416 \\)  Finally, there\u0026rsquo;s ‚àù for \u0026lsquo;proportional to\u0026rsquo;. This just means the two equations are only different by a multiplited constant. For example, say  \\( y = kx \\)  , where k is a constant (some number that can\u0026rsquo;t change) then  \\( y \\propto x \\)  . This is useful for when two equations are representing something massively different in scale, but we want to indicate that they have the same behavior.\n|x|, ‚àÜ, ‚åäx‚åã, ‚åàx‚åâ, ¬± #  The  \\( |x| \\)  symbol means \u0026ldquo;Absolute Value\u0026rdquo;, which, is really just a fancy way of saying \u0026ldquo;Make it positive.\u0026rdquo;, so  \\( |3| = 3 \\)  , no change, but  \\( |-3| = 3 \\)  .\nLater on you\u0026rsquo;ll also see something called the \u0026lsquo;Determinate\u0026rsquo;, this uses the same notation, two vertical bars, but is totally different. Thankfully it\u0026rsquo;s not hard to tell apart, as the determinate is a matrix operation, meaning there will be a grid of numbers between the bars instead of a single expression. Delta,  \\( \\Delta \\)  , is the change between two things, so from 10 to 20 degrees is a delta of 10 degrees. It is usally used with real units like this, giving us the difference between the final and inital values in an experiment. So really it\u0026rsquo;s just Final Value - Initial Value. You may also see  \\( \\Delta t \\)  or  \\( \\Delta x \\)  , this would be change in time and change in position (usually) respectively. Note that Œî can be negitive.\n \\( \\left \\lfloor{x}\\right \\rfloor \\)  is the \u0026lsquo;floor\u0026rsquo; of x. Similarly,  \\( \\left \\lceil{x}\\right \\rceil \\)  is the \u0026lsquo;ceiling\u0026rsquo; of x. Very basically, For floor this just means to drop everything after the decmial right off, so  \\( \\left \\lfloor{1.534}\\right \\rfloor = 1 \\)  . For ceiling, it means to go up 1 and take the decimal off.  \\( \\left \\lceil{1.001}\\right \\rceil = 1\\)  Finally, for lack of a better place to put it, let\u0026rsquo;s look at ¬±. This is \u0026lsquo;Plus or Minus\u0026rsquo; and it just means to do both, for example 3¬±2 gives us 1 and 5 as answers. Usually when this symbol is used, one of the two answers ends up being thrown out as invalid, but not always.\nf (x), (f ‚àò g) #  [TODO]\n(a,b), [a, b] #  [TODO]\n‚àë, Œ† #  [TODO]\nhttps://www.rapidtables.com/math/symbols/Basic_Math_Symbols.html\nOrder of Operations #  Yes, I did make my own stupid math meme just for this. Fite me.  We\u0026rsquo;ve all seen these incredibly stupid memes going around social media at one point (Reason ‚Ññ876 to quit FaceBook), but why do people argue over the answer? The real answer is because it\u0026rsquo;s a really stupid problem. It has ambuguity baked into it, because of a lack of perentheses the solution is truly a bit ambiguous. That said, the \u0026lsquo;accepted\u0026rsquo; correct answers will either be 2/3 or 6 because of PEMDAS, which is, in itself a crappy acroynm, and sholud probably be written as (PE)(MD)(AS), let me explain.   PEMDAS stands for Perentheses, Exponents, Multiplication, Division, Addition, Subtraction, and is in general the correct order to do math operations. so given a mess like  \\( \\frac{4*(1 \u0026#43; 2)^3}{2\u0026#43;1} \u0026#43; 1 \\)  we can solve it in order. Here though, I have to point out the first failing in the PEMDAS accronym, division with a bar implies perentheses, as you\u0026rsquo;ll have to do the 2+1 on the bottom before you can do the divison anyway. That said, let\u0026rsquo;s look at this step by step\n \\[\\frac{4*(1 \u0026#43; 2)^3}{2\u0026#43;1} \u0026#43; 1 = \\frac{4*(3)^3}{2\u0026#43;1} \u0026#43; 1= \\frac{4*(3)^3}{3} \u0026#43; 1 = \\frac{4*9}{3} \u0026#43; 1= \\frac{36}{3} \u0026#43;1 = 12\u0026#43;1 = 13\\]  In step 1 and 2 I did perenthes in top and the implied perenthes on the bottom, then in step 3 I did the exponent, followed by the multipliation and divison in steps 4 and 5, finally in the last step I did the +1 that was hanging off the entire time.\nThe P for Perenthes in PEMDAS can mean really any grouping symbol, so brackets [] or braces {}, whatever.  So, what\u0026rsquo;s the problem with with the math equation in the start and why do people disagree? Well, Divison and Multiplication don\u0026rsquo;t have to be done in that order, same for addition and substraction, instead they should be done all together, but going from left to right, so  \\( 1 \u0026#43; 2 \u0026#43; 3 - 4 \u0026#43; 1 - 2 \\)  for example can be done in order left to right giving us 1, not doing this:  \\( (1 \u0026#43; 2 \u0026#43; 3) - (4 \u0026#43; 1) - 2 \\)  which gives -1. Just to be crystal clear, 1 not -1 is correct here. So, applying this to the above social media meme, it\u0026rsquo;s the same problem but with multiplication, implied with the 3(3) after doing the addition, and the divison. Some people interpret PEMDAS literally, meaning multiplication is done before division always. These people are wrong. So, with the meme the problem looks like this:\n \\[\\frac{6}{3(1\u0026#43;2)} = \\frac{6}{3(3)} = \\frac{6}{9} = \\frac{2}{3}\\]  But see what I did there? I wrote the fraction as a bar, not as √∑, and here, because this problem is written crappily, that actually changes the solution! And I know what you\u0026rsquo;re thinking- Division is divison, how could that matter?? And you\u0026rsquo;re right, it is. It matters because the bar implies that order, but if I go back to using a division sign look what happens:\n \\[6\\div3(1\u0026#43;2) = 6\\div3(3) = 2(3) = 6‚Äã\\]  And there\u0026rsquo;s the problem. Now, you\u0026rsquo;re probably thinking \u0026ldquo;What fucking dipshit let math be ambiguous?\u0026quot; and the answer is really that this problem is just stupid. In any real problem the ambuguity here should be fixed by whoever is writing it in the first place, and since other than in textbooks math doesn\u0026rsquo;t just appear from thin air, the true order of the operations should be specified clearly with perentheses, either as\n \\[6\\div(3(1\u0026#43;2))) \\text{ -OR- } (6\\div3)(1\u0026#43;2)) \\text{ -OR- } \\frac{6}{3(1\u0026#43;2)}‚Äã\\]  where in the last option the bar implies the parentheses.\nSimplification #  [TODO] redo with https://github.com/airladon/FigureOne\nBefore we can get to doing useful things with these operations, it helps to be proficient at simplifying an equation. For example say we have\n \\(3x^2\u0026#43;3\u0026#43;(2-x)(4-x)\u0026#43;2=12\u0026#43;(3\u0026#43;(x*2))\u0026#43;2\\)  before we ever solve for x, we\u0026rsquo;ll want to turn this into something much easier to work with. When doing this, we need to make sure to keep the equality the same, that is if we had  \\(3\u0026#43;x=4\\)  we need to not accidentally change it into  \\(3\u0026#43;x=5\\)  , changing the answer.\nThis generally means that we can only either do basic operations to get an equivalent value or do the same operation to both sides. Ironically, often simplification actually requires expansion first, that is doing math like the  \\((2-x)(4-x)\\)  to get  \\(8-2x-4x\u0026#43;x^2\\)  which can then be reduced back down to  \\(x^2-6x\u0026#43;8\\)  .\nFor the example equation, the most obvious thing to start with is the +2 that\u0026rsquo;s common to both sides. This is our first example of using the same operation on both sides- the idea being as long as we apply the same operation on both sides of the equality the meaning won\u0026rsquo;t change. That is, the solution to  \\(x\u0026#43;3=2\\)  is the same as the solution to  \\(x\u0026#43;3\u0026#43;2=2\u0026#43;2\\)  , but we can take advantage of this to get rid of terms too. For example, with  \\(x\u0026#43;3=2\\)  we can subtract 3 from both sides to get  \\(x=-1\\)  (seeing how this might lead to solving the equation?) In our example equation, both end in a +2 so we can \u0026ldquo;cancel this out\u0026rdquo; by subtracting 2 from both sides.\n \\[\\begin{aligned} 3x^2\u0026#43;3\u0026#43;(2-x)(4-x)\u0026#43;2\u0026amp;=12\u0026#43;(3\u0026#43;(x*2))\u0026#43;2‚Äã \\\\ 3x^2\u0026#43;3\u0026#43;(2-x)(4-x)\u0026amp;=12\u0026#43;(3\u0026#43;(x*2))‚Äã \\end{aligned} \\]  but because we did the same operation to both sides of the equality, the answer didn\u0026rsquo;t change\n‚ò†‚ò†‚ò† The following is an easy place to screw up ‚ò†‚ò†‚ò†  Keep in mind, whatever you do you need to do to both sides and the entirety of both sides, not just one term. For example, If you were to only divide one term on each side by 2 this is not keeping equivalence. You can divide both sides in full by two, sure, but you can\u0026rsquo;t just pick one term from each side and selectively divide that term by two. That is  \\(4\u0026#43;2x=8\\)  can become  \\(2-x=4\\)  but not  \\(\\frac{4}{2}\u0026#43;2x=\\frac{8}{2}\\)  which is  \\(2\u0026#43;2x=4\\)  . You can see this as the solution to  \\(4\u0026#43;2x=8\\)  is  \\(x=2\\)  but the solution to  \\(2\u0026#43;2x=4\\)  is  \\(x=1\\)  . So, just be sure if you do some arbitrary operation you do it to both sides and the entirety of the side, not just one term.\nBack to our big equation: next, let\u0026rsquo;s FOIL out that  \\((2-x)(4-x)\\)  \u0026hellip;\n \\[\\begin{aligned} 3x^2\u0026#43;3\u0026#43;(8-2x-4x\u0026#43;x^2)\u0026amp;=12\u0026#43;(3\u0026#43;(x*2))‚Äã\\\\ 3x^2\u0026#43;3\u0026#43;(x^2-6x\u0026#43;8)\u0026amp;=12\u0026#43;(3\u0026#43;(x*2))‚Äã \\end{aligned} \\]  with that done, we can get rid of some of those parentheses\n \\[3x^2\u0026#43;3\u0026#43;x^2-6x\u0026#43;8=12\u0026#43;3\u0026#43;2x\\]  then, we can combine like terms\u0026hellip;\n \\[4x^2-6x\u0026#43;11=15\u0026#43;2x\\]  and subtract $2x$ from both sides\n \\[\\begin{aligned} 4x^2-6x-2x\u0026#43;11\u0026amp;=15\u0026#43;2x-2x‚Äã\\\\ 4x^2-8x\u0026#43;11\u0026amp;=15‚Äã \\end{aligned} \\]  then subtract 15 from both sides\n \\[\\begin{aligned} 4x^2-8x\u0026#43;11-15\u0026amp;=15-15‚Äã\\\\ 4x^2-8x-4\u0026amp;=0‚Äã \\end{aligned} \\]  And now we\u0026rsquo;re fully simplified. You can\u0026rsquo;t combine the  \\(x^2\\)  and x terms.\nThis general process applies to any equation. It\u0026rsquo;s like a little puzzle, you just want to take the complex equation you have, do the same thing to both sides or do the math that\u0026rsquo;s internal to one side. Sometimes it\u0026rsquo;s more complicated to do this. For example, you might need to square root both sides to \u0026ldquo;cancel out\u0026rdquo; both sides being squared, for example  \\(x^2=25\\)  to  \\(\\sqrt{x^2} = \\sqrt{25}\\)  to  \\(x=5\\)  , but here this only works because we\u0026rsquo;re square rooting everything on both sides.\nPlotting functions #  [TODO]\n\u0026lsquo;Plotting\u0026rsquo; on Algorithm Archive\nLooking at some equations #  Linear #  [TODO] replaces these desmos graphs with something custom using https://jsxgraph.uni-bayreuth.de/wp/index.html\nit\u0026rsquo;ll be uglier, but I don\u0026rsquo;t like loading something this large, and jsxgraph will be more flexible anyway. Since I literally never write js this is proving to be a bit rough. Working on getting something that will show the slope and intercept values as two arbitrary points on the line are moved on a graph.\n1 2 3 4 5 6 7 8 9 10  var b = JXG.JSXGraph.initBoard(\u0026#39;jxgbox\u0026#39;, { boundingbox: [-5, 5, 5, -5], axis:true }); var p1 = b.create(\u0026#39;point\u0026#39;,[-1,1], {name:\u0026#39;A\u0026#39;,size:4}); var p2 = b.create(\u0026#39;point\u0026#39;,[2,-1], {name:\u0026#39;B\u0026#39;,size:4}); var li = b.create(\u0026#39;line\u0026#39;,[\u0026#34;A\u0026#34;,\u0026#34;B\u0026#34;], {strokeColor:\u0026#39;#00ff00\u0026#39;,strokeWidth:2}); var p3 = b.create(\u0026#39;point\u0026#39;,[p1.X, p2.Y], {name:\u0026#39;S\u0026#39;,size:4}); var li2 = b.create(\u0026#39;line\u0026#39;,[\u0026#34;A\u0026#34;,\u0026#34;S\u0026#34;], {strokeColor:\u0026#39;#00ff00\u0026#39;,strokeWidth:2}); var i = -1; setInterval(function(){p3.moveTo(p1.X,p2.Y); i++; },1000);   is what I have so far, but it appears the .X and .Y getters are not working as I expect. This should give me an \u0026lsquo;S\u0026rsquo; point that I can then line segment to A and B to get the right angle \u0026lsquo;stair\u0026rsquo; step slope.\n Polynomials #  Parabolas #   Systems of Equations #  Nobody should do these by hand unless they\u0026rsquo;re dead simple\nImaginary numbers, systems of equations\n1¬º - Accuracy and Precision #  For lack of a better place to put it and not wanting to wait until the much latter section on probability, I\u0026rsquo;d like to briefly mention the difference between Accuracy and Precision. Typically, this is represented as\n1¬Ω - Coordinate Systems #  So, up until now you\u0026rsquo;ve only seen the XY \u0026lsquo;Cartesian\u0026rsquo; coordinate system, but I did gloss over some details. For starters, when refering to points in the Cartesian plane, you may hear the term quadrants, these are the 4 infinite corners of the plane, coming out from the \u0026lsquo;+\u0026rsquo; shape at (0,0). Slightly counter intuitively, they\u0026rsquo;re numbered from starting in the top right and going counter clockwise.\n[TODO] picture here\nThe Cartesian coordinate system can be expanded into high dimensions as well, but you\u0026rsquo;re unlike to work with more than 3, to form space defined with XYZ\n[TODO] picture here\nThere are a few other coordinate systems you\u0026rsquo;ll likely come across though: Polar, Cylindrical, and Spherical.\n[TODO] all 3 of those\n1¬æ - Primes \u0026amp; Factors #  Alright, so maybe not something you\u0026rsquo;ll use everday, but you still should know the basics of primes, espically if you want to understand Public-key cryptography. So, what\u0026rsquo;s a prime?\nA prime is an number where the only two whole numbers that you can multiply to get to that number are 1 and itself.\n2? Prime. 1*2 is the only option.\n3? Prime. 1*3 is the only option.\n4? Not Prime. 2*2 = 4, as does 1*4\n103801? Prime. only two numbers that can multiplied together to get it are 1 and 103801.\nI think you get the gist. One of the neat applications of primes is that multiplying two prime numbers together makes for a number that\u0026rsquo;s not quite prime, but whose only other fators are two two numbers that you multiplied together, so say we take 103801 * 7 to get 726607, the only two whole numbers other than 1 and itself that can be multiplied to get 726607 are 103801 and 7.\nThere are also \u0026lsquo;antiprimes\u0026rsquo; (or \u0026lsquo;highly composite numbers\u0026rsquo;), from Wikipedia:\n \u0026hellip; an antiprime number, is a positive integer with more divisors than any smaller positive integer has\n so, technically 1, 2, 4, and 6 are all antiprime. But where it gets interesting is with larger numbers. For example, 360 is anti prime as you get get to it with  \\( 2*2*2*2*3*3*5‚Äã\\)  , which is 7 primes multiplied together, more than it takes to get to any number prior. These numbers are really easy to work with because of this, and it makes it really convient for the number of degrees in a circle as it can be divided so easily.\n1‚Öò - Number Bases #  Number Bases Strech the Mind (Hackaday)\n2 - Discrete Math \u0026amp; Logic #  http://discrete.openmathbooks.org/dmoi3/\nMath For Programmers (pdf)  Notation #  https://en.wikipedia.org/wiki/List_of_mathematic_operators\nLogic #  Many Valued Logic #  Fuzzy Logic #  3 - Geometry and Trigonometry #  Geometry #  Notation #  ‚à•, ‚ä•,\nTrigonometry #   Learning Trig playlist on YouTube by \u0026lsquo;The Organic Chemistry Tutor\u0026rsquo;\nNotation #  3¬Ω - Topology #        But, this is supposed to be about engineering, so why do we need it?\n[TODO] topology optimization and generative design\n3¬æ - Non-Euclidian Spaces #   Fractals #    4 - Calculus #  Introduction To Calculus With Derivatives (adit.io)\n[] TODO limits before video\nBelow is a 12 video series that totals about 3.25 hours.   The Exponential Function is a Miracle (Mark Dominus)\n5 - Differential Equations #  Below is a 5 video series that totals about 1.5 hours.   6 - Matrix Theory / Linear Algebra #  Below is a 15 video series that totals a bit under 3 hours.   Matricies, Diagrammatically\nLinear Algebra - Jim Hefferson\nLinear Algebra and Applications: An Inquiry-Based Approach\n6¬Ω - Numerical Analysis #   Bisection Method\nNewton\u0026rsquo;s Method\nSecant Method\nLagrange Polynomial\nDivided Differences\nLinear Interpolation, Bilinear Interpolation, Bicubic Interpolation, Spatial Interpolation\nCubic Spline\nNumerical Differentiation\nTrapezoidal Rule\nSimpson\u0026rsquo;s Rule\nRomberg Integration\nMonte Carlo Method - Algorithm Archive\nCondition Number\nLeast Squares\n7 - Signals \u0026amp; Systems #  Below is a 54 video series that totals around 13 hours   MIT Signals and Systems Lectures (YouTube)\nBut, if you\u0026rsquo;d rather learn out of a textbook, if you go looking online you might just be able to stumble upon a 100% super-duper legal way to obtain Alan V. Oppenheim, Alan S. Willsky, with S. Hamid-Signals and Systems with ISBN 978-0138147570 published by Prentice Hall which is now a subsidiary of Pearson, a textbook publisher which can, and this is 100% true, go fuck themselves.\n One of the most important things in Signals is the Fourier Transform. Fortunately, quality content about it is abundant. This site, An Interactive Introduction to the Fourier Transform \nprovides a great introduction for developing an intuition about it graphically, while \u0026ldquo;But what is the Fourier Transform? A visual introduction. (YouTube, 3Blue1Brown)\u0026rdquo; goes a bit more into the math by the end.\n[TODO] put in all notes from class here to provide a half decent resource\nExtra Resources:\nIntuitive Guide to Convolution\nhttps://en.wikibooks.org/wiki/Signals_and_Systems\nA 313 Part - not even kidding - playlist on Signals and Systems on YouTube\nA 95 Video series, in case that 313 parter left you needing more.\nThe Scientist \u0026amp; Engineer\u0026rsquo;s Guide to Digital Signal Processing, 1999 (Analog Devices)\nDSP Spreadsheet: The Goertzel Algorithm is Fourier\u0026rsquo;s Simpler Cousin (Hackaday, Al Williams)\nWhat does the Laplace Transform really tell us? (Zach Star, YouTube)\nFFT on Algorithm Archive\nWhat does frequency mean in an image (Stack Exchange)\nTripple Pendulum on a Cart \u0026amp; Inverted Pendulum on a Cart (Steve Brunton\u0026rsquo;s Control Bootcamp on YouTube)\n8 - Set Theory #  This video\n 9 - Probability/Stats #  Why, where are these used, etc.\nbring up music things, part failure rates, tollerences, etc.\nBasics #  For the following I\u0026rsquo;ll be using a dice roll example, where the events are the total of two die. The Sample Space of this is\n$ S = {2,3,4,5,6,7,8,9,10,11,12}$\nNote, that 1 isn\u0026rsquo;t possible as the lowest is both die being \u0026lsquo;1\u0026rsquo;.\nLet\u0026rsquo;s look at the probability of these outcomes,\n   die2‚Üì, die1‚Üí 1 2 3 4 5 6     1 2 3 4 5 6 7   2 3 4 5 6 7 8   3 4 5 6 7 8 9   4 5 6 7 8 9 10   5 6 7 8 9 10 11   6 7 8 9 10 11 12    While there are 11 (2-12) unique outcomes, there are 36 possible outcomes from the two die, which are shown in the table above.\nIf you follow the diagonal you can see that there is only one way to get 2 or 12, two ways to get 3 or 11, and so on, this gives this table:\n   Total of two die 2 3 4 5 6 7 8 9 10 11 12     Probability 1/36 2/36 3/36 4/36 5/36 6/36 5/36 4/36 3/36 2/36 1/36    Now, let\u0026rsquo;s say we want the probability that we roll an even number (2,4,6,8,10,12) we can just sum their respective probabilities, so $\\frac{1}{36}+\\frac{3}{36}+\\frac{5}{36}+\\frac{5}{36}+\\frac{3}{36}+\\frac{1}{36} = \\frac{18}{36} = \\frac{1}{2}$\nLets go ahead and call this event A, so P[A] = 1/2\nSimilarly, we can define a new rule, Event B, such that the roll total is greater than 9, that comes out to be 1/6, so P[B]=1/6\nStatistical Independence\nEvent A and event B are statistically independent if and only if (iff)\n$P[AB] = P[A]P[B]$\nConditional probability\n$ P[A|B]P[B]=P[AB]=P[B|A]P[A]$\nSub experiments \u0026amp; Tree diagrams\nLaw of total probability\nBayes Rule\nCounting methods\ncombinations and permutations\nwith or without replacement\nRandom Variables #   Probability Mass Function (PMF)\nTypes of RV\u0026rsquo;s\n[TODO] http://www.math.wm.edu/~leemis/chart/UDR/UDR.html\n   Distribution Name PMF Mean Variance     Bernoulli      Geometric      Binomial      Pascal      Discrete Uniform      Poisson       Cumulative Distribution Function (CDF)\nfunctions of Random Variables\nFamilies of continuous RVs\nConditional Probability Mass Fn \u0026amp; Conditional Expected Value\nGaussian Random Variables / Normal RVs (same thing)\n[TODO] https://mc-stan.org/users/documentation/\n[TODO] The Fisher Information (YouTube - Mutual Information)\nI did it. pic.twitter.com/eMEmUw0HSY\n\u0026mdash; Zillion Ross (@ZillionRoss) November 25, 2020  Chaos #        TODO #  https://en.wikipedia.org/wiki/Space_syntax, https://en.wikipedia.org/wiki/List_of_network_theory_topics\nGame Theory\nhttps://en.wikipedia.org/wiki/Directed_acyclic_graph\nCAS, Solvers, Sympy, https://github.com/Z3Prover/z3 ‚Üí http://www.cs.toronto.edu/~victorn/tutorials/z3_SAT_2019/index.html \u0026amp; https://ericpony.github.io/z3py-tutorial/guide-examples.htm\n"}),a.add({id:41,href:'/engineering/math/units/',title:"Units",section:"Engineering",content:"Chapter 6¬Ω - Units #   [TODO] - weird units coming up: moles, ferads, light years, pascals, radians+, electron mass, big/small metric units, flops, decades, etc.\nShould probably have a metric table too (nano = 10^-9 etc.)\n  By 42CrMo4 and Christoph P√§per English units of Length, CC BY-SA 4.0   "}),a.add({id:42,href:'/engineering/networking/cloud/',title:"Cloud",section:"Engineering",content:"Chapter 31¬Ω - \u0026ldquo;The Cloud\u0026rdquo; #  Some people will tell you the cloud is the future, that someday everybody will rent computational power from a handful of services like AWS.\nThese people are nuts.\nThe cloud is just someone eles\u0026rsquo;s computer. Unless your business is going though a period of extreme growth it makes no sense to use a cloud provider like AWS or Azure. It does make plenty of sense to buy a VPS (Virtual Private Server) for hosting a website or game server or a personal website like this one, but at scale? No.\nUnfortunately, \u0026ldquo;The Cloud\u0026rdquo; isn\u0026rsquo;t going anywhere. AWS, Azure, and Google Cloud probably host the vast majority of websites you visit and the backends for apps you use. So we may as well understand it\u0026hellip; if for no other reason than to be able to hold educated arguments against it.\n Character owned by Vega, art by Talon Creations and Vega   So, my opinion out of the way, let\u0026rsquo;s look at what the cloud is. Generally, there are a few kinds of cloud services, here they\u0026rsquo;re listed in increasing level of abstraction:\n IaaS - Infrastructure as a Service  Hardware servers, virtual machines, storage, networking, etc. The depth of services provided varies, but generally this is just getting a bare system, with no   PaaS - Platform as a Service  Generally PaaS adds another layer of abstraction, as the client (you) don\u0026rsquo;t need to worry about the underlying hardware, but instead can use provider specific programming languages and development tools to setup what you need.   SaaS - Software as a Service  SaaS goes up yet another layer, here the client (you) are not buying something on which you can host your own software and tools, but are buying the (usually monthly) access and support for existing tools. Adobe\u0026rsquo;s CreativeCloud and Office365 are good (albeit evil) examples.   FaaS / Serverless - Function as a Service  The provider starts up or shuts down virtual machines and otherwise allocates resources on demand as they are called upon. It\u0026rsquo;s not that there is no sever, it\u0026rsquo;s just that the computation is done on demand and then the results saved to disk, such that they can be called upon later. See Serverless Computing on Wikipedia for more information, as well as a list of advantages and disadvantages.    To put this in a nice lil' table, the stuff in blue is done for you, while you need to handle the things shown in gray.\n .models { width: 100%; text-align: center; } .models th { background: #fff3; word-wrap: break-word; text-align: center; } .models  table:nth-child(1)  tbody:nth-child(2)  tr:nth-child(-n)  td:nth-child(1) { background: #009cdf55; } .models  table:nth-child(1)  tbody:nth-child(2)  tr:nth-child(n+5)  td:nth-child(2) { background: #009cdf55; } .models  table:nth-child(1)  tbody:nth-child(2)  tr:nth-child(n+3)  td:nth-child(3) { background: #009cdf55; } .models  table:nth-child(1)  tbody:nth-child(2)  tr:nth-child(n)  td:nth-child(4) { background: #009cdf55; }     Traditional: Infrastructure as a Service Platform as a Service Software as a Service     Applications Applications Applications Applications   Data Data Data Data   Runtime Runtime Runtime Runtime   Middleware Middleware Middleware Middleware   OS OS OS OS   Virtualization Virtualization Virtualization Virtualization   Servers Servers Servers Servers   Storage Storage Storage Storage   Networking Networking Networking Networking     Obviously, for each thing done for you you\u0026rsquo;ve giving up more control, abstracting away that complexity to the provider.\nGCP Outpaces Azure, AWS in the 2021 Cloud Report (Cockroarch Labs)\nDropbox saved almost $75 million over two years by building its own tech infrastructure (GeekWire)\n[TODO] Service Level Agreements, reallly cheap VPS,\nComparison of Vendors #  [TODO] Add Google Cloud to list, mention they\u0026rsquo;re all sorta evil.\n Note, I\u0026rsquo;m not going to directly compare pricing between these services because that\u0026rsquo;s both rather variable and because the cost is often in terms of resource usage, which can be calculated in so many different way that the only real way to compare is to actually run something. Similarly, comparing uptime is also mostly useless as there are different metrics used and because of service contracts any provider will do everything in its power to appear to have umpteen 9\u0026rsquo;s of uptime.\n Compute #  CPU #  For x86-64 CPU compute both offer a range of speed tier both for GPU and CPU, making direct comparison difficult.\nAWS EC2-C5 offers Intel Skylake CPUs that support AVX-512, nice if you have a highly vectorized workload. Azure does offer some of the same CPU, with AVX-512, but many of their CPUs are AMD\u0026rsquo;s EPYC line which while EPYC should give Azure the lead in efficiency that should lead to reduced costs for the consumer, no AMD CPUs have AVX-512 and the EPYCs in particular sometimes have a hard time distributing compute over their internal CCX complexes.\nAlso interesting, AWS offers EC2 A1, which lets you deploy to 64 bit arm cores instead of x86, which for workloads that work well on it can lead to cost savings or security benefits given the mess that was Meltdown and Spectre.\nGPU #  AWS appears to only offer Nvidia GPUs, buying into the Nvidia CUDA ecosystem while Azure offers a mix of GPUs from AMD and Nvidia, covering both CUDA and OpenCL workloads well.\nStorage #  AWS-S3, EBS, EFS, Glacier, \u0026hellip; There\u0026rsquo;s a lot here. There\u0026rsquo;s flexibility among offerings that suit various needs, from \u0026lsquo;object storage\u0026rsquo;, network file systems, and long term backups on cheap, bulk storage.\nAzure offers similar (and much better named) flexibility, with options like Azure Disks for bulk storage attached to a VM, \u0026lsquo;Azure Blobs\u0026rsquo; for an S3 equivalent, and \u0026ldquo;Azure Files\u0026rdquo; for a network file system.\nGenerally it seems there\u0026rsquo;s a pretty 1-to-1 match between Microsoft\u0026rsquo;s and Amazon\u0026rsquo;s offerings. The differences start to show a bit more when it comes to dev tools and libraries available to work with them though.\nDatabases #  So that I can talk about this all without trying to name everything, so just go look at This list of datbase products offered from AWS and This page from Azure\nAs you can see, both offer products covering all the normal database options. Azure, rather strangely, offers hosting of multiple SQL back ends, while AWS has multiple instance types for RDS, while Azure seems to just offer flexible options that automatically scale. This means less control, but also less management overhead and concerns for needing to upgrade or downgrade the instance latter. That said, for very large projects the industry is starting to move to non-relational anyway for it\u0026rsquo;s lower overhead and ease in making it distributed and Cosmos DB, is, uh, lacking. The first chat I included from Azures' docs shows that Azure dos have some Redis cache options, but AWS has Dynamo, Memcached, and Redis.\nOn top of all of that AWS offers a graphDB, which I can\u0026rsquo;t find Azure even competing with at all.\nThe only advantage that I can really find in Azure\u0026rsquo;s database offerings is the options for SQL being varied enough to support multiple SQL implementations.\nSecurity #  The number of open AWS S3 buckets that can be found on GitHub shows right off the bat that security is more down to the developer than the ecosystem. Anything I can write here is going to be largely marketing fluff from each company, that said, there are some security offerings:\nAWS offers \u0026lsquo;Inspector\u0026rsquo; which \u0026quot; automatically assesses resources for vulnerabilities or deviations from best practices, and then produces a detailed list of security findings prioritized by level of severity\u0026quot; - so in plain English, it tries to find anywhere your code or deployed app is vulnerable to a known CVE. Azure offers \u0026ldquo;Azure Security Center\u0026rdquo; which is similar.\nFurther, though all of 2020 AWS has had 3 CVEs and two other notices (source) but Microsoft has made even finding a list of vulnerabilities difficult, but I think going here setting the date range to all of 2020 and searching for azure is as close as I\u0026rsquo;ll get. That turns up 26 CVEs, of which 25 are really on them, 9 of them are elevation of privilege and and one of them is an RCE. Given Azure is the significantly smaller of the two so will have less attention on it, that\u0026rsquo;s especially not great.\nDev Tools #  AWS powers enough of the internet that when it goes down it seems the entire internet follows suit. Anadectodely this popularity seems to be from AWS\u0026rsquo;s extensive dev tools and documentation. Further, AWS\u0026rsquo;s larger popularity means many 3rd party libraries for various languages and frameworks exist to make development even easier.\nFurther separating things, while Microsoft has tried to make their development more platform agnostic recently with the whole \u0026ldquo;MS \u0026lt;3 Linux\u0026rdquo; thing, from personal experience I can tell you their stuff is rather annoying to work with if you don\u0026rsquo;t buy in to the platform as a whole, while AWS has been pretty OS and development environment agnostic from the start.\nSo, while Azure effectively has the single bullet point of visual studio, AWS has all of this\nAs a very lazy metric, just searching Github (Which is owned by MS and hosted on Azure), we find this:\n   I\u0026rsquo;m not going to pretend that having double the repos means AWS is twice as good, but what it does mean is that developers are choosing it. That could be because it\u0026rsquo;s cheaper or some other unrelated factor, but it could well be because it has much better documentation (something extremely evident in trying to do find this information in the first place) and because it has better tools developed by Amazon and the community.\n"}),a.add({id:43,href:'/engineering/networking/databases/',title:"Databases",section:"Engineering",content:"Chapter 32 - Databases #  [TODO] Start with comparison to spread sheet, explaining \u0026lsquo;NoSQL\u0026rsquo; Vs \u0026lsquo;SQL\u0026rsquo; and that this is Relational vs Non-Relational\n[TODO] explain CRUD\nCRUD #  Create, Read, Update, Delete\nSQL #  This is Opinionated Guides, so let me be clear, I really, really hate SQL. I don\u0026rsquo;t like OOP in general, and SQL is sorta like object orientation taken further. Add onto this a mostly shit syntax, like, JOINs are objectively weird to read, write, and understand. I\u0026rsquo;m not saying SQL doesn\u0026rsquo;t have it\u0026rsquo;s place: It\u0026rsquo;s reasonably good for ensuring data fits a strict structure and does make sense in cases where using OOP also makes sense. It\u0026rsquo;s just that OOP itself is over-used leading to SQL being over used. This is probably in part due to education mostly teaching SQL and it being the only type of database many students ever learn. This might make some sense if it were honestly better, but I suspect that it\u0026rsquo;s in large part taught for the same reason Java is: Sun Microsystem paid a fuck ton of money to push it- hence the \u0026ldquo;3 Billion Devices Run Java\u0026rdquo; Thing. Then, Oracle bought Java from Sun Microsystems and made the first comercially available implimention of SQL. I\u0026rsquo;m hopeful (albeit probably naively) that Oracle making Java a mess of licencesing as the \u0026lsquo;main\u0026rsquo; Java Virtual Machine goes paid (Read on Wikipedia) and suing Google will be the nail in the coffin for education using it- and that SQL will be demoted to being taught along side other options along with that. Regardless of the reasons though, you should still learn it because everything uses it. [TODO] SQL, full CRUD, joins, the works\n[TODO, like, all of it. Need SQL vs Non Relational too]\nGenerating SQL Code with Blocks - Scratch Like Programming for SQL\nSQL Servers (MySQL) #  Sanitizaing Inputs #  [TODO] need image source Key-Value (Memcached, Redis) #  Graph Databases (Neo4j, GraphQL?) #  Why not use GraphQL?\nDocument-Oriented Database (Couchbase) #  Other Resources #  List of Some Open Source Database Options\n"}),a.add({id:44,href:'/engineering/networking/networking/',title:"Networking",section:"Engineering",content:"Chapter 30 - Networking #  [TODO] Add follow along making a network stack\n[TODO] https://iximiuz.com/en/posts/computer-networking-101/\nBasics #  Nodes\nThese are all the points in the network. There are terminal nodes and intermediate nodes.\nTerminal nodes are things like your phone, laptop, desktop, and other user-facing devices, as well as servers, like would be used for hosting games or websites.\nIntermediate nodes, are things that are internal to the network: Things like modems, hubs, switches, routers, etc.\nLinks\nLinks are the interconnects between two nodes. Generally these fall into two categories: Guided and Unguided\nGuided Links are those that only connect a few nodes (usually only two) and are typically physical, hard-wire links, often copper or fiber optic.\nNot all Links can support the same bandwidth or throughput. In general, Coaxial is worse than Twisted Pair which is in turn worse than fiber.\nApplications\nThese are the things that you want to do: Talk to someone via voice, text, or video; browse the web; download files; etc.\nIt can also refer to the specific program used to do these things, so like Chrome as your web browser or Zoom for video calling.\nan API (Wikipedia) or \u0026lsquo;Application Programming Interface\u0026rsquo; is what defines how two programs talk to each other. This doesn\u0026rsquo;t have to be over the network, but often is.\nEnd Systems - Hosts/Server \u0026amp; Clients\nNot everything fits the host/server and client terminology, but generally the host/server is the one that is sending data, and the client is the one receiving, or another way to look at it, the client is the one making requests and the host the one fulfilling them.\nPeer to Peer\n[TODO]\nPackets\nWhile we could just send a continual stream of data down a wire, that has a lot of issues. For one, it makes it hard to share the wire with multiple people. Of course you could split the wire so each person get\u0026rsquo;s a split amount of time on the wire (Time Division Multiplexing) or, if the wire can carry a range of frequencies give each user a small portion of those (Frequency Division Multiplexing, which limits the throughput similarly), but both of these sorta suck as they assume a user will always be using their provided channel. Instead, we do a sort of Time Division, but by packet-izing everything. Basically, each stream of data you want to send get\u0026rsquo;s broken up into manageable chunks called packets, and then these packets can be sent though the network.\n[TODO] packet headers\nRouters and Switches\nTake data in and out, usually though bi-directional links, and can switch which link goes where. Usually with the help of a forwarding table\n[TODO] image here\n[TODO] store and forward - buffering,\nEnd to End Delay\nd_ECE = 2 (L/R)\nwhere L = bits per packet, R = tx rate of link\nQueuing Delay\nPacket Loss\nSometimes packets in the network don\u0026rsquo;t reach their destination. This can be for a variety of reasons. Maybe a switch along the line was overloaded and it\u0026rsquo;s buffer was full, maybe it took a bad route, maybe you have crappy wifi. ‚ïÆ(‚îÄ‚ñΩ‚îÄ)‚ï≠. It happens. Usually the percent of dropped packets is called your packet loss.\nForwarding Table\nBandwidth Vs Throughput\n[TODO] physcics of link vs data of link - expand on FDM vs TDM\nLAN Vs WAN\nLocal Area Network and Wide Area Network- on most home connections your LAN is the network in your house while the WAN is the internet at large, so the WAN port on your router is where you connect the cable from your Internet Service Provider (ISP)\nProtocol\nUsually a network is dependent on a stack of protocols. Each protocol is just a standard for the way too things communicate. As we keep going you\u0026rsquo;ll see more about IP (Internet Protocol), TCP (Transmission Control Protocol), among many others.\nMost protocols are determined by standardization bodies such as the Internet Engineering Task Force (IETF) or IEEE Standards Association (IEEE-SA)\nA typical network #  [TODO]\nIP addresses, Ports, Default Gateway, Routes \u0026amp; kernel routing table, subnet mask - https://www.aelius.com/njh/subnet_sheet.html, ping, traceroute (mtr/lft), dns - resolv.conf, pihole, caching / squid, localhosts, port forwards, DHCP, private nets, firewalls, chromecast port thing, https vs no s, rsync,scp,samba, cups, databases , pihole, BGP, RIP, OSFI, multi-zone wifi, single ap multi freq wifi, enterprise security, secured ethernet, https://blog.cloudflare.com/how-verizon-and-a-bgp-optimizer-knocked-large-parts-of-the-internet-offline-today/\nIETF \u0026amp; RFCs\nIEEE-SA\nParallel, Pipelined, Persistance and Performance\nThe OSI model of networking is the model of networking most classes will cover. It is slightly different from the one used by the internet, which is the TCP/IP model.\nIn the TCP/IP model, the Physical and Data Link Layers are viewed as a unified \u0026lsquo;Network Acces Layer\u0026rsquo;\nThe Network Layer is called the Internet Layer\nThe Transport Layer stays the same,\nand The Session, Presentation, and Application layer are all part of a larger Application Layer.\nBut, because I think it\u0026rsquo;s easier to cover it with things more broken up, I\u0026rsquo;ll go over the OSI model from here:\n1 - The physical Layer #  The series of tubes, wireless media, etc. that you shove your information into\nCoax, Twister Pair, Fiber \u0026amp; More #  Wireless (Terrestrial and Satellite) #  geostationary vs LEO\nHubs, Repeaters, Taps #  Carrier Pidgeon, Can, etc. #  2 - Data Link #  Organize the information in the meduium into a packet, control who get\u0026rsquo;s that packet\nMAC and LLC\nEthernet #  PPP #  Switch #  Bridge #  Frames #  VLAN #  3 - Network Layer/IP Layer #  Find paths though the mesh of links and forward the packets though it\nService Models #  Not guaranteed delivery, bounded delay, or throughput. Sorta sucks, but it\u0026rsquo;s cheap\nPackets #  IPV4, IPV6 #  IPV6 is a total nightmare \u0026amp; Hacker News comments on this blog post (note, I don\u0026rsquo;t agree with everything here, just providing it as another person\u0026rsquo;s comments)\nIPV4-\u0026gt;6 Tunneling\nLogical: [6] \u0026lt;-\u0026gt; [6] \u0026lt;- \u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;- -\u0026gt; [6] \u0026lt;-\u0026gt; [6]\nPhysical: [6] \u0026lt;-\u0026gt; [6] \u0026lt;-\u0026gt; [4] \u0026lt;-\u0026gt; [4] \u0026lt;-\u0026gt; [6] \u0026lt;-\u0026gt; [6]\n[TODO] ipv4 exhastion    MAC #  ICMP, IGMP #  traceroute\nSubnets #  https://www.aelius.com/njh/subnet_sheet.html\nStatic and Dynamic Routes #  BGP #  https://blog.benjojo.co.uk/post/bgp-stuck-routes-tcp-zero-window\nEVE Online internet from https://blog.benjojo.co.uk, which has a ton of other really, really neat posts, like The Speed of BGP network propagation, or Hacking Ethernet out of Fibre Channel cards\nopen, update, keepalive, notification\n4 - Transport Layer #  Better reliability of the network by keeping packets in order, retransmitting lost packets, etc.\nMultiplexing, Demultiplexing\nReliable data tx/rx - checksums\nflow and congestion control\nTCP #  https://research.swtch.com/tcpviz\ntcp header diagram\nQUIC #  UDP #  Raw #  A brief dive into FSMs #  Go-Back-N #  Selective Repeat #  Timeout and Retransmission from Estimated RTT #  5 - Session Layer #  Authentication #  Sockets #  API\u0026rsquo;s #  NetBios #  PAP #  RPC #  SMB #  SOCKS #  6 - Presentation Layer #  TLS #  SSL #  IMAP #  7 - Application Layer #  HTTP(s) #  http://bright28677.tripod.com/proj2/httpformat.htm (both images)\nresponse codes - 200, 300\u0026rsquo;s, 400\u0026rsquo;s, etc.\nIn header lines\nHost, user agent, accept-language, connection (keep-alive), \u0026hellip;?\nGET, POST, HEAD, PUT, DELETE\n https://www.monkeyuser.com/2017/http-status-codes/\n http1 vs 2 v 3\ncookies because stateless\nin-band\nFTP #  still TCP, out-of-band, maintains state, passive v active mode\nDNS #  TTL?\nStop Using Rediculously Low DNS TTLs (Frank Denis)\nrecord types\nYou Smart TV is probably ignoring your PiHole (LabZilla)\n72% of Smart TVs, 46% of Consoles hardcode DNS Settings, (Hacker News Comments on article)\nDHCP #  Some texts will put this in Data or Network layer or Link Layer, it\u0026rsquo;s a bit ambiguous. It\u0026rsquo;s not -technically- necessary, much like DNS, but it\u0026rsquo;s used as a core part of the network in most networks. It does appear the RFC 2131 says it\u0026rsquo;s Link Layer, but it seems most people think it belongs in Application Layer.\nSSH #  IRC #  EMail (SMTP, IMAP, POP) #  mail servers and useragents\nUPNP #  NTP #  Telnet #  NFS #  Torrents #  Distributed Hash Tables\nTime #  Real time clocks, timezones, utc, etc.\nVPNs #  OpenVPN #  Wireguard #  Wireguard Quickstart page\nWireguard entry on the (Arch Wiki)\nTailscale #  Networking Tools #  Etherape #  Wireshark #  https://wiki.wireshark.org/CaptureFilters\nEnable Packet Diagram View\nNmap #  Scapy / Kamene #  Kamene\n(G)NS #  HTTPie #  HTTPie [Github] - human-friendly CLI HTTP client for the API era\nFurther Reading #  What happens when\u0026hellip; [Github] - An attempt to answer the age old interview question \u0026ldquo;What happens when you type google.com into your browser and press enter?\u0026rdquo;\nBen Eater\u0026rsquo;s Networking Tutorial Series is pretty good:\n Chapter 10.1 - Weird Networking, because why not! #  cjdns + hyperboria\nipfs\ndat\nNetsukuku\nBeaker Browser\nBombadillo is a non-web browser, designed for a growing list of protocols operating outside of the web.\nSoftware Defined Networking, ActivityPub\nGreenTunnel - \u0026ldquo;GreenTunnel bypasses DPI (Deep Packet Inspection) systems found in many ISPs (Internet Service Providers) which block access to certain websites.\u0026rdquo;\nAlternative Internet (Github list)\nAwesome Mesh (Github list)\nList of tools in the BlackArch repo, meant mostly for security research, though obviously many of these are network related and so might give some inspiration or lead to interesting rabbit holes\nDefcon channel (YouTube), DefCon is a security confrence, and naturally that means a lot of network security, including Including some on hacking sex toys\nWhy do we use the Linux Kernel\u0026rsquo;s TCP Stack (Julia Evans Blog)\nA smol tcp stack (Github)\nThe Cost of CPU Networking on a Host (David Ahern\u0026rsquo;s Blog)\nEncapsulation of TCP over UDP\nWORST POSSIBLE quality on YouTube? (YouTube, FlyTech Videos)\n\u0026lsquo;Nerfnet\u0026rsquo; tunnells TCP/IP over cheap NRF24L01 Radios (Hackaday, Tom Nardi) \nRFC for 700 HTTP Status Codes (Github, Joho)\nFun with IP address parsing (David Anderson\u0026rsquo;s Blog)\nhttp-wtf\nmidi pic.twitter.com/5zd4dWJ3U4\n\u0026mdash; Ravarcheon (@ravarcheon) April 16, 2021 "}),a.add({id:45,href:'/engineering/networking/privacy/',title:"Privacy",section:"Engineering",content:"Chapter 33¬Ω - Your Guide to Privacy #   \" Arguing that you don\u0026rsquo;t care about the right to privacy because you have nothing to hide is no different than saying you don\u0026rsquo;t care about free speech because you have nothing to say. \"  - Edward Snowden, in his Reddit AMA   Privacy online is a joke. No matter what you do, you\u0026rsquo;re still going to be tracked so much that advertisers and the big tech companies (Facebook, Google, Microsoft, etc.) all know way more about you than you\u0026rsquo;d like. Technically, most of these companies will provide various opt-outs. Realistically, you shouldn\u0026rsquo;t expect these to stop anyone. You can be 110% your data is being sold. So, what can you do?\n Acknowledge you can not win, but you can still fight back.\n  Don\u0026rsquo;t buy smart-XYZ devices. No smart bulbs, toasters, fridges, toasters, ovens, thermostats, TVs, or doorbells. And, look, I get it. Each offers a pretty legitimate convenience. But between the ability for companies to change a one time payment into a subscribtion after purchase, devices phoning home even if you don\u0026rsquo;t connect them to your wifi, and IOT cameras letting police in without a warrant I think it\u0026rsquo;s pretty clear they don\u0026rsquo;t respect you as a user. Where you draw the line is a personal choice. Obviously, it\u0026rsquo;s hard to function without having a Internet connected camera, microphone, and GPS smartphone in your pocket. But what about a smart watch? Do advertisers need to know your heart rate, how hard you\u0026rsquo;ve been trying to work out, or how many steps you got in each day? What can be derived from all this data combined? Can they see if you\u0026rsquo;re on your period or currently sick to advertise pads or drugs directly at you?\nFor the love of fuck don\u0026rsquo;t buy a smart speaker or anything Alexa enabled. I honestly can not believe I have to say this.\n  Block as much shit as you can. Ads and trackers and cookies may not all be malicious, but enough are that the ad industry dug its own grave: block their dumb asses. You won\u0026rsquo;t ever get full coverage, some things will slip though BUT setting up a Pi-hole, using uBlock-Origin (or adnauseam), and DuckDuckGo (until you need Google, but defaulting to DDG helps) makes for a good start.\n  Delete, Opt-Out, or Lie - Much like reduce, reuse, recycle, this order matters. Delete anything you don\u0026rsquo;t need, don\u0026rsquo;t use, or don\u0026rsquo;t trust. If you don\u0026rsquo;t use it for anything other than talking to people you don\u0026rsquo;t like and seeing when someone you haven\u0026rsquo;t talked to in a decade has a kid, delete your Facebook. If you trust a service\u0026rsquo;s Opt-out functionality, do so! Yeah, it\u0026rsquo;s bullshit that you have to opt-out instead of opt-in in the first place, but for now that is what it is. Dig through settings on everything you can and turn off all that tracking, spying, bullshit. Go into your browser settings and turn on \u0026lsquo;Do Not Track\u0026rsquo; for the approximately 0% of site\u0026rsquo;s that respect it. Go into your Google settings and turn off and clear location history. Do all of this about once a year, as this shit will re-enable itself. It\u0026rsquo;s really only about an hour of diving into settings to stop like 75% of the bullshit.\nFrom here, the \u0026ldquo;This is a pain in the ass\u0026rdquo; levels starts to surpass what most people will deal with. This is by design. But, if you really care about your privacy, this will make a significant improvement and might result in you getting less spam calls and physical junk mail as a side effect.\nUnfortunately, Opting out requires both that you know who your data is being collected in the first place and that the offending asshats even offer an opt-out in the first place.\n A great example of the latter being Clearview.ai, which from wikipedia is \u0026ldquo;an American facial recognition company, providing software to companies, law enforcement, universities, and individuals. The company\u0026rsquo;s algorithm matches faces to a database of more than three billion images indexed from the Internet, including social media applications\u0026rdquo;- Basically, they stole your face from Facebook, Twitter, and everywhere else, and sell the ability to have a computer recognise you to law enforcments. They\u0026rsquo;re assholes, selling to a huge list of other assholes. Want to opt out? Hah, no. Not unless you live in Illinois or California, the only states to pass legislation telling them to fuck off.\n So\u0026hellip; What can you do? Well, if you\u0026rsquo;re serious about it you can plow though this \u0026ldquo;Big Ass Data Broker Opt-Out List\u0026rdquo;, and This list, and this opt-out tool, try to Opt-Out of as much as you can. Or you could pay out the ass for a service like DeleteMe or PrivacyDuck to do this shit for you, not that I really trust them to be all that though, and there\u0026rsquo;s some they can\u0026rsquo;t really remove you from in the first place. But ultimately, you really can\u0026rsquo;t stop it and you\u0026rsquo;ll just be opt\u0026rsquo;d back in when these companies change hands or restructure or just feel like it. If you want to use the internet as normal- using YouTube and Twitter and Reddit - you\u0026rsquo;ll just have to acknowledge to to some extent your stuck with it.\nThat brings us to Lie. If you can\u0026rsquo;t Delete and you can\u0026rsquo;t opt-out then you can still lie. To lie, you must first try to delete the truth. Seach how to reset your advertising ID on as much as you can(1), log out of everything, delete all your cookies, then use tools like \u0026lsquo;Track This.' to \u0026lsquo;seed\u0026rsquo; your new identity, and add something like Noiszy (or this python based web crawler) on top to keep the history polluted. Unfortunately, this still isn\u0026rsquo;t enough because as soon as you log back into Facebook, Twitter, Google, YouTube, etc. your identity will be re-associated. The best way around this is to use a separate browser strictly for social media. Firefox works particularly well, as you can throw Facebook into it\u0026rsquo;s own little jail.\nKeep in mind, you\u0026rsquo;re probably used to a pretty tailored experience from The Almighty Algorithm such that most YouTube, Google News, etc. recommendations are probably things you\u0026rsquo;ll be interested in and agree with (or strongly disagree with, as hate still gets you to read things). If you pollute this ID, you\u0026rsquo;ll likely get complete shit as it\u0026rsquo;s kinda creepy how much the algorithm can figure out the things you like and who you are. If not complete random shit, The Algorithm might just see you as something else entirely, and this can seriously impact what you get exposed to- check out TheirTube for an idea of how bad it gets.\n  There are a lot of things I didn\u0026rsquo;t mention here, such as globally disabling javascript(2), because they\u0026rsquo;re really the nuclear option and end up being significantly inconvenient to even technical users. Being online is a trade of convenience verses privacy by nature, the problem is that many users are either unaware of the trade at all, ignorant of the depth to which they\u0026rsquo;re being mined and exposed, or apathetic. At the same time, advertisers and conglomerates have sought to wring from us every drop of data that can be found and paid off governments to prevent the passage of any consumer protecting legislation. This has resulted in the situation we have now where the only ones that fight back are those with enough of a technical background to do so, and so the tools assume a certain level of technical prowess and ability to make your own replacement. Don\u0026rsquo;t want a ring doorbell? \u0026ldquo;Just use a raspberry pi and a camera module and host your own server for it!\u0026rdquo; my fellow hackers will say, as if the average user is capable of setting up a pi, let alone the server, forwarded network connection, firewall, and security shit that is necessary for it.\nThere\u0026rsquo;s also an ironic point where going to overkill with privacy makes you stand out more. If you don\u0026rsquo;t get 100% anonymization you\u0026rsquo;re going to stand out as one hell of a weird data point. If you don\u0026rsquo;t get banned from the service for looking weird, you\u0026rsquo;ll sure as hell be flagged and watched. If you go from Russia to Canada to Mexico in the three page visits, your reported OS and screen resolution change on each, and you block all trackers and ads you can be sure as shit you show up as a red flag. See \u0026ldquo;The Fantasy of Opting Out\u0026rdquo; from The MIT Press Reader.\nOr just make a new account dedicated to this false identity. Just make sure to log out of everything first (or use a different browser) otherwise the old account and new account will still be linked, defeating the purpose. Or using TOR, a DIY VPN, DNSCrypt, E2E chats, etc. I deemed these a bit to technical for this page for now. I might make a 'for the nerds' section latter, feel free to submit a PR if you think otherwise.  There\u0026rsquo;s also the point of not being spied on by the government, but at least for now there\u0026rsquo;s really jack shit you can do about that outside of what\u0026rsquo;s listed above if you still want to even exist on the internet and not join the Amish in how you use technology.\n "}),a.add({id:46,href:'/engineering/networking/security/',title:"Security",section:"Engineering",content:"Chapter 33 - Security \u0026amp; Exploitation #  I\u0026rsquo;m going to assume at least some prior knowledge here, if you want a quick intro, I recommend going through ./missing-semester-Security so that we can all be on the same page.  Often when we think about Exploitation, better known as hacking, we conjure images of a more-punk-than-cyber cyberpunk person clicking away wildly on a keyboard as code flies by, like the 1995 movie, Hackers, and to some extent this isn\u0026rsquo;t wrong, as one look around the floor at DefCon, will show you. And honestly, that\u0026rsquo;s not by accident. While there are strictly professional security experts, those that work at corporations and banks, a large number do it for the lolz and to bring a little fun back into computing. Calling exploitation \u0026lsquo;hacking\u0026rsquo; is almost a misnomer, as hacking encompass a lot more than exploitation, and exploitation a lot more than hacking. For that reason, before we start, I recommend you watch this video, on speed running Super Mario 64, this is a prime example of hacking in a non-harmful manner done for fun.  XKCD #2166    Most books on hacking or security start out either painfully formal talking about how to secure a system or jump straight into breaking into a system.\nNeither of these are probably your biggest concern.\nInstead, you should be thinking \u0026ldquo;How do I write code that isn\u0026rsquo;t horribly fucked for security?\u0026rdquo; then wrap back around to getting a deeper understanding so that you can know how to actually know how to make some of the more complex decisions, and why they matter.\nLet\u0026rsquo;s start with an example:\n1 2 3 4 5 6 7 8  #include \u0026lt;stdio.h\u0026gt;void main(int argc, char **argv){ int i = 0; printf(argv[1], \u0026amp;i); if(i == 1){ printf(\u0026#34;OWO\\n\u0026#34;); } }    Save as ploit1.c, compile and run with gcc ploit1.c -o ploit\n Here, we\u0026rsquo;ve got 8 lines of code, if run it normally, it just echos the input.\n1 2 3  ‚ï≠‚îÄvega@lyrae ~ ‚ï∞‚îÄ‚û§ ./ploit \u0026#34;test\u0026#34; test%   But hang on, the printf isn\u0026rsquo;t doing any checking on the input, what if we put an interger substitution character in there?\n1 2 3  ‚ï≠‚îÄvega@lyrae ~ ‚ï∞‚îÄ‚û§ ./ploit \u0026#34;%d\u0026#34; 1875151412%   hmmm, alright, can we print a stack pointer?\n1 2 3  ‚ï≠‚îÄvega@lyrae ~ ‚ï∞‚îÄ‚û§ ./ploit \u0026#34;%p\u0026#34; 0x7ffdaa912034%   neat, alright, well there\u0026rsquo;s an interesting printf sequence, %n, which ouputs the number of characters in the string\n1 2  ‚ï≠‚îÄvega@lyrae ~ ‚ï∞‚îÄ‚û§ ./ploit \u0026#34;%n\u0026#34;   There\u0026rsquo;s no output\u0026hellip; but that should tip you off to what\u0026rsquo;s about to happen\n1 2 3  ‚ï≠‚îÄvega@lyrae ~ ‚ï∞‚îÄ‚û§ ./ploit \u0026#34;a%n\u0026#34; aOWO   Got it. By making the string one character (not including the %n itself) %n\u0026rsquo;s character count output is stored into the interger i, and we trigger the if, printing the string.\nHopefully you see that this is a big problem. The user was able to change code flow on a print statement. With a little more work the input could be crafted to access arbitary memory of the program, potentially getting the print to divuldge something in memory you\u0026rsquo;d really rather keep private- maybe a password?\nThis video from Live Overflow explains this much more in depth in just 10 minutes. Give it a watch.\nSee These Lecture notes on Format String Vulnerabilities from Syracuse University and Intoduction to Format String Exploits from Code Arcana for even more.\n The main thing I want you to take away from this example is this:\nSANITIZE YOUR FUCKING INPUTS  Seriously, it\u0026rsquo;s nuts how many exploits are caused by inputs not being checked, allowing for injection attacks. SQL injection letting somebody either read or delete your database? Yep. Cross Site Scripting (XSS). Yep. File Upload attacks? You Bet. Input isn\u0026rsquo;t just text either. It\u0026rsquo;s anything a user can, well, input. Don\u0026rsquo;t be stupid.\nAlso note, input includes anything the program reads. There\u0026rsquo;s nothing stopping a user from diving into the programs files and changing some config file or loading in a different .dll/.so library file. Of course, this technically extends all the way to modifying the binary of the executable itself, but at that point the threat modeling is entirely different.\nAlong with sanitizing inputs, you should also sanitize output where applicable. If the program shouldn\u0026rsquo;t be able to do something, not only should they not be able to force that command in, but that state should be checked for and prevented. See Don‚Äôt try to sanitize input. Escape output. from Ben Hoyt. DO NOT #  DO NOT use random crypto libraries or write your own #  I would hope I don\u0026rsquo;t have to justify this. If the library isn\u0026rsquo;t common, hasn\u0026rsquo;t been audited, and you\u0026rsquo;re not super confident that it\u0026rsquo;s safe: DO NOT use it.\nSimilarly, crypto is hard, unless you want to go into it (which is cool, go for it, just be prepared for a lot of math) and understand what you\u0026rsquo;re getting yourself into, don\u0026rsquo;t try to write crypto code yourself.\nDO NOT use algorithms that are broken #  I would seriously hope this is a \u0026lsquo;No Shit\u0026rsquo;. Unfortunately, it seems it\u0026rsquo;s not. So, allow me:\nDO NOT USE: MD5, DES (Including Tripple DES), SHA-1*, AES-EBC, AES-CBC without a MAC\nAlright, so what should you use? Well, the answer is obviously \u0026ldquo;It depends on what you want\u0026rdquo;, but in general the recommendations from Cryptographic Right Answers are probably a good place to start.\n[TODO]\nhttps://blog.cloudflare.com/a-relatively-easy-to-understand-primer-on-elliptic-curve-cryptography/\nDO NOT think encryption is a magic bullet #   Our mysterious hero ran from the evil forces, carrying his trusty cyberdeck with all the information the resistance needed to win, but if it fell into the wrong hands it would all be over. Unfortunately, there were to many- He was surrounded! He feared not though, for his disk was encrypted by AES-4096! While the resistance may not get the data, the evil forces wouldn\u0026rsquo;t have it either! He taunted his captors, \u0026ldquo;You\u0026rsquo;ll never get that data!\u0026rdquo;\nThey took his cyberdeck from his bag, and wiggled the mouse to find it had only been asleep, the disks still accessible.\n Full disk encryption probably doesn\u0026rsquo;t do you any good. - https://sockpuppet.org/blog/2014/04/30/you-dont-want-xts/\nDO NOT assume the crypto algo \u0026lsquo;Just Works\u0026rsquo; #  YOU have to know how to apply it\n[TODO]\nhttps://soatok.blog/2021/01/20/please-stop-encrypting-with-rsa-directly/\nDO NOT assume the hardware is secure #   This is one of many side channel attacks on hardware directly. My point here is simple: it\u0026rsquo;s turtles compromised all the way down.\nAlong with this, you also shouldn\u0026rsquo;t make to many assumptions that your code is running in a \u0026lsquo;real\u0026rsquo; environment. The code may well be running in a virtual machine or in a container.\nDO NOT assume that things won\u0026rsquo;t break #  Overflow #  Stack Smashing #  Active Tampering #  DO NOT manage your own memory #  Okay, so, this is weird advice. Obviously, sometimes, you literally have to play around with pointers, there\u0026rsquo;s nothing you can do about it. The thing is 70 percent of all security bugs are memory safety issues. So, this is a big fucking problem.\nTo some extent, you can mitigate this by using a higher level language, but that then requires you actually know what you\u0026rsquo;re doing anyway, and the abstraction can actually bite you in the ass even harder. To prove this point, let\u0026rsquo;s look at python.\n1 2 3 4 5 6 7 8  \u0026gt;\u0026gt;\u0026gt; x = 1 \u0026gt;\u0026gt;\u0026gt; y = 1 \u0026gt;\u0026gt;\u0026gt; x is y True \u0026gt;\u0026gt;\u0026gt; x = 257 \u0026gt;\u0026gt;\u0026gt; y = 257 \u0026gt;\u0026gt;\u0026gt; x is y False   so 1 is 1, but 1001 is not 1001? Well, yes and no\n1 2 3 4 5 6 7 8 9 10 11 12  \u0026gt;\u0026gt;\u0026gt; x = 1 \u0026gt;\u0026gt;\u0026gt; y = 1 \u0026gt;\u0026gt;\u0026gt; id(x) 140514241382704 \u0026gt;\u0026gt;\u0026gt; id(y) 140514241382704 \u0026gt;\u0026gt;\u0026gt; x = 257 \u0026gt;\u0026gt;\u0026gt; y = 257 \u0026gt;\u0026gt;\u0026gt; id(x) 140514228628624 \u0026gt;\u0026gt;\u0026gt; id(y) 140514228628496   The reference (pointer) for values below 256 are the same, in the documentation\n The current implementation keeps an array of integer objects for all integers between -5 and 256, when you create an int in that range you actually just get back a reference to the existing object.\n So, the problem her is that instead of x is y this comparison should have been x == y\n1 2 3 4  \u0026gt;\u0026gt;\u0026gt; x = 257 \u0026gt;\u0026gt;\u0026gt; y = 257 \u0026gt;\u0026gt;\u0026gt; x == y True   The point being, memory management is really, really fucking hard to get right and full of gotcha\u0026rsquo;s, even in something as high level as Python.\nThere is no silver bullet here. What can help is, first of all, not using C if you can. Rust, C++, whatever. While I\u0026rsquo;m not a huge fan of object orientation, It does at least, when used correctly, help avoid some of these fuckups. Rust\u0026rsquo;s forced compile-time check\u0026rsquo;s do a great job of ensuring safety too. You should also put your program though valgrind and probably some sort of source code analysis tools like splint (C), flawfinder, bandit (Py), or CPPcheck. Still, don\u0026rsquo;t expect the tools to catch everything. Memory leaks may still sneak by, you may somehow still manage to do a use-after-free, or have some corner case that can segfault.\nAssert statements help too, forcing things to break when conditions aren\u0026rsquo;t met.\n1 2 3 4 5  \u0026gt;\u0026gt;\u0026gt; x = 2 \u0026gt;\u0026gt;\u0026gt; assert x == 1, \u0026#34;x should be 1\u0026#34; Traceback (most recent call last): File \u0026#34;\u0026lt;stdin\u0026gt;\u0026#34;, line 1, in \u0026lt;module\u0026gt; AssertionError: x should be 1   DO NOT assume that you know who is on the other side #  I\u0026rsquo;m not trying to be ·èï·éÆ·éß·éß·è¶·é©, I mean that the server, human, client, whatever that you think you\u0026rsquo;re talking to, may not actually be who you are talking to. By this I generally mean one of two things:\nEither you have a Man In The Middle (MITM) or somebody is being a sneaky douchebag and pretending to be someone else.\nFor MITM, it\u0026rsquo;s more or less what it sounds like. If Alice (A) is trying to talk to Bob (B), it would normally look like A‚áÑB, but for a MITM, there\u0026rsquo;s someone (let\u0026rsquo;s call them Mallory (M)) receiving and forwarding all the traffic bidirectionally, that is A‚áÑM‚áÑB, yet to both Alice and Bob, this is transparent, that is both Alice and Bob only see A‚áÑB despite it actually being A‚áÑM‚áÑB. M could only be eavesdropping, not changing the content at all, could be changing only the data necessary to see the conversation (hijacking the key exchange and message signatures), or change the messages outright.\nIt could also be the case that M is just a sneaky douchebag (that\u0026rsquo;s a technical term), and is just pretending to be B outright, B isn\u0026rsquo;t even part of the connection.\nSome things you should consider:\n Neither side needs to be a machine. It\u0026rsquo;s very possible that the deceit is that somebody is simply lying about who they are on a call. It\u0026rsquo;s not just that you need to trust the other side is who they say they are, you need to know they wont listen to someone that pretends to be you.  This exact problem leads to people being able to carry out a SIM swap scam (Wikipedia)   While verification of identity is important, so is looking up that identity in the first place. If you always call the wrong number, always connect to the wrong URL, etc. You\u0026rsquo;re asking for someone to come along and fill that role.  DO NOT claim \u0026lsquo;unhackability\u0026rsquo; #  If you do, and you get hacked, it goes from being tragic to funny, and it\u0026rsquo;s a huge welcome sign to bored hackers that will find a way in.\nExamples of \u0026#39;unhackable\u0026#39; systems: ‚ÄòUnhackable‚Äô encrypted flash drive eyeDisk is, as it happens, hackable (TechCrunch)\n   DO NOT think that code=binary #  The code you write is not the code that will run.\n1 2 3 4 5 6 7  int main(){ int result = 0; for(int i=0; i \u0026lt; 999; i++){ result = result + i; } return(result%255); }     When this code is compiled with even basic optimization (-O), this is the assembly output:\nmain: # @main mov eax, 231 ret    Notice it\u0026rsquo;s not actually doing any math? It\u0026rsquo;s just storing the result as a constant in the program. The compiler did some magic, realized the programmer was being lazy and not doing math ahead of time, so did the math once. This is normal. Don\u0026rsquo;t make the assumption that the code you write will necessarily be the code the machine runs.\nDO NOT assume that your users give a half a shit about security\u0026hellip; #  They don\u0026rsquo;t. Maybe a small fraction do. Maybe a few will even have fancy USB authentication keys, be generating random 64 character long passwords filled with symbols. The majority though? The majority will be using some standard password they use everywhere else that has already been compromised, which they\u0026rsquo;d know if they bothered to check https://haveibeenpwned.com\nAlso don\u0026rsquo;t think that even halfway decent password requirements will stop users from using shit passwords or just frustrate the hell out of them. Instead, let them know there\u0026rsquo;s a minimum length, that passphrases like CorrectHorseBatteryStaple work well, and that any password that\u0026rsquo;s common will be denied - check if the hash of their password matches the hash of any of the passwords in some common password dictionary like this list of the top 10 million passwords.\nSimilarly, unless you know you\u0026rsquo;re audience is already technical, don\u0026rsquo;t assume that your users will have the even the slightest clue about what an HTTPS certificate is, how to use a public/private key pair, or anything else related to crypto.\nThere\u0026rsquo;s a reason torrent clients verify the hash automatically, that browsers show a little lock, and that telegram lets users check their keys with emoji.\nAlso don\u0026rsquo;t make your users change passwords on a schedule. We all hate it, It\u0026rsquo;s not even recomended anymore, and it\u0026rsquo;s just a royal PITA.\n\u0026hellip;Or that they have a single clue about privacy #  [TODO]\nhttps://0l.wtf/blog/4_visual_browser_fingerprinting.html\nA quick reminder of why \u0026quot;it\u0026#39;s only metadata\u0026quot; is a bad argument... pic.twitter.com/lAG5PA1QZG\n\u0026mdash; Jake Williams (@MalwareJake) February 14, 2021  [TODO] The Hitchhiker\u0026rsquo;s Guide to Online Anonymity\nAre the top websites using WebGL for fingerprinting?\nWhat about on the job or at school? #  DO NOT think that Old ‚â† Good \u0026amp; New ‚â† Good #  \u0026hellip; Middleaged doesn\u0026rsquo;t mean good either I guess.\nBasically, just because something is new and shiny and claims to be 200% as fast and 4x as secure, doesn\u0026rsquo;t mean it\u0026rsquo;s safe. Similarly, just because something is old and well vetted, doesn\u0026rsquo;t mean it is perfect either. Code that\u0026rsquo;s been living in the Linux Kernel for decades or even in the sudo binary can have bugs.\nBasically, what I\u0026rsquo;m saying is you should be careful when choosing what to use, patch shit when vulnerabilities are found, and despite how handy using some new kid on the block library looks, you might wanna avoid it if you\u0026rsquo;re handling sensitive data.\nDO NOT get over confident #  You should expect something to fail. Data will leak. You will have an \u0026lsquo;oh shit\u0026rsquo; moment. The shit will, in fact, hit the fan, splatter all over the room, and seep into the carpet.\nThe best you can do is have a plan for when this happens and do your best to make sure that when it does the damage- both short and long term- is minimal.\nBasically this comes down to two things: Backups and maintaining uptime. For backups:\n The 3-2-1 rule can aid in the backup process. It states that there should be at least 3 copies of the data, stored on 2 different types of storage media, and one copy should be kept offsite, in a remote location\n For uptime, well, that\u0026rsquo;s more complicated. If you\u0026rsquo;re trying to keep 99.99%+ uptime, you\u0026rsquo;ll have to get creative with automatic failovers, software defined networking/storage, etc.\nThat said, trying to get umpteen 9\u0026rsquo;s of uptime is a bit crazy for most things anyway.\nDO NOT trust humans #  Customer support exists to bypass security. Users exist to find bugs you wouldn\u0026rsquo;t think possible. hackers exist to show you that you suck at programming. humans in general exist to do things that to other humans seems totally illogical.\nDon\u0026rsquo;t trust humans. They\u0026rsquo;re Made Out of Meat.\n  \u0026lsquo;SMS is just the worst, but I\u0026rsquo;m having trouble convincing people to adopt my preferred system, TLS IRC with a local server and a patched DOSBox gateway running in my mobile browser.\u0026rsquo;\n XKCD #2365 Before we go any further, I want to get something out of the way:\nSecurity is important, and should be taken seriously. But it\u0026rsquo;s also a field of people who are tired of your shit, Karen. We don\u0026rsquo;t wear suits and we won\u0026rsquo;t do something just to look \u0026lsquo;professional\u0026rsquo;.\nIf I want to curse, if I want to put furry art on these pages, I will do as I fucking please.\nReal \u0026lsquo;Security Professionals\u0026rsquo; own the word hacker, and real hackers don\u0026rsquo;t give a shit about what society tells them to do. Hacking is about finding how systems can do something far outside of what the original desigener ever even considered, about finding solutions so elegant they\u0026rsquo;re art, about breaking boundries. If you want to keep with professionalism or tradition you\u0026rsquo;re in the wrong place.\nAs Soatok put it:\n If people who are sharing great content‚Äìbe it on Twitter or on their personal blog‚Äìdo something that prevents you from sharing their content with your coworkers, the problem isn‚Äôt us.\nNo, the real problem is your coworkers and bosses, and the unquestioned culture of anal-retentive diversity-choking bullshit that pervades business everywhere.\n  [TODO] https://paragonie.com/blog/2015/08/gentle-introduction-application-security\nAuthentication \u0026amp; Authorization #  Authentication != Identity\nhttps://permission.site\nCryptography #  How To Learn Cryptography as a Programmer (Soatok)\nA furry writes about Cryptography but trust me you should actually read this (Soatok)\nHashing #   Note there\u0026rsquo;s general two \u0026lsquo;classes\u0026rsquo; of hashing- hashing for cryptographic security (Passwords) and for just general usage, the cryptographic ones typically are significantly more computationally intensive to make it harder to brute force all possible keys. Also most cryptographic hashing algorithms go to much greater lengths to avoid collisions. Also, salting is relevant here: Salting (Wikipedia)\nSecurity Policies #  Metadata can bite you in the ass\nThreat Modeling #  Network Security #    Email sucks\n  PGP really sucks\n  Firewalls, intrusion detection, DNS blackholes, Fail2Ban, etc.\n  DoS/DDoS\nMitM\nXXS\nHow The Self-Retweeting Tweet Worked: Cross-Site Scripting (XSS) and Twitter (Youtube - Tom Scott)\nMAC/IP spoofing\nsniffing\nDNS: idn-phishing\nWifi Cactus\n    Source, Artist (used with permission from Phyxius)\n   Types of exploits #  [TODO] - where to put return oriented programming, super old hardware/software - \u0026lsquo;the home router\u0026rsquo;,\nOtherwise known as hacking, exploitation of software is always alluring, though in reality like many things it is much less glamorous than the news or tv make it out to be. Before I get into it I want to plug \u0026lsquo;The Art of Exploitation\u0026rsquo; by Jon Erickson again, as it truly is a masterpiece that describes exploiting in a way that just makes sense\n[TODO]\npassive V active attacks - monitoriring/obtaining contents of message V Tampering, Dos, Replay, Faking ID\nSoftware #  strings\nInjection - SQL\nbreaking hashes\nHeap/buffer overflow\ndangling pointers\ncode-injection\nplaces you don\u0026rsquo;t expect to have code like PDFs\nclock attacks\nRace conditions\nPath traversal\nformat string\npseudo-random\nFuzzing\nHardware #  Intro to Hardware Reversing: Finding a UART and getting a shell (YouTube)\nTalk about CPU bugs\nPower side channel\nTiming attacks\npseudo-random (hardware side)\nHardware trust (HID injection)\nreplay attacks\nradio, rfid, etc\nrowhammer, Heartbleed\nHolly s**t. Keyboard tap audio keylogger üßêhttps://t.co/EAzwaVMyp3 pic.twitter.com/40hzZSEVWJ\n\u0026mdash; gorelics (@gorelics) December 15, 2020  Social Engineering #  Phishing\nspoofing (email, phone)\nUTF-8 v ASCII\nclick jacking\nexpired certificate\ndefault passwords\nhoney pots\nstalkerware (Should this be moved?)\nPhysical security #  Lock picking as a last resort\nLaw School for Lockpickers [YouTube, DEF CON 28]\ndata destruction\nMalware #   Section here about not being a dick\n Viruses\npolymorphic\nboot-record/rootkit\ntrojan\nlogic/compression bomb\nlogic/time bombs\nransomware\nadware/spyware\nTools of the trade #  Many tools in common with debugging (gdb - gef, hex editors, logic analzer)\nand testing (fuzzing)\ndecompilers, dissassembly, analysis\nhttps://github.com/plasma-disassembler/plasma\nWireshark\nCheatengine\ndynamic linking\nSandboxing\nResponsible Disclosure #  https://adamcaudill.com/2015/11/19/responsible-disclosure-is-wrong/\nIOT #  Infrastructure #  Elections #  Getting some practice #  https://gtfobins.github.io\nA 64 bit bind shell ELF binary in 172 bytes. (GitHub Gist)\nCTF-Time #  PWNie Island #  Let\u0026rsquo;s Play/Hack - Pwn Adventure 3: Pwnie Island (YouTube, LiveOverflow) (Here he\u0026rsquo;s playing a game where you have to exploit it to win)\nHow To Learn Something New? - Game Devlog #1 (YouTube, LiveOverflow) (Here he\u0026rsquo;s making a game where you\u0026rsquo;re supposed to exploit it)\nWhere to learn even more: #  Live Overflow, Youtube: https://www.youtube.com/channel/UClcE-kVhqyiHCcjYwcpfj9w/playlists\nPhrack : http://www.phrack.org/\nDefcon Media Server : https://media.defcon.org/\nAs mentioned above in Chapter 17- Compilers and Assemblers At this point I highly recommend \u0026lsquo;The Art of Exploitation\u0026rsquo; by Jon Erickson\nhttps://microcorruption.com/ , https://ctftime.org/ ,\nCTF time,\nhttps://nagarrosecurity.com/blog/interactive-buffer-overflow-exploitation\nWritehat (GitHub) - \u0026ldquo;A pentest reporting tool written in Python. Free yourself from Microsoft Word.\u0026rdquo;\nhttps://opensecuritytraining.info\nModern Binary Exploitation from Rensselaer Polytechnic Institute in Spring 2015\nSome Hacking Community Fun #  Bash injection without letters or numbers (YouTube, LiveOverflow)\nPwned By The Owner: What Happens When You Steal A Hacker\u0026rsquo;s Computer (YouTube, Defcon)\nHow a Hacker Convinced Motorola to Send Him Source Code\nDiabetics Are Hacking Their Own Insulin Pumps\nWow. @sparkfun made an app that searches for nearby bluetooth devices that might be ATM/gas pump skimmers.\nThat\u0026#39;s some real cyberpunk shit. pic.twitter.com/CLsI5RKxMC\n\u0026mdash; foone (@Foone) September 19, 2017  Does register selection matter to performance on x86 CPUs? \nLeap Day Bugs\nDEF CON 18 - Zoz - Pwned By The Owner: What Happens When You Steal A Hacker\u0026rsquo;s Computer (YouTube)\nDiabetics Are Hacking Their Own Insulin Pumps (YouTube)\nBig List of Naughty Strings (Github)\nWidevine L3 Decryptor\nŒ±cœÑ¬µŒ±lly pŒ¥rœÑŒ±blŒµ ŒµxŒµc¬µœÑŒ±blŒµ\nSacred texts of hacking: #  From https://wiki.xxiivv.com/#development:\n The Four Essential Freedoms: The freedom to run the program as you wish, for any purpose. The freedom to study how the program works, and change it. The freedom to redistribute copies so you can help others. The freedom to distribute copies of your modified versions to others.\n The hacker and information freedom community has multiple \u0026lsquo;sacred texts\u0026rsquo; if you will, which I think do a good job of outlining some of the ideologies of the communities. Probably the most famous is the Guerrilla Open Access Manifesto written by Aaron Swartz, an amazing man that, according to Wikipedia \u0026ldquo;was involved in the development of the web feed format RSS and the Markdown publishing format, the organization Creative Commons, and the website framework web.py, and was a co-founder of the social news site Reddit\u0026rdquo;. Due to his extensive work in online politics his Wikipedia page almost acts like a hub of sorts for relevant information: https://en.wikipedia.org/wiki/Aaron_Swartz. His most famous text though is probably the Guerrilla Open Access Manifesto.\n\u0026#39;Guerrilla Open Access Manifesto:  Information is power. But like all power, there are those who want to keep it for themselves. The world\u0026rsquo;s entire scientific and cultural heritage, published over centuries in books and journals, is increasingly being digitized and locked up by a handful of private corporations. Want to read the papers featuring the most famous results of the sciences? You\u0026rsquo;ll need to send enormous amounts to publishers like Reed Elsevier.\nThere are those struggling to change this. The Open Access Movement has fought valiantly to ensure that scientists do not sign their copyrights away but instead ensure their work is published on the Internet, under terms that allow anyone to access it. But even under the best scenarios, their work will only apply to things published in the future. Everything up until now will have been lost.\nThat is too high a price to pay. Forcing academics to pay money to read the work of their colleagues? Scanning entire libraries but only allowing the folks at Google to read them? Providing scientific articles to those at elite universities in the First World, but not to children in the Global South? It\u0026rsquo;s outrageous and unacceptable.\n\u0026ldquo;I agree,\u0026rdquo; many say, \u0026ldquo;but what can we do? The companies hold the copyrights, they make enormous amounts of money by charging for access, and it\u0026rsquo;s perfectly legal ‚Äî there\u0026rsquo;s nothing we can do to stop them.\u0026rdquo; But there is something we can, something that\u0026rsquo;s already being done: we can fight back.\nThose with access to these resources ‚Äî students, librarians, scientists ‚Äî you have been given a privilege. You get to feed at this banquet of knowledge while the rest of the world is locked out. But you need not ‚Äî indeed, morally, you cannot ‚Äî keep this privilege for yourselves. You have a duty to share it with the world. And you have: trading passwords with colleagues, filling download requests for friends.\nMeanwhile, those who have been locked out are not standing idly by. You have been sneaking through holes and climbing over fences, liberating the information locked up by publishers and sharing them with your friends.\nBut all of this action goes on in the dark, hidden underground. It\u0026rsquo;s called stealing or piracy, as if sharing a wealth of knowledge were the moral equivalent of plundering a ship and murdering its crew. But sharing isn\u0026rsquo;t immoral ‚Äî it\u0026rsquo;s a moral imperative. Only those blinded by greed would refuse to let a friend make a copy.\nLarge corporations, of course, are blinded by greed. The laws under which they operate require it ‚Äî their shareholders would revolt at anything less. And the politicians they have bought off back them, passing laws giving them the exclusive power to decide who can make copies.\nThere is no justice in following unjust laws. It\u0026rsquo;s time to come into the light and, in the grand tradition of civil disobedience, declare our opposition to this private theft of public culture.\nWe need to take information, wherever it is stored, make our copies and share them with the world. We need to take stuff that\u0026rsquo;s out of copyright and add it to the archive. We need to buy secret databases and put them on the Web. We need to download scientific journals and upload them to file sharing networks. We need to fight for Guerilla Open Access.\nWith enough of us, around the world, we\u0026rsquo;ll not just send a strong message opposing the privatization of knowledge ‚Äî we\u0026rsquo;ll make it a thing of the past. Will you join us?\nAaron Swartz\nJuly 2008, Eremo, Italy\n If you\u0026rsquo;d like more information on Swartz\u0026rsquo;s infulence you can watch a documentry on him here\n  Another one that you should read is The Conscience of a Hacker written by \u0026lsquo;The Mentor\u0026rsquo; in \u0026lsquo;86:\nThe Conscience of a Hacker  Another one got caught today, It\u0026rsquo;s all over the papers. \u0026ldquo;Teenager Arrested in Computer Crime Scandal\u0026rdquo;, \u0026ldquo;Hacker arrested after Bank Tampering\u0026rdquo;\u0026hellip;\nDamn kids. They\u0026rsquo;re all alike.\nBut did you, in your three-piece psychology and 1950\u0026rsquo;s technobrain, ever take a look behind the eyes of a hacker? did you ever wonder what made him tick, what forces shaped him, what may have molded him?\nI am a hacker. Enter my world.\nMine is a world that begins with school\u0026hellip; I\u0026rsquo;m smarter than most of the other kids, this crap they teach us bores me\u0026hellip; Come on\u0026hellip; Ain\u0026rsquo;t Got All Day!! Damn underachiever. They\u0026rsquo;re all alike.\nI\u0026rsquo;m in junior high or high school. I\u0026rsquo;ve listened to the teachers explain for the fifteenth time how to reduce a fraction. I understand it. \u0026ldquo;No Ms. Smith, I didn\u0026rsquo;t show my work. I did it in my head\u0026hellip;\u0026rdquo;\nDamn kid. Probably copied it. They\u0026rsquo;re all alike.\nI made a discovery today. I found a computer. Wait a xecond, this is cool. It does what I want it to. if it makes a mistake, it\u0026rsquo;s because I screwed it up. Not Because it doesn\u0026rsquo;t like me\u0026hellip; Or feels threatend by me\u0026hellip; Or thinks I\u0026rsquo;m a smart ass\u0026hellip; Or doesn\u0026rsquo;t like teaching and shouldn\u0026rsquo;t be here\u0026hellip;\nDamn kid. All he does is play games. They\u0026rsquo;re all alike.\nAnd then it happened\u0026hellip; a door opened to a world\u0026hellip; rushing through the phone line like junk through an addict\u0026rsquo;s veins, an electronic impulse is sent out, a refuge from the day-to-day incompetencies is sought\u0026hellip; a board is found.\n\u0026ldquo;this is it\u0026hellip; this is wwhere I belong\u0026hellip;\u0026rdquo;\nI know everyone herre\u0026hellip; even if I\u0026rsquo;ve never met them, never talked to them, may never hear from them again\u0026hellip; I know you all\u0026hellip;\nDamn kid. tying up the phone line again. They\u0026rsquo;re all alike\u0026hellip; Come on\u0026hellip; Ain\u0026rsquo;t Got All Day!! You bet your ass we\u0026rsquo;re all alike\u0026hellip; we\u0026rsquo;ve been spoon-fed baby food at school when we hungered for steak\u0026hellip; the bits of meat that you did let slip through were prechewed and tasteless. We\u0026rsquo;ve been dominated by sadist, or ignored by the apathetic. The few that had something to teach us found us willing pupils, but those few are like drops of water in the desert.\nThis is our world now\u0026hellip; the world of the electron and the switch, the beauty of the baud. We make use of a service already existing without paying for what could be dirt-cheap if it wasn\u0026rsquo;t run by profiteering gluttons, and you call us criminals. we explore\u0026hellip; and you call us criminals. We seek after knoledge\u0026hellip; and you call us criminals. We exist without skin color, without nationality, without religous bias\u0026hellip; and you call us criminals. You build atomic bombs, you wage wars, you murder, cheat, and lie to us and try to make us believe it\u0026rsquo;s for our own good, yet we\u0026rsquo;re the criminals.\nYes, I am a criminal. My crime is that of curiosity. My crime is that of judging people by what they say and think, not what they look like. My crime is that of outsmarting you, something that you will never forgive me for.\nCome on\u0026hellip; Ain\u0026rsquo;t Got All Day!!\nI am a hacker, and this is my manifesto. You may stop this individual, but you can\u0026rsquo;t stop us all\u0026hellip; after all, we\u0026rsquo;re all alike.\n+++The Mentor+++ Racketeers\n   "}),a.add({id:47,href:'/engineering/networking/servers/',title:"Servers",section:"Engineering",content:"Chapter 31 - Servers! #  First of all, let\u0026rsquo;s demystify the servers, they are not something to be afraid of \u0026hellip; they are just normal computers that execute processes, the main difference is that these computers do not have a direct interface, that is: there is no need for them to have peripherals (most of the time) since they only SERVE resources for other needs.\nA good example of a server is this one, in which you are reading this, the only function of the server where this content is hosted is to provide it, nothing more and nothing less.\nThe DIY Homelab #  A homelab is basically a \u0026ldquo;sandbox\u0026rdquo; where we can practice our Server-Fu (and sometimes do something useful), a homelab can be as basic or as complex as we want, the only thing we need to start with is a couple of virtual (or physical) machines.\nWhy? #  Let\u0026rsquo;s imagine that you decided to start working in a huge company, you applied for the vacancy and got the job!\nor\nMaybe you want to self-host a cloud backup for all that important files.\nIt would be bad for all of us to start pasting commands copied from StackOverflow to perform actions on a productive or \u0026ldquo;real\u0026rdquo; server, right?\nThis is where our small (or large) HomeLab comes in, where we can paste googled commands and learn the functionality of those commands and the worst that can happen is that we spend a day of a weekend formatting one of our servers but \u0026hellip; in exchange for acquiring this ability is a good exchange right?\nFirewalls #  First of all a firewall is simply a system with a set of rules that dict whatever or not a network communication should be permitted, lets think of it as the \u0026ldquo;bar security\u0026rdquo; of our network or server.\nThere are some commercial firewalls but lets be honest, we are no willing to pay ~500 USD for a commercial grade firewall only to practice right?\nSo there are some interesting OpenSource projects that can me implemented, my preferred one is called \u0026ldquo;PfSense\u0026rdquo; the project is much more than a firewall (And we will be looking at in other sections) but it comes with a pretty nice firewall capabilities.\nRouting #  The router in a network setup is like \u0026ldquo;a set of traffic signs\u0026rdquo; to redirect some network communications trough a certain path, with routers we are stepping in a rabbit hole of network protocols, VLANs and other tings but for our purpose lest keep it simple.\nHere as well my defecto choice for a Low cost and easy to implement solution for a HomeLab will be PfSense as It can work in a single machine as Router, Firewall, DHCP server, etc\u0026hellip;\nVPN services #  The self-hosted experience (or hassle) #  Server Types (in a nutshell) #  Web Servers #  Before we get to business there\u0026rsquo;s some necessary viewing: http://motherfuckingwebsite.com/\nFile Servers and NAS #  [TODO]\nApplication servers #  [TODO]\nVirtual machines and containerization #  [TODO]\nWhy don‚Äôt have it physical? #  [TODO]\nLocal VMs #  [TODO]\nCloud VMs #  [TODO]\nContainers and the convenience of not breaking things #  [TODO]\nThe voodoo magic of‚Ä¶ serverless? #  [TODO]\nWhy build a server #  [TODO]\nDIY Networking: Routing, firewall, etc. #  [TODO]\nWeb hosting #  [TODO]\nFile Storage, Sharing, Backups #  [TODO]\nRemote Access #  [TODO]\nGit, Games, and Glory #  [TODO]\nVirtual Machines #  [TODO]\nContainerization #  [TODO]\nFault tolerance #  [TODO]\nServerless? #  [TODO]\nInteresting Related Articles: #  Why All My Servers Have an 8GB Empty File (Brian Schrader) (It\u0026rsquo;s to buy time in case of a full disk)\n"}),a.add({id:48,href:'/engineering/prereq/chem/',title:"Chem",section:"Engineering",content:"Chapter 8 - Chemistry #  This chapter is more or less on hold while I prioritize adding the content I\u0026rsquo;m more familiar with, if you\u0026rsquo;d like, feel free to submit a PR to flesh this section out. Unfortunately my chemistry education was pretty \u0026lsquo;meh\u0026rsquo;, and I never actually made it to Organic Chem. I have CrashCourse\u0026rsquo;s Chemistry and Organic Chemistry videos on YouTube on my \u0026lsquo;To Watch\u0026rsquo; list though. Obviously I don\u0026rsquo;t know if they\u0026rsquo;re any good, but maybe they\u0026rsquo;d be a decent place to start. NileRed, Cody\u0026rsquo;s Lab, and Thought Emporium on YouTube all have good chemistry content as well.\n This series from Crash Course series has 46 videos, each about 10 minuets, so about 7.6 hours of content.   8.1 - Atomic Structure, Basics of the Table, Bonding #  8.2 - Acid/base, Electrochem, Thermochem, Photochem #  8.3 - Organic Chemistry #  This series from Crash Course series is in progress at the time of writing, but when done will consist of 50 videos, each about 12 minuets, so about 10 hours of content.   Yeast that produce PENICILLIN - Whose Gene is it Anyway (YouTube)\n8.4 - Making Chemistry Fun #  https://www.homebrewtalk.com\n[TODO] add nile red, cody\u0026rsquo;s lab, and thought emporium specific links\n"}),a.add({id:49,href:'/engineering/prereq/othersubjects/',title:"Othersubjects",section:"Engineering",content:"Chapter 9 - \u0026lsquo;The Rest\u0026rsquo; #  English #  I\u0026rsquo;m monolingual. I got just enough Spanish in high school to graduate and never looked back. Unfortunately for those that don\u0026rsquo;t speak English as a first language, the internet has developed in such a way that English is basically the go-to language online.\nOkay, so, some context is necessary here. Historically, England sorta gave the whole \u0026ldquo;World Domination\u0026rdquo; thing a shot as colonialism and in the process spread English to, well, everywhere? This has also had the side effect of quite a few languages becoming endangered. So, you might want to balance in what languages you write online for the sake of preserving your culture. Regardless, the internet will still expect you to communicate in English in most places, and this will often be enforced by moderation only allowing languages that they can easily read- Often strictly English. For better or worse, English is becoming the world\u0026rsquo;s universal language.  [TODO]\n     https://www.marginchronicles.com/site/style/index.html\nWhat if English were Phonetically Consistent? (YouTube - Aaron Alon)\nFinance #  [TODO] because making and engineering are expensive, and you probably want to make money, and spend less money.\nMusic #  Music? In a chapter on Engineering? Well, yeah. Hear me out, music is a combination of math and signals.\n 1 2 3 4 5  EUCLID(m, k): if k = 0: return m else: return EUCLID(k,m mod k)   The Euclidean Algorithm Generates Traditional Musical Rhythms (Godfried Toussaint) (PDF)  As another example the Euclidean Algorithm can be used to distribute drum hits to algorithmically make drum beats\n   As a really cool example, there\u0026rsquo;s also ORCŒõ by 100 rabbits, which you can see in action in this video from EZBOT on YouTube:\n If you get into Modular music systems, like eurorack, it\u0026rsquo;s really similar to programming too- as you connect modules as if they\u0026rsquo;re functions and operations- to make a complex musical system. Here\u0026rsquo;s an example of a Eurorack setup in action from Lightbath on YouTube:\n Health #  [TODO] Mental \u0026amp; Physical, because nerds typically suck at this.  Character owned by Vega, art by Talon Creations   World Studies #  [TODO] To help with tolerance and looking at things from new perspectives.\nHistory #  [TODO] inspiration from history and remembering past mistakes\n Art, Design, UI \u0026amp; UX #  I know what you\u0026rsquo;re thinking \u0026ldquo;Vega, this guide is about engineering- why should I give a damn about art?\u0026rdquo;\nBecause you\u0026rsquo;ll still probably need to design enclosures, make easy to read documentation, and probably make a user interface or two, and bad design usually leads to both users not being interest in the first place and a poor user experience.\nSo, even if you\u0026rsquo;re not super into it, give the Design Chapters a quick skim and look at the parts that seem relevant to you, you\u0026rsquo;ll want to look at Section 4 - UI/UX for sure.\nIf you\u0026rsquo;d like a good laugh, check out this video from Tantacrul roasting the poor design of Sibelius, a popular program for music notation\n There\u0026rsquo;s also this gallery of bad volume controls:\nVolume \u0026quot;control\u0026quot;. "}),a.add({id:50,href:'/engineering/prereq/physics/',title:"Physics",section:"Engineering",content:"Chapter 7 - Physics #  This is still a dumping ground for things I want to write about later, nothing of substance is here yet, sorry about that ‚ïÆ(‚îÄ‚ñΩ‚îÄ)‚ï≠ [TODO] speed vs Velocity vs Acceleration, clasicall vs realative\nRadiocarbon dating (Wikipedia)\nCosmic Microwave Background (Wikipedia)\nNatural nuclear fission reactor (Wikipedia)\nHow Kodak Exposed The Atomic Bomb (YouTube, Veritasium)\nSeeing the invisible: Event displays in particle physics\nBuilding a Vortex Tube (This Old Tony, YouTube)\nmade with paint from r/physicsmemes  The Chernobyl Dice: A quantum random number generator with a nixie tube display 1 - Newtonian (assume a spherical cow) #  2 - Electromagnetism #  in case you were wondering: yes, it works :D pic.twitter.com/CEjK6p2cHj\n\u0026mdash; mx.qualia (@profanegeometry) January 29, 2020  The Electromagnetic Radiation Spectrum (Anthony Tekatch @ Unihedron.com)\n3 - Relativity and the Quantum #  Planck frequency, time, length\n"}),a.add({id:51,href:'/engineering/programming/aiml/',title:"Aiml",section:"Engineering",content:"Chapter 21 - Fine, I\u0026rsquo;ll talk about AI #  This chapter is very much a work in progress, and is really more of just a list of topics despite how much content there appears to be. I\u0026rsquo;d really like to have code examples under each concept as well, as otherwise it\u0026rsquo;s like reading a fucking math textbook from hell. [TODO] https://www.asimovinstitute.org/author/fjodorvanveen/\nMachine Learning? #  You\u0026rsquo;ve used it today. ML is used for search engines, social media feed order (the almighty Algorithm), and predictive text systems.\nWhat is the difference between ML and AI? [TODO]\nLearning is not the same as memorization, for example, if a baby sees his mother from various angles and under different lighting, he\u0026rsquo;s not memorizing her face. He\u0026rsquo;s learning features about it, which is why he can still recognize her in new views. Checking if two things are identical (or nearly so) is much easier, learning features and detecting things based on them is more difficult for a computer.\nwhen to use ML?\n Computer being put in a situation where human\u0026rsquo;s have no direct experiance No way to tell computer the human experiance (speech recognition, facial recognition, driving) When the solution changes based on conditions/time (Driving in different weather / lighting, background noise removal) Every application is a bit different (different voices need different recognition)  when not to use ML?\n When all cases can be covered by a traditional program   Before I try to poorly explain something that has been explained much better than I can via text, I recomend watching this 4-video series from 3Blue1Brown, it totals just a hair over hour.\n With 3B1B\u0026rsquo;s videos done, I think it\u0026rsquo;s useful to just be exposed to some terms in bulk and get a sort of high level overview of what\u0026rsquo;s going on. For that, I recommend just putting this video on 2x speed and digesting it as best you can. Don\u0026rsquo;t worry if something makes you go \u0026ldquo;huh?\u0026rdquo; for now:\n Supervised Vs. Unsupervised Learning #  Supervised Learning #  Given labeled examples with features described, like pictures of trucks and cars, labeled \u0026lsquo;truck\u0026rsquo; or \u0026lsquo;car\u0026rsquo; and data fields for wheel count, color, etc. that are populated, the machine learning algorithm makes a model that will try to classify new inputs.\nFeatures can be as simple as the individual pixel values in an image\nLet C be the target function to be learned. Think of C as a function that takes the input example and outputs a label. The goal is to, given a training set $ \\chi = {(x^t,y^t) }^N_{t=1}$ where $y^t=C(x^t)$, output a **hypothesis** h ‚ààH, that approximates C when classifying new input.\nEach instance x represents a vector of features (attributes). For example, let each $x=(x_1,x_2)$ be a vector describing attributes of a guitar; $x_1 = \\text{sting count}, x_2=\\text{acoustic or electric}$, each label is binary (positive/negitive, yes/no, 1/0, etc.) and contributes to weather or not it\u0026rsquo;s a 6 string acoustic guitar.\nA leraning algorithm uses train set œá and finds a hypothesis h‚ààH that approximates C\nerror (loss) of h\n Empirical error is a fraction of œá that h gets wrong Generilation error is probability that a new, randomly selected, instance is misclassified by h. This depends on the probability distribution over instances. Generalizion error is much more important than Empirical - it\u0026rsquo;s better to have it perfrom well on new data than be great on the training data False Negitives (C-h) and False Positives (h-C)  Unsupervised Learning #  Same as above, but no labels. (Still features). For example, https://en.wikipedia.org/wiki/K-means_clustering or Hierachical clustering https://en.wikipedia.org/wiki/Hierarchical_clustering\nSemi-supervised learning #  a mix of some labeled data, and some unlabed.\nPretrain to get relevent features\ntransfer-learning, take training from one task and apply it to another (should this be here?)\nReinforcement Learning #  agent takes step, looks at eviroment, makes actions based on it, repeat. Goal it to maximize expected long term reward\nOften used for games\nMarkov Decision Process\nSorta like a state machine\nfeedback is often delayed - credit assignment problem\nHow does it work? #  Not overfitting - spikey vs smooth curve. Spikey to directly fit is bad, similar with XY blobs with reaching out arms balance with model complexity with regulizer. We want generalization (learning) not memorization\nModels #  Decision trees\nsupport vector machines\nprobalistic graphical models\nArtifical Neural Networks -\u0026gt; Deep learning (many layers)\nEach node multiplied by weight, sent though activation function, often using stochastic gradient descent\nPerformance Measures #  Classification error - fraction of time correct\nSquared error\ncross entropy\nNo single best approach\nLinear Unit (Regression) #  [TODO] tie back to https://en.wikipedia.org/wiki/Linear_regression\na vector with features x_1 to x_2 and weights w_1 to w_n\n   \\(\\hat{y}=f(x;w,b)=x w\u0026#43;b=w_1x_1\u0026#43;....w_nx_n\u0026#43;b\\)  b can be represnteded as  \\(w_0\\)  instead, as is shown in the above\n  \\(y=o(x;w,b)=\\{{\u0026#43;1 \\text{ if } f(x;w,b)\u0026gt;0\\atop{-1 \\text{ otherwise}}}\\)  (sometimes 0 instead of -1)\nfor binary classification, +1 is it is the thing, -1 (or 0) is saying it\u0026rsquo;s not the thing.\nnot all functions are linearly seperable, one straight line can\u0026rsquo;t split the data into postives and negitives- so having networks of units works around this\nOf course, we\u0026rsquo;d like to be able to use inputs that aren\u0026rsquo;t just numbers. Representing things like price or weight can be given a number, but for other things, like colors, one hot vectors are helpful, for example, if there are three color options, red, green, blue, red could be [1,0,0], green [0,1,0], blue [0,0,1]. This is better than just assigning each color an integer (red=1,green=2,blue=3, etc.) because we don\u0026rsquo;t want to imply ordering in the data. one hot vectors are espcically nice because they let us assign positive weights to a given color and negitive weights to others. For example, in identifying a fire truck, red will obviosuly have a very positive weight, while being the other colors may be a negitive weight.\ntraining:\n \\(w_j\\prime\\larr w_j\u0026#43;\\eta(y^t-\\hat{y}^t)x^t_j\\)   \\(w_j\\prime\\)  is the new value of  \\(w_j\\)  , (the j\u0026rsquo;th w as each weight is incremented though)\n \\(x_j^t\\)  is the jth attribute of tranining instance t\n \\(y^t\\)  is the label of traning instance t\n \\(\\hat{y}^t\\)  is Perception output on traning instance t\nŒ∑ \u0026gt; 0, the learning rate, is a small constant (e.g.; 0.1)\nif  \\((y-\\hat{y})\u0026gt;0 \\text{ then increase } w_j \\text{ w.r.t } x_j\\)  else decrease\nCan prove rule will converge if traning data is linearly seperable and Œ∑ sufficently small\na bad learning rate, Œ∑, can cause very slow convergence (too small) or even divergence (too large)\nIt\u0026rsquo;s best to adjust the learning rate per schedule (iteration) rather than just use a constant. For this we want to start with a high learning rate, then decrease it.\n   Schedule Formula     Power Scheduling  \\(\\eta(t)=\\eta_0/(1\u0026#43;t/s)^c‚Äã\\)     Exponential Scheduling  \\(\\eta(t)=\\eta_0(0.1)^{t/s}‚Äã\\)     Performance Scheduling reduce Œ∑ by Œª when no improvment in validation   1cycle Scheduling increase from  \\(\\eta_0 \\text{ linearly to } \\eta_1‚Äã\\)  then back down to ‚Äã \\(\\eta_0‚Äã\\)      Gradient Descent #  [TODO] https://en.wikipedia.org/wiki/Gradient_descent\n[TODO] Stochastic Gradient Descent\nmomentum term Œ≤ to keep updates moving in the same direction as previous trials\nthis can help move though local minima to a better local or global minimum and not get stuck on flat spots\nAdagrad adapts learning rate by scaling it down in steepest dimensions\nRMSProp exponations decays old gradients to avoid AdaGrad\u0026rsquo;s problem of sotpping to early for neural networks duo to agressive downscaling\nAdapative Moment Estimation (Adam) combines momentum optimization and RMSProp\nNonlinearly seperable Problems #  writing this as I take notes, it\u0026rsquo;s basically meaningless at the moment XOR\n   Input A Input B Output     0 0 0   0 1 1   1 0 1   1 1 0    No single linear threshold unit can describe this\nin 2d a line, in 3d a plane, 4+d hyperplane\nEvery one one side of these is a halfspace, but given two functions, we can get an overlap, the intersection of the two halfspaces\nnow, we can find $z_i$ , mapping though a non-linear function, from x space to z space, now the problem is linearly seperable- there\u0026rsquo;s no need for the demiensions from mapping from x-to-z space to be the same, and there can be multiple hidden layers\nWe\u0026rsquo;ve mapped from a non-linearly seperable problem into a linearly seperable one\nFeedforward Neural Networks on Wikipedia\ngenerally, if the input can be split up with straight lines and be defined as the unions and intersections of those halfspaces, then two hidden layers and an output layer must exist that works\nBackpopagation #  First, feed forward the network\u0026rsquo;s inputs to it\u0026rsquo;s outputs, then propagates back error with by repeatdely applying the chain rule\nBackpropagation (Wikipedia)\npropagate error back in order to compute loss gradient with respect to each weight, then update the wights\ndon\u0026rsquo;t have to update the loss on each instance, could do mini-batches (Stochastic Gradient Descent- SGD), or in the extreme case, have the entire training set be a single batch (batch gradient descent). SGD saves on memory, which helps.\nComputation Graphs #  (note the library- tensor flow, pytorch, etc.- will probably handle this for you)\ngiven a complicated function, we want to know it\u0026rsquo;s partial derivatives with respect to its parameters\nFor\nmultivariate chain rule, multiple paths that can affect the output. Math gets very gross very quickly\nThe Sigmoid Unit #  $S(x)=\\frac{1}{1+e^{-x}}$ squashes everything into a range from 0 to 1 (or -1 to 1), with 0 mapping to to ¬Ω. It\u0026rsquo;s similar to the threshold function, for us, this is useful as $\\sigma(x)=\\frac{1}{1+e^{-net}}$, where $net=\\sum_{i=0}^{n} w_i x_i=f(x;w,b)$\n Types of Output Units #  Linear - works well with GD training\nLogistic - good for probabilities\nSoftmax - every output node\nTypes of Hidden Units #  Logistic - has issues with saturation\nRectified Linear Unit (ReLU)\n‚Äã	leaky ReLU and exp ReLU\nHow many layers to use? #  increasing number of layers increases risk of overfitting, need more training data for deeper network to avoid this\nperformance improvement even without more parameters\nGotta know when to add more layers instead of parameters, but in general adding more layers is better, that is try adding layers before widening, keeping in mind the overfitting problem. Also increasese training time\nANN - Artifical Neural Networks #  Silicon \u0026lsquo;neurons\u0026rsquo; are much faster, but connect to many less nodes, compared\n[TODO] get human neuron count, \u0026lsquo;switching time\u0026rsquo;, interconnectivity\nmuch different for ML vs Biological Modeling\nthink a ton of really weak cores, which explains the GPU usage\ngood for raw sensor data, okay with noise, but requires long training times and lacks human readability- hard to know why it predicts what it does\nStarted with the Perceptron algoritm, but that was too limited (40\u0026rsquo;s)\nmulti-layer backpropagation (80\u0026rsquo;s) allowed for training multi layer networks, and they couldn\u0026rsquo;t be made deep on that era\u0026rsquo;s hardware, while other algoritms (Support Vector Machines, boosting) were taking off instead. In the 2000\u0026rsquo;s it became possible for 5-8 layers though, making \u0026lsquo;deep\u0026rsquo; learning possible (mostly because of gaming GPUs). Better datasets, and better algorithms helped too.\nany boolean function can be represented with 2 layers\nany bounded contious function can be represented with arbitarily small error with two layers\nthat goes to any function at 3 layers\nbut, this is only true for existance. It may be very, very difficult to find the weights and take a ton of nodes\nInitalization #  We used to initalize parameters to random numbers near 0, but now Glorot is used,\nwith $n_{in} \\text{ inputs and } n_{out} \\text{ outputs}$, initialize with a uniform from $[-r,r]$ with $r=a\\sqrt{\\frac{6}{n_{in}+n_{out}}}$ or normal, $\\mathcal{N}(0,\\sigma)$, with $\\sigma=a\\sqrt{\\frac{2}{n_{in}+n_{out}}}$\n   Activation a     Logistic 1   tanh 4   ReLU ‚àö2    Gradient Decest #  alt: evolution\nNonlinearly seperable problems and multilayer networks #  Types of Activation Functions #  Convolutional Neural Networks #  CNN\u0026rsquo;s on Wikipedia\nGood for data with grid/array like topology, think images or time series data\nbased on using convolutions and pooling- extract features, invarient to transforms, parameter efficient\npassing a kernel over an image, just doing a sliding window, like normal - can do edge detection, bluring, etc.\nKernels are just weights, so, we can learn the best weight to use\nnot complete connectivity, that is no crossing from layer to another, the layer above only depends on one path\n\u0026hellip; unless we use a convolutional stack(?)\n\u0026hellip; next node over probably shares many parameters (weight sharing), the computation graph could just share this overlap to reduce parameters. Saves memory\n‚Äã	weight sharing forces the layer to learn a specific feature extractor. Multiple layers could be learned in parallel, as only detecting one feature (like vertical lines) may not be helpful.\n‚Äã	on images this is commonly done as separate detectors on color channels and multiple for specific feasters. Each higher layer is for a more complex feature, with multiple channels of features.\nBasically,\ncan pad to retain size, 0-padding is common\ncan use a stride-parameter to downsample\npooling nodes help get translation invariance\nDownsides of CNNs: Many parameters to tune, large memory usage\noften better to modify a prior network trained on a bigger dataset and for longer - Transfer Learning\nObject Detection can look for local areas of interest:\nR-CNN, SPP-NET, Fast R-CNN, YOLO - You Only Look Once\nRegularization and Evaluation #  ML is basically an optimization problem\nWe need a function to measure performance - a loss function\nGiven instance x, with label y, and a prediction $\\hat{y}$, then $J(y,\\hat{y})$ is the loss on that instance\n   Function Common Use Formula     0-1 Loss  $J(y,\\hat{y})=1$ if $y\\neq\\hat{y}$, 0 otherwise   Square Loss Regression $J(y,\\hat{y}) = (y - \\hat{y})^2$   Cross-Entropy y and $\\hat{y}$ are considered probabilities of a \u0026lsquo;1\u0026rsquo; label. Allows for two probability distributions. Good for when the input data also has probability. Often used for classifying images $J(y,\\hat{y})$ = $(-y)ln(\\hat{y})-(1-y)ln(1-\\hat{y})$   Hinge Loss Large Margin Classifier $J(y,\\hat{y}) = max(0,1-y\\hat{y})$    given a loss function, J, and a dataset, X, $error_x(h)=\\sum_{x\\in h}J(y_x,\\hat{y}_x)$ where $y_x$ is x\u0026rsquo;s label, and $\\hat{y}_x$ is h\u0026rsquo;s prediction\nBut, it\u0026rsquo;s more important that the model generalizes, so given a new example (picked i.i.d) according to unknown probability distribution D, we want to minimize h\u0026rsquo;s expected loss $error_D(h)=\\mathbb{E}_{x\\sim{D}}[J(y_x,\\hat{y}_x)]$\nminimizing training loss isn\u0026rsquo;t the same as minimizing expected loss? NO\nBy doing to good on the training set, the over fitting will make results pretty bad. That is a specific parameter h overfits the training data, X, if there is an alternative hypothesis, $h^\\prime$ such that $error_x(h) \u0026lt; error_x(h^{\\prime})$ and $error_D(h) \u0026gt; error_D(h^{\\prime})$\n This is literally just the formal defn' of overfitting. Don\u0026rsquo;t over think it.\n Overfitting example by Chabacano - CC BY-SA 4.0 Note that underfitting is just as much of a problem. Training accuracy needs to be balanced with simplicity.\nOverfitting is often a result of an overkill network topology, training too long, not having enough training data, or not doing early stopping.\nComplexity Penalty $J^{\\sim}(\\theta;X,y)=J(\\theta,X,y)+\\alpha\\Omega(\\theta)$ where $\\alpha \\in [0,\\infin)$ weights loss J against penalty $\\Omega$. $\\Omega(\\theta)$ just measures complexity via $\\Omega(\\theta)=(0.5)||\\theta||_2^2$, that is the sum of the squares of network\u0026rsquo;s weights. Since $\\theta=w$, this becomes\n$J^{\\sim}(w;X,y)=(\\alpha/2)w^{\\top}w+J(w;X,y)$\nas weights deviate from 0, activation functions become more nonlinear, which brings a higher risk of overfitting\nEarly Stopping #  danger of stopping too soon, as it might just have a \u0026lsquo;bump\u0026rsquo;\nData Augmentation #  Careful not to change class- ie 6 ‚Üí 9 or E ‚Üí 3 in images\nprotects against translation/rotation and overfitting/underfitting\nadding noise\nMultitask Learning #  Share common layers of lower network\nDropout #  Prevents any node from becoming too specialized sorta distributes the work load\nBatch Normalization #  Parameter Tying #  Parameter Sharing #  Sparse Representations #   Other Resources #  https://hific.github.io/\ni.am.ai Roadmap \u0026ndash; this shows that AI/ML are rooted in Data Science, as a [TODO] this probably needs talked about here\nThis ____ Does Not Exist\n \u0026ldquo;Using generative adversarial networks (GAN), we can learn how to create realistic-looking fake versions of almost anything\u0026rdquo;\n Stan for statistical modeling\nML model can classify sex from retinal photograph, clinicians can\u0026rsquo;t\n"}),a.add({id:52,href:'/engineering/programming/algorithms/',title:"Algorithms",section:"Engineering",content:"Chapter 14 - Discrete Math, Algorithms, Data Structures, and Not Sucking at Programming ‚Ñ¢* #  [TODO] Directed Acyclic Graphs\n[TODO] Finite State Machines\n[TODO] e-graphs? https://egraphs-good.github.io\n[TODO] http://courses.csail.mit.edu/6.851/\n[TODO] \u0026lsquo;Tree Traversal\u0026rsquo; on Algorithm Archive\n*With some complexity analysis too.\n[TODO]\nhttps://www.mattkeeter.com/blog/2021-03-01-happen/\n[TODO] I also have discreete math in the chapter 11, math\u0026hellip; not sure what do do about this\u0026hellip;\nTruth tables, binary, logical equlivencies, propositional logic,\nSets, functions, relations, recurrence, induction, combonation, graphs, isomorphsm,\nSets are a well-defined collection of distinct objects. A set is represented in two ways, Rooster form or Set builder form.\nRooster form:- #  In this form we show all the elements in a set in curly brackets. For example: A set of odd numbers is {1, 3, 5, 7, 9, \u0026hellip;) A set of animals can be {Dog, Cow, Cat, Lion}\nSet Builder form:- #  In this form we show all the elements by using a property that all the elements of the set follow. For example: A set of even numbers upto 10 is {x | x is even and x \u0026lt;= 10} which is read as x where x is even and less than or equal to 10.\nOperations on Sets:- #  Unions:- #  A Union of two sets is a set which contains all elements of both the sets. A Union of set A and set B would be represented as, A‚ãÉB.\nFor example: The Union of Set A = {1,3, 5, 6} and Set B = {1, 2, 4, 6} is\nA ‚ãÉ B = {1, 2, 3, 4, 5, 6}\nComplexity analysis #  Big O Notation - explained as easily as possible (that computer scientist)\n  More cool videos like this can be found at https://www.youtube.com/c/Musicombo/videos\n +recursion analysis, P vs. NP (YouTube)\nBrute Force #  Divide and Conquer #  Data structures #  trees, hashtables/maps, stacks\nPractice #  Fib, some practice logical equliv, base conversion algo, overlapping lines, matrix multiplication\nLocality #  Temporal #  Spatial #  Dynamic Programming #  Heads up, this is a 5 hour video: "}),a.add({id:53,href:'/engineering/programming/bigprog/',title:"Bigprog",section:"Engineering",content:"Chapter 15 - Writing a larger program #  From https://wiki.xxiivv.com/site/development.html\n  Prototype before polishing. Get it working before optimizing it. Separate policy from mechanism, separate interfaces from engines. Write simple modular parts connected by clean interfaces. Design programs to be connected to other programs. Write programs to write programs when you can. Design for the future, because it will be here sooner than you think. In interface design, always do the least surprising thing. When a program has nothing surprising to say, it should say nothing. When a program must fail, it should fail noisily and as soon as possible. Write big programs only when it is clear by demonstration that nothing else will do. Consider how you would solve your immediate problem without adding anything new.   Programming can seem scary at first but the more you exercise, the easier and more exciting it gets. After all, practice makes perfect! :)\n[TODO]\nObject Oriented Programming #  Planning #  Software Engineering #  "}),a.add({id:54,href:'/engineering/programming/codecont/',title:"Codecont",section:"Engineering",content:"Chapter 12 - Finishing up the project #   Manifesto  Everything should be a tool. A tool transforms data without adding to its source limitations. It\u0026rsquo;s a function: returns an output for a given input. A great tool is ambient. It should disappear and flow through your actions. You should never need it because it\u0026rsquo;s always at your hands. You should never ignore it because it\u0026rsquo;s never in your way. Tools should be adaptable, changeable and personalisable. If a tool does not perfectly fit your needs, you should be able to change, mix or remove its parts. Data should be reusable, text-editable, human-readable. Produces a higher chance that (1.) is passed. Tools should be lightweight, available and timeless. Computing power or internet speed shouldn\u0026rsquo;t be the limitation for most tasks. It works in the past and in the future.   \u0026ldquo;Only through open sources, open standards, human-readable formats and their independencies, might they survive this fleeting age of self-destructing informatics.\u0026rdquo; - Devine Lu Linvega   - Hunor Karam√°n @ hex22.org   Part 3, more advanced high level #  Modify the original python program to support a pretty cli input in a pretty way to make entries and visulize the data collected, parallelize some things, finally add a config file using yaml\nPart 4, getting our toes wet with embeded systems #  Finally, let\u0026rsquo;s go back and add a com port to the C code and send data to an arduino (can be simulated) and a TFT to display the currently active task and time elapsed.\nOther resources and articles: #  Good Coders Borrow, Great Coders Steal (StackOverflow Blog)\nThe Art of Code - Dylan Beattie (YouTube)\nBit Tricks (GitHub)\nCoding Challenge #12: The Lorenz Attractor in Processing (YouTube, The Coding Train) and Coding in the Cabana 4: Worley Noise (YouTube, The Coding Train)\nCoding Challanges #  Advent of Code\nObfuscated C programs: Introduction (YouTube) Obvuscated C, https://www.ioccc.org/\nSource: https://gist.github.com/munificent/b1bcd969063da3e6c298be070a22b604 "}),a.add({id:55,href:'/engineering/programming/codeintro/',title:"Codeintro",section:"Engineering",content:"Chapter 10 - Let\u0026rsquo;s write some Code #  Starting Minimal #  Code is mostly math #  Here\u0026rsquo;s the thing: Code is mostly math. If you\u0026rsquo;re anything like me, you probably just went ugggggghhhhhhh.\nAnd I get it. But it\u0026rsquo;s not that bad for two reasons:\n The math isn\u0026rsquo;t like what you\u0026rsquo;re used to. The math is actually doing something. You\u0026rsquo;re not just getting a number to solve a problem, you\u0026rsquo;re making a tool that can solve many problems or watching the math cause something to happen on screen.  On point 1., it\u0026rsquo;s usually because code has lots of flow control and logic that you\u0026rsquo;re probably not used to seeing in math.\nThings like\nfake code for beginners:\n1 2 3 4  if x is equal to y: set x to x-1 else: set x to y   or\n1 2  while Alice and Bob are Connected: exchangeMessages(Alice,Bob)     slightly less fake code for people that have seen this before:\n1 2 3 4  if x == y: x = x-1 else: x = y   or\n1 2  while Alice.isConnectedTo(Bob): Alice.Message(Bob, \u0026#34;Hello\u0026#34;)      But, what about point 2.? Take a look at this:\n  This is tixy.land \u0026ndash; Click on the moving dots to advanced though a lil' tutorial and some examples\nHere in tixy land, you can try out some code. I don\u0026rsquo;t want to lead you to anything. Just, type something. See what happens.\nEven if you don\u0026rsquo;t understand all the math or what the symbols mean I\u0026rsquo;m sure you can get a rough idea of what\u0026rsquo;s going on.\nTo give a quick run down of some operations you might want to use:\n[TODO]\nYou can usually make something cool by just entering a bunch of trig and making complex functions you don\u0026rsquo;t truely understand. You\u0026rsquo;re learning, that\u0026rsquo;s fine, no shame. Here, for example, is one I made by wandering around trig functions asin((t/9*(i/32*sin(t/4))*y)%5)\nhttps://hexy.now.sh is inspired by tixy but has some extra interesting features, if you\u0026rsquo;re having fun with tixy.land it\u0026rsquo;s worth checking out.\nhttps://doersino.github.io/tixyz/ is the same as tixy, but add\u0026rsquo;s a 3rd dimension\n   Python #  [TODO] Why start with python\nThe building blocks of programming #  All programming is just chaining logic, for example using treatments like \u0026ldquo;if a is b, then make c hold the value of a-3\u0026rdquo; followed by \u0026ldquo;if c is negative then say hello\u0026rdquo;\nWell, that\u0026rsquo;s actually an easy program\n1 2 3 4 5 6 7 8 9  a = 1 b = 1 c = 1 if a == b: # Why are there two equal signs here? c = a-3 if c \u0026lt; 0: print(\u0026#39;hello\u0026#39;)   you should notice a few weird things here though, namely, on line 5 we used two equal signs to check equality. This is the case in most programming languages because a single equal sign, like is used on the first two lines, is used for assignment that is assigning the value of a to 1 and b to 1 or as on line 6 assigning the value of ( a - 3 ) to c, because we\u0026rsquo;ve already used a single equal sign for assignment, two equal signs is used for checking that two things are actual equal. That is, one equal sign sets things to be equal, two checks that they are equal.\nIf you follow the logic here, a and b are both 1, so line 5 checks that to be true, so line 6 does happen. Now \u0026lsquo;c\u0026rsquo; which previously held the value \u0026lsquo;1\u0026rsquo; is now equal to \u0026lsquo;a-3\u0026rsquo;, where \u0026lsquo;a\u0026rsquo; is \u0026lsquo;1\u0026rsquo;, so \u0026lsquo;c\u0026rsquo; becomes \u0026lsquo;-2\u0026rsquo;. on line 8 we check if \u0026lsquo;c\u0026rsquo; is less than \u0026lsquo;0\u0026rsquo;, and because it is we print the word \u0026lsquo;hello\u0026rsquo;. Here, you\u0026rsquo;ll notice \u0026lsquo;hello\u0026rsquo; is in quotes. This is because if it were not, that is if it were print(hello) it would try to print the value of the variable \u0026lsquo;hello\u0026rsquo; which since hello isn\u0026rsquo;t defined, wouldn\u0026rsquo;t work. Let\u0026rsquo;s try this in the Python interpreter. You can find install instructions for your operating system here: https://www.python.org/downloads/. If you\u0026rsquo;re on Linux simply type python into the terminal.\nWith the Python interpreter open try without quotes:\n1 2 3 4  \u0026gt;\u0026gt;\u0026gt;print(hello) Traceback (most recent call last): File \u0026#34;\u0026lt;stdin\u0026gt;\u0026#34;, line 1, in \u0026lt;module\u0026gt; NameError: name \u0026#39;hello\u0026#39; is not defined   As you can see Python failed to print hello because the variable was not defined. Now lets try assigning a value to the hello variable before printing:\n1 2 3  \u0026gt;\u0026gt;\u0026gt; hello = \u0026#34;Hello World!\u0026#34; \u0026gt;\u0026gt;\u0026gt; print(hello) Hello World!   Anything you write to the interpreter can also be added to a file and ran that way. Try saving the examples above to a file called test.py, opening a terminal and running it with python test.py.\nConditions using if, elif and else #  You often want code only to be executed, if a certain condition is met. For example, take a look at the following code:\n1 2 3 4 5 6  a = 13 b = 27 if a \u0026gt; b: print(\u0026#34;a is bigger\u0026#34;) else: print(\u0026#34;b is bigger\u0026#34;)   Using the if statement, connected with a logical condition, you can control the program flow. In this case, a is smaller than b, so python will skip the code inside of the if case and only execute what is within the else part.\nYou can also combine multiple if cases like this:\n1 2 3 4 5 6 7  a = 3 if a \u0026lt; 0: print(\u0026#34;a is negative\u0026#34;) elif a == 0: print(\u0026#34;a is zero\u0026#34;) else: print(\u0026#34;a is positive\u0026#34;)   Using the elif statement, you can check for another condition if the one in the if statement was false.\nLoops #  Some lines of codes have to be repeated very often. Instead of typing the same line over and over again, you can use loops. There are two types of loops: The for and the while loop. While they both basically do the same thing, sometimes it is more intuitive to use one over the other.\nTODO: Again on 0-based vs. 1-based indexing\nThe for loop #  The for loop iterates over a list of items and stores the current element in a variable. This is especially useful when working with lists, for example.\n1 2 3  fruits = [\u0026#34;apple\u0026#34;, \u0026#34;banana\u0026#34;, \u0026#34;cherry\u0026#34;] for fruit in fruits: print(\u0026#34;I am eating a \u0026#34; + fruit)   If you are familiar with loops in other programming languages (such as Java or C), you\u0026rsquo;re probably thinking: \u0026ldquo;That\u0026rsquo;s not a for loop, that\u0026rsquo;s a for-each!\u0026rdquo;. This is true, in python all for loops are for-each loops. If you want to iterate over a range of numbers, use pythons range() function:\n1 2  for i in range(0, 100): print(i)   The while loop #  The for loop is very useful, but sometimes, using the while loop is easier and more straightforward. For example, if you want to repeat something until a certain condition is met, using this loop is simple:\n1 2 3 4  i = 0 while i \u0026lt; 10: print(i) i += 1   You can also combine the condition after the while keyword with an else statement:\n1 2 3 4 5 6  i = 11 while i \u0026lt; 10: print(i) i += 1 else: print(\u0026#34;i is bigger than 10!\u0026#34;)   [TODO] assignment, comparison, combined ops (+=), mod, exponent, floor, in/not in, is/is not, data types, functions libraries\nCommon methods used #  commenting-out print debugging Recursion, object orientation while(true) try/catch\nSome simple programs #  Hello World #  As seen in the example above, the following will print Hello World!: print('Hello World!') Lets get some input aswell:\n1 2 3 4 5  print(\u0026#39;What\\\u0026#39;s your name?\u0026#39;) # This prints the question. Notice the escape character \\ is used to avoid stopping the string.  print(\u0026#39;Hello \u0026#39; + input()) # This will pause the program and wait for user input before printing Hello \u0026lt;input\u0026gt;   Even or Odd #  Below is an example of a Python script which checks if the input number is odd or even.\n1 2 3 4 5 6 7  # A number is even if division by 2 give a remainder of 0. # If remainder is 1, it is odd number. num = int(input(\u0026#34;Enter a number: \u0026#34;)) if (num % 2) == 0: print(\u0026#34;{} is Even\u0026#34;.format(num)) else: print(\u0026#34;{} is Odd\u0026#34;.format(num))   Prime Numbers #  Prime number is a number greater than 1 whose only factors are 1 and itself. Few instances of prime numbers include 2, 3, 5, 11. Below is an example of python function which defines whether the given input number is prime or not.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  def is_prime(num): if num \u0026gt; 1: # Iterate from 2 to n / 2 for i in range(2, num // 2): # If num is divisible by any number between # 2 and n / 2, it is not prime if (num % i) == 0: print(\u0026#34;{} is not a prime number\u0026#34;.format(num)) break else: print(\u0026#34;{} is a prime number\u0026#34;.format(num)) else: print(\u0026#34;{} is not a prime number\u0026#34;.format(num))   Calculating sine and pi #  Sorting a list #  Palindromes #  Cypher #  Making a full project #  Part 0, Git #  Before we get started, I want to be sure you took the time to read the section on Git in Chapter 6.1 above. If you need to refer to a cheat sheet you can look in Apendix B.\nPart 1, Starting easy #  [TODO] guide to write an OO python program with libraries to read and write entries to a database-like file and a real database the database should have 3 tables, a to-do list, a time-tracker list, and a list of articles\nTo-do: NAME, DUEDATE time-tracker: 2types, either manually enterend with NAME, TSTART, TSTOP or NAME, TTOTAL for the following program articles: NAME, PUBLISHED, TPUB, TEDIT\nwe\u0026rsquo;ll need some way to track what items in the time tracker were started, but never stopped\nfor now, everything should be strictly command line arguments and print statments\nMore advanced topics #  [TODO] Move this section\nLambdas #  A lambda expression is used to create a a small anonymous function. It can take any number of arguments, but can only have one expression. Below is an example of a lambda expression which can be used to compute cube of any given number.\n1 2 3  \u0026gt;\u0026gt;\u0026gt; cube = lambda x : x**3 \u0026gt;\u0026gt;\u0026gt; cube(5) 125   And here is the other example of a lambda expression with three arguments.\n1 2 3  \u0026gt;\u0026gt;\u0026gt; sum = lambda a, b, c : a + b + c \u0026gt;\u0026gt;\u0026gt; sum(1,2,-3) 0   threads/ parrallelization(high level only), interupts (actually, let\u0026rsquo;s save this until embbeded), apis,\nA little more practice #  Weird projects\nEasing into Graphical Programming with Creative Coding #  http://feed.grantcuster.com/\nCoding Adventure: Ray Marching (YouTube)\nCoding Adventure: Marching Cubes(Youtube)\nCoding Adventure: Portals (YouTube)\n"}),a.add({id:56,href:'/engineering/programming/consequences/',title:"Consequences",section:"Engineering",content:"Chapter 10¬Ω - Consequences #  Programming is awesome. If you get into creative coding you\u0026rsquo;ll be able to use it to make art. You\u0026rsquo;ll likely use it to automate tasks you find boring. If you\u0026rsquo;re like me, you might use it to make your own website or start to make products you intend to sell. That\u0026rsquo;s great. But there are a few things you need to consider as what you make becomes more professional. If you\u0026rsquo;re just making something for you and a few friends, don\u0026rsquo;t worry about it- hack it together and have fun. But as you start making things for a business or that something impact systems that are deeply meaningful in someone\u0026rsquo;s life, you need to be careful.\nThe Code I\u0026rsquo;m Still Ashamed Of ever since I\u0026rsquo;ve read it, has come back to me every now and then. And sure, it\u0026rsquo;s a pretty extreme example, but it\u0026rsquo;s also a lot easier to put into that kind of situation than you\u0026rsquo;d probably like to think.  There\u0026rsquo;s a pretty big list of considerations you should keep in mind when what you\u0026rsquo;re making starts to grow in impact, but honestly most of them just come down to being an empathetic, good person as best you can.\n  User Data \u0026amp; Privacy  Is user data secure? Do users have control over their data? Do users have a way to export their data? If this data were leaked, what would the impact be? Should the users have deniability (Soatok.blog) Can the code be open source? Is there an open API?  Maybe what you\u0026rsquo;re making can\u0026rsquo;t be open, but interaction could be. Sorta like having 3rd party Twitter or Reddit apps.     Development Considerations   Does it rely on other tools or libraries that don\u0026rsquo;t follow these ideals?\n ·∂ú·µí·µò·µç ∞ Windows ·∂ú·µí·µò·µç ∞    Have you given credit to any tools or libraries you depend on?\n Have you given funding to any of those tools, if you\u0026rsquo;re making money off of them? Have you contributed code to any of them?     Localization  Can users of other in other regions still use it? Qwerty isn\u0026rsquo;t standard everywhere, neither is left-to-right text.  Hell, ·öõ·öÖ·öë·öà·öÄ·öê·öÇ·öÇ·öÄ·öÑ·öö·öê·öâ·öì·öÑ·öÄ·öê·öè·öì·öÄ·öÑ·öö·öê·öâ·öì·öÑ·öú (YouTube, Tomm Scott)   Does it comply with local laws and regulations?  Not all illegal services are morally wrong- take Sci-Hub for example.   Does it force units of measurement?   Monetization  How is copyright infringement handled?  This gets very complicated, read more in Philosophy Ch.8 - Copyright   If something on what you\u0026rsquo;re making is paid, is Purchasing Power Parity an option so that users in less fortunate areas can still have access?  If you know what you\u0026rsquo;re making will be pirated, can you release a \u0026lsquo;Here, but seriously please pay me\u0026rsquo; version?      User Experience   Can differently-abled people still use it?\n  Color Blindness?  check out this color blindness simulator (color-blindness.com)    Deaf?\n  Bad vision?\n  super tiny text     Motion? Flashing Lights? Light sensitivity?\n    Are the elements of interaction standard / automatable\n This largely ties into differently-abled access    Does it really need to use as many resources as it does?\n Could it still work if your internet was 100x slower? Could it still work if your hardware was 10 years older?    How long does it take a user to find a feature they know exists without help?\n  Avoid \u0026lsquo;Dark Patterns\u0026rsquo;\n Don\u0026rsquo;t use stupid progress bars     Social Duties  Can it be used for Hate Speech? Spreading misinformation?  How does content moderation work? How does this conflict with free speech?  Does it matter that it does?     Can it be used for exploitation of vulnerable people?  The elderly? Children? Those in abusive relationships?   Does it make assumptions about social norms? Does it assume something about FirstName LastName naming conventions? Does it assume binary sex/gender fields? Does it assume Hetro relationships?  36C3 ChaosWest: \u0026ldquo;Hello, I\u0026rsquo;m your Edge Case!\u0026quot;        Here\u0026rsquo;s a nice video from TomScott on this topic:\n CAPTCHAs don\u0026rsquo;t prove your human - They prove you\u0026rsquo;re American\nStop over validating your forms\nMoral Machine - \u0026ldquo;A platform for gathering a human perspective on moral decisions made by machine intelligence, such as self-driving cars.\u0026rdquo;\n[TODO] Racist AI, Deepfake loods\n[TODO] Amazon Demands Echo not be referred to as a Microphone (Jason Koebler on Twitter, from Vice.com) \n"}),a.add({id:57,href:'/engineering/programming/debugbuildtest/',title:"Debugbuildtest",section:"Engineering",content:"Chapter 16 - Debugging, Automated Building and Testing #  Automated Building #  Debugging #  ./missing-semester - Debugging and Profiling\nSoftware Debugging #  [TODO]\nGDB with Gef, interpreted languages, embedded systems, non-code issues (boot problems, glitchy behavior), hardware failures, valgrind, various trace programs, print debugging extended\nDebuggers #  GDB Frontend\nGDB + GEF\nThe State of Linux Debuggers (Jamie Brandon\u0026rsquo;s Blog) ‚Üê This is a decent rant about why most debuggers sort of suck. And yeah, they do. But we still sorta need them\nAdvanced GDB Usage (Interrupt)\nhttps://rr-project.org\n+ valgrid in here somewhere, ref 11- low level prog\nStatic Analysis #  CodeChecker using LLVM/Clang (GitHub)\nHardware Debugging #  common interfaces, simulation, serial/print debugging (slow), internal data logging, physical indicators of internal state, hardware to facilitate debugging (LED \u0026lsquo;byte\u0026rsquo;)\n[TODO] Embedded C/C++ Unit Testing Basics (Interrupt)\n[TODO] Faster Debugging with Watchpoints (Interrupt)\nTesting #  @jnesselr replying to @alicegoldfuss (Nov 13, 2018) +----------------------------------------------------+ |Me: *does major refactor* | |Tests: ‚úì | |Me: I don't believe you | +----------------------------------------------------+ [Suspended User] +----------------------------------------------------+ |Me: *deliberately breaks something, just to be sure*| |Tests: ‚úì | |Me: oh no | +----------------------------------------------------+ @boo_radley +----------------------------------------------------+ |Me: *changes nothing* | |Tests: ‚úó | |Me: oh no | +----------------------------------------------------+ [Suspended User] +----------------------------------------------------+ |Me: *runs tests again* | |Tests: ‚úî | |Me: oh no no no | +----------------------------------------------------+ src: https://twitter.com/boo_radley/status/1062513898954391552 Software Testing #  unit tests, integration tests, performance testing - https://github.com/sharkdp/hyperfine\nHardware Testing #  Automated Building and Testing #  [TODO]\nFuzzing (sandsifter), make and alts, etc.\nContinuous Integration #  Continuous Deployment #  Benchmarking #  https://github.com/sharkdp/hyperfine\n"}),a.add({id:58,href:'/engineering/programming/fixxingissuses/',title:"Fixxingissuses",section:"Engineering",content:"Chapter 12¬Ω - It Was Working Just A Second Ago\u0026hellip; #  Alright, so your code/electronics/computer/life was working fine just a second ago, and now it\u0026rsquo;s just not working at all. Take a deep breath, and relax. Let\u0026rsquo;s work though this.\nü¶Ü Grab a rubber duck #  This won\u0026rsquo;t always be applicable, but assuming it\u0026rsquo;s a system- code, or electronics, or a math problem, something that can be analyzed - explain it. Out loud. To a rubber duck. If it\u0026rsquo;s code, do so line by line. if it\u0026rsquo;s electronics, go connection by connection. Don\u0026rsquo;t assume anything is working, just drop all assumptions and find the problem.\n‚òëÔ∏è Check your assumptions again. #  Did you actually check all of your assumptions? Compilers aren\u0026rsquo;t always perfect. Your oscilloscope probe might need calibrated. Don\u0026rsquo;t dive into the weeds until you\u0026rsquo;ve double checked everything first, but if you still can\u0026rsquo;t figure it out, dig for what assumptions you\u0026rsquo;re making. Did something actually change between now and when it was last working? Is something else giving you false readings?\n\u0026hellip; just make sure to stop short of questioning your own sanity.\nüëÄ Fix by working comparison #  Yeah, not always applicable advice, but if you have something that\u0026rsquo;s even similar, first check that it still works, then check for what the differences are between what you\u0026rsquo;re doing and the reference you have.\nüß™ Check your Test Cases are Valid #  What are your conditions for success? Are you even testing for these conditions correctly?\nüêú Actually use a debugger #  For some reason a ton of programmers are allergic to their debuggers. There\u0026rsquo;s more to life than print debugging. Set a break point. You can do it. I believe in you.\nsee: Print Debugging Should Go Away and the tools recomended in it, like rr - also refer back to Chapter 11, Low Level Programming where tools like valgrid were mentioned.\nYou may also want to skip ahead to Chapter 16, Debugging, CI \u0026amp; CD.\n‚ûó Binary Search Debugging #  The binary search algorithm looks a bit like this:\nChad250, CC BY-SA 4.0, via Wikimedia Commons So, what does this have to do with debugging? Apply the same idea- find things you can try to narrow down the problem seach space. Comment out some of the non-vital code, then bring it back in half at a time until the problem comes back, etc. Often, finding the problem is the hardest part, so having a strategy to search for it can be a big help.\nüìã Keep a list of what you\u0026rsquo;ve tried and what you haven\u0026rsquo;t tried #  This is easy, just make a todo style list, if you come up with a new idea halfway though and try it real quick, add it and immediately check it off. This prevents the possibility of being 3 hours in and repeating the same \u0026lsquo;fixes\u0026rsquo; as an exercise in insanity.\n[TODO]\nPeople expect technology to suck because it actually sucks\n"}),a.add({id:59,href:'/engineering/programming/fosscopyright/',title:"Fosscopyright",section:"Engineering",content:"Chapter 11¬Ω - Open Source, Licenses, and Copyright #  [TODO]\nactually contribute on github, make an issue, submit a pull request, make a custom repo,\nhttps://github.com/Marak/faker.js/issues/1046\nHow to break the Internet: Cory Doctorow at TEDxOxbridge (YouTube)\nNo, \u0026ldquo;Open Source\u0026rdquo; does not mean \u0026ldquo;Includes Free Support\u0026rdquo; + The update to that post.\nChapter 11¬æ - Things That Really Need to Exist #  Better than DuckDuckGo [Drew Devault\u0026rsquo;s Blog]\n"}),a.add({id:60,href:'/engineering/programming/funcprog/',title:"Funcprog",section:"Engineering",content:"Chapter 20 - (((())(()((()(())))))) #  What is Functional Programming? #   [TODO] Functional Programming, and other paradigms: lisp, haskell, luna-lang.org, ronin\nLambda Calculus #   "}),a.add({id:61,href:'/engineering/programming/game/',title:"Game",section:"Engineering",content:"Chapter 19 - Game Design #  https://www.gameuidatabase.com/index.php\nhttps://www.riotgames.com/en/urf-academy/curriculum-guide\nEngines \u0026amp; Frameworks #  Both 2d and 3d #  Godot\nLuxe\nfine. I\u0026rsquo;ll mention Unity and Unreal, but, like, I hate that the two make up such a huge chunk of the market\nUnreal Engine\nUnity\n2d #  LEd engine - \u0026ldquo;LEd is a modern and open-source 2D level editor, specifically designed for indie devs\u0026rdquo;\nOGMO Editor - \u0026ldquo;OGMO Editor is a free, open source 2D level editor built by indie game developers for indie game developers.\u0026rdquo;\nLOÃàVE - \u0026ldquo;Hi there! L√ñVE is an awesome framework you can use to make 2D games in Lua. It\u0026rsquo;s free, open-source, and works on Windows, Mac OS X, Linux, Android and iOS.\u0026rdquo;\nPyxel - Pyxel is a retro game engine for Python.\n3d #  pwnfps engine - \u0026ldquo;An incomplete game engine I made for 7DFPS 2014 using C and a bit of Lua. It\u0026rsquo;s a realtime raytracer that happens to be pretty shiny.\u0026rdquo;\nnoeuclid by CNLohr - A Non-euclidean GPU Raytraced Engine\neuclider - A higher-dimensional \u0026ldquo;non-euclidean\u0026rdquo; ray tracing prototype written in Rust.\nBevy - \u0026ldquo;A refreshingly simple data-driven game engine built in Rust Free and Open Source Forever!\u0026rdquo;\nA Minecraft clone in hyperbolic space\n\u0026lsquo;Non Euclidean\u0026rsquo; is a super mathy term and I\u0026rsquo;m really into it, basically it just means that space doesn\u0026rsquo;t quite work as you expect. The shortest distance between two points doesn\u0026rsquo;t have to be a line, portals connecting spaces, walking in circles takes you new places, etc. Here\u0026rsquo;s a decent blog post about some.  There\u0026rsquo;s also been some neat progress in the relm of voxel engines:\n     Heads up, not all 3d systems use the same coordinate systems. It\u0026rsquo;s a bit of a pain. Here\u0026rsquo;s a good chart for that (source - @FreyaHolmer on Twitter)  Physics Engines #  https://github.com/erincatto/box2d\nNetcode #  https://yal.cc/preparing-your-game-for-deterministic-netcode/\nInteresting ideas #  Procedural Animation: #  Did you like it?\nAnother creature made using only Procedural Animation\nwith a focus on 3D Navigation. We call it the Tetrad.\nBig Stuff Coming SoonüëÄüëÄ\nüß¨Follow us here for moreüß¨: @SynthSelection#madewithunity #unity #indiegamedev #gamedev #indiedev #SyntheticSelection pic.twitter.com/FatzMuyyc6\n\u0026mdash; Makan Gilani (@Makan_Gilani) October 28, 2020  RougeLikes #  What \u0026ldquo;Rougelike\u0026rdquo; Meant\nTons of Simulation #  Notia - Rougelite where every pixel is simulated\nCogmind - Ascii art game with a similarly extreme amount of environment destructibility\nA very long thread on \u0026hellip; stairs? Yeah. Look up advice on DND level design if you need general level design or architecture design n advice. The same twitter (Tommy Norberg, @the_Norberg) has many other good posts\n#leveldesign tip of the day! STAIRS ü™ú\nA Long Thread about stairs! Wohoooooo!\n1/12 pic.twitter.com/Z3TcWwOSaH\n\u0026mdash; Tommy Norberg (@the_Norberg) February 10, 2021  Game engines for non-games #  https://github.com/SebLague/Slime-Simulation\n"}),a.add({id:62,href:'/engineering/programming/guiprog/',title:"Guiprog",section:"Engineering",content:"Chapter 18 - Graphical Programming #  [TODO] Graphics Programming on badd10de.dev\nLet\u0026rsquo;s start in a way that\u0026rsquo;s incredibly simple, and abstract away all the hard stuff at first by using a tool kit called \u0026lsquo;Processing\u0026rsquo;, which is available under that name from the community repo in arch. The default IDE that comes with it is awful to work in though, so go ahead and open up VSCode and grab the Processing Language add on, then in VSCode open up a new workspace folder and make a file called processing.pde, then open VSCode\u0026rsquo;s command pallete (CTRL+Shift+P) and run \u0026lsquo;Processing: create task file\u0026rsquo;, after that you\u0026rsquo;ll want to open the tasks.json file and change the command: line to have \u0026quot;command\u0026quot;: \u0026quot;/usr/bin/processing-java\u0026quot;, after that you can easily try new code just by re-building project the project with CTRL+Shift+B\nAlright, setup out of the way, let\u0026rsquo;s code! One of my first projects in processing was to make a Topographic Map, looking generator because I just find them quite visually appealing.\nSo, thinking about that problem, we clearly need data. probably an array of sorts with a bunch of values that have a smoothed relationship when viewing them as height map, then we\u0026rsquo;d want to look at the transition points between ranges of values.\nLooking up random data generation in python, and you should stumble upon it\u0026rsquo;s noise generation, and see that it uses Perlin Noise, which upon looking at it should be obvious that it generates exactly what we want. So, looking up an example for that in processing we get to this page: https://processing.org/examples/noise2d.html\nWell, that\u0026rsquo;s already super close, so let\u0026rsquo;s look at that code\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34  float increment = 0.02; void setup() { size(640, 360); } void draw() { loadPixels(); float xoff = 0.0; // Start xoff at 0  float detail = map(mouseX, 0, width, 0.1, 0.6); noiseDetail(8, detail); // For every x,y coordinate in a 2D space, calculate a noise value and produce a brightness value  for (int x = 0; x \u0026lt; width; x++) { xoff += increment; // Increment xoff  float yoff = 0.0; // For every xoff, start yoff at 0  for (int y = 0; y \u0026lt; height; y++) { yoff += increment; // Increment yoff  // Calculate noise and scale by 255  float bright = noise(xoff, yoff) * 255; // Try using this line instead  //float bright = random(0,255);  // Set each pixel onscreen to a grayscale value  pixels[x+y*width] = color(bright); } } updatePixels(); }   Alright, so line by line, it seems that line 1 is just defining a constant. Reading the Processing docs you\u0026rsquo;ll find setup() should contain size() which takes two arguments that are the size of the output window in pixels (x and y) and that draw() is an endlessly looping function that updates that window.\nBefore going further let\u0026rsquo;s copy and paste the code into VSCode and run it:\n[TODO] add picture\n[TODO]\nC++ from scratch, JS electron app, Processing creative coding, Python Kivy or similar, Flutter (google lang), shaders (graphical editors), nimp, ronin, Nuklear\n  26 video playlist from Aaron Lanterman, a Georgia Tech professor\n GP-GPU #  [TODO]\nTracy - \u0026ldquo;A real time, nanosecond resolution, remote telemetry, hybrid frame and sampling profiler for games and other applications\u0026rdquo;\nLibraries #  Nanogui (Github)\nNative GUI #  Web-based #  Just plotting some data #  ŒºPlot (Github)\nhttps://www.scratchapixel.com\n"}),a.add({id:63,href:'/engineering/programming/languages/',title:"Languages",section:"Engineering",content:"Chapter 13 - Programming Languages #  for (ü•ö = 1; ü•ö \u0026lt; üêî; ü•ö++){ //whatever } [TODO] talk about to why there are so many, pros \u0026amp; cons per domain, etc\nhttps://esoteric.codes\nWhy OO Sucks (Joe Armstrong)\n0-based vs. 1-based indexing (Hisham Hm)\nLow Level #  C, C++, C#, ???? #  [TODO] - a lot, talk about the varieties and differences of C and C++ and C# and why thery\u0026rsquo;re good and bad, etc.\nBest-of-C\nAssembly #  Assembly code is specific to an Instruction Set Architecture or ISA, that means it is written for a specific family of processors. Most laptops and desktops today run on x86_64 processors made by either AMD or Intel, while most tablets and phones use processors that use ARM. Of course, there are many, many other instruction sets than these two. For example, 6502 assembly is particularly easy to write as it\u0026rsquo;s from an era (1) when programming at the assembly level was still common. On the other hand, RISC-V is a newer ISA that has been gaining a lot of traction due to it\u0026rsquo;s open nature.\nx86 ASM: #  x86 Assembly: Hello World! (YouTube, John Hammond)\nSay hello to x86_64 Assembly 1-8 by 0xAX\nor\nLet\u0026rsquo;s Learn x86-64 Assembly! Part 0 - Setup and First Steps\nPart 1 - Metaprogramming in Flat Assembler\nPart 2 - We\u0026rsquo;re Writing a Virtual Machine\nor for the very adventurous\nLinux-kernal-module-cheat [Github], has a nice guide to asm\n6502 #  \u0026lsquo;Furby\u0026rsquo; Source Code\nRust #   Rust‚Äôs rich type system and ownership model guarantee memory-safety and thread-safety ‚Äî enabling you to eliminate many classes of bugs at compile-time.\n Basically, Rust doesn\u0026rsquo;t let you screw up. It enforces writing code that\u0026rsquo;s safe (except when you specify you want to do something unsafe). It has a lot of other really nice features and makes using efficient data structures easy. Another really nifty thing about Rust is that it has a sort of at compile time garbage collection of sorts, for lack of a better way to put it. Read more on that here.\nI really recommend A half-hour to learn Rust\nNannou, is a creative coding framework for Rust that\u0026rsquo;s pretty nifty too.\nTo show the maturity, just check out https://www.redox-os.org/, a full OS written in Rust!\nAlso, it\u0026rsquo;s worth noting Rust can be used to generate Web Assembly (more about that below)\nOther sources to lean rust:\n https://doc.rust-lang.org/book/foreword.html Learning Rust the Dangerous Way (Cliff L. Biffle) Rust Performance Book Rust Cheat Sheet  You may also want to check out CXX for C++\u0026lt;-\u0026gt; Rust interop\nGo #   Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.\n The big claim to fame for go is, well go, which let\u0026rsquo;s you do really easy threading. (https://gobyexample.com/goroutines)\nOther sources to learn Go:\n https://tour.golang.org/welcome/1  Zig #   A general-purpose programming language and toolchain for maintaining robust, optimal, and reusable software.\nhttps://ziglang.org/\n Zig: A programming language designed for robustness, optimality, and clarity ‚Äì Andrew Kelley (YouTube)\nWriting a small ray tracer in Rust and Zig\nA Half hour to Learn Zig (Github Gist)\nCrystal #  Crystal\u0026rsquo;s big thing is a Ruby (a very fast to write language) that\u0026rsquo;s compiled and fast. From the home page:\n1 2 3 4 5 6 7 8 9 10  # A very basic HTTP server require \u0026#34;http/server\u0026#34; server = HTTP::Server.new do |context| context.response.content_type = \u0026#34;text/plain\u0026#34; context.response.print \u0026#34;Hello world, got #{context.request.path}!\u0026#34; end puts \u0026#34;Listening on http://127.0.0.1:8080\u0026#34; server.listen(8080)   Seriously check it out at https://crystal-lang.org/\nD #  A lesser used competitor to C++ mostly. It\u0026rsquo;s very syntactically similar. Might be worth looking at.\nhttps://dlang.org\nNim #   Nim is a statically typed compiled systems programming language. It combines successful concepts from mature languages like Python, Ada and Modula.\nhttps://nim-lang.org/\n Further, Nim allows for easy \u0026lsquo;metaprogramming\u0026rsquo; which basically means you can [TODO]\nNim\u0026rsquo;s syntax is python-like-ish\nRed #  To be honest, I\u0026rsquo;m not sure Red belongs in the low level category, as it can be ran as a JIT language.\n Red is a next-gen programming language, strongly inspired by REBOL. Main features are:\n Human-friendly syntax Homoiconic (Red is its own meta-language and own data-format) Functional, imperative, reactive and symbolic programming Prototype-based object support **Gradual and multi-**typing Macros system Rich set of built-in datatypes (50+) Both statically and JIT-compiled to native code Cross-compilation done right Produces executables of less than 1MB, with no dependencies Concurrency and parallelism strong support (actors, parallel collections) Low-level system programming abilities through the built-in Red/System DSL Powerful PEG parser DSL included Cross-platform native GUI system, with a UI DSL and drawing DSL Bridging to the JVM High-level scripting and REPL console included Visual Studio Code plugin, with many helpful features Highly embeddable Low memory footprint, garbage collected Single-file (~1MB) contains whole toolchain, full standard library and REPL. No install, no setup Fun guaranteed!  https://www.red-lang.org/p/about.html\n If you\u0026rsquo;re interested, check out Red\u0026rsquo;s \u0026lsquo;Getting Started\u0026rsquo; page.\nHaxe #   Haxe is an open source high-level strictly-typed programming language with a fast optimizing cross-compiler.\nhttps://haxe.org/\n Java \u0026amp; Kotlin #  !\u0026gt; This is Opinionated Guides, so let me be clear, I really, really hate Java. It\u0026rsquo;s a langage that didn\u0026rsquo;t even become popular on it\u0026rsquo;s own merit, instead Sun Microsystem paid a fuck ton of money to push it- hence the \u0026ldquo;3 Billion Devices Run Java\u0026rdquo; Thing. I\u0026rsquo;m hopeful (albeit probably naively) that Oracle (Which bought Java from Sun) making Java a mess of licencesing as the \u0026lsquo;main\u0026rsquo; Java Virtual Machine goes paid (Read on Wikipedia) and suing Google will be the nail in the cofin for education using it and that it will die out with time. Criticism of Java (Wikipedia)\ndon\u0026rsquo;t. but, here\u0026rsquo;s why not to use Java:\nhttps://jakewharton.com/shrinking-a-kotlin-binary/\nWebAssembly #   WebAssembly (abbreviated Wasm) is a binary instruction format for a stack-based virtual machine. Wasm is designed as a portable target for compilation of high-level languages like C/C++/Rust, enabling deployment on the web for client and server applications.\nhttps://webassembly.org/\n While not technically a programming language, I wanted to bring it up and encourage you look into it to be used instead of JavaScript for real projects.\nhttps://www.assemblyscript.org is a TypeScript varient that can generate Web asm.\nhttps://webassembly.studio\nVult #  Vult Language Homepage\n\u0026ldquo;The Vult Language is a transcompiler to write high-performance DSP code\u0026rdquo;\nCall for Contribution #  If I missed a language you think I should have mentioned or would like to write a nice guide to your language of choice to be included in this Opinionated Guide please submit a pull request. I\u0026rsquo;d love to expand the Rust, Go, and Zig sections significantly!\n High Level #  [TODO] probably going to need to break this out into it\u0026rsquo;s own chapter\nPython #  Cython\n Cython is an optimising static compiler for both the Python programming language and the extended Cython programming language (based on Pyrex). It makes writing C extensions for Python as easy as Python itself.\n JavaScript #  Fine. I\u0026rsquo;ll talk about JS. But, please. For the love of god do not use this to make an Electron App.\nBefore going to far, I do want to mention that a chunk of my hatred for JS is solved using frameworks and that I totally acknowledge the utility of JS for making quick, often very cool, \u0026lsquo;sketches\u0026rsquo;. The creative coding community is amazing. Further, JS, as much of a total dumpster fire as it is, is responsible for the Internet as it is today weather thats a good thing or not.\nCoffeeScript #  https://coffeescript.org/\nTypeScript #  https://www.typescriptlang.org/\nFrameworks #  https://en.wikipedia.org/wiki/Comparison_of_JavaScript_frameworks\nAngular #  React #  Vue #  Node #  PHP #  don\u0026rsquo;t. but, here\u0026rsquo;s why not to use PHP: If you must, you might want to check out Hack: https://hacklang.org/\nRuby #   A dynamic, open source programming language with a focus on simplicity and productivity. It has an elegant syntax that is natural to read and easy to write.\nhttps://www.ruby-lang.org/en/\n For the Skript Kidd3s #   In programming and hacking cultures, a script kiddie, skiddie, or skid is an unskilled individual who uses scripts or programs developed by others to attack computer systems and networks and deface websites, such as a web shell. It is generally assumed that most script kiddies are juveniles who lack the ability to write sophisticated programs or exploits on their own and that their objective is to try to impress their friends or gain credit in computer-enthusiast communities. However, the term does not relate to the actual age of the participant. The term is considered to be derogatory.\nfrom https://en.wikipedia.org/wiki/Script_kiddie\n But, really, some absolutely incredible code has been written in the following languages. They more than serve their purpose and are generally some of the fastest \u0026ldquo;I just need a quick and dirty solution\u0026rdquo; options out there. Not everything needs a blazing fast hand optimized C implementation, and code that\u0026rsquo;s really just for personal use, to acomplish a one-off task, or that runs inside a bigger program (3D modeling software like Blender, Video editing software like Premier, Game development editors, etc.) should probably be easy to read and modify quickly. Rapid prototyping certainly has it\u0026rsquo;s place.\nJust don\u0026rsquo;t think you should use these to write efficient, safe code.\nLUA #  MoonScript #  AHK #  Tasker (Android) #  CMD.exe #  Bash, ZSH, Fish, Xonsh, wut? #  Node-Red #  n8n #  Is this even Programming anymore? #  Pure-Data #  vvvv #  tooll.io #  ORCŒë #  Esolangs, the hole goes deeper #  https://en.wikipedia.org/wiki/Esoteric_programming_language\nAwesome Esolangs (Github)\nhttps://esolangs.org\nBrainfuck Designer\nPiet\n Hello World implimented in Piet (Source)\n Puddlelang\nBlancmange\nRETURN\nMoonstroke - 3d\nNandlang\nbitman\nSpiral\n0@v*v^*v^*v^*v^*v^*v^*v^*v^*v^*v^*v^*v^*v^*v^*v^*v *^v*^v*^v*^v*^v*^v*^v*^v*^v*^v*^v*^v*^v*^v*^v*^v*^ v ^*v^*v^*v^*v^*v^*v^*v^*v^*v^*v^*v^*v^*v^*v^*v^*v= ***^v*^v*^v*^v*^v*^v*^v*^v*^v*^v*^v*^v*^v*^v*^v*^ * **********v^*v^*v^*v^*v^*v^*v^*v^*v^*v^*v^*v^*v^## *^v*^v*^v*^v*^v*^v*^v*^v*^v####################### v ^*v^*v^*v^**************v^*v^*v^*v^*v^*v^********** #########^v*^v*^v*^v*^v*^v*^v*^v*^v*^v*^v*^v*^v**** # ###############v^*v^*v^*v^*v^*v^*v^*v^*v^*v^*v^*v^* v*^v*^v*^v**************^v ==== X @ i:vX==:==== u@vX=@v i! ==XX ===v^== X vs.vuv @=== s=vv=X=$v= v =X X = # ===@v@X  ROT13 implimented in Spiral\n Tree\n ^ ^^|^^ ^^\\|/^^ H^ |/^^^ \\| e |/ ol~| \\| , 32| \\/ | \\ | W l \\| / \\ d |/ o \\/ !|r / \\/ |\\/ \\ |/ \\|  Hello World implimented in Tree\n Ziim\n Hello World implimented in Ziim\n SendStuff (unimplemented)\nPowerPoint is Turing Complete\nGraphics Programming #  look to chapter 26 for programming involving graphics, including node based shader editors and more\nFunctional Programming #  Look at Chapter 27 for Functional Programming\n Lisp, Haskell, Luna,\n Database (SQL) #  Look at Chapter 18 for information on Databases\nPopular video game consoles and computers, such as the Atari 2600, Atari 8-bit family, Apple II, Nintendo Entertainment System, Commodore 64, Atari Lynx, BBC Micro and others, use the 6502 or variations of the basic design.-from that same wikipedia article "}),a.add({id:64,href:'/engineering/programming/lowlvl/',title:"Lowlvl",section:"Engineering",content:"Chapter 11 - Low Level Programming #   Ashlyn Black\u0026rsquo;s C Cheat Sheet\n\u0026lsquo;C Programming\u0026rsquo; on badd10de.dev\nWhy C? #  This chapter of OpGuides will be mostly C, but, why? Well, there\u0026rsquo;s only really a few options for learning low level programming that make sense to start with. C, C++, Rust are the \u0026lsquo;big three\u0026rsquo; that come to mind for me. C is awesome. It\u0026rsquo;s spec is small, it\u0026rsquo;s been kept minimal, and it\u0026rsquo;s got a ton of tools to help you learn. It forces you to know the low level, which in this case is great. C++ has grown into behemoth where any thing can be done in about a dozen different ways and each development team is effectively writing in their own dialect of C++.\nOn the other hand, C has a lot of annoyances due to its minimalism. For example, there are no strings - only arrays of characters - and all memory management is manual.\nRust is cool, but I think it\u0026rsquo;s more of a language you need to grow into understand why someone would want to use it. It\u0026rsquo;s very rigid and does a very good job of preventing memory mistakes and making sure the programmer has handled any errors that could come their way (What do you do if you go to open a file and it\u0026rsquo;s not there, for example).\nThankfully, C++ and C are pretty similar, as C++ is a superset of C - that is it\u0026rsquo;s C with a whole wack ton of added features (for better or worse)\nWhat this really means is that should you need the added features of C++ the syntax should be at least familiar. Keep in mind though they are different languages. C++ has features that you absolutely should use if you\u0026rsquo;re writing in it. Strings, abstracting out much of the memory management, \u0026lsquo;vectors\u0026rsquo;, etc.\nIt\u0026rsquo;s also worth considering that you can use C code in C++ projects if you need.\nDon\u0026rsquo;t throw out everything you already know! #  [TODO] loops, while, etc.\nSome simple programs, in C #  [TODO] use TCC instead of GCC, to enable live reload https://bellard.org/tcc/\n[TODO] https://github.com/rby90/project-based-tutorials-in-c\n[TODO] 30 Seconds of C++ (Github)\n[TODO] http://pages.cs.wisc.edu/~remzi/OSTEP/\nHello World! #  It\u0026rsquo;s traditional to start in any language by writing a program that just outputs the words \u0026ldquo;Hello World!\u0026rdquo; to the terminal, so let\u0026rsquo;s start there in C++\n1 2 3 4 5 6  #include \u0026lt;stdio.h\u0026gt; int main() { printf(\u0026#34;Hello World!\\n\u0026#34;); return(0); }   To run this code, save it to a file named hello.cpp and then open a terminal, navigate to that folder and run gcc hello.cpp -o hello, then you can run your program with ./hello, that should give you something like this:\n[vega@lyrae ~]$ gcc hello.c -o hello [vega@lyrae ~]$ ./hello Hello World! Alright, so let\u0026rsquo;s go though line by line.\nOn line 1 there\u0026rsquo;s a #include statement, this tells the compiler we want to include some library or other code. In this case we want the stdio library, as well need it in a few lines, but what about this library, where is it?\nWell, that library is just some other code. We can look at it by navigating to /usr/include/stdio.hor, in VSCode you can hold control and click on the word stdio to go it\u0026rsquo;s file, so let\u0026rsquo;s look at that file:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36  /* Define ISO C stdio on top of C++ iostreams. Copyright (C) 1991-2020 Free Software Foundation, Inc. This file is part of the GNU C Library. The GNU C Library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version. The GNU C Library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details. You should have received a copy of the GNU Lesser General Public License along with the GNU C Library; if not, see \u0026lt;https://www.gnu.org/licenses/\u0026gt;. */ /* *	ISO C99 Standard: 7.19 Input/output	\u0026lt;stdio.h\u0026gt; */ #ifndef _STDIO_H #define _STDIO_H	1  #define __GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION #include \u0026lt;bits/libc-header-start.h\u0026gt; __BEGIN_DECLS #define __need_size_t #define __need_NULL #include \u0026lt;stddef.h\u0026gt; //cutting the code here to show line 332 extern int printf (const char *__restrict __format, ...);   okay, so it starts with a big copyright block in comments - in C // makes a single ling comment and /* comment */ are for multi-line comments - then on lines 39 and 40 we can see it is in turn including three more files such as stddef.h on line 33.\nBut lets look deeper, down on line 332 of stdio.h we can see printf() is loaded as an external function. The extern keyword marks this as a sort of indicator to the compiler, gcc in this case, that this function definition is actually implemented elsewhere, but that this is the signature to expect from it\u0026rsquo;s usage. That is, when anything that imports stdio.h uses printf() it should expect to return an integer (the int before the word printf) and take in a pointer to a character array (the char * inside the parentheses)\nSo, where\u0026rsquo;s the code for printf() that does the actual printing?\nWell, in it\u0026rsquo;s part of libc. libc is the C standard library on linux, typically it\u0026rsquo;s glibc in particular. This is a pre-compiled shared library so that when any program needs to use printf() it can just call the printf implementation from libc, which is stored in /usr/lib/libc.so.6\nWe could go looking into the source code for this, but I think it\u0026rsquo;s sufficient to say that it\u0026rsquo;s simply loaded from a shared system library.\nAnother thing you should notice is the #ifndef at the start of this file, which starts with a #, just like define.\nThese are pre-processor directives, just like #include is, basically, it\u0026rsquo;s special code that the compiler (in our case gcc) looks at before it complies the code. Of note there are #if and #else blocks, you might see these used for checking if a certain library is available for example, as a way to check what compiler is being used to adjust things slightly, or to check what OS the code is even being compiled for.\nyou also might see #define used to either set constants such as #define PI 3.14159 or #define GET_SIZE(*p*) (GET(p) \u0026amp; ~0x7)\nThis little adventure was mostly just to show you that these #include statements that use system libraries are not magic, and to point out that most code will end up loading shared system libraries (.so files on Linux, .dll files on Windows)\nOkay, so, that\u0026rsquo;s done. Line 2 of our 6 line hello.c is just \u0026lsquo;white space\u0026rsquo; or a blank line, so we can skip it. Line 3 is where things get interesting again, with int main() {. The main() function is special, as without doing something weird, it\u0026rsquo;s where your code starts from. you may often see this line as int main(int *argc*, char const **argv*[]) too, which I\u0026rsquo;ll get to in a bit.\nSo, lets break this down, starting with int.\nC is a statically typed language, this means that each variable has a defined type, but also that each function has a defined type it returns and expects to be given.\nso, with int main() { we\u0026rsquo;re saying the main() function will return an integer. skipping ahead a bit, we can see this is the case, as on line 5, return(0) it does exactly that, but, why?\nLet\u0026rsquo;s run our code as is (./hello), then change this return code to return(2);, recompile with gcc hello.cpp -o hello and run ./hello again.\nSee that little 2 ‚Üµ in my terminal? That\u0026rsquo;s the return code, but why did it get printed?\nWell, when the program exits, it returns that number to the process that called it (In this case the shell - read up on shell vs terminal in Appendix A1) and if this number is anything but 0 the shell prints it, because anything but 0 is assumed to be an error condition, and that this number may indicate what that error was. So, if we know getting to that return(0) signifies that our program ran correctly, we should, in fact, return 0.\n    Okay, So, other than the closing curly brace (}) on line 6 that defines the end of main, with\n1 2 3  int main(){ //code goes here between the curly braces }   We only have one line left to look at, and that\u0026rsquo;s line 4, which is\n1  printf(\u0026#34;Hello World!\\n\u0026#34;);   Okay, breaking it up, we first see that we\u0026rsquo;re using printf() the function whose definition we imported from stdio.h and which is actually being executed from a linked system library stored in /usr/lib/libc.so.6\nOkay, so, we now have almost everything, last up is just the string that we\u0026rsquo;re printing to the terminal, which is \u0026quot;Hello World!\\n\u0026quot;\nBut what\u0026rsquo;s with that \\n on the end? Well, to understand this line we\u0026rsquo;ll need our helpful friend, the ASCII table.\nOn most unix based systems you can access this at any time by running man ascii  ASCII is a really old way for computers to represent text. In most modern systems it\u0026rsquo;s been replaced by unicode (which is what let\u0026rsquo;s you use emjois ü§î) but the start of the the much larger character space of Unicode is the same as the ASCII table anyway. Alright, so, you\u0026rsquo;ll notice some really weird characters in the ASCII table, not just the normal symbols you\u0026rsquo;d expect. The one I\u0026rsquo;d like to mention now though is at 0xA - [LINE FEED]\nLine Feed, as well as some others like Bell and Carriage Return all date back to when computers were hooked up to Teletype machines - which were basically a mix of printer with a typewriter, so, naturally, there had to be some control characters to do things like tell the machine to move to the next line.\nBecause we like backwards comparability so very much, we still use these same codes for modern terminals, so typing \\n at the end of a line is really saying \u0026ldquo;put a line feed control code here\u0026rdquo; which, to a modern system, means go to the next line.\nThe reason we do this is because without it, the output of our program looks like this (ran first as is, then with the \\n removed)\n[vega@lyrae ~]$ ./hello Hello World! [vega@lyrae ~]$ gcc hello.c -o hello [vega@lyrae ~]$ ./hello Hello World![vega@lyrae ~]$ see how it doesn\u0026rsquo;t leave room for the prompt to be printed on a new line of it\u0026rsquo;s own!\nThe ASCII table has some other interesting side effects too. See how a capital \u0026lsquo;A\u0026rsquo; has an \u0026lsquo;index\u0026rsquo; 32 higher than a lower case \u0026lsquo;a\u0026rsquo;, and the same for \u0026lsquo;B\u0026rsquo; to \u0026lsquo;b\u0026rsquo;. Let\u0026rsquo;s use this to our advantage to make the \u0026rsquo;d' in \u0026lsquo;Hello World!\u0026quot; uppercase.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36  #include \u0026lt;stdio.h\u0026gt;#include \u0026lt;string.h\u0026gt; int main() { //move the greeting into a variable so we can play with it  char greeting[14] = \u0026#34;Hello World!\\n\u0026#34;; //print it as is  // because arrays are naturally passed as a pointer this is fine  printf(greeting); /* * C is \u0026#39;0\u0026#39; indexed, this means that * \u0026#39;H\u0026#39; is at position 0, \u0026#39;e\u0026#39; is at 1, and so on. * We want to change \u0026#39;d\u0026#39; which is at pos 10. * so we access the charecter in the string with the * syntax variableName[indexOfCharacter] */ // The following line is equivilent to greeting[10] = greeting[10] - 32;  greeting[10]-=32; printf(greeting); // note, we could have just changed the character directly,  greeting[10]=\u0026#39;z\u0026#39;; printf(greeting); // Let\u0026#39;s break that line feed character too, why not.  greeting[12]=\u0026#39;?\u0026#39;; printf(greeting); // need to include string.h to use strcat  // here strcat is concatinating on the newline that we removed.  printf(strcat(greeting,\u0026#34;\\n\u0026#34;)); return(0); }   [vega@lyrae ~]$ gcc hello.cpp -o hello [vega@lyrae ~]$ ./hello Hello World! Hello WorlD! Hello Worlz! Hello Worlz!?Hello Worlz!? [vega@lyrae ~]$ Recursive Fibonacci #  The Stack‚Ñ¢\nCalculating sine and pi #  pseudo code, types\nSorting a list #  pointers, heap\nmention efficiency, analysis later\nhttps://github.com/laserallan/malloc_geiger\nPalindromes #  Cipher #  Bit Operations #  1  int x = 0b11 \u0026lt;\u0026lt; 1   0b11 in binary is 3, (the 0b prefix means binary) 1 here is the number of places we want to shift it left, so, x would now contain 0b110 which is 6.\nunsigned, signed bit, 1\u0026rsquo;s compliment, 2\u0026rsquo;s compliment\nBit Twiddling Hacks from Sean Eron Anderson\nSystem Calls #  Assembly #  I very, very much so recommend getting a feel for writing assembly with the TIS-100 game. It\u0026rsquo;s $7 on steam (at the time of writing).\nInterrupt \u0026amp; Signal handling #  Part 2, Going Deeper #  [TODO] Interacting with the above, this program should run in the background and update the data, based on window focus events using libxdo\nThis program should actually provide the VAST majority of the source code, with purposeful errors for demonstating the below\nfurthermore, the C code should check to see if there is a new article, and if so it should call a function that first checks a \u0026lsquo;meta\u0026rsquo; entry to see if the python code to change a published time to be newer or the number of entries has changed to optimize:\n  generates a template markdown file for the article if PUBLISHED is FALSE and no file for it exists,\n  generates a template markdown file for the article if PUBLISHED is TRUE and no file for it exists,\n  generates a html file from the markdown if PUBLISHED is TRUE and no html exists then updates TEDIT, TPUB\n  remove the html file if PUBLISHED is FALSE and an html file for it exists,\n  however, every time this will still need checked to monitor the md for changes, using ionotify\n  generates a new html from the markdwon if PUBLISHED is TRUE and md has changed then updates TEDIT\n  if markdown is removed, the html file should be as well\n  What are we going to do? #  [TODO]\nTools to use #  [TODO]\nC Gibberish \u0026lt;\u0026ndash;\u0026gt; English Translator  Pseudo code #  [TODO]\nWriting it #  [TODO]\nusing a code editor, header files, libraries, writing and using a Make file, stdout / stderr,\nDebugging it #  So, by now you\u0026rsquo;ve written a fair amount of code, and I\u0026rsquo;m sure you\u0026rsquo;ve figured out that a bunch of tiny issues can get really annoying. Maybe you keep forgetting semicolons, maybe you wrote \u0026lsquo;=\u0026rsquo; instead of \u0026lsquo;==\u0026rsquo; when doing an equality check, whatever. Turns out, there\u0026rsquo;s an easier way to catch these kind of errors and it\u0026rsquo;s available for most languages. Allow me to introduce you to\u0026hellip;\nLinting: #  Yeah, it\u0026rsquo;s literally named after the fluff you\u0026rsquo;d find in your hoodie pockets, but, it\u0026rsquo;s still a super necessary tool. A \u0026lsquo;Linter\u0026rsquo; is a static analysis tool, basically it makes sure you\u0026rsquo;re code is good before you run it. There\u0026rsquo;s a whole bunch of linters out there. As a pretty stupid example, lets look at this python:\nHere\u0026rsquo;s our stupid simple example, here we want a program to show us the output of sin(1\u0026hellip;10)\n1 2 3 4 5 6  #!/usr/bin/python if __name__ == \u0026#34;__main__\u0026#34;: for i in range(0,10): math.sin(x) pass   If we run this code anyway, we\u0026rsquo;ll see python print:\nTraceback (most recent call last): File \u0026quot;/home/vega/test.py\u0026quot;, line 5, in \u0026lt;module\u0026gt; math.sin(x) NameError: name 'math' is not defined   This code intentionally has a few issues stopping it from running, thankfully the Linter, in my case VSCode\u0026rsquo;s Pylance, found them both:\n[5,9] : \u0026quot;math\u0026quot; is not defined [5,18] : \u0026quot;x\u0026quot; is not defined Here, it\u0026rsquo;s saying on Line 5, character 9, (where the word math starts) I have no function named math. Furthermore, on the same line, but character 18, the variable x is not defined. Running the program did already tell us that we didn\u0026rsquo;t have math defined, but this caught that x was undefined too. Let\u0026rsquo;s fix up the code, and add some print debugging while we\u0026rsquo;re at it.\n1 2 3 4 5 6 7 8  #!/usr/bin/python import math if __name__ == \u0026#34;__main__\u0026#34;: for i in range(0,10): print(\u0026#34;The value of sine(\u0026#34;,i,\u0026#34;) is \u0026#34;, math.sin(i)) pass      now running our code yields this:\nthe value of sine( 0 ) is 0.0 the value of sine( 1 ) is 0.8414709848078965 the value of sine( 2 ) is 0.9092974268256817 the value of sine( 3 ) is 0.1411200080598672 the value of sine( 4 ) is -0.7568024953079282 the value of sine( 5 ) is -0.9589242746631385 the value of sine( 6 ) is -0.27941549819892586 the value of sine( 7 ) is 0.6569865987187891 the value of sine( 8 ) is 0.9893582466233818 the value of sine( 9 ) is 0.4121184852417566 But, remember I said we want sine(1\u0026hellip;10)? The linter no longer has any problems listed, so what\u0026rsquo;s up? Well, that\u0026rsquo;s a limit of static analysis, it can only find errors that occur statically and it\u0026rsquo;s not able to read your mind. Here, the issue is that python\u0026rsquo;s range() function is inclusive of the first number, and not the second, so it should be range(1,11) to work correctly.\nSo, what can and can\u0026rsquo;t static analysis do (with some exceptions depending on language and linter):\nSTATIC ANALYSIS CAN:\n (Usually) tell you missed something trivial, like forgetting a semicolon at the end of a line (If in a strongly typed language) Tell you if you\u0026rsquo;re doing something stupid with types  int x = 10; String y = \u0026quot;test\u0026quot;; int z = x + y; would tell you to quit being a dunce   Let you know if you\u0026rsquo;re doing something that\u0026rsquo;s bad practice  Often code formatting, like warning you that a line is super fucking long and is why you have a tiny horizontal scroll bar.   Warn you about unused variables Warn you about undeclared variables and functions Warn you about some math fuckups (divide by 0, integer overflows, etc.) Warn you about some out of bound accesses (accessing the k+1 element of an array with k elements Warn you if you try to derefrence a null pointer Tell you about some dead (un-reachable) code. find some security issues find some memory leaks   STATIC ANALYSIS CAN NOT:\n Read your mind - if you write a an add(a,b) function as int add(int a, int b) { return(a * b) } it won\u0026rsquo;t know you fucked up Know what is relevant - it\u0026rsquo;s not uncommon to get a huge pile of warnings you don\u0026rsquo;t care about while doing initial development. This can make for a sea of problems that is just\u0026hellip; exhausting Always be right - There are occasional false positives Find all issues - It\u0026rsquo;s in the name, it\u0026rsquo;s static analysis. Not Dynamic. Your code is dynamic. It runs, it lives. Static Analysis is just doing a once-over to let you know if there\u0026rsquo;s something super obviously wrong, not doing in depth diagnostics. Stop you from writing stupid, inefficient, insecure, and otherwise shit code.  You want to implement the the obnoxiously slow recursive version of the fibonacci function? It won\u0026rsquo;t stop you.       [TODO], Clang Tidy, and using it in VSCode\n  [TODO]\ngdb + gef, gdbfrontend, Valgrind, https://cdecl.org/, etc. Mention Virtual v Physical adressing/translation\nhttps://github.com/hediet/vscode-debug-visualizer/tree/master/extension\noverflows\nAnalyzing the Assembly #  [TODO]\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce id tellus ultricies, tempor mi interdum, pulvinar orci. Proin volutpat tincidunt tellus, facilisis iaculis elit scelerisque vel. Integer auctor vulputate augue non vulputate. Duis id orci ac tortor sollicitudin semper. Sed vulputate ipsum in eros semper laoreet. Praesent justo odio, porttitor non rutrum vitae, dignissim vitae augue. Cras aliquam mi sit amet massa accumsan viverra. Sed nec malesuada libero, vel vestibulum lacus. Sed in facilisis turpis. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam quis tempus lacus. Proin fringilla bibendum erat. Nullam auctor efficitur lacinia. Donec dapibus, tellus sed porta facilisis, sem magna maximus odio, quis semper purus orci interdum velit. Nulla et maximus urna. Maecenas sed nibh in ligula rutrum fringilla.\n Art by @awr_hey, Rachel the Rox belongs to @PixelatedWah   [TODO]\nCutter, TIS-100, Shenzhen IO,\nPatching it #  [TODO]\nsource patching, binary patching\nFile formats #  [TODO] wav is easy, mp3 is hard.. show this. WAV format on 767 of POC||GTFO\nWhere to get more practice with low level programming #  [TODO]\nhttps://github.com/rby90/Project-Based-Tutorials-in-C\nFive Seconds of Donkey Kong. #plottertwitter\nThe NES has 2048 bytes of RAM. I snapshotted the RAM at each frame (60 fps) during 5 seconds of gameplay and plotted time series of the ones that changed at least once. pic.twitter.com/rtPT0mHiLD\n\u0026mdash; Michael Fogleman (@FogleBird) January 19, 2018  Fast Inverse Square Root - A Quake III Algorithm (YouTube)\nWhy mmap is faster than system calls (Alexandra Fedorova)\nComputer Science from the Bottom Up\n"}),a.add({id:65,href:'/engineering/programming/multithread/',title:"Multithread",section:"Engineering",content:"Chapter 17 - We\u0026rsquo;ve got cores, let\u0026rsquo;s use em' #  [TODO]\nhttps://lemire.me/blog/2020/01/30/cost-of-a-thread-in-c-under-linux/\nC++ coroutines\nnot really threading, but process children\n"}),a.add({id:66,href:'/engineering/wrappingup/cheat/',title:"Cheat",section:"Engineering",content:"Appendix 2 - Cheat Sheets and quick info #  Electrical Part Tables #  [TODO]\n  package types\n  reading specs\n  datasheets\n  Nice Libraries \u0026amp; Resources #  Multi-Language #  Ultralight - \u0026ldquo;Next-generation HTML renderer for apps and games\u0026rdquo;\n Bit like Electron, but less shit. Supports C, C++, C#, Rust, Java, and Go\n C #  Awesome-C - \u0026ldquo;A curated list of awesome C frameworks, libraries, resources and other shiny things. Inspired by all the other awesome-\u0026hellip; projects out there.\u0026rdquo;\nNuklear - A single-header ANSI C immediate mode cross-platform GUI library\nGuiLite.h - \u0026ldquo;!The smallest header-only GUI library (4 KLOC) for all platforms\u0026rdquo;\nProtothreads - \u0026ldquo;extremely lightweight stackless threads designed for severely memory constrained systems\u0026rdquo;\nC++ #   Keep in mind everything from the above should still work\n https://github.com/alandefreitas/matplotplusplus\nRang - \u0026ldquo;A Minimal, Header only Modern c++ library for terminal goodies\u0026rdquo;\nNanoGUI - \u0026ldquo;Minimalistic C++/Python GUI library for OpenGL, GLES2/3, Metal, and WebAssembly/WebGL\u0026rdquo;\nMidifile - C++ classes for reading/writing Standard MIDI Files\nElements - \u0026ldquo;lightweight, fine-grained, resolution independent, modular GUI library.\u0026rdquo;\nFast IO - \u0026ldquo;a new C++20 library for extremely fast input/output and aims to replace iostream and cstdio. It is header-only\u0026rdquo;\nInteractive C++ for Data Science - Like Jupyter Notebooks\nNanoLog - \u0026ldquo;an extremely performant nanosecond scale logging system for C++ that exposes a simple printf-like API.\u0026rdquo;\nRust #  Nannou - Creative Coding Framework for Rust\npyo3 - Rust bindings for python, write python modules in rust\nGo #  Lorca - \u0026ldquo;A very small library to build modern HTML5 desktop apps in Go. It uses Chrome browser as a UI layer. Unlike Electron it doesn\u0026rsquo;t bundle Chrome into the app package, but rather reuses the one that is already installed.\u0026rdquo;\nPixel - \u0026ldquo;A hand-crafted 2D game library in Go\u0026rdquo;\nPython #  NumPy Illustrated: The Visual Guide to NumPy (Lev Maximov)\nFull Stack Python Course, has some info on more comon libraries\nPython-Cheatsheet by gto76 on github\n Only including the less common ones here. If you\u0026rsquo;re new to python you should look into Numpy, Matplotlib, Pygame, Pandas, and Requests. Those more or less make up the\n Sympy - Symbolic computation for python.\nPretty Errors - \u0026ldquo;Prettify Python exception output to make it legible.\u0026rdquo;\nPampy - Pattern Matching for Python\nRich - library for rich text and beautiful formatting in the terminal\nManim - \u0026ldquo;Animation engine for explanatory math videos\u0026rdquo; used by 3Blue1Brown\nhttps://github.com/mitsuba-renderer/nanogui\nPyNuklear - Nuklear (see above) binding for python\nGuietta - \u0026ldquo;A tool for making simple Python GUIs\u0026rdquo;\nKivy - GUI framework\nTyper - \u0026ldquo;Typer, build great CLIs. Easy to code. Based on Python type hints.\u0026rdquo;\nPython-Fire - \u0026ldquo;a library for automatically generating CLIs from absolutely any Python object.\u0026rdquo;\nBeautiful Soup - Web scraping\nbokeh - \u0026ldquo;Bokeh is an interactive visualization library for modern web browsers\u0026rdquo; (yes, it uses python)\nMoviePy - \u0026ldquo;a Python library for video editing: cutting, concatenations, title insertions, video compositing (a.k.a. non-linear editing), video processing, and creation of custom effects\u0026rdquo;\nPint - work with units, including prefixes like kilometers\n Also see pyO3 in rust above, which allows for writing python modules. Of course python modules can be written in C or C++, but doing so in Rust is safer, because, Rust.\n  For Matplotlib, I do recomend looking at the aviailable Matplotlib colormaps and color map normalization as the colors used to view your data can make a huge difference in how readable it is\n nbterm: Jupyter Notebooks in the terminal\nMachine Learning #   Obviously Tensorflow, PyTorch, Keras, etc. exist. This list is for the stuff you don\u0026rsquo;t already know about\nThat said, it\u0026rsquo;s worth noting that tensorflow-rocm exists, which might work for you if you have an AMD graphics card and don\u0026rsquo;t want to shell out for a different GPU just for CUDA support.\n SpaCy - \u0026ldquo;Industrial-strength Natural Language Processing (NLP) in Python\u0026rdquo;\nELI5 - \u0026ldquo;A library for debugging/inspecting machine learning classifiers and explaining their predictions\u0026rdquo;\n'$' family of stroke/gesture recognition tools\nKobra - \u0026ldquo;A visual programming language for machine learning (in beta)\u0026rdquo;\nFor Embedded Applications #  u8g2 - \u0026ldquo;Library for monochrome displays, version 2\u0026rdquo;\n"}),a.add({id:67,href:'/engineering/wrappingup/job/',title:"Job",section:"Engineering",content:'Appendix 4 - Getting a Job in Engineering #   "Recently, I was asked if I was going to fire an employee who made a mistake that cost the company $600,000. No, I replied, I just spent $600,000 training him. Why would I want somebody to hire his experience?"  - Thomas John Watson Sr., IBM\n  [TODO] literally this entire page is TODO. I\u0026rsquo;m just making it as a place to dump links for now. Eventually I\u0026rsquo;d like to talk about why most interview processes suck, the high no-response rate, certifications vs degree, how to write a reÃÅsumeÃÅ, cover letter, start up culture, non-compete clauses, fake glassdoor listings, Linked in BS, all the things.\nTHIS WILL NOT BE A PLACE TO LINK TO SPECIFIC JOBS. DO NOT EVEN TRY TO SUBMIT A PR WITH THAT.\nInterviewing #  https://erikmcclure.com/blog/factorio-is-best-interview-we-have/\n10 questions to ask in a job interview that will really expose a company‚Äôs culture (and hacker news comments)\nSelf Employment? #  What I learnt roasting 200 landing pages in 12 months (Oliver Meakings Blog)\nSelling Tiny Internet Projects For Fun and Profit\n'}),a.add({id:68,href:'/engineering/wrappingup/latex/',title:"Latex",section:"Engineering",content:"Appendix 5 -   \\(\\LaTeX\\)  \u0026amp; Markdown #  Like the kink? #   \\(\\LaTeX\\)  , pronounced Lay-Tech, is a document writing and formatting \u0026lsquo;language\u0026rsquo; that acts pretty different from MS Word. It\u0026rsquo;s primarily used for writing fancy math equations, academic, journal, or conference papers, as such, you might have to use it at some point to conform to one standard or another (like IEEE).\nAs an example of what  \\(\\LaTeX\\)  formatting looks like, check this equation out:\nx = a_0 + \\cfrac{1}{a_1+ \\cfrac{1}{a_2 + \\cfrac{1}{a_3 + \\cfrac{1}{a_4} } } }   \\(x = a_0 \u0026#43; \\cfrac{1}{a_1\u0026#43; \\cfrac{1}{a_2 \u0026#43; \\cfrac{1}{a_3 \u0026#43; \\cfrac{1}{a_4} } } }\\)    Of course, it can both be much simpler and much more complex than this. On the simple side, basic  \\(\\LaTeX\\)  supports just writing a paragraph with no special symbols or commands, just basic text, and this will be rendered normally. On the \u0026lsquo;middling\u0026rsquo; side, you\u0026rsquo;ll see  \\(\\LaTeX\\)  figures, tables, and citations, which allow you to do things like easily make a figure add \\label{fig:my_thing}to it, then reference in the text with code like \\ref{fig:my_thing}, making it so if you add a figure later you don\u0026rsquo;t have to go back and increment all following figure references by one. The syntax can get a bit brutal though, so using tools like tablesgenerator.com and detexify can be a life saver.\nYou\u0026rsquo;ll probably end up googling how to do most things in  \\(\\LaTeX\\)  , find that a lot of things don\u0026rsquo;t really sit where you want them to (\u0026ldquo;Why is this figure in the wrong spot?\u0026quot;), and end up using a lot of packages to write it. Frustratingly, most of the desktop  \\(\\LaTeX\\)  clients suck, so it seems most people just use Overleaf now, which does have a free tier, but is a paid web-app. Fortunately, it actually works incredibly well and has very nice Google-docs like multi-user features.\nYou\u0026rsquo;ll likely use Bibtex for citing sources in your document, fortunately, a lot of papers have built in Bibtex citations you can download and import and your sources document. Litmaps is an awesome tool for building up research on a topic, exploring related tools, and exporting bibtex sources as well - though it is probably only free while in early access.\nYou may also want to check out Connectedpapers.com if you\u0026rsquo;re more interested in the research side, and one of the links listed for each paper does still usually have the bibtex available.\nKeep in mind if you need the full text of a paper, Sci-Hub is an option\n Litmaps lets you visualise your key literature, iteratively expand your research, and notify you as new articles connect to your maps. Try it out: https://t.co/uTwd9yHUjW pic.twitter.com/n3lO8yQ4Jg\n\u0026mdash; Litmaps (@LitmapsApp) April 21, 2021     Markdown? #  Markdown is what most of this website is written in, though there are various additional features this site uses that are not part of the common markdown standard. In general, markdown is just a stupid fast way to spit out formatted text that can still be interpreted as plain text. If you\u0026rsquo;re thinking \u0026ldquo;Formatted Plain text? What the fuck?\u0026rdquo; Yeah, that\u0026rsquo;s a valid response. Let me show you:\nThis is a title here are some words.\nThis word is bold.\nitalics too.\n here\u0026rsquo;s a list item two  here\u0026rsquo;s a separator line\n  here\u0026rsquo;s a task list with an item checked  heading 1 2  if foo: do bar()   smaller heading  Quote block\n This is a link.\n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  # This is a title here are some words. This **word** is bold. *italics* too. * here\u0026#39;s a list * item two here\u0026#39;s a separator line --- - [ ] here\u0026#39;s a task list - [x] with an item checked ## heading  ‚Äã```python if foo: do bar() ``\u0026#39; ### smaller heading \u0026gt; Quote block  This is a [link](www.google.com).      As you can see, it\u0026rsquo;s pretty simple to read and write. With a markdown render, it will look pretty and formatted like it does on this page, but if you have to view it as raw, plain text, it\u0026rsquo;s still totally human readable, and syntax highlighting for markdown is common.\nSome things in markdown are a bit less obvious though, for example, images and tables:\n   This is a Table     1 2 3   4 5 6   7 8 9     1 2 3 4 5 6 7  | This | is a | Table | | ---- | ---- | ----- | | 1 | 2 | 3 | | 4 | 5 | 6 | | 7 | 8 | 9 | ![this description helps for blind people](/box.png)      Weirder yet, a lot of markdown supports mixed in html, css, and sometimes  \\(\\LaTeX\\)  , although support for all of these is not always available. When this is available though, it\u0026rsquo;s a pretty awesome way to make custom document templates and hammer out shareable html pages with embedded YouTube videos or Tweets, or make a pdf with an html header or other elements (letting you do things like centering, custom text sizes, etc. which markdown doesn\u0026rsquo;t normally support) while still hammering out the body in pure text, which is super fast to type.\nYou\u0026rsquo;ll find a lot of the web actually supports markdown input, including Github, Reddit, Disquis forums, a lot of chat clients, etc. Unfortunately, the extent to which they support the more advanced features varies.\nFor writing markdown, I generally use Typora, which is not FOSS. It\u0026rsquo;s listed as \u0026lsquo;Free during beta\u0026rsquo; but it\u0026rsquo;s been in beta for a very long time now, and I suspect the old builds would still work even if it does go paid, so I\u0026rsquo;m comfortable recommending it.\n This page really is just to inform you of the existence of Markdown and  \\(\\LaTeX\\)  , though honestly I\u0026rsquo;m not sure how you could have gotten this far without writing a README.md on GitHub. Regardless, the internet really does have a lot of good sources on both.\nFor S\u0026amp;Gs, check out this StackExchange question: \u0026ldquo;How do I make my document look like it was written by a Cthulhu-worshipping madman?\u0026rdquo;\nIf you would like practice with at least one flavor of Markdown (with Hugo \u0026lsquo;Shortcodes\u0026rsquo;,  \\(\\LaTeX\\)  , html, css, and more baked in poorly), feel free to find a page in need of love on this website and submit a pull request on GitHub.\n"}),a.add({id:69,href:'/engineering/wrappingup/resources/',title:"Resources",section:"Engineering",content:"Appendix 3 - Other Great Resources #  Conventions #  https://www.emfcamp.org\nhttps://media.ccc.de/\n    News Sites #  Serializer.io (Aggregate of Hacker News, Ars, Reddit, Macrumors, and Lobste.rs )\nHacker News\nHackaday\nSlashdot\n Snopzu\nhttps://n-o-d-e.news/\n   Forums #  https://lobste.rs/\nhttps://stackoverflow.com/\n   http://textfiles.com/\nhttps://glitch.com/\n Learning Linux #  https://linuxjourney.com\n Youtube #  ElectroBoom\nCNLohr\nN-O-D-E\nLiveOverflow\nTom Scott\n bigclive\nAdoredTV\n3Blue1Brown\nBryan Lunduke\nLevel1Techs\nCrash Course: Comptuer Science, from PBS\n   Podcasts #  https://theamphour.com/\nHacker Public Radio\n Github info pages #  Hacker Laws\nResilence Engineering\nWhat Happens When\nAwesome Windows (List of tools for Windows)\nx86 Assembly Cheat Page\nAwesome C\nProject Based Tutorials in C\n The Book Of Secret Knowledge\nAwesome Creative Coding\nAwesome Livecoding\nList of Awesome Pages\nAwesome CTF\nAwesome Hacking\nAwesome Software Defined Networking\nAwesome Unicode\nSimple Virtual CPU\n   Books and Papers #  https://github.com/EbookFoundation/free-programming-books#readme\nPOC||GTFO\nYou may want to use a VPN for the following: https://scihub.org/ \u0026amp; http://libgen.rs\n Blogs #  http://blog.cleancoder.com/\n DIY Pages #  https://www.instructables.com/circuits/\n Non-Technical #  https://longform.org/ https://www.metafilter.com/ https://relevant.community/relevant/top\n Some really cool, inspirational people #  Security #   Netspooky @ https://twitter.com/netspooky LiveOverflow @ https://twitter.com/LiveOverflow https://twitter.com/ANDnXOR https://twitter.com/DCFurs https://twitter.com/gynvael https://twitter.com/ZonkSec https://twitter.com/Viss https://twitter.com/hacks4pancakes https://twitter.com/malwareunicorn https://twitter.com/da_667 https://twitter.com/0xCODEs https://twitter.com/zerosum0x0 https://twitter.com/x0rz  Programming/Live coding #   RavenKwok @ https://twitter.com/RavenKwok Neauoire \u0026amp; RekkaBell @ https://merveilles.town/@neauoire , http://100r.co/ https://twitter.com/RavenKwok https://twitter.com/generateme_blog https://twitter.com/manoloidee  Just generally nerdy #   https://twitter.com/Level1Techs / https://twitter.com/tekwendell https://twitter.com/Snowden https://twitter.com/oshpark https://twitter.com/climagic https://archive.org/ https://media.ccc.de/v/31c3_-_6373_-_en_-_saal_6_-_201412291600_-_the_only_thing_we_know_about_cyberspace_is_that_its_640x480_-_olia_lialina#t=621  Android Apps #     Name \u0026amp; Link Description Screenshot/Demo     Wolfram Alpha app for https://www.wolframalpha.com, gives unlimited access to some of the paid features from the website.    SensorLab     Spectroid     BusyBox     ConnectBot     IP Tools     Intrace     zANTI     Wifi Analyzer      Articles and Ramblings I Want To Feature But Have Nowhere Else to Put: #  Polygot Files #  [TODO need to find each thing I refrence here and take these out of this page]\nelf hacking, POC||GTFO\nStrange thought #  [TODO need to find each thing I refrence here and take these out of this page]\nMain not fn\norder of variable declaration (paged out 001 pg 33)\ngeneric midi use (paged out 002 pg 24)\nrop\nBlog posts that don\u0026rsquo;t fit anywhere else but that you should totally read #   https://hackaday.com/2020/02/20/we-ruined-status-leds-heres-why-that-needs-to-change/ Foone one weird adapters (Twitter Thread) Building the World\u0026rsquo;s Weirdest Fan (YouTube) Minetest Circuit Challenge (YouTube) A post by the guy who made Task Manager https://n-o-d-e.live/zine/NODE_VOL_02.pdf A post about Windows 10 LTSC, a super stripped down version of 10 that sucks a bit less https://criu.org Factorio Is The Best Technical Interview We Have (Erik McClure)  "}),a.add({id:70,href:'/engineering/wrappingup/wrappingup/',title:"Wrappingup",section:"Engineering",content:"Chapter 37 - Where To Go Frome Here? #  Hey, so, you made it. I can\u0026rsquo;t give you a degree. But, I\u0026rsquo;m proud of you. Even if you skipped a chapter or two, you still put in work to improve yourself and learn something. That\u0026rsquo;s cool.\nBut, maybe you thinking \u0026ldquo;Okay, but now what?\u0026quot;\nIntegrating other interests #  There\u0026rsquo;s a lot more to life than computers and code and electronics and making and hacking. Sure, all of these things are fun, but you\u0026rsquo;ll burn yourself out if they\u0026rsquo;re all you do, especially if you\u0026rsquo;re just coding for code\u0026rsquo;s sake instead of making something cool.\nSo, make something cool and find other hobbies.\nI\u0026rsquo;m into making music, longboarding, writing, making digital art, gaming, and a whole buncha' things. I often find ways to mix my interests though, and those are the times I have the most fun.\nMusic? Make some synths or effects pedals- distortions are dead simple.\nLong boarding? Make an electric board, or something to track your speed.\nWriting? You can make interactive fiction, stories with choices!\nGaming? You could make your own game, make a mod, make cheats - only for single player or anarchy servers.\nYou get the idea. Having a passion for nerdy things like this guide has talked about is great, but don\u0026rsquo;t let it be all consuming.\nOn that note, a lot of smart people think they always need to be making something that contributes to society or that they always need to be working to feel fulfilled.\nDon\u0026rsquo;t.\nAnd look, I know it\u0026rsquo;s not that simple. I can\u0026rsquo;t say\n\u0026ldquo;You shouldn\u0026rsquo;t feel bad for playing video games in your free time\u0026rdquo;\nand have you be suddenly all good and able to relax.\nbut, please, being happy and doing things you enjoy, even if you have to force yourself, is often the most productive thing you can do.\nWork life balance is important.\nContributing to Open Source #  If you do need something to work on though, I really recommend adopting an open source project and giving it some contributions. You might even make some friends along the way.\nYou don\u0026rsquo;t have to start with something as big and as intimidating as the Linux kernel to contribute. You can do something as easy as fixing typos and adding content to a site like this one - hint, hint - or find some actual code repos on GitHub that are actively seeking maintainers and contributors.\n"}),a.add({id:71,href:'/interviews/cadeyratio/',title:"Cadey Ratio",section:"INTERVIEWS",content:"An Interview with Cadey Ratio #   .conversation { display: flex; } .conversation-picture { flex: 1; min-width: 9rem; max-width: calc(((70rem - 2rem)/6)); }  3/10/2021\nThank you for taking the time for this interview Cadey. Your blog at christine.website/blog shows that you really have a wide range of interests. So, to get started, what are you passionate about and why?\nI\u0026rsquo;m passionate about making computers understandable. We work with these impossibly complex mechanical creations like they are nothing. They dominate our culture. With the onset of COVID, the internet has gone from an essential part of our lives to a vital method of communication.\nI\u0026rsquo;ve also been taking up fiction writing a lot in recent days. Fiction is a great canvas to explore ideas and talk about topics that people generally don\u0026rsquo;t deal with. I have a few longer stories in planning right now that I hope to use to refine my writing skills. Another side goal of them is to create the kind of fiction that I wish there was more of. Philosophy is also a fun thing to deal with, and it has some surprising links into the tech and writing I do.\nYou know on second thought, I think that the real core thing I am passionate about is making things in general understandable. My dayjob has me working on social proximity networks. A lot of my open source code allows me to explore ideas and different ways of thinking. My technical writing has been a fantastic canvas to build my basic writing skills on top of (it\u0026rsquo;s gotten me to the front page of Orange Site more than 5 times as well as a throwaway comment of mine on /r/programmingcirclejerk twice in the same day, so I\u0026rsquo;m probably doing something right, I hope). The fiction I write aims to help explain complicated moods and ideas that other forms of media struggle with (such as Readaptation, which is about gender dysphoria with some dysmorphia thrown in for good measure).\nWhat are some your favorite projects you\u0026rsquo;ve worked on?\nI could be here all day listing the fun things I work on but I\u0026rsquo;ll list my top favorites:\n olin and pa\u0026rsquo;i - these projects were how I learned userspace-\u0026gt;kernel API design as well as Rust The Source - a collections of ideas for the rules/homebrew system I use when dming tabletop RPGs mi - a personal API that powers a lot of boring-to-you things that I use to glue my online presence together christine.website - the code that powers christine.website hlang - the h \u0026ldquo;programming language\u0026rdquo; when-then-zen - BDD descriptions of meditation methods Backplane (defunct) - a reverse reverse proxy for web applications hosted behind firewalls My eBook/website generation pipeline built on top of nix-build that I really need to write about at some point  What part of what project has been the most difficult and/or most rewarding thing you\u0026rsquo;ve ever worked on?\nI\u0026rsquo;m gonna break this up into two parts.\nFirst, the most difficult project I\u0026rsquo;ve worked on has been the WebAssembly research that culminated in Olin and pa\u0026rsquo;i. You think it\u0026rsquo;s hard to write WebAssembly programs, but it gets even harder when you had to debug them when I had to. It was really the wild west of WebAssembly at that point. My most reliable debugging method was to dump the WebAssembly memory to disk and then go hexdump diving with xxd. Yes, seriously. Tracing through execution usually meant puking up a pointer to the thing that I wanted to inspect and then adding let _ = 0/0 or something to the code so it would puke and die without modifying the heap. It was hell. Then I got things working and it was not hell anymore. But it was hell.\nBy any empirical measure, my most rewarding project has been my blog. It has been the reason why prospective employers reach out to me. This has made job hunting so much easier. When you are a gender minority like I am it can be very difficult to find people willing to hire you. My blog does a hilarious amount of traffic, at least 70 GB per month. My blog is mostly text save the cute sharkgirl images, so this means that my blog is very widely enjoyed.\nWhat aspect of how the web works would you change if you could?\nThe internet in general is no longer a human-scale network. If I had ultimate authority I would want to make the internet a superstructure for human-scale subnetworks between friends, coworkers and colleagues. I\u0026rsquo;m actually quite lucky because I have the privilege to work for a company that allows me to act on that desire.\nAlso I\u0026rsquo;d want to probably figure out an alternative method of funding creative work. A lot of those ideas have an unfortunate habit of depending on systems like Universal Basic Income though. Artists get fucked over by capitalism.\nOn your site and though your blog posts I see that you use quite a wide array of programming languages, which ones are your favorite to work in? Least favorite? why?\nI work with many tools because I do many things. Every tool is not useful for every task. By knowing a variety of tools I\u0026rsquo;m able to pick the tool that is the best fit for the job. That being said though, my least favorite tool to use as of late is the Go programming language. It\u0026rsquo;s not really about the language itself. I definitely feel like I cannot really flex my muscle and express myself in Go the way I would want to because Rob Pike says we can\u0026rsquo;t have nice things. The biggest problems I have with it at the moment are rooted in the tooling, specifically with how they have been handling Go modules.\nWithout getting too deep into semiotics, Go modules change the definition of major versions of software in ways that are shocking to people. There are so many scripts that have been written to make Go modules Do The Right Thing‚Ñ¢Ô∏è that frankly wouldn\u0026rsquo;t have to exist if Go modules wasn\u0026rsquo;t such an exciting feature. Some days I want to try and bolt Rust\u0026rsquo;s cargo to the side of the Go toolchain. Go does have its uses though.\nOne of my favorite tools is Rust. Rust is a programming language that gives developers a lot of freedom of expression and implementation while also making it hard for developers to do sad things in the process. It was frustrating learning Rust at first. I had learned a lot of bad habits. But the net result is that when I am writing programs in Rust, I simply do not have to have as much in my head at any given time. Entire classes of errors are eliminated by the compiler. Errors that do not compile to machine code cannot be deployed to production. This also really makes the SRE side of me very happy, because I can be more sure that Rust programs won\u0026rsquo;t crash because of a hidden gotcha.\nIt\u0026rsquo;s a shame that more people don\u0026rsquo;t use Rust.\nFrom various things that you\u0026rsquo;ve written it\u0026rsquo;s clear that you care about how people interact and communicate in a safe, comfortable enviroment where they can be themselves. At the same time, you have social media accounts across a variety of platforms that hold these values to different standards (twitter vs mastodon, for example).\nHow do you manage your social media experience to get the most good and least bad from it?\nTo be honest, I am probably one of the worst people to ask about this. I do not have a healthy relationship with social media and online platforms in general. I\u0026rsquo;ve been trying to correct it, but most of those efforts got thrown into the trash can when COVID happened. I do try to avoid the siren song of the timeline though. The addiction algorithms have a deep hook into the happy chemical part of my brain though. It\u0026rsquo;s made it hard for me to focus on longer writing projects like the novel I\u0026rsquo;ve been planning out off and on for years.\nThe biggest problem is chatrooms for communities. I\u0026rsquo;ve been in a few offshoots of the same community\u0026rsquo;s chatroom for almost a decade and had the unfortunate pleasure of serving as a chat moderator. Those things can either be very boring in the best ways (with your moderator status mostly boiling down to a symbolic gesture of \u0026ldquo;hey this person is trustable and stuff\u0026rdquo;) or very exciting in the worst ways (like when all the adults in the room move on to Bigger and Better Things, leaving you to play adolescent daycare).\nWhat do you think more people could do to make their social media experience online better?\nIf you can, try to keep your circle of people you actively follow and engage with below Dunbar\u0026rsquo;s Number. On bigger social platforms there is a tendency to follow hundreds if not thousands of people that you barely know. This is more people than you can really keep track of. I used to follow people back that replied to my tweets, but I recently had to stop doing that to keep my feed under control.\nA lot of this is a sociological problem though. Humans really aren\u0026rsquo;t ready for social media. All of our existing systems and laws are predicated on the \u0026ldquo;old way of doing things\u0026rdquo;. Police departments haven\u0026rsquo;t been able to keep up with the ways that crime is being committed online. The vast scale of everything is difficult to comprehend. Thousands of HOURS of content are uploaded to YouTube every minute. That is the equivalent of over a month of content. That\u0026rsquo;s not like a month of 40 hour work weeks, that\u0026rsquo;s the entire month.\nWe deal with human-scale things, not the scale that social media has become. It\u0026rsquo;s difficult for us to comprehend the monsters we have created.\nWhat do you think are the biggest things that social media platforms could do to improve?\nStop optimizing for engagement. It\u0026rsquo;s optimizing for addiction. It\u0026rsquo;s optimizing for users to be angry. It\u0026rsquo;s optimizing for dividing people, and they have the audacity to claim that they are bringing the world closer together too!\nMake your technology calm. Don\u0026rsquo;t make things scroll infinitely. It\u0026rsquo;s okay for people to miss notifications. Let things happen as they do.\nSince making The Source and Mara: Sh0rk of Justice what advice would you give to someone that wanted to make a game of their own?\nFuck it, yolo, go for it. You\u0026rsquo;ll learn a bunch. There\u0026rsquo;s really no risk to trying stuff out to see how you like it. The Source started as a collection of DM notes that grew out of hand. Mara: Sh0rk of Justice was done in one particularly long weekend because I was bored. There is so little risk in throwing something onto Itch. I plan to release all of my future paid projects on Itch.\nAs a fellow Split-keyboard user and non-QWERTY user, how have both been going for you? Any complaints?\nIt was hard to adapt in the first few days. It got a lot easier though, and now I can swap between qwerty and colemak mod-dh at will. I\u0026rsquo;ve even had some occasions where I\u0026rsquo;ve had one hand on a qwerty keyboard and the other on my moonlander. This really broke me for a moment. I\u0026rsquo;m probably not going to get to the level of using steno on my keyboard to dab on the haters at 200 words per minute though.\nI just hate it when games don\u0026rsquo;t let you rebind inputs. My Steam Controller helps with those, but it would be nice if they could just allow you to bind the keys to what you want to use. Cyberpunk 2077 is particularly bad at this because you can\u0026rsquo;t rebind use from f to something else. I want to use frst as my wasd cluster so it\u0026rsquo;s more comfortable on my Moonlander. I may end up having to make a gaming layer in addition to my qwerty layer.\nOn your blog you\u0026rsquo;ve talked about how tulpamancy has helped you out, care to dive into that a bit? How has it been going since your last post about how it helps you with development about two years ago?\nWow, it\u0026rsquo;s hard to believe that post was written almost two years ago. Time files eh?\nAs a note, we are going to use the plural first person pronoun we to refer to the collective group (or system if you prefer that term) of all of us for the remainder of this post. Any time I use I, it\u0026rsquo;s referring to me (Cadey) in particular.\nYes, our plurality has been absolutely catalytic to our career. It\u0026rsquo;s the secret sauce to how we come across as a 10xer. Each of us has our own specialty and we chord them together to express a balanced composite. A lot of the different skills in tools and methodologies are divided between us.\nI really wonder some days if my coworkers have caught onto the notable differences between us. Nicole is very much a shitposter that has some quite insightful things to say when she wants to. Jessie has some lovely metaphors that she invents on the fly. Ashe is the one that is out on the days that shit gets really chaotic (including getting on the front page of Orange Site, not sure how that keeps happening so consistently). Sephie is much more security and SRE focused. Mai is the really creative one that comes up with a lot more of the \u0026ldquo;terrible ideas\u0026rdquo; than the others do. I sorta sit in the middle between them all, and at large we sorta kinda even out.\nI really do wonder when we will feel safe enough at a job to want to come out as plural to our coworkers. We\u0026rsquo;ve been fearing it though, it\u0026rsquo;s all of the social problems of coming out as transgender with none of the legal protections. It\u0026rsquo;s sad that there is a legitimate fear of alienating our coworkers. Coming out as plural to my (note: we have no idea what pronoun to use here) brother is a huge part of why he isn\u0026rsquo;t really present in our lives. Tailscale might be the place we do it though. The stigma around the topic is a hard fear to work around (if only because it is justified).\n     Mara  Before any of you ask, I am not actually a systemmate/tulpa up in their head. My lines (including this one) are written by Nicole. They have gotten this question a lot and they figured this would be the best way to answer it.    Collectively, we share the username Xe and the legal name Christine. There\u0026rsquo;s some stacked jokes regarding our VRChat avatar being based on the character that it\u0026rsquo;s based on, however we\u0026rsquo;ll leave those as an exercise to the reader to avoid spoiling too much of Xenoblade Chronicles 2.\nPlurality isn\u0026rsquo;t a magic bullet though. Sometimes the Big Sad can affect multiple of us at once. It becomes hard to work normally in those cases. Our strategy usually is to pass the baton when one of us gets stuck. Sometimes that doesn\u0026rsquo;t work. It can be kinda annoying.\nWhat\u0026rsquo;s the most important skill that you\u0026rsquo;ve taught yourself?\nHow to break things down into their component parts and tackle those piecemeal. This is a skill that is absolutely vital yet seemingly nobody wants to teach it. If it is even teachable that is. A lot of it really boils down to play as a legitimate work strategy.\nThings don\u0026rsquo;t have to be boring. They can be fun.\nIs there any skill that you spent too much time developing that you wish you hadn\u0026rsquo;t?\nHow to report child abuse to authorities. It\u0026rsquo;s unfortunate that I\u0026rsquo;ve had to do it often enough that we had to write a [CW: Pedophilia discussions] guide for myself on how to properly report it to the right people.\nOther than that we try to live life without regrets. The past has happened and can\u0026rsquo;t unhappen, time is a blockchain. It has been a tough pill to swallow, but overall it\u0026rsquo;s helped a lot.\nWhat do you do for fun? Any books, movies, TV shows, etc. that you\u0026rsquo;d recommend?\nWe are boring nerds when it comes to having fun. Lots of YouTube, video games and absolutely atrocious Nicolas Cage movies. In terms of recommendations here\u0026rsquo;s some of our top picks:\n Quantusum by James Mahu - Quantusum is one of the best examples of spiritual fiction I have ever read, and has been a huge influence on my writing style and the kinds of stories I want to tell. It\u0026rsquo;s annoyingly hard to get a legit copy of it though. Certain websites may help with that. The Matrix, which tragically never got a sequel. Xenoblade Chronicles 2 - Xenoblade Chronicles 2 is easily one of the best games for the Nintendo Switch. You will get at least 50 hours out of a playthrough. It tells the story of a boy and his blade as they try to save the world from decay. It\u0026rsquo;s almost worth buying a Switch for if you don\u0026rsquo;t have one already. It also has an amazing portrayal of plurality that needs to be experienced by more people. It\u0026rsquo;s got the story equivalent of an entire 5 season anime packed into a 13.2 gigabyte package. Highly reccomend. Battlestar Galactica (2002) - This show was really influential to me while I was growing up. It is the story of good intentions taken to the worst possible extremes. Please watch it. The parts where the Cylon method of projection is used to customize the inputs they get have been instrumental in how I perceive things. Star Trek: The Next Generation and Deep Space Nine - These shows together comprise what I love the most about science fiction. The worldbuilding for the Federation has been instrumental in so many other science fiction media. Deep Space Nine is why we have the concept of season-long arcs in media. The Next Generation is probably one of the best visions for a utopian ideal I\u0026rsquo;ve ever seen. Deep Space Nine did corrupt that ideal a bit in the more realistic setting aboard a space station that has a chronic case of exciting things happening, but overall it used that corruption as a tool. Well worth the watch.  What\u0026rsquo;s the biggest \u0026lsquo;Oh Shit\u0026rsquo; moment you\u0026rsquo;ve ever had, be it one you caught in time or not?\nOne time at work I typoed a reboot command to run on the wrong host. The server number was transposed (AF1373 instead of AF1337 or something like that) and I accidentally rebooted a production redis server. One of the bigest redis servers with over 500 GB of ram. So much data in ram that it took 8 hours to come back up, and most of that time was spent loading things back into ram. We were so lucky that we had a replica that we could promote to the primary server. That was almost a very very bad incident. It\u0026rsquo;s been a few years though, so I don\u0026rsquo;t remember too many details beyond that.\nWho are your biggest inspirations? What creators do you think are way to underrated and deserve a shout out?\nOne of my bigger inspirations is the idea of chaos magick as a universal hammer. Distilling things down, you can reduce chaos magick to these two axioms:\n Try many things Do more of what \u0026ldquo;works\u0026rdquo; There is no third axiom  Things can extend out from there infinitely.\nThe WingMakers materials have also been a huge influence on my projects and writing. It is kind of way out there for most people, but\nWhat\u0026rsquo;s the best advice you\u0026rsquo;ve ever received? Worst?\nKnow when to give up. This is a tough pill to swallow for me at times, as I am really really inclined to want to Make Thing Work, but sometimes I have to give up. It hurts, but sometimes you actually do need to move on to something else.\nHow do you balance doing whatever you have the itch for at the moment with doing things to unwind?\nPoorly! Meditation helps. The most effective method I use is to just focus my awareness on the sensations of breath. The pressure. The movement. The constant change. The inhale. The expanding. The exhale. The shrinking. The cycle of breath. The calming cool air going in my nose. The warm air coming out of my mouth. The sensations of breathing.\nWorst case there\u0026rsquo;s tools like CBD oil. Thankfully I have managed to avoid needing to use them very often.\nWhat is your favorite \u0026lsquo;hidden gem\u0026rsquo; tool?\nNix and NixOS. The most magical thing about NixOS is that you can deploy stuff to a server and then you can undo it if it messes things up. I use it to deploy everything from my blog, my git server, my ebooks, my services and just about everything I can. It\u0026rsquo;s a shame the documentation is so terrible though. I\u0026rsquo;ve been working on making better documentation though.\nWhat hobby do you want to get into but haven\u0026rsquo;t had a chance to dive into yet?\nAt this point the only hobby I haven\u0026rsquo;t gotten into yet is growing certain kinds of plants for my own private enjoyment. I\u0026rsquo;ve wanted to do it for a while but haven\u0026rsquo;t really found a place to do it yet. I may have more luck when my fiance and I finally settle down and get a house. Every other hobby I\u0026rsquo;ve wanted to play with is something I\u0026rsquo;ve been able to play with though.\n"}),a.add({id:72,href:'/music/midi/',title:"Midi",section:"MUSIC",content:"MIDI in Detail #  Musical Instrument Digital Interface, or MIDI is what it sounds like, the primary way to get data between devices digitally. Want to tell a hardware synth to play a sequence you arranged on your computer? MIDI. Want to play notes into your computer using a keyboard? MIDI. Want to sequence drums, with varying \u0026lsquo;velocity\u0026rsquo; on each hit? MIDI.\nSounds Great?\nFor the most part, yeah. Everything works together and you can make all your hardware speak the same language. Let your keyboard talk to your computer and then your computer talk to your drums so that you can play the drums with your keyboard! Send automation from your computer to a parameter on your synth to vary the sound over time, whatever.\nThe Catch? MIDI is outright ancient by technology standards, having come out in 1981. It\u0026rsquo;s so damn old, that it\u0026rsquo;s (mostly) a 7-bit standard. Now, ideally, a musician shouldn\u0026rsquo;t have to know all this shit and the gear should stay out of the way. Unfortunately, we\u0026rsquo;ve been sticking with this standard for so damn long that basically everything abuses it in one way or another to the extent you sorta have to know how it works. So, 7-bit, what does that mean?\nWell, it\u0026rsquo;s talking about bits, so 1\u0026rsquo;s and 0\u0026rsquo;s. For each message in midi, you get 7 bit\u0026rsquo;s of data. So, when you turn a knob it can range from 0000000 to 1111111, which, works out to be 0 to 127. This means each knob, even if it feels smooth to you, only has 127 distinct levels whatever it\u0026rsquo;s talking to can receive. This is really bad. But, wait, it gets worse. This applies to *almost everything in MIDI, so how hard you hit the keys and how finely you can set the volume with a physical slider. Clearly, this blows.\nAnd, it so happens, everyone agrees. Because of that, there\u0026rsquo;s a whole fustercluck of solutions. Some you might see include\n MIDI Non-Registered Part Number (NPRN) is one way MIDI controllers can send higher resolution signals (14bit so, 0 to 16384) by putting two, 7-bit CC\u0026rsquo;s values together such that one controls the Most Significant Byte (MSB) and the other the Least Significant Byte (LSB) Open Sound Control (OSC) isn\u0026rsquo;t MIDI, but rather a competing standard that\u0026rsquo;s much higher resolution and can work over ip (wifi), but it\u0026rsquo;s not universally supported like MIDI Mackie Control Universal (MCU) is a fustercluck of a non-standard developed by Mackie, a particular hardware manufacture, for one of their products. Originally MCU was made for Logic but eventually the control \u0026lsquo;standard\u0026rsquo; wound its way into other DAWs. It mostly provide a \u0026lsquo;universal\u0026rsquo; mapping for common functions like mute, solo, track select, EQ and what not. It basically just sits on top MIDI. Midi Polyphonic Expression (MPE) is probably the most convoluted of the workarounds, but it will require some more explanation, so I\u0026rsquo;ll come back to this in a second.  \u0026ldquo;Alright\u0026rdquo;, I hear you thinking, \u0026ldquo;so MIDI is a fucked up standard, what is it good for then?\u0026rdquo;\nWell, it\u0026rsquo;s pretty much still the only one you can sequence notes in your DAW, that all instruments interface with each other and a computer, and often the only way you can control digital instruments and effects from hardware.\nSo, let\u0026rsquo;s poke into some of the common MIDI message types, starting with the most obvious: Notes.\nTypes of Midi Messages #  Notes #  MIDI notes range from 0 to 127, with the highest note, 127, being a G9 @ 12543.9hz and the lowest, note 0, being a C-1 at 8.176hz. Obviously this is more than the standard full 88-key piano.\nGiven human hearing starts at about 20hz, the lowest notes are inaudible except for harmonics assuming no octave shifting or other quirks. As such, these lowest notes are often repurposed for control messages, though even then a lot of sound sources will only respond to a limited range of these notes anyway.\nWhile MIDI does have an extension for supporting alternate tunings, it\u0026rsquo;s rarely directly supported. As microtonal and other non-12TET (12 True Equal Temperament) scales have become common, various tools exist to use MIDI pitch to force notes to a chose scale anyway.\nGeneral MIDI, one of various MIDI extensions (that often get ignored anyway) also defines a few specific instruments to belong to specific midi channels (rarely used unless listening to midi files directly with soundfonts) and a mapping for drums, which is used a bit more often, and is generally close to the normal mapping you\u0026rsquo;ll see in tools like Ableton\u0026rsquo;s Drum Rack. If you buy an electronic drum kit or use a drum machine, it\u0026rsquo;s likely to at least try to respect this mapping.\nGeneral MIDI Drum Map    KEY NOTE SOUND     35 B0 Acoustic Bass Drum   36 C1 Bass Drum 1   37 C#1 Side Stick   38 D1 Acoustic Snare   39 Eb1 Hand Clap   40 E1 Electric Snare   41 F1 Low Floor Tom   42 F#1 Closed Hi Hat   43 G1 High Floor Tom   44 Ab1 Pedal Hi-Hat   45 A1 Low Tom   46 Bb1 Open Hi-Hat   47 B1 Low-Mid Tom   48 C2 Hi Mid Tom   49 C#2 Crash Cymbal 1   50 D2 High Tom   51 Eb2 Ride Cymbal 1   52 E2 Chinese Cymbal   53 F2 Ride Bell   54 F#2 Tambourine   55 G2 Splash Cymbal   56 Ab2 Cowbell   57 A2 Crash Cymbal 2        KEY NOTE SOUND     58 Bb2 Vibraslap   59 B2 Ride Cymbal 2   60 C3 Hi Bongo   61 C#3 Low Bongo   62 D3 Mute Hi Conga   63 Eb3 Open Hi Conga   64 E3 Low Conga   65 F3 High Timbale   66 F#3 Low Timbale   67 G3 High Agogo   68 Ab3 Low Agogo   69 A3 Cabasa   70 Bb3 Maracas   71 B3 Short Whistle   72 C4 Long Whistle   73 C#4 Short Guiro   74 D4 Long Guiro   75 Eb4 Claves   76 E4 Hi Wood Block   77 F4 Low Wood Block   78 F#4 Mute Cuica   79 G4 Open Cuica   80 Ab4 Mute Triangle   81 A4 Open Triangle        CC\u0026rsquo;s #  Sustain #  Modulation #  MIDI LFO/Envelopes #  Velocity #  Aftertouch #  Pitchbend #  Clock \u0026amp; Transport #  Program Change #  SysEX #  MIDI 2.0 #  "}),a.add({id:73,href:'/other/coolhardware/',title:"Coolhardware",section:"Others",content:"Cool Hardware #    LTP-305G/HR 5x7 LED Matrix displays \u0026amp; Driver, article on (Hackaday)\n  https://hackaday.io/project/15102-redot    Core Memory Shield for Arduino by Jussi Kilpelainen on Tindie\n    A somewhat ridiculous precision voltage source\n  turns out placing 900 resistors does not get you banned from SMD assembly service after all üòá pic.twitter.com/3iu3zL5TLi\n\u0026mdash; Marco Reps (@MarcoReps) December 31, 2020      List of nixie tube types: https://justanotherelectronicsblog.com/?p=228\n  DIY Particle Detector\n     Williams Tube (Wikipedia)\n  Slow Motion optical illusion picture frame kit on Tindie\n  USB-C PD Breadboard programmable PSU\n     Ottercast (Hackaday) - a Chomecast audio clone\n     PinJig Soldering tool - failed kickstarter\n   "}),a.add({id:74,href:'/other/funlinks/',title:"Funlinks",section:"Others",content:"Other cool things that I want to promote but don\u0026rsquo;t fit elsewhere so I\u0026rsquo;m making this list here: #    Brimestone Valley Mall\n The year is 1999. Lurking somewhere between Hot Topic and the food court, five misfit demons from Hell kill time inciting sin in a suburban shopping mall. When the lead singer of their band goes mysteriously missing, the demons only have two weeks to find him before they play the biggest gig of the millennium - or face the wrath of Satan herself.\n   17776\n I, uhh, don\u0026rsquo;t know what to tell you what this is\u0026hellip;\n   Spacebuckets\n \u0026ldquo;A Space Bucket is a DIY indoor garden that is made by stacking plastic containers alongside lighting (CFL or LED) and airflow (PC or other fans). It is an enclosed growth chamber that can be used to garden many kinds of plants\u0026rdquo;\n\u0026ldquo;The /r/SpaceBuckets subreddit is our main forum\u0026rdquo;\n  Similar, but like 100x more high tech, Encapsulated Enviromental System    Stones on are.na (idk, I just like them okay\u0026hellip;)\n  Hey, and while we\u0026rsquo;re at it how about growing Moss too\n  Neat (furry) Visual Novel.\n It\u0026rsquo;s super cheesy, it\u0026rsquo;s furry, but it made me think and honestly I\u0026rsquo;m really glad I played it.\n   Durden and Arcan\n A new take on the display server and desktop environment, not production ready, but super weird and interesting\n   The blog of Szymon Kaliski\n Tons of cool projects involving creative code, art, music, etc.\n   Gear Cutting\n \u0026ldquo;The gear template generator program is a program for printing paper templates for cutting out gears\u0026rdquo;\n   Killing Hitler (Reddit Writing Prompt Response)\n  \u0026ldquo;No 0 Days\u0026rdquo; (Reddit)\n  Video about Anime and the blending of cultures (YouTube)\n  Geological Phonograph\n  Hemmingway App\n Don\u0026rsquo;t take what this says as a hard truth, but it does a decent job of \u0026lsquo;grading\u0026rsquo; your writing for readability and complexity.\n   Instantly Age Alcohol - Ultrasonic Treatment (Though Emporium on YouTube)\n  The Egg - A Short Story (Kurzesaght on YouTube)\n  Quiz from AV Husky on weird connectors\n Answers    A WiFi-enabled power supply in a AA battery form factor, designed for sex toys\n  I Spent 11 Years Working on This Line Rider Track by David Lu\n  LIFE BEYOND II: The Museum of Alien Life (Youtube, MelodySheep)\n A weird video with really good CGI about potential alien life\n   Wild House Pilot\n \u0026ldquo;A Wolf, a Panther and a Tiger are the friendly roommates of this Wild House. They live in a wicked world with ambiguous moral codes, in which everyone is an idiot and nothing really works\u0026rdquo;\n   The Complete Guide to Magnet Implants (YouTube, The Thought Emporium)\n  You Are Two (YouTube, CGP Grey)\n This is about people that have had the link between each half the brain split\n   Tech Icons: Cliff Stoll (YouTube, AT\u0026amp;T Tech Channel)\n I love Cliff Stoll, he\u0026rsquo;s like the ultimate cute grandpa that\u0026rsquo;s also obsessed with Klien Bottles.\n   Jsting-F\u0026rsquo;s awesome electronic Fursuit\n  Cyberdecks for High-Tech Low-Lifes (Tales From The Dork Web)\n and ARM \u0026amp; x86 Team Up in No Compromise Cyberdeck (Hackaday, Tom Nardi)    A mix between Minesweeper and a Bullethell (tic-80, Artemis Minesweeper)\n  Hexagonal Chess (tic-80, HexChess)\n While I\u0026rsquo;m at it, there 5D Chess With Multiverse Time Travel too.\n   A weird astroids clone (tic-80, Ship\u0026rsquo;em up)\n  I thought I made a hard game and then speedrunners totally destroyed it. Here is what that feels like. (Zukalous, Imgur)\n  TEXTREME - a juicy text processor, with a rythm mode (Itch.io)\n  An Orbit Map of the Solar System (Tabletop Whale)\n  A Thread from @foone about how cat girls can weard headphones\n  A Twitter Thread about PayPal blocking all transactions with the word \u0026ldquo;Tardigrade\u0026rdquo;\n  Operation Mindfuck Vol. 4, a video from rC3 (YouTube)\n Isomorphic keyboards, Truchet Tiles, and much much more.\n   The Best Things and Stuff of 2020 (Fogus' Blog)\n  Robot Sumo Wrestling (YouTube)\n  Voice of the Ilk (Wiktopher.ca)\n  Leonardo da Vinci\u0026rsquo;s Notebooks\n  \u0026lsquo;Free Games\u0026rsquo; tag on Rock Paper Shotgun shows off some neat stuff\n  Historical US Topographic Map explorer\n  Authagraph World Map: True Representation Of The Continents And Oceans\n  Pink Trombone - Bare Handed Speech Synthesis\n  uwu, are you looking at my source https://www.youtube.com/watch?v=o9l4EiYFZjg\n"}),a.add({id:75,href:'/phil/environment/',title:"Environment",section:"PHIL",content:"Environmental Protection #  Legacy [OC] from r/funny  Carbon Tax?\nPercentage of all fossil fuel emissions that have occurred in my lifetime [OC] from r/dataisbeautiful \nGeoengineering: A Horrible Idea We Might Have to Do (YouTube, Kurzgesagt)\nA Strange New Blend of Rock and Plastic Is Forming on a Portuguese Island (Gizmodo)\nA Plateful of Plastic - Visualising the amount of microplastic we eat (Reuters)\nThe poison found in everyone, even unborn babies ‚Äì and who is responsible for it (The Guardian)\n"}),a.add({id:76,href:'/phil/history/',title:"History",section:"PHIL",content:"History #  Something to consider before going forward is that, assuming you\u0026rsquo;re from the US, the education you\u0026rsquo;ve received is likely very skewed both in what content is presented in the first place and how it\u0026rsquo;s presented. Unlike what most US education will tell you MLK did not magically end racism, not every US war has been just, and - no - our three branches of government are not working as intended. This chapter serves as a sort of collection of resources to help you get a more holistic view that aims to better represent the truth of history, instead of letting it be written with a movie of profit, patriotism, and indoctrination.\nTo get started, I\u0026rsquo;m going to link to quite a few videos:\nWhy American History Whitewashes Radical Figures\nU.S. History: Last Week Tonight with John Oliver\nWhile also linked previously in the War and Foreign Involvement chapter, I seriously recommend The CIA is a Terrorist Organization\nThe missing half of American history (Beth Olanoff)\nA People\u0026rsquo;s History of the United States\nQuora\nTODO: https://cascade.page\n"}),a.add({id:77,href:'/unpublished/listofideasw/',title:"List of Ideasw",section:"Unpublisheds",content:"Post about sympy in math chapter, espically with sum and product\nincreasingly online spaces that are custom-built are both spreading new ideas and preventing mono-cultures AND causing people to live in completely different realities and echo chambers\nFuck consumerism, fuck hoarding, fuck status symbols, fuck plastic wrapped single use internationally shiped good, fuck single use electronics, fuck shitty electronics that are instant-ewaste\n"}),a.add({id:78,href:'/webdev/',title:"Webdev",section:"Home",content:"h1 The Quick Brown Fox #  test\nh2 The Quick Brown Fox #  test\nh3 The Quick Brown Fox #  test\nh4 The Quick Brown Fox #  test\nh5 The Quick Brown Fox #  test\nh6 #  test\nhttps://excalidraw.com - for \u0026lsquo;hand drawn\u0026rsquo; svg diagrams\nhttps://detexify.kirelabs.org/classify.html - for Latex symbol lookup\nhttp://shapecatcher.com - for unicode symbol lookup\n note, youtube \u0026ldquo;copy embed code\u0026rdquo; depends on current size on screen of the embed, this can be fixed a bit by changing the start to \u0026lt;iframe width=\u0026ldquo;100%\u0026rdquo; height=\u0026ldquo;500\u0026rdquo;\n The ULTRA spicy pillow (normal battery for comparison) pic.twitter.com/yS1OUW7YJD\n\u0026mdash; techsupportgore (@techsupgore) August 18, 2020    listitem listitem listitem  Markdown can be wrapped in html to apply theming or do other things:\n  Click to expand  Abc Abc   cinwell website\nhttps://vincentgarreau.com/particles.js/\nhttps://codepen.io/alexzaworski/pen/mEkvAG\nhttps://codepen.io/P1N2O/pen/pyBNzX\nhttps://codepen.io/saransh/pen/BKJun\nhttps://codepen.io/fabiowallner/pen/ozkoYo\nhttps://codepen.io/lbebber/pen/EVxvWN\nhttps://codepen.io/wagerfield/pen/wftcE\nhttps://medium.com/chingu/decrypting-effect-c5fc2a071354 \u0026amp; https://github.com/bartobri/no-more-secrets#the-nms-library\n Columns2 shortcode is a very shittily done shortcode that is just a slight mod on cols, it centers the text and adds a line under each box. This works well for making pseudo-tables that don\u0026rsquo;t fuckup content width or have issues with rendering on mobile\n "}),a.add({id:79,href:'/design/analog-design/',title:"Analog Design",section:"DESIGN",content:"[TODO]\nWhat makes it \u0026lsquo;analog\u0026rsquo; #  Pen/Pencil and Paper #  Charcoal #  Paints #  https://www.reddit.com/r/PourPainting/\nNew Genesis, me, fluid acrylic, 2020 from r/Art  Sculpting #  Fabrics and Fashion #  This is my very long daughter, Calliope Crayon Cruncher from r/LongFurbies  LED Hackers Jacket for EMF Camp (lochsh)\nGlass #  The biggest stained glass commision so far - feels great! from r/furry  Other #  Foil Art (Reddit)\n"}),a.add({id:80,href:'/phil/arguments/',title:"Arguments",section:"PHIL",content:"Philosophical Arguments #  [TODO]how to construct a phil argument\nNot simply accepting \u0026ldquo;Because that\u0026rsquo;s how it is\u0026rdquo; #  I\u0026rsquo;m writing this at @292.78 on Day 132 of 12,020. I\u0026rsquo;m typing on a Dvorak, split, ortholinear keyboard in a markdown document using Arch Linux instead of M$ Word on Windows, and if you\u0026rsquo;d like you could view this document using DAT or IPFS or LBRY. I find music off the 12 tone scale interesting, and while I know 432 vs 440hz, isn\u0026rsquo;t going to open my 3rd eye, listening to microtonal or music made with just intonation is still something interesting to me.\nAlright, so maybe I was being a bit cheaky. I don\u0026rsquo;t actually use that weird time format (though I do use the year part semi-regularly). The rest though, yeah. And honestly, it\u0026rsquo;s a lot of putting my money where my mouth is, so to speak. You see, I think we live in a world that is unfortunately resistive to change. While we as a species are creating technology that allows us to exchange ideas at a rate that was unfathomable even when I was born in \u0026lsquo;98, were still resistant to actually accepting that many of the things we do are rooted in ideas that just don\u0026rsquo;t really make sense anymore. We\u0026rsquo;re artificially limiting ourselves and our culture because we\u0026rsquo;re scared. Because at the root of things our monkey brains are shouting at us \u0026ldquo;What we\u0026rsquo;re doing works! Don\u0026rsquo;t touch it! You might break it! Then what would we do!\u0026rdquo;. Because of this we\u0026rsquo;ve done a lot more harm than just causing more RSI from bad keyboard layouts or using crappy calendars. We reinforce values in each generation that are done because that\u0026rsquo;s how it is, from the prevalence of circumcision to the tenancy for women to get custody. I\u0026rsquo;m not even making an argument for or against either of those things (1). Rather, I\u0026rsquo;m trying to make clear that as a society we tend to have values and practices that are passed from generation to generation with no thought as to why we do things the way we do or how we may improve them.\nThis is probably the primary motivating factor behind many of my political beliefs. In this section of OpGuides, various philosophical frameworks will be at play, often conflicting with one another as, unfortunately, I think the world is too complicated for one core idea to govern right from wrong. These will likely include ideas that support equality, drawing upon ideas such as Rawl\u0026rsquo;s \u0026lsquo;Veil of Ignorance\u0026rsquo;(2). In general, I think this stance is quite literally the opposite of Conservatism in both the definitional and practical sense that we see it today. If you view yourself as a conservative I ask that you do please stay and read though. While I will likely primarily disagree with your ideas I still think we could both stand to learn from each other and that we both stand to benefit by having our respective views challenged where we do disagree.\nWhat we should do about this:\n [TODO]  Though I think you can pretty much guess that I think given the Kellog's Fueled, anti sexual liberty history of Circumcision in the US I think it's bull shit. Further, I think prioritizing women for custody does make some sense as there is some biological context, but I've also seen, as the son of a family law attorney, how frequently this is the default even when the mother is most certainly not the most capable or loving parent. Rawl's idea here is sorta kinda close to The Egg, a video from Kurzgesagt.   "}),a.add({id:81,href:'/phil/basic-phil/',title:"Basic Phil",section:"PHIL",content:"  OPINION          Before anything else, I think it\u0026rsquo;s necessary to point out this is opinionated guides. Philosophy involves looking at the world around us and asking ourselves \u0026lsquo;why\u0026rsquo;, then making arguments for how things should be different and what moral frameworks work best to come to conclusions that optimize for something like happiness or \u0026lsquo;goodness\u0026rsquo; in the world. Given that both morals and \u0026lsquo;goodness\u0026rsquo; are not absolutes, the best way for me to write this guide and actually be of service to you as a reader is to provide my opinion and talk about why I believe what believe both from a researched \u0026lsquo;here are the facts\u0026rsquo; sense and from a \u0026lsquo;here is the moral framework that, with these facts, brought me to this conclusion\u0026rsquo; sense. You don\u0026rsquo;t have to agree with my opinions, I\u0026rsquo;d rather you didn\u0026rsquo;t actually, as agreement means talking to you doesn\u0026rsquo;t expose me to new ideas.(1) Instead it\u0026rsquo;s my hope that reading my opinion, seeing how I present arguments, and seeing the research that goes into them will show you how to think about how to apply facts to moral frameworks. I also want to toss up a content warning, for, like, everything. We\u0026rsquo;re gonna get messy. This means assisted suicide, abortion, religion, gun rights, war, labor rights, etc. Just look at the chapters on the left and it reads as a shopping list of topics not to bring up at a family gathering. Finally, I will out right dismiss any argument or idea founded in religion. This is not because I can\u0026rsquo;t refute it. This is because I find it to be a complete and total waste of time. If you have a bit more than 3 hours to kill watch Philosophical Failures of Christian Apologetics, and I think you\u0026rsquo;ll understand why I won\u0026rsquo;t bother. Basic Philosophy #  First, let\u0026rsquo;s start really simple- what is philosophy. Well, for one, Basically all pages on Wikipedia link back to it, so it\u0026rsquo;s obviously pretty fundamental. But, why would that be?\nHere\u0026rsquo;s the head of the Wikipedia entry on Philosophy:\n Philosophy (from Greek: œÜŒπŒªŒøœÉŒøœÜŒØŒ±, philosophia, \u0026lsquo;love of wisdom\u0026rsquo;) is the study of general and fundamental questions about existence, knowledge, values, reason, mind, and language\n Alright, so it\u0026rsquo;s the study of knowledge? wouldn\u0026rsquo;t that make it pretty much the study of everything? Well, yeah. Pretty much. Before each branch of the sciencies had enough of a foundation in it\u0026rsquo;s own right to, well, branch off it was just called \u0026lsquo;Philosophy\u0026rsquo;.\nThis pretty much means that today Philosophy is what\u0026rsquo;s left- the questions for which there are no concrete or provable answers. This can often be incredibly frustrating. But, what Philosophy as a modern study really gives us is a framework to approach and talk about these tough problems. In general this gives the three big branches of philosophy today. Natural, Metaphysical, and Moral Philosophy. Honestly, I find the first two mostly consist of people trying to look smart and are mostly not applicable to anyone, unless you\u0026rsquo;re really into debating the existence of (a) God(s). (2)(3)\nTo be transparent and tell you my biases up front, I'm WEIRD, that is I'm from a Western, Eduated, Industrialized, Rich, \u0026 Democratic Country- The US. I'm also white, bisexual, liberal with a tinge of libertarian, and Gen Z. Yes, I know I'm throwing shade here. This isn't to say Metaphysical and Natural Philosophy are useless. I really enjoy watching videos on YouTube of people pointing out the many, many logical issues that aries when you try to make a Omnipotent (all-powerfull), Onmiscincent (all-knowing), Onmi-present (in all places), Omnibenevolent (all good) being. My favorite argument being the 'If God is all knowing does he know what it's like to feel lust, if he does how is he all good?' or 'If god is all powerful can he microwave a burrito so hot that he can not eat it?' ... you get the idea. This is turning into a massive tangent. Here, have a link (The Problem of Omnipotence - YouTube)  Okay, I also have to concede, there's a lot of really thought provoking stuff in the relm of metaphysics. I espically love Exurb1a's YouTube Channel as well as a lot of video games, short stories, and other works that dabble in this. For example, I recently read 17776 Football, and I keep thinking about it. That's what makes metaphysics cool. It keeps you thinking and can inspire you in interesting ways - espically for being creative with writing, art, or music. I just don't see direct value in going in to it in this guide. Please do actually check out some of the amazing content on the subject though!  Alright, so, let's stick to (mostly) moral philosophy (often just called Ethics) then. What does that entail?  Ethics or moral philosophy is a branch of philosophy that \u0026ldquo;involves systematizing, defending, and recommending concepts of right and wrong behavior\u0026rdquo;.\n https://en.wikipedia.org/wiki/Ethics To start with, most ethics arguments depend on an ethical framework, this is the set of ideals/rules/principals that establish how to make decisions. To get started, let\u0026rsquo;s look at some of these ethical frameworks:\nUtilitarianism #  Utilitarianism is the most dead simple philosophical theory. Basically, do whatever you can that brings the most happiness to the world (or, if all options are a negative, do the the least-worst option).\nThe most common example for which utilitarianism is applied is the trolley problem:\n There is a runaway trolley barrelling down the railway tracks. Ahead, on the tracks, there are five people tied up and unable to move. The trolley is headed straight for them. You are standing some distance off in the train yard, next to a lever. If you pull this lever, the trolley will switch to a different set of tracks. However, you notice that there is one person on the side track. You have two options:\n Do nothing and allow the trolley to kill the five people on the main track. Pull the lever, diverting the trolley onto the side track where it will kill one person.  Which is the more ethical option? Or, more simply: What is the right thing to do?\n https://en.wikipedia.org/wiki/Trolley_problem The basic idea being, that, assuming there\u0026rsquo;s not some special circumstances or that you simply don\u0026rsquo;t have a way to know those circumstances, the moral option is to pull the switch, because it saves the most lives.\nUtilitarianism is a neat idea that, in my opinion, fails almost immediately for three reasons:\nMoral Calculus #   The felicific calculus is an algorithm formulated by utilitarian philosopher Jeremy Bentham (1747‚Äì1832) for calculating the degree or amount of pleasure that a specific action is likely to cause. Bentham, an ethical hedonist, believed the moral rightness or wrongness of an action to be a function of the amount of pleasure or pain that it produced.\n https://en.wikipedia.org/wiki/Felicific_calculus The Wikipedia article goes on to explain this algorithm and the things that should be taken into account.\nTo cut to the chase, the problem is you need to take into consideration an absolutely crazy amount factors and it\u0026rsquo;s effectively impossible to confidently know that what you\u0026rsquo;re doing will actually bring about the most happiness.\nFor example, the Trolley problem makes a hell of a lot of assumptions. Not the least of which is ignoring the long term survivor guilt the more-populated side and conductor will feel. I\u0026rsquo;m being pedantic, of course, but still.\nTrade offs #  Often we have to pick between good things that bring happiness. Unless you have a way to actually quantify happiness, which notably varies by activity for each person, how do you optimize. Further, how could you know how strong your feelings of happiness are to others? Do you feel more or less than others such that you should prioritize your happiness or others happiness in different ways?\nLike above, this boils down to a knowledge problem\nJustifying things it probably shouldn\u0026rsquo;t #  Say 90% of the population would be much happier if all of insert religion here suddenly died.\nOr, the argument about Baby Farming:\n A critic of utilitarianism, in Innocence and Consequentialism (1996), Jacqueline Laing argues that utilitarianism has insufficient conceptual apparatus to comprehend the very idea of innocence, a feature central to any comprehensive ethical theory. In particular, Peter Singer on her view, cannot without contradicting himself reject baby farming (a thought experiment that involves mass-producing deliberately brain-damaged children for live birth for the greater good of organ harvesting) and at the same time hold on to his \u0026ldquo;personism\u0026rdquo; a term coined by Jenny Teichman to describe his fluctuating (and Laing says, irrational and discriminatory) theory of human moral value. His explanation that baby farming undermines attitudes of care and concern for the very young, can be applied to babies and the unborn (both \u0026lsquo;non-persons\u0026rsquo; who may be killed, on his view) and contradicts positions that he adopts elsewhere in his work.\n https://en.wikipedia.org/wiki/Utilitarianism#Baby_farming So, uh, depending on how you look at it, it might justify genocide. Maybe not the best ¬Ø\\(„ÉÑ)/¬Ø\n note, there are a lot of other arguments against Utilitarianism, but I think a lot of them misrepresent the idea, such as the one about Average vs. Instantaneous Happiness - like no shit optimizing for instantaneous happiness is bad\nConsequentialism #  Rapid Fire Ideas that suck #  All quote blocks from https://en.wikipedia.org/wiki/Normative_ethics\nEgoism #   Egoism [is] the belief that the moral person is the self-interested person, holds that an action is right if it maximizes good for the self.\n I shall kill my enemies and dispose of the bodies so that no one ever knows\u0026hellip;\nIntellectualism #   Intellectualism dictates that the best action is the one that best fosters and promotes knowledge.\n Yeah, you don\u0026rsquo;t mind if I experiment on you, do you?\nRole Ethics #   Role ethics is based on the concept of family roles.\n The Daddy makes the money, the Mommy raises the kids, and the kids learn to worship God! Just as it should be!\n‡≤†_‡≤†\nKantianism #  Moral Relativism #  Trolley Problem, common arguments\n Political Compas #   Some other terms you might hear #  BreadTube\n[TODO] Ask HN: Learning Philosophy (Hacker News)\n"}),a.add({id:82,href:'/design/basics/',title:"Basics",section:"DESIGN",content:"The Basics of Art and Design #  When you\u0026rsquo;re first learning art, every art class will beat a few core ideas into your head:\n  Lines - The \u0026lsquo;structure\u0026rsquo; bits of the works, when you start making art, you\u0026rsquo;ll often start with the Line Art\n  Shape - Structures that form out of lines, might appear 3D. These might be mathy, like squares, or organic, like an eye\n  Form - Mostly applicable to 3D (or art interpreted as 3D) - Think of this as the shape you\u0026rsquo;d see if you could move around the object in real life\n  Color - Color\u0026rsquo;s consist of hue (red, blue, etc.), saturation (how \u0026lsquo;strong\u0026rsquo; the color is), and value (how bright/dark the color is)\n  Space - The relationship between objects, including the empty space between them (Negative space)\n  Texture - Is it smooth? Reflective? Rough? Does it look painted or flatly colored?\n  Value - How dark or light is each region\n  These are your fundamental building blocks of art, and you should get to know them. Rather than try to poorly teach these to you, I\u0026rsquo;m going to recommend you check out this Art Fundamentals playlist from Swatches on YouTube.\nHue, Saturation #  [TODO]\nThis is a black and white image. Only the lines are colored. (Reddit)\nValue \u0026amp; Lighting #     Perspective #  https://twitter.com/miyuliart/status/1337423295814176768 (NSFWish I guess?)\nA pet peeve of mine is this idea that taking a selfie or any other image without a filter or any post-production is somehow a more \u0026quot;authentic\u0026quot; presentation of the subject\nA camera in its default state isn\u0026#39;t some totally objective, neutral observer\nIt has its own biases pic.twitter.com/ERozlmmBt2\n\u0026mdash; Vapor Weyve (@Nymphomachy) January 13, 2021  Rule of Thirds #  Some good advice, #   reuploading a few \u0026quot;furgonomic\u0026quot; tutorials ive made in the past pic.twitter.com/85resjONab\n\u0026mdash; sketch (@skexchs) November 3, 2020  Things like digi shoes, tail holes in clothing, tail bags, etc. really help make characters feel like they\u0026rsquo;re part of an actual world.\nCat Girl Headphones (Twitter, @foone)\nArt Guides #  Detailed guide to different types of bird wings and their functional parts (Reddit)\nSkin Tone Cloud (Reddit)\nhere‚Äôs an art tutorial on some ways that i avoid ‚Äúsame face syndrome‚Äù! keep in mind that these tips might not work for everyone though pic.twitter.com/qfgRNz8Anf\n\u0026mdash; harvey (@harvviies) February 11, 2021 "}),a.add({id:83,href:'/phil/community/',title:"Community",section:"PHIL",content:"Community #  Hopefully this isn\u0026rsquo;t a shock to anyone reading this, but I\u0026rsquo;m a furry.\nowo uwu nuzzles rawr tehe So, I think I can share a little bit about why I joined the fandom, what being in a subculture community is like, and how some of those experiences have made me a better person and helped me be a part of or run successful online communities.\nI hope that though this I can talk about what makes a community good or bad, what brings division, and what good rules for a healthy community look like.\nBut, to get there, I think I need to first indoctrinate you into the furry culture of OwO and UwU. So prepare your beans, we\u0026rsquo;re about to get fluffy.\n Character owned by me, art by Talon Creations   Furries? #  [TODO] Furries, internet culture, LGBT, Gender Identity vs need for legal identity - furry stats, like what percent look at lood, age demographics, etc. Proof of X, Assholes: A Probing Examination,\nMight also talk about https://wileywiggins.com/merveilles.html as that\u0026rsquo;s a community and ethos I can speak to as well\nAdopting new societal values of acceptance #  Understanding the common good #  Encryption, Tradgedy of the commons\nCommunity #  Litterboxcomics    Small and connected #  You May be Using Mastodon Wrong (Carlos Fenollosa Blog)\nhttps://en.wikipedia.org/wiki/1%25_rule_(Internet_culture)\nI miss voice-first servers like TeamSpeak\nEcho Chambers #  Data and fact driven sharing #  Moderation #  ensuring that we\u0026rsquo;re self moderating one another\nSomething I\u0026rsquo;ve written while thinking about this #   As I walked to my car after class I could smell the ashes of a cigarette and hear the echos of a train scraping on its tracks. The cool foggy air held still beams of light. It looked like a scene from Blade runner, but I couldn\u0026rsquo;t help but feel like the Android\u0026rsquo;s of it\u0026rsquo;s inspiration, lusting after something to make me feel alive.\nThe drive home was mentally taxing. The fog so dense that cars ahead seemed to be balls of light floating in the distance and keeping sight of the lines to stay in my lane took a constant effort. After a little over half an hour of focus and 80\u0026rsquo;s synthwave music I pulled into my driveway.\nMy day had been long, and I hadn\u0026rsquo;t had a good meal to speak of so I heated up some leftovers and talked with my parents as I ate. My mom was distracted by writing her next book and my dad was lost in a sea of Facebook memes, which he was showing us between intermittent laughter. I wasn\u0026rsquo;t really amused, in fact I was irritated.\nI ranted to him about something I know he\u0026rsquo;s heard from me before, the spheel of how Facebook is evil. How computers deprive us of our privacy and we willingly feed a machine that is well documented in its atrocities, and as usual he failed to see the point.\nHe used the same defense everyone does \u0026ldquo;All of my friends are on Facebook\u0026rdquo;\nHow many of those \u0026lsquo;friends\u0026rsquo; do you really talk to? How many of them just repost meaningless memes and jokes, while providing no insight, let alone basic updates on their life.\nSome of my absolute best friends are people I\u0026rsquo;ve met online or only know online, but none of them are people I stay in contact with though Facebook.\nThis isn\u0026rsquo;t a Facebook rant though, its a personal connection rant. So many of my friends and family consume social media to the point they don\u0026rsquo;t want to admit it but don\u0026rsquo;t even take the time to maintain the relationships they do care about. That stereotype about calling your mother? Yeah, there\u0026rsquo;s a point of reality in it. I dont know what it was like before Facebook, honestly, I really don\u0026rsquo;t. But I think we valued the connections we did have a lot more. Our friends may have been those from high school sure, but I know there used to be more tight night local communities that shared interests, but now the convince of social media has devalued the local meeting of friends. Which is ironic in a way. I\u0026rsquo;ve been in communites which would have never stood a chance of existing without social media to bring together the band of misfits but Ive also seen social media start massive amounts of drama that spiral out of control and destroy the local community.\nWorst of all though, I\u0026rsquo;ve seen social media devalue the importance of what people do. I figure maybe one or two people will read to this point, having lost interest long before now, and the same goes for much of the honestly great long form reporting I find online, or the longer stories people post for free for our entertainment. Creativity is becoming devalued as memes and short \u0026lt; 100 word posts become our new limits. Works of art that take time to digest and see meaning it get overlooked, poetry is dead, and heaven forbid you want to discuss politics in a civil matter. Hell, for many even the idea of playing a videogame or watching a movie is second to the instant gratification of short form content like Youtube, Reddit, or Facebook.\nIm not innocent in this, not by a long shot but I have two rules for myself which have helped:\n  For every two hours consuming content, I should spend at least an hour making something\n  At least 1/2 of my time consuming should be longer form content: be it full stories, books, movies, etc. Not YouTube, Reddit, Facebook, etc.\n  But when much of what I make, be it writing, music, or whatever is ignored because it\u0026rsquo;s not a viral meme or it\u0026rsquo;s too long to hold someone\u0026rsquo;s attention it seriously hampers my motvation, and I find it easier and easier to break my two rules. I\u0026rsquo;ve been doing a decent job, and as with any addiction it takes time to get out of and falling back is easy, but the reward of creating and consuming more filling content is much like having a nice home cooked meal instead of a super sugary diet.\nI just wish more people would appreciate each other\u0026rsquo;s cooking instead of eating candy all day. I want to work with people on these things, but if everyone else just stays addicted it\u0026rsquo;s hard to keep going. We\u0026rsquo;re inevitably social creatures and we do what our friends do, and doing things with friends is always better. Being on Facebook or Reddit, watching YouTube videos- these may trick your brain into thinking you have what you want, but being on the other side I really wish some of you would join me.\nI\u0026rsquo;m always down to hang out, to wonk together on making something cool, or talk about life, you just have to reach out not wait for me to post a funny meme for you to comment on. Lets talk about your hobbies and projects and what you care about and stop posting memes and Tumblr screenshots.\n "}),a.add({id:84,href:'/phil/consumerism/',title:"Consumerism",section:"PHIL",content:"Consumerism #  Vega\u0026rsquo;s Maw, made for me by @NewtWolfdeer  Look, I\u0026rsquo;ll be the first to admit I\u0026rsquo;m guilty of falling for the tricks used to get people to consume. To buy and buy more. A good sale, even on something I didn\u0026rsquo;t know I previously wanted, still has a way of making my dumb lil' human brain go \u0026ldquo;OH!\u0026rdquo;\nThe problem is that consumers can easily fall into traps that lead them to buy things for a stupid reasons, these include:\n Buying something expensive as a status symbol Buying the \u0026lsquo;New version\u0026rsquo; which has no meaningful improvement Brand Loyalty (not always bad) Buying from businesses that prevent repairs Buying from businesses that abuse workers or their rights  among many, many other things.\n  Under Capitalism, there are oposing forces here. On the one hand, greater consumption means more jobs, more money flowing, means a better enconomy, means everyone gets to live a better life.\n(or at least this is true if you subscribe to the hyper-capitalist propaganda we\u0026rsquo;re fed from birth in the US! Yay, Capitalism is all sunshine ‚òÄÔ∏è and rainbows üåà and absolutely can not be criticized or you\u0026rsquo;re an evil comunist!) On the other hand, holy fucking shit everything is on fire. People buy useless shit wrapped in enough plastic to create a fucking Texas sized trash island in the Pacific, we support companies that actively fight against our right to repair or which make products with extreme Planned Obsolescence, and most of us work meaningless jobs just to be able to afford to pay for a fancier car that we will mostly use to get to that job. Meanwhile, if you don\u0026rsquo;t have a credit card and debt, you\u0026rsquo;re also fucked because you need to maintain a good Credit Score.(1)\nBut the real problem is that we all go to work to pay for shit that we don\u0026rsquo;t need, that we\u0026rsquo;re not allowed to repair or don\u0026rsquo;t even really \u0026lsquo;own\u0026rsquo;(2), that mines our data to advertise to us after we\u0026rsquo;ve bought the product(3), that randomly removes features years later(4), that we\u0026rsquo;ve been told has value it doesn\u0026rsquo;t(5). It\u0026rsquo;s not turtles all the way down, it\u0026rsquo;s just piles of bullshit.\nWe buy too much shit #  We buy to much shit.\nTODO: individually wrapped wastes of money for holidays makes me feel gross\nEnforcing Protections #  Planned obsolescence, Right to repair #   \"To refuse to inform yourself about the basic operation and maintenance of the equpment you depend on was to passively accept that tyranny and agree to its terms: when your equipment works, you'll work, but when your equipment breaks down you'll break down, too. Your posessions would possess you.\"  - Edward Snowden, in his book Permanant Record\n  Anti-consumer practices #  https://dvt.name/2020/02/24/rfc-lets-disrupt-dating-apps/\nAdvertising #  This video from Tom Scott provides a ton of background information and makes some really good points\n Avoiding the Frigid Hellscape of Online Marketing (Soatok\u0026rsquo;s Blog)\nNative Ads #  psst, if you don\u0026rsquo;t like YouTube sponsorships spots check out sponsorblock - just be aware of the morality of doing so and like, support people on Patreon or whatever. Dangerous ads #  Sugar Drugs\nCredit #  App lets banks lock your financed phone if you default on payment\nAccelerating Change and Information Overload #  The world is getting faster. Things are moving, flashing at us, blinking with neon colors and screaming at us in increasing attention grabbing, addicting ways. There\u0026rsquo;s now the attention economy, where time in front of your eyes is evaluated to be worth an increasing amount. An ephemeral cloud of mist, lurking in the air that has been given the moniker The Algorithm influences our choices more and more each day.\nThis sounds like some sort of plot to an 80\u0026rsquo;s scifi thriller set in the far future, but instead it\u0026rsquo;s just part of our /r/ABoringDystopia/ . I know I\u0026rsquo;m addicted, but that\u0026rsquo;s the funny thing about true addiction, you don\u0026rsquo;t really want to stop. I know that speed of things, the ever increasing nightmare of [political shit slinging](political shit slinging) and the amount of news on it is bad for me. That being only a click away from something more interesting has rotted my attention span. That a culture of consumption has made it harder for me to spend time creating. I know that I could make a conscious decision to limit my time on reddit, or to spend more time outside, but sitting in the same spot is comfortable. I\u0026rsquo;ve dug my own little hole and surrounded it on all sides with walls a mile high to protect me from the advertisements and dissenting views, but in the process I\u0026rsquo;ve lost so much. I try to read an article on Fox or anything on r/conservative and I get irrationally angry. So instead I keep to browsing my Algorithmically Tailored home page, but after seeing things that interest me I get on a bind of just one more page or I\u0026rsquo;ll only scroll to one more post or I\u0026rsquo;ll read after this video and then, even if I do manage to break free and escape into a book, I\u0026rsquo;m one ~Binng~ of a Telegram notification away from being brought out of my book for something that I find more immediately gratifying.\nThen, to add onto that, the censorship, not only are we algorithmically bound to see some content over others, but because of strange advertisement, government, and platform policies and the increasing stupid fact that we still use centralized services, the ever increasing amount of excess photons that we didn\u0026rsquo;t even ask for that we get blasted into our retinas is filtered in a way that discourages actual free speech because some people\u0026rsquo;s speech is prioritized.\nBut, I\u0026rsquo;m getting off topic, the point of this was to discuss and propose a solution to the issue of being bombarded with information, ads, physical and digital, and content that was not requested.\n[TODO\u0026hellip;]\n[TODO] [TODO] The Dark Reality Behind America‚Äôs Greatest Thrift Store Empire\nSomething I\u0026rsquo;ve written while thinking about this: #   I\u0026rsquo;ve posted things like this here before, but I feel like I need to again in light of recent conversations with friends: On Facebook, you are the product and you are you should know what you are funding. I think at this point the Cambridge Analytica scandal[1] is pretty well known, but that is nothing compared to the other things in Facebook\u0026rsquo;s past. At one point Facebook targeted teenagers and filtered their news feed to be mood based which was found to lead to real world mood changes [2]. But even if these things don\u0026rsquo;t bother you, you think Facebook just made a mistake, there\u0026rsquo;s the case of Facebook\u0026rsquo;s content moderation team being paid less than a living wage and being exposed to situations which lead to severe mental illness [3]. Speaking of mental illness, Facebook owned Instagram\u0026rsquo;s recommendation algorithm has been found to recommend pro self-harm content to those most vulnerable, which has actually lead to deaths [4].\nThink about who you\u0026rsquo;re giving your data, money, and views to and on what platform you do so. There are alternatives. You don\u0026rsquo;t have to sell all your data to big organizations to stay in touch. I use Mastodon [5] instead of Twitter, Telegram instead of messenger [6] and a combination of Reddit and the things above instead of Facebook. You do have a choice. If nothing else you can use Facebook in a separate browser or in a container [7] so you\u0026rsquo;re at least not funding them in full.\nJust like voting and contributing to your community, having digital responsibility is important too.\nThanks for reading this, if you want to talk about digital privacy or security you can shoot me a message here and I\u0026rsquo;ll get back to you next time I log in, or you can message me on Telegram and I\u0026rsquo;ll get back to you right away.\n[1] https://www.nytimes.com/‚Ä¶/facebook-cambridge-analytica-expl‚Ä¶ [2] https://www.nytimes.com/‚Ä¶/facebook-tinkers-with-users-emoti‚Ä¶\n[3] https://www.theverge.com/‚Ä¶/cognizant-facebook-content-moder‚Ä¶ [4] https://www.wired.com/‚Ä¶/when-algorithms-think-you-want-to-‚Ä¶/\n[5] https://joinmastodon.org/ [6] https://telegram.org/ [7] https://addons.mozilla.org/‚Ä¶/fire‚Ä¶/addon/facebook-container/\n Nevermind that one of the major credit bueraus fucked up hard enough to expose the the credit records of 140 milllion Americans  Your carrier probably owns your phone, it has apps on it you can't remove. You're Smart-Whatever might phone-home and stop working  if you don't pay for a subscription. You're digital library of kindle books can have a title revoked at any time. You may have your gaming account banned and lose all your digital games and DLC.  Fuck Smart TVs Like TI did to their Calculators Diamonds. Diamonds, in jewlery, aren't worth anything near what we've been lead to believe. Plus they're often acquired via slavery or other really dark means, extra stupid when you consider they can made in a lab anyway.  "}),a.add({id:85,href:'/cooking/cooking/',title:"Cooking",section:"COOKING",content:"Hey there.\nMy name is Vega, and I can\u0026rsquo;t cook, so I\u0026rsquo;ll be letting my friends take this one over.\nWhy you should take the time to be a functional adult: #  !\u0026gt; I had a few friends interested in fleshing this page out, but they got busy, lmk if you want to take it over or just sumbit a pull request ^-^\n"}),a.add({id:86,href:'/phil/copyright/',title:"Copyright",section:"PHIL",content:"Letting Society Advance Though Art and Innovation #  This video from Tom Scott on YouTube is a very good intro to everything I\u0026rsquo;ll be talking about on this page, I\u0026rsquo;ll assume you\u0026rsquo;ve watched it so that I don\u0026rsquo;t have to repeat everything that he says here.\n What is Copyright? #  [TODO]\nWhat\u0026rsquo;s Wrong With that? #   How do we fix it? #  I think to further address any issues we first need to look into how these issues have come to exist. In general, as a society advances new issues will arise. Computers and the Internet have shown us just how incredibly things can progress and how amazing un-hindered, open information flow can change the world. The Internet has served as an educational tool of unparalleled utility to my generation and has allowed me to learn things that I otherwise would have never had access to. Of course this also means the same for bad actors. Though acting in bad faith also now have the same unparalleled access to personal information of the masses and individuals can now use their anonymity and an Internet connection to do harm both to individuals via cyberbullying and trolling, but also to businesses as we move to a world that more heavily relies on ecommerce and the digital information they store becomes increasingly sensitive.\nUnfortunately, the law is often far to slow or far to fast to react, leading to laws that simultaneously fail to protect our rights as smaller creators and punish many to harshly.(1)\n\u0026hellip;\nToday, the most obvious example of this is the Right to Repair movement, a movement that has computer hackers and farmers fighting side by side to protect consumer rights.\nCopyright, DMCA\nPatents\n HEVC is heavily patented. There are no less than 7,200 patents covering this compression method. This includes 39 patents from Apple: CN 03816739.5, 200810082232.0, 201210009977.0; DE 603 34 804.1, 603 41 992.5, 603 41 994.1; FR 1532746, 2326019, 2328283; GB 1532746, 2326019, 2328283; IT 1532746, 2326019, 2328283; JP 5385233; KR 850,810, 1,210,015; and US 7,292,636, 7,339,991, 7,551,674, 7,769,084, 8,090,023, 8,090,026, 8,094,724, 8,094,729, 8,630,339, 8,711,924, 8,737,462, 8,737,468, 8,737,484, 8,743,951, 8,817,883, 8,831,106, 8,837,580, 8,837,597, 8,934,546, 8,934,551, 8,942,287. This should be enough to discourage any company from using HEIF, even if it does offer a better compression versus file size ratio\nhttps://www.hackerfactor.com/blog/index.php?/archives/833-HEIC-Yeah.html\n Patent trolls\nSocietal standards of art, making fun of something because it\u0026rsquo;s different\nWhat we should do about this:\n[TODO] Marvel, Pink Floyd, and Minecraft Vs Web comics, indie, and Minetest.\nPiracy? #  [TODO] ethics of piracy, when it\u0026rsquo;s okay, who it affects, etc.\nBecause these many of these sites are tecnically hosting illegal content, they tend to change domains a lot. One of the better ways to be sure you\u0026rsquo;re not going to a Honeypot, a fake site used to catch people, is to check what domain the Wikipedia article refers to, for example for scihub:\n Awesome Piracy (GitHub)\nSci-hub.do\nOpen Directories #  [TODO what is an open directory]\nhttps://www.reddit.com/r/opendirectories/\nhttps://the-eye.eu/public/\nFor the Hackers, Makers, and Engineers #  Cory Dottorow is a huge name when it comes to speaking on how copyright matters to those of us that like to create with code and wires. I really recomend reading his post about why There are no digital rights, only human rights. and watching this video about the War on General-Purpose Computing.\nBy 'slow' I'm primarily referring to the lack of or incompetence of consumer data protection law. GDPR is definitely a step in the right direction on this; however, that is both only for the EU and was implemented far too late. By 'fast' I had the DMCA in mind, which is wildly considered to be both overreaching and to harsh. Simultaneously, we lack real power as consumers, copyright is a game the rich can play with expensive laywers and the small creator can't afford to defend.  For the furries #  No, you can not copyright your species or make a \u0026lsquo;closed\u0026rsquo; species. While I am not a lawyer, I can say with a pretty high degree of certainty that your claims of copyright over a fictional species would not stand up in court.\nHere\u0026rsquo;s some other people telling you exactly the same thing:\nLakota Wolf on Fur Affinity, Valkyrie on Furry Amino\nThe TLDR? You can\u0026rsquo;t copyright an idea.\n Also in response to Closed Species and Copyright: I Asked a Lawyer from Riipurr\n [\u0026hellip;] if the character still resembles Doraemon enough, you can get sued for it.‚Äù\n Yeah, that doesn\u0026rsquo;t mean anything. You can be sued for anything. Weather or not a judge will agree with you is a wildly different question. While, again, IANAL, I have read way to much copyright law and work with people that actively push the limits of the Digital Millenium Copyright Act (DMCA) and know enough to justify my donations to the EFF.\nIf someone were to trace your work. Definitely, that\u0026rsquo;s copying, you\u0026rsquo;re in the right, you\u0026rsquo;d win.\nIf someone were to draw what was very obviously your character with minor tweaks, again, you\u0026rsquo;d win.\nIf someone were to draw a new character, with significantly different markings, but of the same species? Probably not. Unless your species has some incredibly specific details that are in of themselves a copyrightable work that the person also copies you\u0026rsquo;re going to have a hard time. You do seem to get this as you say\n we were mainly discussing about species with distinguishable physical features and not simple hybrids like a plain cat with wings, etc. You‚Äôd have to make the cat‚Äôs silhouette unique enough to make it its own, new thing (like scarfoxes)\n But, really? Looking at Scarfoxes I\u0026rsquo;d really question the claim that there\u0026rsquo;s enough copyrightable material here. Remember, ideas are not copyrightable. To me, this looks like you\u0026rsquo;re claiming the idea of making a fox like character with upright ears and a stiched-style face is the copyright. If the silloute were to exactly match one of these, yeah, that\u0026rsquo;s infringement, but making something that uses a similar idea is not. Similarly, you can\u0026rsquo;t copyright a word- that would be trademark, and unless you intend to file for it you don\u0026rsquo;t get it by default like you do copyright.\nFurther down you even said\n To be frank, I don‚Äôt quite care about the legality of all these. It‚Äôs just that people who excuse ripping off artists and others because ‚Äúduuhhh laws say I can‚Äù really annoy me.\n Yeah. And that\u0026rsquo;s fine. But you need to realize that when you\u0026rsquo;re trying to claim copyright of something so broad you\u0026rsquo;re saying \u0026ldquo;This idea belongs to me\u0026rdquo; seemingly unaware that you\u0026rsquo;re possibly infringing on the ablity of other artists to make things that honestly weren\u0026rsquo;t inspried by your work, that just happen to be similar.\nAt the end of the day, this comment is the one that matters:\n  JurisCat - Jun 20, 2019\nOne thing to consider about this, though, is that people are unlikely to sue over characters being copied because typically the legal fees would be too high to make it worth suing.\n   Riipurr - Jun 20, 2019\nMost definitely! This is simply an answer to something that\u0026rsquo;s been bothering me for a while.\n THIS. It\u0026rsquo;s often not worth your time to sue, so unless you\u0026rsquo;re damn sure that somebody is infringing - that is it\u0026rsquo;s traced, the outlines match, the colors and markings are exactly the same - you wouldn\u0026rsquo;t. That\u0026rsquo;s exactly the point of copyright. It\u0026rsquo;s in the name.\nThis is not an attack on Riipur (seriously, I don\u0026rsquo;t even know them, and their art is actually bomb as hell), rather it\u0026rsquo;s a statment to the furry comunity: Quit. Your. Bullshit.\nBecause this really bothers me, here\u0026rsquo;s a list of examples I find particularly offensive:\nThis species by Kataxicon, was even directly called a Wendigo, an existing mythological creature, before she renamed it to Selvageist.\nThe \u0026ldquo;Phish-Keepers\u0026rdquo; by Flnch-Face is literally just a water dragon.\nThis \u0026ldquo;Shark-Wolf\u0026rdquo; species by Alfeddy speaks for itself.\nI could literally go though deviant-art and find these all day.\nIf you do this, as an artist, you are harming the furry community by claiming ownership over an idea. It deters other artists from being able to draw things they do have the right to, and it\u0026rsquo;s really just a form of gatekeeping. I do understand the desire to claim your own work and get the value you deserve out of it, but closed species are often stepping over the line and claiming ownership of an idea, something you do not have the right to do.\nYeah, our current copyright system is 300% ultra forked for small creators. I understand. And yeah, I\u0026rsquo;d be super pissed off if some nazi-fur made a dutch angel dragon and paraded it around.\nBut then we come to the real solution: If you want to have a closed species, you need to make sure it really does pass the bar where others would associate the species with you, that any creature, regardless of colors and sub-designs, is so obviously a derivative that everyone recognizes it (and as such could associate it with you). Examples of this are easy: Protogens, Sergals, and Dutch Angel Dragons (albeit the last one is hella debatable)\nSo next time you\u0026rsquo;re thinking about calling your Lynx-duck hybrid a closed species,\n\n"}),a.add({id:87,href:'/design/design-other/',title:"Design, Other",section:"DESIGN",content:"Mobile Apps for Art \u0026amp; Design #     Name \u0026amp; Link Description Demo/Screenshot          Pixlr phone version of https://pixlr.com    Fragment Add some neat geometric reflections into your art    Mirror Lab ^         Spiro, Tilemaker Makes some interesting tiled patterns    Easyposer, plenty of other alternatives Decent app for poseable character models. Some presets and models require a $5 pro version    Fraksl, Fractal Eye, MandelBrowser Neat Fractal Explorers    Glitch Lab Tons of glitch effects, including some really nice pixel sorting         Euclidea Not sure this one counts. It\u0026rsquo;s a game about making various geometric shapes using circles. It\u0026rsquo;s useful for learning some art techniques though.          Working with other artists #  Orions Arm Universe - Collective, shared setting for art and stories\nEvents that can help you with art #  Inktober, Swordvember, Smaugust\nPhotography #  https://filmulator.org/about/\n Filmulator accepts raw files from cameras and simulates the development of film as if exposed to the same light as the camera\u0026rsquo;s sensor. This brings about several benefits:\n Large bright regions become darker, compressing the output dynamic range. Small bright regions make their surroundings darker, enhancing local contrast. In bright regions, saturation is enhanced, helping retain color in bright skies, brighter skin tones, and sunsets. In extremely saturated regions, the brightness is attenuated, helping retain detail e.g. in flowers.   Extremely high resolution scan of art\n"}),a.add({id:88,href:'/design/digital-design/',title:"Digital Design",section:"DESIGN",content:"Digital Art #  Raster, Vector, Pixel, Voxel, ASCII, Mesh, Fractal, Generative, #  Projection Mapping, Creative Code, \u0026hellip;\nRaster Art #  PhotoGIMP is a patch for Gimp that makes it look more like Photoshop, adds fonts and some filters.\nUnsplash is a good source for \u0026lsquo;Freely usable images\u0026rsquo; if you need some source material\nPixel Art #  Vector Art #  inkscape\ndotgrid\nSVGPathEditor (Github)\n3D Art #  Meshes #  Meshlab\nblender\nVoxel Art #  magicavoxel, minecraft\nGenerative Art #  Fractals #  Creative Code #  Ascii Art #  Projection Mapping #  Screen Considerations\nhttp://rainworldgame.com/\nPixel Art \u0026amp; Ascii art #  Pixel Art Tutorial from @saint11 https://saint11.org/blog/pixel-art-tutorials/\nJPixel - editor for pixel art animation and tilesets\nHexels ($49)\nParticle FX Designer\nPixatool\nTilesetter\nRexpaint\nDither Machine\nStrike - 1-bit paint tool, primarily for quick sketching or line-drawing.\nNoodle, 1-bit browser based art tool\nWobblepaint on the Pico-8, by Zep\nVoxel Art #  MagicaVoxel\nMinecraft??\nColor Palette Tools #  https://colors.lol/\nColorTool ($15 Steam)\nhttps://lospec.com/palette-list\nThe Nerdy bits #   Source\n Why Dark Video Is A terrible Blocky Mess (YouTube)\n Squoosh, a tool for trying out different image formats to check their relative size and quality. Particularly useful if you\u0026rsquo;re targeting web  Keep in mind not all devices and browsers support all formats   Demo of how Fourier Filtering works Color Emulation of the GameBoy Hello hsluv - blog post about how hsluv works Graphics \u0026amp; Palettes - Super Nintendo Entertainment System Features Pt. 01 (YouTube) Digital Video Introduction (Github) - \u0026ldquo;A hands-on introduction to video technology: image, video, codec (av1, vp9, h265) and more (ffmpeg encoding).\u0026rdquo; Oklab, An interactive review of Oklab (Raph Levien\u0026rsquo;s Blog) - \u0026ldquo;A perceptual color space is desirable when doing many kinds of image processing\u0026rdquo; The hyperbezier pen tool (cmyr.net)  Compression #    https://squoosh.app   Whenever I make foliage I always find myself hoping nobody else is as lazy as I am. I just make a bunch of random shapes and copy paste to victory... Please don\u0026#39;t call the cops pic.twitter.com/Vz63AOBuZo\n\u0026mdash; mog (@wtfmig) November 22, 2019  Krita Brush Tips: Outline\nKrita Brush Tips: Hair\nKrita: Painting Fur\nKrita: Animated (Random) Brushes - Good for trees/bushes\n"}),a.add({id:89,href:'/phil/duties/',title:"Duties",section:"PHIL",content:"Personal Duties #  Maintaining health #  Physical #  Working out #  Air quality #  Mental #  Socialized healthcare #  "}),a.add({id:90,href:'/phil/education/',title:"Education",section:"PHIL",content:"Education #  Freedom of Information #  Curriculum Changes #   Basic Aid #  Sex Education #  Individualized, shared, and student led #  [TODO] Faster, lower standards #  Better testing #   Fuck Respondus And Proctorio #   The following is a (slightly edited) excerpt from an email I felt necessary to send to my professors at the start of the spring semester, 2021\n First and foremost, they\u0026rsquo;re just creepy. Taking tests digitally but in person is fine with me because I know those computers are secure and dedicated to the single use. Respondus and Proctorio effectively amount to spyware that students are being asked to install onto their personal devices.\nSecond, they\u0026rsquo;re both insecure. while this article (soatok.blog) written by a friend of mine focuses on Proctorio, just doing a tiny bit of digging will turn up plenty on Respondus as well. So now it\u0026rsquo;s not just spyware, but insecure spyware.\nThird, they\u0026rsquo;re a bit hyper-sensitive (Vice, voiceofsandiego.org) . I\u0026rsquo;ve read some articles where students even talking to themselves (which a lot of people do when alone and thinking hard!) have been flagged because the system thinks they\u0026rsquo;re talking to someone else in the room.\nThis sensitivity is particularly bad when you consider many of the datasets used to train the algorithms that these programs use give the systems a racial bias (technologyreview.com).\nI also worry about my strange hardware setup. If these systems are looking for \u0026lsquo;strange\u0026rsquo; I think my system with 30 usb devices, including 2 webcams, 2 mice, and 3 HID keyboards, would fit that bill. I don\u0026rsquo;t want to have to rip my setup apart to take a test.\nThey also depend on a strong internet connection. If I have a brief frame drop while my webcam is on and I\u0026rsquo;m taking a test, you may notice I freeze up and then start moving again. Responds may think I\u0026rsquo;m actively tampering with my webcam and tell you I\u0026rsquo;m doing something nefarious.\nFourth, all of the options I\u0026rsquo;ve seen (Proctorio, Respondus, etc.) are primarily available for Windows only, with some having OSx clients but none of them supporting Linux, which is the OS I normally use. Sure, I can boot into Windows, but some other students may be using chromebooks or only have Linux on their system.\nFinally, there\u0026rsquo;s a bit of a normalization of spyware that education using these tools can cause. This is bad for any student, but it\u0026rsquo;s especially bad for CS and CE students who, lacking real ethics education at [My University], see this as an example. This makes software that has no right to exist look acceptable. For \u0026lsquo;normies\u0026rsquo; it just further normalizes a category of software which is heavily used for domestic abuse, a stat that while I could cite a source for, I can also tell you I\u0026rsquo;ve seen for myself multiple times.\nI understand the need for secure, online testing, but this is certainly not the right solution.\n One of the replies to this email did sort of make my day though:\n Short answer: no, I won\u0026rsquo;t use them.\nSlightly longer answer: I won\u0026rsquo;t use them since there will be no exams or quizzes in this course.\nEven longer answer: Even if I did have exams or quizzes, there\u0026rsquo;s no way in hell I\u0026rsquo;d use that awful, awful software. My conscience and my son would never forgive me.\n Of course, this is a rabbit hole you can keep going down. You might want to keep an eye on this: Proctorio filed a SLAPP suit if you want to see them fall on their faces.\nFree College #  The Following is from \u0026lsquo;Modern Universities Are An Exercise in Insanity\u0026rsquo; on The Scholar\u0026rsquo;s Stage Blog:\n The average tenure hopeful adjunct makes $40 an hour. If you were to employ her as a private tutor at the cost of $60 an hour, and had four hours with her a week, and did that for 14 weeks (that\u0026rsquo;s the length of an average college course folks) that is about $3,400.\nWere you to employ three such professor-tutors, that would be about $10,200, or a bit over $20,000 a year. In four years you would have racked up $80,000 in costs. But this is still $30,000 less than the total for the \u0026lsquo;cost conscious\u0026rsquo; universities. It is a quarter of what you would pay for Trinity.\nRemember: this $80,000 is for private tutoring, where individual attention would give you far and away a better and more thorough education than the 300-kids-in-a-lecture-hall style of classes that dominate undergraduate education today.\nBut it can get even cheaper. Let\u0026rsquo;s say you take the general principle of group classes from the university. Say you can find four other people to take all of these other classes with you. Just four. Well that equals out to $680 per class, or $16,000 a person for four years of classes.\n How I Got a Computer Science Degree in 3 Months for Less Than $5000\nWe Are Sending More Foster Kids To Prison Than College (Kansas City Star)\n Bullying #  Invasive Technology #  Apps, GoogleClassroom, etc\n60% of School Apps are Sending Student Data to Potentially High-risk Third Parties Without Knowledge or Consent According to New Research from Me2B Alliance\nSchool or Prison (Comments on Hacker News)\n"}),a.add({id:91,href:'/music/effects/',title:"Effects",section:"MUSIC",content:"Audio Effects #  A lot of audio effects boil down to automating some simple parameter. Some times you may not actually need a dedicated effect and can instead get by with using Automation Lanes (YouTube, once upon a synth) in you Digital Audio Workstation (DAW) Also don\u0026rsquo;t get to deep into gear envy. Effects are awesome and it\u0026rsquo;s tempting to either want to collect them and hoard them like a happy dragon on a pile of gold or feel like you can\u0026rsquo;t make music without that one perfect effect. Unless you\u0026rsquo;re falling down the rabbit hole of a DAWless setup and have a very limited amount of gear, you can almost certainly find something for free that will fill the need, or already have something. Most DAWs come with an impressive amount of built in effects: Use these first! They\u0026rsquo;re usually lighter on your CPU and still sound really good. Immediately contradicting myself though, don\u0026rsquo;t undervalue workflow either. In my experience, making music depends on a really quick brain to input device feedback loop. Being able to turn a physical knob and mash physical keys will often lead to better results if only because you\u0026rsquo;re able to try things faster and try things by physically interacting with something that you may not have thought of otherwise. It\u0026rsquo;s why guitars, MPE keyboards, and Eurorack are so great: they all give you a crazy amount of control and expression that is literally at your finger tips. The brain to input interface there is just so much better.Find a happy middle ground. This often means getting some basic effects and gear that doesn\u0026rsquo;t actually let you do anything new, but instead gives you a faster way of working with it that may open your mind to new possibilities. With that out of the way, onto the list of effects!\nTremolo #  This is probably the easiest to understand audio effect. Put simply, fade the volume in and out automatically. This can be done at different speeds (really fast for a \u0026lsquo;deep\u0026rsquo; effect or slow for something pad-like) and with a bias so that the volume never completely cuts. It can also refer to a playing style where the same note is struck rapidly, leading to a similar effect. In VCV this can be done as simply as hooking up an LFO to a VCA\u0026rsquo;s CV input like we did here, but turning up the frequency of the LFO-2 module (note, that here there is no bias so the volume does actually cut out):     Vibrato #  Vibrato as an effect requires pitch shifting, which I suppose actually makes it akin to FM synthesis as in Chapter 2, regardless, it\u0026rsquo;s as simple as applying a, typically subtle, pitch \u0026lsquo;wobble\u0026rsquo; into the sound. On a guitar this may be done with a pedal but more simply just by bending the string back and forth with the fingers quickly or using a whammy bar. In eurorack or VCV you can just use the fm input and hook up an LFO\nIf your signal doesn\u0026rsquo;t have a way to directly modulate the frequency, it may be done by varying the time a signal takes to get though a delay line, simulating a doppler effect - see Time-Varying Delay Effects on DSPRelated.com for more about how this works.\n Delay #  Delay is basically echo. Take a sound in, and repeat it it it. Normally the main controls on a delay are \u0026lsquo;Time\u0026rsquo;, which controls how long of a delay there is before each repeat, \u0026lsquo;Feedback\u0026rsquo; which controls how much the level is reduced each time the delay repeats (and in turn, how many audible repetitions there are), and \u0026lsquo;Dry/Wet\u0026rsquo; which controls how the signal is blended, entirely dry will have no delay, entirely wet may even miss the initial sound adding a weird latency before you hear what you\u0026rsquo;re playing. Some delays have additional controls, obviously I can\u0026rsquo;t cover every possible delay, but I\u0026rsquo;ll try to cover most:\nSome delays instead of letting you set a delay time or \u0026lsquo;tap\u0026rsquo; a delay tempo in actually synchronize to a clock signal input which lets the delayed repetitions always be in time with the rest of the song.\nStereo delays many have additional controls as well, most commonly offering a different delay time for the left and right channels. often a \u0026lsquo;Ping Pong\u0026rsquo; mode will also be available where the left and right speaker alternate for the echo\u0026rsquo;d sound- \u0026lsquo;ping\u0026rsquo; and \u0026lsquo;ponging\u0026rsquo; out each side until the sound cuts out.\nSome delays may also allow for unity or higher feedback, which will cause the delay to be infinite or, if above unity, infinitely grow in volume until it\u0026rsquo;s just a distorted clipping mess. This can actually be a lot of fun to play with.\n Quick Reference Card for the Chronblob^2 from Alright Devices, http://docs.alrightdevices.com/chronoblob2-manual.pdf\n Some delays let you also insert other things into the feedback path. This means you could do things such as having each repetition be progressively more filtered, cutting out more and more high end each time or putting a delay in the delay. (yo dawg, I heard you like delay?).\nSome digital delays and most analog delays (especially bucket brigade delays1) can produce interesting sounds if you change the delay time while audio is going through the buffer, resulting in a sort of pitch shift whip sound as the delay catches up or slows down.\nIt\u0026rsquo;s also worth noting that by making delay time very short and having gain near unity, sending a brief trigger (impulse) can make a sound that sounds like a string being plucked. This is called Karplus-Strong Synthesis. To the right I\u0026rsquo;ve shown a way to do this in VCV Rack.    Finally, it\u0026rsquo;s worth noting that there are a few interesting features some delays may have, such as letting the delay buffer be frozen to infinitely repeat what was playing at the time (unity gain, ignore input), reverse\u0026rsquo;d delay - having the initial sound play forward but each repeat play in reverse, pitch shifted delay- having each delay affected by a pitch shift, often done with octave up/down. Often, this pitch shifting is done via Granular Synthesis, as mentioned above. Using granular synthesis does allow for some other interesting options though, such as Unfiltered Audio\u0026rsquo;s Sandman Pro VST.\n Screenshot of Eventide\u0026rsquo;s Quadravox VST, with pitch shifted delays\n  Loopers #  Loopers are most commonly seen in hardware and can be seen as a sort of mix between samplers and delays. Essentially you just tap in when you start playing, play what you want, then tap out, then, the loop of whatever you played will play back to you. There may be additional settings, such as a half speed effect.\nOften you\u0026rsquo;ll see loopers used for \u0026lsquo;Live Looping\u0026rsquo; performances, where each layer is looped and overdubbed to create a full song\nHere for example is a jam using the Ditto X4 looper (the box slightly blurry, closest to the camera), which is used to loop the guitar here.\n Filters (LP, HP, BP, Notch) #  https://www.perfectcircuit.com/signal/learning-synthesis-filters\nLow Pass Filters #  Low Pass filters do what you think, they let the low frequencies pass and cut out the high frequencies. As with most filters, this will typically not be a sharp cutoff but instead be a gradual fading of the higher frequencies. Despite this, there is still a point called the cut off frequency, which is defined as the point where the signal is cut by 3db (what this means is discussed below). It\u0026rsquo;s also pretty common for Low pass filters to have some resonance, where the frequency right at the cut off has a bit of a bump, as can be seen in this gif:\nSlew Limiting #  Effect on Square Waves #  High Pass Filters #  High pass filters act pretty much the same as low pass filters, except they do they cut the lows and pass the highs. High pass filters are ironically often actually used to give a bump in the bass using the resonant peak.\nBand Pass Filters #  There\u0026rsquo;s two kinds of bandpass filters, one, is a Lowpass and Highpass filter in series, where there\u0026rsquo;s only a band left that can pass giving two potential resonant peaks, and then theres band pass filters which are more \u0026lsquo;true\u0026rsquo; band pass filters that have a resonant peak in the middle.(need to confirm this)\nNotch Filters #  Again, as the name implies, notch filters create a notch in the sound. Often used to correct for an issue in the sound, such as removing a 60hz hum. In Notch filters the resonance control actually changes how steep the notch is, so low resonance (Low Q) will cause the notch to be wider as the slope isn\u0026rsquo;t very steep, but a high resonance (Q) will let you really pick out a specific frequency.\nPeak Filters #  Low and High Shelf Filters #  Unlike all the filters until now which have a resonant peak, shelf filters actually boost or lower the volume all the way to the cut off frequenecy. Here, (1) is a low shelf filter, boosting all the lows (by a lot more than you\u0026rsquo;d ever actually want to) and (8) is a high-shelf set to cut the highs. for some context, (5) is a peak filter. With a normal Low/High pass filter, adding resonance, (dragging the point above the +0db line in this graph) would only make make a spike like this at the cut off point, not make a \u0026lsquo;shelf\u0026rsquo;.\nComb Filters #  All-Pass Filters (Phaser) #  Types of Filters #  State Variable (Steiner-Parker) #  Transistor Ladder #  Diode Ladder #  Sallen-Key #  Operational Transconductance Amplifiers (OTA Filters) #  CEM3320\nChebbychev #  SEM #  Wasp #  Formant Filters #  Polivoks #  Slope, Pole-Zero plots, dB #  different analog models\nFilter Resonance (Q) #  Self Oscillation #  Filters with resonance can often be put into self oscillation by turning the resonance above a threshold for normal operation. In digital filters, you may need to give the filter some sort of brief input before it starts oscillating. With analog hardware, noise in the system, even if not normally noticeable, is typically enough to start the process. Most filters will output a pure sine wave when self oscillating.\nHere I start by feeding this filter an input from an oscillator module which is off screen, and sweep though the frequencies. Then I turn up the resonance a bit, do another sweep. Then I unplug the oscillator and sweep frequencies, you can see that it is silent. Finally, I turn the resonance above the self oscillation threshold, and you can hear output.\n Note, this module is a multi-mode filter, it\u0026rsquo;s top 4 outputs are various poles of a low pass filter and the bottom four outputs are a highpass, \u0026lsquo;band bost + notch\u0026rsquo;, Phase-shifter, and Band Pass, respectively. Here, you\u0026rsquo;re hearing the output of the band pass filter. The sound of self oscillation will be a sine wave for any of the outputs though.\n  Pinging Filters #  Here, the same filter is being put right at the edge of resonance and a square wave is \u0026lsquo;pinging\u0026rsquo; the filter. It resonates heavily, but not enough to drive it into self oscillation. Different outputs may sound a bit different here.\nThis filter module actually has a dedicated ping input, which is why I can \u0026lsquo;ping\u0026rsquo; it with a square wave, but typically you\u0026rsquo;d want to ping filters with a trigger (a very short pulse) rather than a square wave (which is high as much as it is low). You can think of this as the difference between striking a drum head and slapping a drum, but keeping your hand pressed on to the drum\u0026rsquo;s skin when you do. Clearly the latter is going to mute the sound.\n Auto Wah #  an Auto Wah or Envelope filter uses an envelope follower to control a filter\u0026rsquo;s cut off. Essentially this means how loud you play will change the filter. These are normally used on guitar, but you can put them on anything really.\n Equalizers #  Parametric #  Fixed Filter Banks #  Phaser #  Flanger #  Flanger works by taking a very short delay* which slowly modulated delay time and mixing this back with the original signal. This will result in some phase cancellation effects and give a similar sound to a phaser. The delay time modulation rate and depth, and delay feedback are the most commonly exposed controls. Flanger is probably most commonly used as an effect on guitar.\n*note, that delay, in this context, means an actual time delay, just a buffer that makes sound take longer to get through if that makes sense. Of course, with feedback and mixing the original this will have the same effect as a delay in the \u0026lsquo;echo\u0026rsquo; sense.\n Flanger sort of makes a comb filter sound too, as you can see in the Spectrum Analyzer on the bottom.\n  The \u0026lsquo;Pyramids\u0026rsquo; Flanger pedal from Earthquaker Devices.\n Chorus #  Chorus does as the name implies, layering copies of the signal together to get a \u0026lsquo;denser\u0026rsquo; sound. To be a chorus (and not just increase the volume) the copies are slightly pitch shifted, delayed, or otherwise modulated relative to one another. See - see Time-Varying Delay Effects on DSPRelated.com for more about how this works.\nReverb #    Rooms #  You\u0026rsquo;ll often see reverbs listed as \u0026lsquo;room\u0026rsquo;, \u0026lsquo;cathedral\u0026rsquo;,\u0026lsquo;cave\u0026rsquo;, etc. These are trying to emulate the sound of playing in a closed space\nPlate #  Spring #  Constitutional #  Internals #  Delay lines, allpass, comb filters\n Distortion #   How Distortion Works in Music (Ben Sheron\u0026rsquo;s Blog)\nClipping (Soft \u0026amp; Hard) #  Waveshaping #  Wavefolding #  This is one of those things where while the name is pretty self descriptive, you sorta just have to see the signal on a scope and hear it to see what it does.\nLike any distortion, it ultimately adds in more harmonics, so it will make it sound higher pitch.\n Parallel V Serial Wavefolding #  Drive, and Tubes #  Bitcrushing \u0026amp; Comparators #  Bit crushing is often related to sample rate reduction as well, so one at a time:\nBit crushing is taking the signal and lowering the number of bits that are used to store it. This means it\u0026rsquo;s an inherently digital effect. Most audio is processed at 16 or 24 bit, even at just 16 bit that means each sample point can be any of   \\(2^16 = 65536\\)  values. Usually, audio is sampled with a Digital to Analog Coverter (DAC) at around 44.1khz. This means that 44,100 times a second the signal is sampled and the level (amplitude) of the signal is stored as a value between 0 and 65536. That bit depth (16bit) is good enough that you shouldn\u0026rsquo;t really be able to tell it\u0026rsquo;s digital once it\u0026rsquo;s spit back though a Digital to Analog Converter (ADC). However, if we turn that bit depth down, let\u0026rsquo;s say all the way to 8 bit now there are only  \\(2^8 = 256\\)  levels of amplitude the signal can be represented with, even if we continue to sample at the same rate, this will cause audible distortion and bring a lo-fi sound. Crush even harder, say down to 2 bit (4 levels), and it turns into an outright destructive distortion that mangles the signal.\nSimilarly, the sample rate can be reduced to cause the signal to have issues with higher frequencies as a result of aliasing.\n [Todo, fabfilter distortion video]\nStereo Effects #  Panning #  Panning in general is just setting the side (left/right) that a sound is balanced on. Just slightly panning everything in a mix can even add a lot. Just like anything, you can also automate panning, but that brings up auto-panners, which are effects that do this rather quickly. Cableguy\u0026rsquo;s Pancake 2 VST is free and sort of the go to for showing this, though there are some tools that may be easier to use. You may also see rotary effects, these emulate older speaker systems that did an effect similar to this by physically spinning the speaker horns in a circle. It has a slightly different sound and is worth exploring in it\u0026rsquo;s own right\n  Widening #   Noise Gating #  The Animated Guide to Gates (Patches.zone)\nGating other effects with a mix #   gated verb, gated distortion\nLimiting #  Soft and Hard Clipping #  Compression #  The Animated Guide To Compression (patche.zone) is a great place to start, but if you still need more, I recomend reading on:\n The above is a 3 part series that explains compressors better than anything I can really write here  Compression can mean multiple things when talking about music and sometimes this makes talking about it sometimes confusing. Usually, when talking about compression the meaning is for compression that changes the dynamics of the audio, making loud sounds quieter and quiet sounds louder sort of ~squishing~ the sound. The other, unrealetd, definiton of compression is data compression, for example .mp3 vs .wav. We\u0026rsquo;ll go into that later.\nOkay, this is sort of a lie. Compressors don't technically make anything louder. Only quieter. It's just that usually there's some input and/or output gain that makes it seem this way. If you first boost all your signals, then lower louder parts that's nearly the same thing as making the quiet stuff louder and louder stuff quiter. The reason this is worth bringing up is because not all compressors actually have that gain stage, so they will literally only make the loud sounds quieter and assume the user knows they need to compensate\nUsually compression has a few basic attributes that are relevent:\nThe \u0026lsquo;Threshold\u0026rsquo; is what level the compressor has to be over to do anything at all. \u0026lsquo;Attack\u0026rsquo; is the time it takes for the signal to be affected. All compressors will have some minimum attack time if they\u0026rsquo;re happening live (there are some compressors with \u0026lsquo;Lookahead\u0026rsquo; that solve this problem) which lets the transients (sharp changes) of louder sounds, like the start of a drum hit, get through to some extent, but more attack will let more of the drum transient through. Tune to taste, release is similar idea, but controls how the compressor behaves as it falls below the treshold, letting the compressor fade out with a given time instead of having a sharp cut. Compressors can be used to make drums really stand out, give guitars a longer sustained sound, or just glue the mix together better.\n[TODO knee, sidechain]\n[TODO, Dynamic range compression, Parallel Compression, Miltiband compression, different analog models (ie Fets v tube v optical)]\nreverb, delay, pan, tremello, overdrive, distortion\n WTF is a Compander? (YouTube, Dan Worrall)\n[TODO] parallel Compression\nVocoders #  Ableton Live VOCODER Tutorial (YouTube, Once Upon A Synth)\n[TODO] all of it\u0026hellip; but also mention how a lot of vocie effects use a combo of autotune, vocode, and pitch shifting\nGlitch, Granular, and Pitch #  Neat tricks with effects #  My first WET / DRY / WET Guitar Pedal Rig (YouTube, Mark Johnston)\n  Bucket Brigade Delay is essentially a bunch of capacitors acting as the \u0026lsquo;buckets\u0026rsquo; that are figuratively passed down the chain, moving from one bucket to the next each clock cycle, of course, this clock rate can be changed while it\u0026rsquo;s running. The number of stages in a BBD determines how long of a delay you can get without having a massive determent to quality.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n   "}),a.add({id:92,href:'/phil/fallacies/',title:"Fallacies",section:"PHIL",content:'Logical Fallacies (and a bit more) #  If you\u0026rsquo;ve been on the internet for more than about a quarter of a second, you\u0026rsquo;ve likely been accused of a whole host of logical fallacies. Unfortunately, most people really don\u0026rsquo;t understand what they\u0026rsquo;re saying and often use a lot of these incorrectly. On the other hand, you also likely encounter politicians people using these fallacies on a regular basis as well, and it\u0026rsquo;s nice to be able to call them out on it. This page is going to cover a fair amount of the most common and attempt to give you examples of when they apply and when they don\u0026rsquo;t.\nAlmost all of the content on this page is ripped from Wikipedia, but there\u0026rsquo;s some YouTube videos and thoughts of my own in here too.\nIf you\u0026rsquo;d like something more visual, I recommend reading this Illustrated Book of Bad Arguments.\nArgumentum ad populum #  Argumentum ad populum (Wikipedia) also know as the \u0026lsquo;Bandwagon fallacy\u0026rsquo;\n In argumentation theory, an argumentum ad populum (Latin for \u0026ldquo;appeal to the people\u0026rdquo;) is a fallacious argument that concludes that a proposition must be true because many or most people believe it, often concisely encapsulated as: \u0026ldquo;If many believe so, it is so\u0026rdquo;.\n[\u0026hellip;]\n\u0026ldquo;Everyone likes The Beatles and that probably means that they didn\u0026rsquo;t have nearly as much talent as , which didn\u0026rsquo;t sell out.\u0026rdquo; (source)\n- Wikipedia   Argument to moderation #  Argument to moderation (Wikipedia)\nInflation of conflict ‚Äì arguing that, if experts in a field of knowledge disagree on a certain point within that field, no conclusion can be reached or that the legitimacy of that field of knowledge is questionable.\nFor example, if most of science says there\u0026rsquo;s 31 elementary particles, but some fringe scientists claim there are 42, that doesn\u0026rsquo;t mean the answer has to be somewhere in between.\nSimilarly, if most people think the Earth is flat, and some small fringe group of heathens think the earth is round, that doesn\u0026rsquo;t make make the popular opinion right.\nSlippery slope #  Slippery slope (Wikipedia)\n\u0026ldquo;If we let the gays marry, what\u0026rsquo;s next, letting people marry horses!?\u0026rdquo;\nBegging the Question #  Begging the Question (Wikipedia)\nThis is just a type of circular reasoning, think claims like\n\u0026ldquo;Chocolate is an aphrodisiac because it makes people horny\u0026rdquo;\nWell, no, you just restated the definition of aphrodisiac. That\u0026rsquo;s how most \u0026lsquo;begging the question\u0026rsquo; works, by using the definition of a word to support a claim.\nCherry Picking #  Cherry Picking (Wikipedia)\n Cherry picking, suppressing evidence, or the fallacy of incomplete evidence is the act of pointing to individual cases or data that seem to confirm a particular position while ignoring a significant portion of related and similar cases or data that may contradict that position. - Wikipedia   Sampling Bias #  Sampling Bias (Wikipedia)\n In statistics, sampling bias is a bias in which a sample is collected in such a way that some members of the intended population have a lower or higher sampling probability than others. It results in a biased sample, a non-random sample of a population (or non-human factors) in which all individuals, or instances, were not equally likely to have been selected. - Wikipedia   Often, studies are WEIRD, that is people from a Western, Educated, Industrialized, Rich, and Democratic background are surveyed, this is a type of sampling bias, as the answers to a question might be different depending on if people from the US are surveyed or if people from Haiti are surveyed. Of course, the sampling bias can be much less obvious than that:\nSay you wanted to study rates of COVID spread in a community, if you\u0026rsquo;re only looking at the population of people that go to get tested, the infection rate will look artificially high as if somebody doesn\u0026rsquo;t have symptoms why would they go get tested?\nSurvivorship Bias #  Survivorship Bias (Wikipedia)\nMcGeddon, CC BY-SA 4.0, On Wikipedia   Survivorship bias or survival bias is the logical errorof concentrating on the people or things that made it past some selection process and overlooking those that did not, typically because of their lack of visibility. This can lead to some false conclusions in several different ways. It is a form of selection bias.\nFor example, if three of the five students with the best college grades went to the same high school, that can lead one to believe that the high school must offer an excellent education when, in fact, it may be just a much larger school instead. The question cannot be answered without looking at the grades of all the other students from that high school, not just the ones who made the top-five selection process.\n- Wikipedia     Pareto Principle #  Pareto Principle (Wikipedia)\n The Pareto principle states that for many outcomes roughly 80% of consequences come from 20% of the causes (the ‚Äúvital few‚Äù). Other names for this principle are the 80/20 rule, the law of the vital few, or the principle of factor sparsity.\n[\u0026hellip;]\nMathematically, the 80/20 rule is roughly described by a power law distribution (also known as a Pareto distribution for a particular set of parameters, and many natural phenomena have been shown to exhibit such a distribution. It is an adage of business management that \u0026ldquo;80% of sales come from 20% of clients\u0026rdquo;.\n- Wikipedia   The Pareto Principle is derived from Zipf\u0026rsquo;s Law (Wikipedia),\n Zipf\u0026rsquo;s law is an empirical law formulated using mathematical statistics that refers to the fact that many types of data studied in the physical and social sciences can be approximated with a Zipfian distribution, one of a family of related discrete power law probability distributions. - Wikipedia    Ad hominem #  Ad hominem (Wikipedia)\n Typically this term refers to a rhetorical strategy where the speaker attacks the character, motive, or some other attribute of the person making an argument rather than attacking the substance of the argument itself. This avoids genuine debate by creating a diversion to some irrelevant but often highly charged issue. The most common form of this fallacy is \u0026ldquo;A makes a claim x, B asserts that A holds a property that is unwelcome, and hence B concludes that argument x is wrong\u0026rdquo;. - Wikipedia   For example \u0026ldquo;Bob says that being gay is okay, but Bob is an atheist, so clearly he\u0026rsquo;s wrong\u0026rdquo;\nAppeal to authority #  Appeal to authority (Wikipedia)\n\u0026ldquo;God said it is true, so it is\u0026rdquo;\n\u0026ldquo;If it\u0026rsquo;s illegal it\u0026rsquo;s immoral\u0026rdquo;\nI\u0026rsquo;m entitled to my opinion #  I\u0026rsquo;m entitled to my opinion (Wikipedia)\n I\u0026rsquo;m entitled to my opinion or I have a right to my opinion is a logical fallacy in which a person discredits any opposition by claiming that they are entitled to their opinion. The statement exemplifies a red herring or thought-terminating clich√©. The logical fallacy is sometimes presented as \u0026ldquo;Let\u0026rsquo;s agree to disagree\u0026rdquo;. Whether one has a particular entitlement or right is irrelevant to whether one\u0026rsquo;s assertion is true or false. Where an objection to a belief is made, the assertion of the right to an opinion side-steps the usual steps of discourse of either asserting a justification of that belief, or an argument against the validity of the objection. Such an assertion, however, can also be an assertion of one\u0026rsquo;s own freedom or of a refusal to participate in the system of logic at hand. - Wikipedia   This fallacy, is a bit different from the others as it\u0026rsquo;s not so much a breaking of logical rules so much as willful ignorance and stupidity. It\u0026rsquo;s often used to end arguments to avoid further conflict, which one one thing, but other times it\u0026rsquo;s used outright to stop decent and encourage people to stick to views without letting them be challenged, which is incredibly dangerous. It\u0026rsquo;s exactly what lets hate like homophobia and bad ideas, like anti-vax, spread.\nStraw man #  Straw man (Wikipedia)\n The straw man fallacy occurs in the following pattern of argument:\n Person 1 asserts proposition X. Person 2 argues against a superficially similar proposition Y, falsely, as if an argument against Y were an argument against X.  [for example]\n[Person 1]: We should relax the laws on beer.\n[Person 2]: No, any society with unrestricted access to intoxicants loses its work ethic and goes only for immediate gratification.\n- Wikipedia   Whataboutism \u0026amp; Moving the Goalposts #  Whataboutism (Wikipedia) \u0026amp; Moving the Goalposts (Wikipedia)\n Whataboutism, also known as whataboutery, is a variant of the tu quoque logical fallacy that attempts to discredit an opponent\u0026rsquo;s position by charging them with hypocrisy without directly refuting or disproving their argument. - Wikipedia    Moving the goalposts is an informal fallacy in which evidence presented in response to a specific claim is dismissed and some other (often greater) evidence is demanded. That is, after an attempt has been made to score a goal, the goalposts are moved to exclude the attempt. The problem with changing the rules of the game is that the meaning of the result is changed, too. - Wikipedia     False Dichotomy/Dilemma #  False Dilemma (Wikipedia)\n A false dilemma (sometimes called false dichotomy) is a type of informal, correlative-based fallacy in which a statement falsely claims or assumes an \u0026ldquo;either/or\u0026rdquo; situation, when in fact there is at least one additional logically valid option. - Wikipedia   \u0026ldquo;Either you\u0026rsquo;re against abortion or you love murdering babies!\u0026rdquo;\n\u0026hellip; or you\u0026rsquo;re just pro-choice but still don\u0026rsquo;t want anyone to be in a situation where the need an abortion in the first place.\nAppeal to Ignorance #  Argument from Ignorance (Wikipedia), hand shortened version below:\n Argument from ignorance also known as appeal to ignorance (in which ignorance represents \u0026ldquo;a lack of contrary evidence\u0026rdquo;), is a fallacy in informal logic. It asserts that a proposition is true because it has not yet been proven false or a proposition is false because it has not yet been proven true.\n[\u0026hellip;]\nFalse positives\nOften seen in anecdotal evidence, superstitions, correlation-causation fallacies, and experiments with small sample size\n \u0026ldquo;I took a placebo pill and now my symptoms are completely gone. The placebo cured my symptoms.\u0026rdquo;  Absence of evidence\nThese examples contain or represent missing information.\n Statements that begin with \u0026ldquo;I can\u0026rsquo;t prove it but \u0026hellip;\u0026rdquo; are often referring to some kind of absence of evidence.  False negatives\nThese examples have the potential for \u0026ldquo;false negative\u0026rdquo; results.\n When the doctor says that the test results were negative (a month later the test is positive).  Evidence of absence\nThese examples contain definite evidence that can be used to show, indicate, suggest, infer or deduce the non-existence or non-presence of something.\n One very carefully inspects the back seat of one\u0026rsquo;s car and finds no adult-sized kangaroos.  Arguments from ignorance\nDraws a conclusion based on lack of knowledge or evidence without accounting for all possibilities\n- Wikipedia   The Texas Sharpshooter #  Texas Sharpshooter Falacy (Wikipedia)\n The Texas sharpshooter fallacy is an informal fallacy which is committed when differences in data are ignored, but similarities are overemphasized. From this reasoning, a false conclusion is inferred. [\u0026hellip;] A Swedish study in 1992 tried to determine whether power lines caused some kind of poor health effects. The researchers surveyed persons living within 300 meters of high-voltage power lines over a 25-year period and looked for statistically significant increases in rates of over 800 ailments. The study found that the incidence of childhood leukemia was four times higher among those who lived closest to the power lines, and it spurred calls to action by the Swedish government.[6] The problem with the conclusion, however, was that the number of potential ailments, i.e., over 800, was so large that it created a high probability that at least one ailment would exhibit the appearance of a statistically significant difference by chance alone, a situation known as the multiple comparisons problem. Subsequent studies failed to show any association between power lines and childhood leukemia. - Wikipedia   Dog Whistle #   In politics, a dog whistle is the use of coded or suggestive language in political messaging to garner support from a particular group without provoking opposition. - Wikipedia   Offensive political dog whistles: you know them when you hear them. Or do you?\nQueerbaiting #   Queerbaiting is a marketing technique for fiction and entertainment[6] in which creators hint at, but then do not actually depict, same-sex romance or other LGBTQ representation. - Wikipedia   Quoting Out Of Context #  Quoting out of Context (Wikipedia)\n Quoting out of context (sometimes referred to as contextomy or quote mining) is an informal fallacy in which a passage is removed from its surrounding matter in such a way as to distort its intended meaning. [\u0026hellip;] One of the most familiar examples of contextomy is the ubiquitous \u0026ldquo;review blurb\u0026rdquo; in advertising. The lure of media exposure associated with being \u0026ldquo;blurbed\u0026rdquo; by a major studio may encourage some critics to write positive reviews of mediocre movies. However, even when a review is negative overall, studios have few reservations about excerpting it in a way that misrepresents the critic\u0026rsquo;s opinion. - Wikipedia   Occam\u0026rsquo;s Razor #  Occam\u0026rsquo;s Razor (Wikipedia)\n " The simplest explanation is usually the right one "  - William of Ockham, but not really?   Okay, so technically, this is a misquote. See the Wikipedia article: Occam\u0026rsquo;s Razor (Wikipedia) for more information on this. Regardless, this is what everybody means when they talk about Occam\u0026rsquo;s Razor  There\u0026rsquo;s a bit of a problem: \u0026ldquo;simplest\u0026rdquo; here is a bit crude. Does it mean simplest to describe or simplest to justify? For example, saying \u0026lsquo;God created the universe\u0026rsquo; is very easily described, but to justify requires the proof that a supreme being exists, that it\u0026rsquo;s a singular supreme being, and if you mean the Christian God, that it\u0026rsquo;s that God specifically, then that that being didn\u0026rsquo;t exist prior to the universe. You get the idea.\nIf the question is more mundane, like \u0026ldquo;where is my phone?\u0026rdquo; the answer of \u0026lsquo;in your pocket\u0026rsquo; is both much easier to describe and much easier to justify than \u0026lsquo;In the 5th dimension which may only be entered by accidental entry from between the couch cushions on the eve of a solstice\u0026rsquo;.\nBasically, while you can\u0026rsquo;t rule out complex answers entirely, if there\u0026rsquo;s an unknown you should assume the simplest answer.\nTragedy of the commons #  Tragedy of the commons (Wikipedia)\n The tragedy of the commons is a situation in a shared-resource system where individual users, acting independently according to their own self-interest, behave contrary to the common good of all users by depleting or spoiling the shared resource through their collective action. - Wikipedia   The easiest way to see this is to talk about an example, so let\u0026rsquo;s assume the case of two criminals, arrested by the police and some weird judicial system where the following is possible:\nThe police don\u0026rsquo;t have enough evidence to get a large sentence on either perp, if neither fesses up, each gets 2 years in prison. But, they have an idea, they offer either of the criminals to only serve 1 year if they rat out the other, and then the other serves 10 years. If they both rat out each other, then both serve 10 years. Both criminals are given the same offer, but neither is given a chance to coordinate. Each of them, acting in their own self interest, would only have to serve 1 year, but if both do, each has to serve 10. If they chose to rat each other out, that\u0026rsquo;s an example of the tragedy of the commons.\nThis scales up too, everything from CO2 emissions causing climate change to vaccines can be seen as cases of this.\nVaccines do have some side effects, usually just a low fever and a sore arm, and very rarely something serious. It\u0026rsquo;s just that by having a high enough population vaccinated we can be safe from much much more likely threats like polio. Vaccinate your fucking kids, Karen. Don\u0026rsquo;t contribute to the tragedy of the commons.  Self-Censorship #  Self-Censorship (Wikipedia)\n Self-censorship is the act of censoring or classifying one\u0026rsquo;s own discourse. This is done out of fear of, or deference to, the sensibilities or preferences (actual or perceived) of others and without overt pressure from any specific party or institution of authority. Self-censorship is often practiced by film producers, film directors, publishers, news anchors, journalists, musicians, and other kinds of authors including individuals who use social media.\nIn authoritarian countries, creators of artworks may remove material that their government might find controversial for fear of sanction by their governments. In pluralistic capitalist countries, repressive judicial lawmaking can also cause widespread \u0026ldquo;rivercrabbing\u0026rdquo; of Western media.\n- Wikipedia   Identity Politics: #  Source: https://www.instagram.com/p/CEpI20ps5wE/ Doomscrolling #  Doomscrolling (Wikipedia)\n Doomscrolling is the act of consuming a large quantity of negative online news, typically without pause, to the detriment of the mental health of the person consuming it. Essentially, if the news is bad or depressing, one can \u0026lsquo;doomscroll\u0026rsquo; it. - Wikipedia   Chilling Effect #  Chilling Effect (Wikipedia)\n In a legal context, a chilling effect is the inhibition or discouragement of the legitimate exercise of natural and legal rights by the threat of legal sanction.\nA lawsuit initiated specifically for the purpose of creating a chilling effect may be called a Strategic Lawsuit Against Public Participation (\u0026ldquo;SLAPP\u0026rdquo;).\n- Wikipedia   Streisand Effect #  Streisand Effect (Wikipedia)\n The Streisand effect is a social phenomenon that occurs when an attempt to hide, remove, or censor information has the unintended consequence of further publicizing that information, often via the Internet. - Wikipedia   Creeping Normality and the Overton Window #   Creeping normality (also called gradualism, or landscape amnesia) is a process by which a major change can be accepted as normal and acceptable if it happens slowly through small, often unnoticeable, increments of change. The change could otherwise be regarded as objectionable if it took place in a single step or short period. - Wikipedia    The Overton window is the range of policies politically acceptable to the mainstream population at a given time. It is also known as the window of discourse. The term is named after Joseph P. Overton, who stated that an idea\u0026rsquo;s political viability depends mainly on whether it falls within this range, rather than on politicians\' individual preferences. - Wikipedia    Hanlon\u0026rsquo;s Razor #  Hanlon\u0026rsquo;s Razor (Wikipedia)\n " Never attribute to malice that which is adequately explained by stupidity "  - Robert J. Hanlon   Dunning-Kruger Effect #   The Dunning‚ÄìKruger effect is a cognitive bias in which people with low ability at a task overestimate their ability. It is related to the cognitive bias of illusory superiority and comes from people\u0026rsquo;s inability to recognize their lack of ability. - Wikipedia   Basically, some people assume they know things when they really don\u0026rsquo;t.\nThe Ship of Theseus #    In the metaphysics of identity, the ship of Theseus is a thought experiment that raises the question of whether an object that has had all of its components replaced remains fundamentally the same object. - Wikipedia   Think of The Children #  There is a whole class of fallacies in this group, as appeals to emotions like fear, flattery, being part of the in group, loyalty, etc. Covering all of them seems a bit excessive, so instead, just know to look out for any appeals to emotion that attempt to stand in for actual evidence.  Think of The Children (Wikipedia)\n \u0026ldquo;Think of the children\u0026rdquo; (also \u0026ldquo;What about the children?\u0026quot;) is a clich√© that evolved into a rhetorical tactic. Literally, it refers to children\u0026rsquo;s rights (as in discussions of child labor). In debate, however, it is a plea for pity that is used as an appeal to emotion, and therefore it becomes a logical fallacy. - Wikipedia   Basically, people might use protecting children an an excuse to ban all porn or some other extreme measure under the assumption that if you try to disagree with their view you\u0026rsquo;ll look awful because you\u0026rsquo;re not thinking of the children.\nSchrodinger\u0026rsquo;s Douchebag #  Other Resources #  Logicalfallacies.org covers many of these same fallacies, plus a few I didn\u0026rsquo;t touch on, and is hugely better written. Give it a look\n'}),a.add({id:93,href:'/phil/foriegn/',title:"Foriegn",section:"PHIL",content:"War and Foreign Involvement #  [TODO] DoD or Department of War?\nDenuclearization #  Localization #   Falsehoods Programmers Believe About Name The Problem with Time \u0026amp; Timezones (YouTube) Google Maps is Different in Other Countries (YouTube)  US Tampering in Foregin Affairs #   This embedable version of this video is a re-upload. The orginal, from \u0026lsquo;Second Thought\u0026rsquo; on YouTube is here but has been age restricted and has been shadow-banned by YouTube. The entire situation just proves the point, here\u0026rsquo;s the video creators twitter thread on the issue (click to see the entire thread)\nThis is going to be an important thread. We need to talk about YouTube, and private media operations in general\nThis thread was prompted by YouTube‚Äôs shadow ban of my new video, but that‚Äôs really just a minor inconvenience. The whole story involves YouTube, the DHS, and the CIA\n\u0026mdash; JT Chapman (@_SecondThought) November 28, 2020  But to me, the stand out tweet is this one:\nThat video earned me a visit from the DHS, who asked me about \u0026quot;Anti-American sentiment\u0026quot; in my videos. That was the first time I realized, wow, I guess people really are monitoring what we say and are willing to try to intimidate us, even if what we say is objectively true.\n\u0026mdash; JT Chapman (@_SecondThought) November 28, 2020    "}),a.add({id:94,href:'/phil/freedoms/',title:"Freedoms",section:"PHIL",content:"Freedoms and Rights #  Freedom of Speech #  xkcd ‚Ññ1357 Freedom of Press #  Everyone is press, https://www.eff.org/bloggers\nThe Trump Administration Is Trying To Force BuzzFeed News To Divulge Its Sources With A Subpoena\nanti-SLAPP laws\nWhistle Blower Protections #  https://en.wikipedia.org/wiki/List_of_whistleblowers\nSearch and Seizure #    Fair Trial #  Court of Public Opinion #  Freedom of Body #  Marital Rape, Euthanasia, Abortion, AI recognition and usage, gene ownership\nFreedom of environmental concern #  Vaccination, local pollution\nFreedom of Travel #  Immigration, Citizenship testing\nPersonal Armament #  Right to record, Right to know #   if it is public, there\u0026rsquo;s reason to expect you may be if it is private, person to person, (not b2b or p2b) there\u0026rsquo;s an exception for if it only for personal or judical (to be used in trial) use.  I.E, can\u0026rsquo;t post it online if it\u0026rsquo;s unreasonable to expect being recorded    Promise of Ownership #  Drm, General Purpose Computation, Right to Repair, etc. https://www.youtube.com/watch?v=HUEvRyemKSg\n Digital Manifesto #  Our inalienable rights within the digital age\nBy Daniel Shumway- released as Public Domain.\nThe following has been directly taken from https://anewdigitalmanifesto.com, where it is presented much more elegantly. I have chosen to include the full text as a sort of archival of the site.  Users and communities have the right to communicate with one another, both publicly and privately. Users have the right to encrypt or hide communications that they wish to be private. No one has the right to preemptively force a user to reveal or broadcast who they are communicating with, or even that they are communicating at all.\nUsers have the right to publicly publish information and content, even if it is not directed at a specific person or recipient. By extension, users also have the right to access publicly published information and content.\nUsers have the right to build systems that will allow them to communicate, publicly or privately. Users have the right to teach other people how to communicate, and to distribute software that will aid in communication.\nThe Right to Filter #  Both users and communities have the right to filter and organize the content they consume and host, and to block communications that they do not wish to receive. This can be done either manually or via automated means. No one has the right to force a user to consume content without their permission.\nUsers and communities have the right to share filters, whether those filters take the form of software, algorithms, or manually curated blocklists and allowlists.\nUsers have the right to subvert software and platform restrictions that would force them to consume content that they do not wish to see, and to teach other people how to subvert these restrictions. Users have the right to distribute software that circumvents technological restrictions for the purposes of personal content filtering.\nThe Right to Remember #  Users have the right to archive and index information online. Users have the right to share information with others, to share indexes of that information with others, and to tell other people that the information exists.\nUsers have the right to break or circumvent geoblocks, DRM, and other technological mechanisms that would prevent them from discovering, viewing, and archiving information that they have lawful access to.\nThe Right to Hide #  Users have the right to take measures that hide their identity online and in real-life. Users have the right to form multiple identities, and to choose which identities they want to use to communicate, transact, publish, or consume content. Users have the right to simultaneously exercise their Right to Hide and their other digital rights.\nWhen people or platforms attempt to obtain personal information from a user or to forcibly associate them with a single identity, users have the right to lie and to subvert technologies that would unmask them.\nUsers have the right to build and distribute software that hides their identity. Users have the right to teach other people how to subvert software and how to lie to organizations and individuals that attempt to deanonymize them.\nThe Right to Delegate #  Users have the right to authorize other users, software, and organizations to perform legal actions online on their behalf. No one has the right to compel a user to only exercise their rights in person, or through manual processes.\nUsers have the right to build and distribute software that automates a legal action they could take. Users have the right to circumvent and subvert restrictions that would block automated or third-party agents from performing a legal action or accessing legal content on their behalf.\nUsers have the right to teach other people how to circumvent restrictions on delegation and automation. Users have the right to distribute software that aids in circumventing these restrictions.\nThe Right to Modify #  Users have the right to inspect and modify code and content that is placed on a device or inserted into an environment that they own. Users may exercise this right regardless of whether or not they own the code/content. No one has the right to control what a user does with code/content on their own device.\nIn addition to inspecting and modifying code, users have the right to tell other people about their discoveries. Users have the right to teach other people how to perform similar inspections and modifications. Users also have the right to distribute software that assists other people in inspecting and modifying local code and content.\n"}),a.add({id:95,href:'/design/generative-art/',title:"Generative Art",section:"DESIGN",content:"Generative Art #  r/proceduralgeneration\nr/generative\nr/PlotterArt\nWorld Building Tools #   roberthodgin - meander  Generative maps of how rivers meander, not the tool, but at least it\u0026rsquo;s the process     Map Generator  A tool for building custom maps, envisioned for use in tabletop roleplaying games.     One Page Dungeon      Dungeon Map Doodler  \u0026ldquo;Dungeon Map Doodler is a new, free to use drawing tool accessible from any web browser. Easily create maps for your favourite tabletop RPGs in minutes!\u0026rdquo;     Dungeon Scrawl  Dungeon Scraws Documentation     Fantasy City Generator  This application generates a random medieval city layout of a requested size. The generation method is rather arbitrary, the goal is to produce a nice looking map, not an accurate model of a city.     Fantasy Map Generator  make a map with tons of customization options including some about the culture and regions     Space Creator  Make a lil' solar system     Genbrush ~15 USD   \r   Random Country Generator      World Machine  NOTE: This is only free for non-commercial use     World Painter  This one is for Minecraft, but still potentially useful  Image Source    DataCombs  \u0026ldquo;3D Map editing utility for use with tabletop games like Dungeons \u0026amp; Dragons and Pathfinder\u0026rdquo;     BlenderGIS  Import real map data into blender, cool for topograhpic maps and such     Worldanvil  \u0026ldquo;World Anvil is a set of worldbuilding tools that helps you create, organize and store your world setting. With wiki-like articles, interactive maps, historical timelines, an RPG Campaign Manager and a full novel-writing software, we have all the tools you‚Äôll need to run your RPG Campaign or write your novel!\u0026rdquo;     Languages #  Procedural Runes     Glyph     Glyph Generator     \rHuge Playlist on Constructed Languages ( Conlang Critic on YouTube)\nSome more cool examples, but lacking code:\nPentagonal Glyphs (Reddit) Generative Glyphs (Reddit)\nGenerative Textures and Geometry #  Forsynthia  Check out these(1) pages (2) for more information     Noisemaker  Noise maker can make a ton of generative art pieces, as you can see at the right, this is a small sampling using a few of the included presets. Can be a pain to get to run as it needs Tensorflow     Noisey-Shapes (Github)  \u0026ldquo;Making the computer draw weird shapes using basic trigonometry and different species of randomness(noise)\u0026rdquo;     Superformula SVG  Github repo     Pattern Generator  Use this tool to create unique, seamless, royalty-free patterns.Choose a base style, then customize with colors, filters, and transforms.Each pattern style has it\u0026rsquo;s own unique transforms. Play around to see what they do.Click the \u0026lsquo;shuffle\u0026rsquo; button to see the kinds of patterns you can make.     Noisedeck.app  Noisedeck is a generative art synth. Still in early development. Some features require a licence.  Five months ago, we had an idea for a simple app to make generative art accessible to everyone. It\u0026#39;s rapidly matured into a remarkable app, and found its way into the workflow of a small (but growing!) base of talented creators.\nThank you! We\u0026#39;re excited about what\u0026#39;s next. ‚ú® pic.twitter.com/7KpkFNjv99\n\u0026mdash; noisedeck (@noisedeck) April 5, 2021 \r   Globs Designer  Has a neat code editor too, for making more complex geometry     Making \u0026lsquo;Noise Planets\u0026rsquo; on Avinayak\u0026rsquo;s Blog\nThemer (Live Demo) (Github), meant for making themes for Linux enviroments, but makes good textures in general\nPixel Sorting #   Source - u/Hunter_timeFR on Reddit\n r/pixelsorting (Reddit)\nPixelSorting using Processing (Github)\npython pixelsort, with masks (Github)\nPython again, but with animation support (Github)\nPixsort for Adobe After Effects (15 USD)\nGenerateMe (Github) - lots of glitch effects\nFractal Art #  Apophysis  Fractal Flames  [TODO]    Mandelbulber      Mandelbulb3D   [TODO]    ifs Fractal Generator      Fractorium  A GPU-Accelerated Fractal Flame Editor     Chaotica  Chaotica is free for noncommercial use, and can render up to 1.23 megapixel images (e.g. 1280x960 resolution) and up to 30 second 480p animations without a licence. A Chaotica HD (45 USD) licence for casual users who want to create high quality desktop wallpapers up to 4 megapixels (e.g. 2560x1600) and 720p animations up to 3 minutes long is available at a very low price point. The professional Chaotica Studio (109 USD) licence has no still image or animation limitations at all. *prices are from time of writing     Generative Eyes #  Iris (Reddit) Greye (Reddit) Mycelium (Reddit)\n\rLivecoding visuals #  r/livecoding (Reddit)\nToplap.org - a site all about live coding\nThe Book of Shaders - \u0026ldquo;A gentle step-by-step guide through the abstract and complex universe of Fragment Shaders.\u0026rdquo;\n Tidal Cycles   \r   Praxislive   \r   Rectitude   \r   Mosaic   \r   p5-live (Github)  live coding for p5.js - you\u0026rsquo;ll probably want the VS Code Extension  \r   Pts.js  JS library for visulaization \u0026amp; creative coding\ndemo\n    Hydra (Github) \r \u0026ldquo;Set of tools for livecoding networked visuals. Inspired by analog modular synthesizers, these tools are an exploration into using streaming over the web for routing video sources and outputs in realtime. Hydra uses multiple framebuffers to allow dynamically mixing, compositing, and collaborating between connected browser-visual-streams. Coordinate and color transforms can be applied to each output via chained functions.\u0026rdquo;     LiveCodeLab  \u0026ldquo;Livecodelab is a special secret place where you can make fancy \u0026ldquo;on-the-fly\u0026rdquo; 3d visuals and play awesomely offbeat (literally) sounds. \u0026ldquo;On-the-fly\u0026rdquo; meaning: as you type. Type just three letters: \u0026ldquo;box\u0026rdquo;, and boom! a box appears. No clicking play, no waiting, no nothing.\u0026rdquo;     Thixels by Ramsey Nasser (Github, Linux Only)  \u0026ldquo;PICO8 inspired live coding visual instrument.\u0026rdquo;     Gibber.cc  \u0026ldquo;Gibber is a creative coding environment for audiovisual performance and composition. It contains features for audio synthesis and musical sequencing, 2d drawing, 3d scene construction and manipulation, and live-coding shaders.\u0026rdquo;     Ronin (Github)  \u0026ldquo;Ronin is a procedural graphics tool designed to automate simple graphical tasks, like resizing, cropping, coloring, and generating algorithmic images. It interprets a minimal dialect of LISP, look at the examples to better understand how this all works.\u0026rdquo;  \r   The Force (Github)  \u0026hellip; this one basically lacks all description. Best you\u0026rsquo;ll get is the api docs in the wiki  \r   Tooll.io  node-basde tool for interactive realtime content on the web  \r   Kodelife  Realtime GPU shader editor     Cables.gl (beta)  \u0026ldquo;Cables is a tool for creating beautiful interactive content. With an easy to navigate interface and real time visuals, it allows for rapid prototyping and fast adjustments.\u0026rdquo; \u0026mdash; Because this seems to be so \u0026lsquo;beta\u0026rsquo; and I don\u0026rsquo;t see code or any indication on future pricing it\u0026rsquo;s probably not the best option at the moment     Nimp (Github)  \u0026ldquo;Node-Based Image Manipulation Program\u0026rdquo;     vvvv - Heads up VVVV requires a licence for comercial use that is rather expensive  \u0026ldquo;vvvv is a hybrid visual/textual live-programming environment for easy prototyping and development. It is designed to facilitate the handling of large media environments with physical interfaces, real-time motion graphics, audio and video that can interact with many users simultaneously.\u0026rdquo;     TouchDesigner (Free, but 600 USD for Commercial licence)  \u0026ldquo;TouchDesigner is a visual development platform that equips you with the tools you need to create stunning realtime projects and rich user experiences. Whether you\u0026rsquo;re creating interactive media systems, architectural projections, live music visuals, or rapid-prototyping your latest ideas, TouchDesigner is the platform that can do it all.\u0026rdquo;    Video courtesy of Neurotypique    Nodes       Cyril (Github) (Main site)  The Cyril programming language is designed for fast prototyping of visualisations and live coding visuals.     Eternal  \u0026ldquo;node based audio / visual composition\u0026rdquo;     Creative Coding (Non Live) #  HackadayU Creative Code with Casey Hunt (YouTube)\nProcessing Language  \u0026ldquo;Processing is a flexible software sketchbook and a language for learning how to code within the context of the visual arts.\u0026rdquo;  \r   Hype Framework  \u0026ldquo;This is a collection of processing.org classes that performs heavy lifting tasks while using a minimal amount of code writing\u0026rdquo;  This site is really weird? It seems to be emedding vimeo videos of static images, regardless, still worth checking out    P5.js  \u0026ldquo;p5.js is a JavaScript library for creative coding, with a focus on making coding accessible and inclusive for artists, designers, educators, beginners, and anyone else!\u0026rdquo; \u0026mdash; Processing can run P5.js scripts, you can also live code p5.js with some VSCode extensions as mentioned above  \r   three.js  \u0026ldquo;Three.js is a lightweight cross-browser JavaScript library/API used to create and display animated 3D computer graphics on a Web browser. Three.js scripts may be used in conjunction with the HTML5 canvas element, SVG or WebGL.\u0026rdquo;  Three.js examples from Free Frontend and on the Three.js site itself    paper.js  \u0026ldquo;Paper.js is an open source vector graphics scripting framework that runs on top of the HTML5 Canvas\u0026rdquo;  Paper.js examples    rune.js  \u0026ldquo;a JavaScript library for programming graphic design systems with SVG in both the browser or node.js\u0026rdquo;  Move your mouse over the image on the homepage    rough.js  \u0026ldquo;a small (\u0026lt;9kB gzipped) graphics library that lets you draw in a sketchy, hand-drawn-like, style.\u0026rdquo;     StructureSynth  \u0026ldquo;Structure Synth is a cross-platform application for generating 3D structures by specifying a design grammar\u0026rdquo;     OpenFrameworks  openFrameworks is an open source C++ toolkit for creative coding.  \r   openrndr  \u0026ldquo;In short, OPENRNDR is a tool to create tools. It is an open source framework for creative coding, written in Kotlin for the Java VM that simplifies writing real-time interactive software\u0026rdquo;  pleanty of examples on the site    Cinder  \u0026ldquo;Cinder is a free and open source library for professional-quality creative coding in C++.\u0026rdquo;  pleanty of examples on the site |    Context Free  \u0026ldquo;Context Free is a program that generates images from written instructions called a grammar. The program follows the instructions in a few seconds to create images that can contain millions of shapes.\u0026rdquo;  Agneya by thijs    Nannou  a creative coding frame work for Rust, you may want to look at the work by MacTuitui (Twitter)     Valora  Another creative coding framework for Rust  curtain by turnage, 2020    immense  A Rust library for describing 3D meshes with simple composable rules.\n1 2 3 4 5 6 7 8  rule![ tf![ Tf::saturation(0.8), Tf::hue(160.0), Replicate::n(36, vec![Tf::rz(10.0), Tf::ty(0.1)]), Replicate::n(36, vec![Tf::ry(10.0), Tf::tz(1.2), Tf::hue(3.4)]), ] =\u0026gt; cube() ]   is all that\u0026rsquo;s needed to generate this shape:\n    ANSIedad      ASCII Generator      ShaderGif  You can make gifs with shaders (glsl) and Javascript (either with raw canvas or with the coder-friendly p5.js library).     ShaderView  \u0026ldquo;Shaderview is an app for creating visuals using OpenGl Shaders and it uses OSC messages to communicate changes in state. For example when live coding music you could send an OSC message when the drum sample played and in turn your shader could do something with that signal, like flashing of white.\u0026rdquo;     Data Visulization #  Nodebox  \u0026ldquo;NodeBox makes it easy to do data visualisations, generative design and complex production challenges.\u0026rdquo;     d3js  D3.js is a JavaScript library for manipulating documents based on data. D3 helps you bring data to life using HTML, SVG, and CSS.  The homepage has a ton of live demos    Apparatus  a hybrid graphics editor / programming environment for creating interactive diagrams     Vega-Lite  Vega-Lite is a high-level grammar of interactive graphics. It provides a concise, declarative JSON syntax to create an expressive range of visualizations for data analysis and presentation.     Talso  Node based, open source VFX Editor with powerfull interface and a ready to use libGDX runtime.     Scripting/Generative tools IN other tools #  Blender python API      Sorcar for Blender  procedural modeling node-based system for Blender     Adobe Extend Script  \u0026ldquo;A script is a series of commands that tells an application to perform a series of operations. You can use scripts in most Adobe applications to automate repetitive tasks, perform complex calculations, and even use some functionality not directly exposed through the graphical user interface.\u0026rdquo;     Krita SeExpr  Fills the layer with a pattern specified through Disney Animation‚Äôs SeExpr expression language. - note that this is for FILL layers in krita     Super resolution, frame interpolation, and other effects #  Waifu-2x  \u0026ldquo;Image Super-Resolution for Anime-style art using Deep Convolutional Neural Networks. And it supports photo.\u0026rdquo; - Works well on most things, not just anime art. The link is for a site where you can try it out online, but if you need to run it a lot you should probably run it locally. If you do I recomend this version is it\u0026rsquo;s compatible with basically any modern GPU. You may also want to check out Waifu2x-Extension-GUI     Drain-App  Dain-App is a free app that let you take any form of media like movies, stop-motion, anime, cartoons, sprites, etc and interpolate new frames, generating a bigger frame-rate from the original file. NOTE: drain-app only runs on systems with an NVDIA GPU     Neat auto lighting/shading software (Github pages site)  \u0026ldquo;[\u0026hellip;]. Based on this observation, we design an algorithm to both estimate the density of strokes in a digital painting using color geometry, and then generate novel lighting effects by mimicking artists' coarse-to-fine workflow.\u0026rdquo;  artwork traced by ToS2P from an artwork by David Revoy under CC-BY license, www.peppercarrot.com    Pixatool (15 USD)  convert \u0026lsquo;normal\u0026rsquo; art into pixel art     picbreeder  \u0026ldquo;Picbreeder is a collaborative art application based on an idea called evolutionary art, which is a technique that allows pictures to be bred almost like animals. For example, you can evolve a butterfly into a bat by selecting parents that look like bats\u0026rdquo;     Geon FX (10 USD)  Particle effects generator/editor     For Plotters #  vpype - aims to be the one-stop-shop, Swiss Army knife for producing plotter-ready vector graphics. Here are, for illustration, a few examples of what it can do:\nOther tools #  Sound Design #  There\u0026rsquo;s a LOT more tools listed in the music chapters, but there\u0026rsquo;s some more \u0026lsquo;for animation\u0026rsquo; tools here: rfxgen\nResources to learn Creative Coding #  Noise in Creative Coding (Varun Vachhar)\n As an aside, Simplex Noise is technically patented until Jan 8, 2022 (which is really fucking stupid)\n Making Perlin Planets (vinaybhaip.com)\nSome inspiration #  Python + Quantum Research = Art + Saving 1000s hours of CPU time (Reddit)\nGenerative Constellations (Reddit)\nIndra\u0026rsquo;s Net (Reddit)\n Seriously, the three above pieces are some of my absolute favorite pieces. I think about them a lot.\n Grant Custer\u0026rsquo;s Feed + Constraint.systems\nShadertoy\ngenerated.space\nEcho/printf to write images in 5 LoC with zero libraries or headers (Vidar\u0026rsquo;s Blog)\n10 innovative creative coding examples that are redefining programming (Shaping Design - Editor X)\nMETA: Hacker News Submission on this page, with a bit of discussion\n"}),a.add({id:96,href:'/phil/idea-labs/',title:"Idea Labs",section:"PHIL",content:"Communal Efforts #  [TODO] Shared Spaces #  Hacker Spaces Community Garden\nOpen Source hardware and software #  Different Ideas are better #   "}),a.add({id:97,href:'/phil/infrastructure/',title:"Infrastructure",section:"PHIL",content:"Infrastructure #  College Campuses Are Designed at Human-Scale. Our Cities Can Be Too. (StrongTowns.org)\nPower #  Gravity-based batteries try to beat their chemical cousins with winches, weights, and mine shafts\nLight Pollution #  International Dark Sky Association\nAir Quality #  A paradigm shift to combat indoor respiratory infection\nNetworking (Mesh) #  Housing and Land #  The People the Suburbs Were Built for Are Gone (Vice)\nLand Value Tax? #  Birth Lottery #  Where you\u0026rsquo;re born determines if you have access to even basic needs\n\nStatista "}),a.add({id:98,href:'/design/ia/',title:"Inspirational Artists",section:"DESIGN",content:"Inspirational Artists #  Added a lot of minor improvements, like camera limits, subtle lighting, dust particles and more #gamedev #pixelart #screenshotsaturday pic.twitter.com/KmSYW3iHml\n\u0026mdash; Luis Moreno Jimenez (@more8bit) September 2, 2017  Teenage Engineering\u0026#39;s OP-1 Synthesizer modules: pic.twitter.com/Jx5FEkiGK9\n\u0026mdash; Shadow Drop - R\u0026amp;D (@ShadowDropDev) August 18, 2017  Some really cool pixel art gifs by Mark Ferrari\n/// Caution some are NSFW /// https://twitter.com/halphelt (NSFW) https://twitter.com/Hushabye_Valley (NSFW-ish) https://twitter.com/koidrake (Like kinda lood I guess?)\nÊèè„ÅÑ„ÅüË¨é„Ç¨„Ç∏„Çß„ÉÉ„Éà„Åæ„Å®„ÇÅ pic.twitter.com/vWd4comxex\n\u0026mdash; „Ç¢„Ç´„Çµ„Ç´„Éè„É´ (@Akasaka_haru) April 6, 2020  üõ∞Ô∏è#pixelart #„Éâ„ÉÉ„ÉàÁµµ #animation pic.twitter.com/3UU12mfkoW\n\u0026mdash; 6VCR (@sixveeceear) May 15, 2020  proudly presenting BREAKER, an arcade game inspired by breakout, space invaders and ikaruga\n\u0026gt;\u0026gt; https://t.co/TaSGdkCslO \u0026lt;\u0026lt; pic.twitter.com/wlLJmhTY9A\n\u0026mdash; Daniel Linssen ü¶ä (@managore) April 6, 2019  i sell #generative plotter drawings. in the unlikely event that you haven\u0026#39;t noticed before. https://t.co/1FuhPZHNt3 #art pic.twitter.com/uaVcTGSPkk\n\u0026mdash; inconvergent (@inconvergent) May 20, 2020  not only is jazzpunk hilarious but its also super stylish? like i could share screenshots of this game forever just go buy it right now ok pic.twitter.com/GJheQKQoBA\n\u0026mdash; ·ïï( ·êõ )·ïó Tomality! @ Animal Crossing (@tomality) June 15, 2017  (Already made a key font based on @djrrb‚Äôs excellent Output Sans.) pic.twitter.com/udO7z4bRM6\n\u0026mdash; Marcin Wichary (@mwichary) August 18, 2017  hi, i draw things occasionally and do not exist #NobodyArtistClub #under10kgang pic.twitter.com/8X6nDbLOmN\n\u0026mdash; awr (@awr_hey) July 13, 2020  #OriginalContentArtist Showing off my series of cyberpunk vending machines #pixelart pic.twitter.com/imSqI0TDW2\n\u0026mdash; Kenze Wee (@Seppuku_Doge) July 14, 2020  Quick lay out of Sprout! There\u0026#39;s much that\u0026#39;s not included, but it covers the most basic stuff. I need to do more detailed close-ups later, but I\u0026#39;m alright with this for now. I love my weird futuristic alien seal! A reminder, Xyx is a /CLOSED/ species! pic.twitter.com/pk0kVdBOWt\n\u0026mdash; ÀóÀèÀã Kita ÀäÀéÀó @Homeüè≥Ô∏è (@KitaKettu) June 14, 2019  Blue wiggles pic.twitter.com/VUuc9WCLaQ\n\u0026mdash; Aki (@lethalbit) July 5, 2020  Work ‚Üì https://t.co/P6AwlNJGcU\nUsing only the pixels from the rendered to text to render the image pic.twitter.com/FYR6OIfouQ\n\u0026mdash; grant (@GrantCuster) July 6, 2020  movie night pic.twitter.com/7CAxDbSyzb\n\u0026mdash; picolo (@_gabrielpicolo) July 6, 2020  https://assetstore.unity.com/packages/tools/particles-effects/shapes-173167\n"}),a.add({id:99,href:'/music/instruments/',title:"Instruments",section:"MUSIC",content:"Instruments #  What is an Instrument? #  Okay, yeah, that sounds like a stupid question, but I think it\u0026rsquo;s important to think about. Wikipedia has it defined like this:\n A musical instrument is a device created or adapted to make musical sounds. In principle, any object that produces sound can be considered a musical instrument‚Äîit is through purpose that the object becomes a musical instrument. - Wikipedia   which, okay, that\u0026rsquo;s fair enough. But I think that has some issues. For one, not all devices that are played as instruments make sounds on their own. I have quite a few MIDI controllers sitting next to me, and while they send data about the notes I\u0026rsquo;m playing, they do not make sounds on their own- are they still instruments?\nSo, for the purposes of these pages I\u0026rsquo;ll consider an instrument to be defined not solely by sound, but by the interface. This may seem like an odd choice, but it is because technology has brought use to a point that it is often extraordinarily difficult to determine what interface is being used. I can play a guitar and hear a piano, I can play drums and hear a violin. The sounds, to some extent, have been decoupled from their physic forms.\nObviously, some interfaces are still better than others for making certain sounds. While I could detect each drum hit on a set of acoustic drums and map each to a different note on the piano, this will be far from a good way to play the piano, and may make playing chords impossible. Similarly, I could map drum sounds to each key on a keyboard (and this is often done) but it\u0026rsquo;s rather awkward to play.\nIn the first few chapters, Getting Started and Sound Sources, synthesizers were explored rather deeply - so why do this before talking about the more familiar realm of acoustic instruments, like a big ol' hollow body guitar or a drum set with membrane you can hit and feel?\nWell, because assuming you know how all of the physics of those systems work or have really good samples of the instruments or you only need to fill the same role as the sound (like needing a bass-heavy sound, but not a bass guitar) it really doesn\u0026rsquo;t matter if you have the physical instrument, so long as you have a good way to play the same sounds, that lends the same amount of expressiveness and control.\nExpressiveness and Control #  So, what do I mean \u0026ldquo;expressiveness and control\u0026rdquo;?\nWell, think about the difference between a piano and a guitar. On a piano, you may have hugely more strings, but you can only vary a few things (how hard you hit them, weather or not they get muted when you release the key) but on a guitar you can bend the strings, mute them with you hand, pluck them with different intensities, slide between notes, play hammer-on notes (play the next note on the string without plucking), etc. The guitar, despite it\u0026rsquo;s lack of strings, is often a much more expressive instrument than the piano.\nSo, this may seem like a no brainer, acoustic instruments offer more hands-on control and sound better than digital ones right?\nWell, most digital instruments give you a huge number of knobs than can be tweaked to get the sound exactly as you want, but that\u0026rsquo;s often not a fair comparison because it would be really hard to get a sound like a guitar if you hard to simultaneously play the notes on a MIDI keyboard and turn a huge number of knobs to match the same motion on a real guitar.\nFortunately, this isn\u0026rsquo;t what playing digital instruments has to look like anymore.\nThere are plenty of expressive digital controllers, that allow for just as much, if not more, control as a traditional acoustic instrument would. Here, for example, is a track played on the Roli Seaboard, which is a squishy keyboard where the pressure applied by each finger, how hard you strike initially, the vertical position of the finger all matter and the play can easily drag the finger across notes or wiggle their finger for a vibrato.\n \u0026ldquo;I\u0026rsquo;m a Guitarist/Drummer/Violinist and this isn\u0026rsquo;t right!\u0026rdquo; #  Woah there, I\u0026rsquo;m not saying your skills with a particular instrument are worthless or that knowing how to play an instrument well is a bad thing!\nI\u0026rsquo;m saying musicians shouldn\u0026rsquo;t be tied to their instrument. At most, you should be focused on your musical position. A drummer shouldn\u0026rsquo;t have to use acoustic drums to be a drummer, using a mix of a drum machine and MIDI drums should be seen as valid option. Similarly, a bassist shouldn\u0026rsquo;t be tied to their guitar. Often people couple the sound to the instrument, but there\u0026rsquo;s really no need to do so anymore. It used to be that trying to \u0026lsquo;fake\u0026rsquo; a bass guitar sound with a keyboard meant that you just can\u0026rsquo;t replicate everything the bass could do because a keyboard inherently lacks the control of the metal strings that you can bend, slap, and otherwise abuse. However, now with the expressiveness of modern controllers and the timbral diversity and quality of synthesizers, is basically the same (if not better) than that of any other instrument, and you gain the ability to explore sounds that would otherwise be impossible to reach on the acoustic instrument.\nEmulations of sounds aren\u0026rsquo;t bad, the interface to them was. That\u0026rsquo;s changed in the last few years.\nThere are limitations imposed by physical instruments that we\u0026rsquo;re used to hearing, like a guitars limit of 6-note polyphony as well as imperfections - like the background hum and string noise of an electric guitar or acoustic respectively. But, all of those can be (and are) emulated very well regularly, because just like vinyl they can be pleasant.\nThe value of the musician should be in their ability to inspire composition as they know how to push the sounds of their instrument and how to get the most out of those limitations, and if that\u0026rsquo;s the case, why should it matter if they\u0026rsquo;re using a 400 year old $100,000 violin or a good physically modeled synth- especially if even trained ears can not hear the difference, or think the digital one sounds \u0026lsquo;more real\u0026rsquo; on a regular basis. If they can use the knowledge from playing a physical, acoustic instrument and augment it with the flexibility and power of synthesis I see that as an absolute win.\nI still play my guitar, and I still record it into finished music, but I don\u0026rsquo;t necessarily think it\u0026rsquo;s superior to using that squishy keyboard, and I own one of those squishy keyboards along with my very expensive guitar. I do it because it\u0026rsquo;s fun. Similarly, it can be fun to watch- I think one of the big appeals of an orchestra is it\u0026rsquo;s spectacle. So, no, your skills with traditional instruments aren\u0026rsquo;t going anywhere and there\u0026rsquo;s still many good reasons to learn.\nThree more things:\n The physical limitations of an instrument will inspire how it is played. A drum machine can be programmed to have patterns that a real drummer could never do, but this isn\u0026rsquo;t always a good thing. Knowing both will make you better at both. Without proper respect for a digital instrument, it will sound just as bad as poorly played physical one. Just as it takes skill to play instruments with varying dynamics the same applies to digital instruments. Just as players in an real ensemble have to interpret notes and add their own \u0026lsquo;flair\u0026rsquo; to what they see as part of the translation from paper to sound, so do players of digital instruments- the problem here is that a computer will be extremely sterile- do not expect to just place notes on a digital piano roll and get anywhere near the same quality. If you want it to sound like it\u0026rsquo;s played by a human, you need to actually play it - even if the controller doesn\u0026rsquo;t match the sound (guitar sound on a keyboard or whatever)  Drums #  [TODO] list of types of drums\nTR808, syth, short ADSR, noise, snare, tom, kick, hat, clap, bell,\nGuitar Pedals For Drums (YouTube, JHS Pedals)\nWhy do drum sets have descending toms? (Low Volume Drumming)\n Strings #  guitar, lute, dulcimer, dual/single string, acoustic, electric, electroacoustic\nguitar pickups, slides, kapo, tuning (equal v just), wound, physical modeling (Kurplus Strong)\nhttps://grunfy.com/scaler.html\nThe History Of Guitar (Youtube, Rob Scallon)\nTuning a Floyd Rose Guitar (YouTube)\nMy New 18-String Hurdy-Gurdy (YouTube, Patty Gurdy)\nSynths #  Modular, semi-modular, software\nThe Design of the Roland Juno oscillators (Stargirl Flowers' Blog)\n  The Esoteric #  feedback only, no input. i love this instrument. pic.twitter.com/IR6lmxZGHJ\n\u0026mdash; ùíÜùíéùíéùíÇ (@HECKSCAPER) July 31, 2020  ùê°ùê®ùê∞ ùê¢ùê≠ ùê∞ùê®ùê´ùê§ùê¨: pedal rig rundown \u0026amp; building a sound (Emma Essex)\n     A neat on-guitar effects board (Instagram, ian.costabile)\nWhy To Modular With Guitar (YouTube, Knobs)\nOtamatone Metal - Rob Scallon\nTheorbo - The enormous 14 string lute (YouTube)\nDouble-sided Guitar Jam (YouTube)\nOctobasse: A really, really big upright bass (YouTube)\nAwesome Japanese Electric Harp!\nUsing a Violin Bow on a Guitar Sounds Incredible (YouTube, Music Is Win)\nCrazy Fast Robot Drummer (YouTube, Andrew Huang)\nShow Us Your Junk! Ep. 25 - Sylvia Massy of Studio Divine (YouTube, EarthQuaker Devices) \u0026hellip; She uses a pickle as a guitar effect\u0026hellip;\nDuesenberg Multibender - device to add 2+ string specific pitch bend arms to a guitar\n"}),a.add({id:100,href:'/interviews/interviews/',title:"Interviews",section:"INTERVIEWS",content:"If you would like to be interviewed #  Well, first of all I\u0026rsquo;d like to know what makes you interesting - so shoot me a message or open an issue on github.\n"}),a.add({id:101,href:'/phil/labor/',title:"Labor",section:"PHIL",content:"Labor and Compensation #  EU pushes for \u0026lsquo;right to disconnect\u0026rsquo; from work at home (dw.com)\nPlease Consider My Application to Give You Labor So I Can Stay Alive\nWorkplace Wellbeing Is a Scam (Tribune)\n Economic Inequality #   Source code (GPL v3), by Matt Korostoff Wage Theft is a Much Bigger Problem Than Other Forms of Theft‚ÄîBut Workers Remain Mostly Unprotected\nEx-Google Employee Exposes Unequal Pay With Spreadsheet (Wall Street Journal)\n[TODO] historical tax rates (the 91% tax bracket? Need to do more research on this\u0026hellip;), wealth tax\nA Megacorp is not your dream job (Drew DeVault\u0026rsquo;s Blog)\n  Universal Basic Income #   Work Life Balance #   Monopolies #  Unions #  Consumer protections #  best interest - Fiduciary TOS simplification\nHomelessness #  Job Obsolescence #  @dinoman_j on twitter "}),a.add({id:102,href:'/phil/law-and-order/',title:"Law And Order",section:"PHIL",content:"Law Enforcment and Judgment #  Trial of educated peers\nCriminal Rehabilitation #  end mandatory sentencing end bail no debters prision\n Divorce, Child Support #  Jury Duty #   Prosecutors \u0026amp; Public Defenders #    Police #  "}),a.add({id:103,href:'/phil/medical/',title:"Medical",section:"PHIL",content:"Healthcare Costs #  Why is life expectancy in the US lower than in other rich countries?\nWhite House wins ruling on disclosing health care prices (AP)\nDrugs #  Most drugs and prostitution should be legal at the age of 18. However, trafficking obviously not, and drugs must be sold by an individual with a licence to deal and said licence may be revoked if the product is sold with a false label or is tainted.\nSwords Comic CDXX Mental Health #  Secret Panel HERE üò≥ https://t.co/EFeSAtdlp0 pic.twitter.com/aKi1nOv5uW\n\u0026mdash; J. L. Westover (@MrLovenstein) January 6, 2021  "}),a.add({id:104,href:'/music/mix-and-master/',title:"Mix and Master",section:"MUSIC",content:"Mixing \u0026amp; Mastering #  Mixers #  mixer front ends, preamps, etc. Software mixing, etc.\nLoundness Monitoring #  https://youlean.co/youlean-loudness-meter/\ntalk about loudness and spotify\nMixing #  eq, pan, quadraphonic+\nMastering #  Delay Always Means Phase Shift But Phase Shift Does Not Always Mean Delay (YouTube, Dan Worrall)\n Studio Monitors, Headphones, and Amps #  @Tirrelous on Twitter  Here\u0026rsquo;s the list of all the specs you might want to understad if you\u0026rsquo;re looking to buy headphones or studio monitors. It\u0026rsquo;s a tad bit overwhelming, but I want to start with this so that you can get an idea of why this is complicated:\n Open Vs Closed back Headphones  Leakage   On Ear, Over Ear, \u0026amp; In Ear Ported or Closed Power \u0026amp; Impedance Size of Transducers Number of Transducers Type of Transducer  Moving Coil Planar Magnetic Balanced Armature, Bone Conduction, and Electrostatic   Frequency Response \u0026amp; Range  Harman Curve   Number of Amps (Single, Bi, Tri) Harmonic Distortion Transient Response (Slew Rate) Phase Response Imaging and Sound Stage Balanced cables/amp Active Noise Cancelation (ANC) Near, Far, and Mid-field Spatial Audio  2, 2.1, 5.1, 7.1, etc. Dolby Atmos   Room Correction, Active EQ Acoustic Treatment  Bass Traps   Cabinet Connections Amplifer Types  Class A, B, D, etc. Vaccum Tubes      Headphones #  For headphones there\u0026rsquo;s two main types: Open back, and Closed back. You may also see \u0026lsquo;semi-open\u0026rsquo;. That\u0026rsquo;s bullshit. They\u0026rsquo;re open.\nOpen, as the name implies, let the driver push air both ways and avoid the internal reflections. Down side? You hear everything around you, everyone around you can hear what you\u0026rsquo;re listening too, and there\u0026rsquo;s less bass. Up Side? The stereo imagining/soundstage (ability to hear where on a stage the instrument is ) is much better. Plus you can hear yourself talk, which can be nice at times.\nClosed back are the opposite. Most headphones are closed back. The headphones are sealed, less outside noise gets in, and people around you shouldn\u0026rsquo;t hear everything you\u0026rsquo;re listening to.\n Some crazy people use In Ear Monitors (IEMs - earbuds) instead of full headphones when making music. I\u0026rsquo;m not going to even consider it as an option even though there are some high end ones out there. It\u0026rsquo;s just\u0026hellip; no.\n So, which should you get? Well, if you can- both. It\u0026rsquo;s good to have multiple perspectives on a mix. If not, as with most things in life, it depends.\nIf you\u0026rsquo;re in a quiet enviroment, don\u0026rsquo;t need to record vocals, and care if the bass can literally rock your head, open are nice.\nIf you want to record vocals, have background noise, or just don\u0026rsquo;t care as much about having a spot-on sound stage, get closed.\nFinishing a track #  From this Interview of Jeremy Blake on martinyammoller.com -\n How do you know when a track is finished? #  With modular and hardware it‚Äôs easy: when the performance is done and I‚Äôve mixed and mastered it. With DAW-based stuff, it‚Äôs when I‚Äôve gone through all my iteration passes, like idea, arrangement, mixing, re-arrangement, ear candy, and mastering. I go by a rule of three approach: if I can listen to a track 3 times and not mess with it, it‚Äôs done. If something bothers me 3 times, I change it.\n "}),a.add({id:105,href:'/music/music-getting-started/',title:"Music Getting Started",section:"MUSIC",content:"Getting Started #  Here\u0026rsquo;s the part where I\u0026rsquo;m supposed to explain how to read music or something boring like that. Really though, that\u0026rsquo;s not why you\u0026rsquo;re here. So let me start by giving you a bit of motivation. In a bit I\u0026rsquo;ll be going though how to use VCV Rack, a free (with paid addons, but those aren\u0026rsquo;t necessary) program for making music. But as we go though each bit is going to look so -basic- that it\u0026rsquo;s hard to see the bigger picture. So, here\u0026rsquo;s that bigger picture: This track was made entirely with VCV rack:\nContent by Vega Deftwing Alright, with motivation out of the way, let\u0026rsquo;s make some noise! To do that though we\u0026rsquo;re gonna need just a few things: Go download VCV Rack from https://vcvrack.com/ and depending on your OS you\u0026rsquo;ll need some sound drivers, MAC guys, sorry, no idea. On Windows you\u0026rsquo;ll want to use ASIO, if you don\u0026rsquo;t know what that is just go grab http://www.asio4all.org/ and use that, on Linux you\u0026rsquo;ll want to use Jack https://wiki.archlinux.org/index.php/JACK_Audio_Connection_Kit. On Linux you may need to use a tool like Catia to actually connect the jack devices together (VCV to System Out) - for more Linux info check out Making Sense of The Linux Audio Stack on Venam\u0026rsquo;s Blog.\nGo ahead and fire up VCV and a template patch should have opened up that looks some thing like this: Windows guys, set your sound device to ASIO and fiddle around until you have sound working, Linux people RTFM, Mac people \u0026hellip; Something something CoreAudio I think? IDK. Ask someone that knows apple I guess. That default patch should respond to input when you mash keys so you can test your sound settings (assuming the MIDI-CV module is set to QWERTY keyboard as in the above screenshot and an audio device has been selected)\nFinal note on that, sound cards and their drivers/software (asio/jack/etc.) have a few important settings you should know about. First, is the \u0026lsquo;buffer size\u0026rsquo;. Frankly, this isn\u0026rsquo;t all the important to understand from a technical perspective but the gist is the lower the buffer size the lower the latency, and higher the higher the latency (latency is how long it takes for sound to come out after you hit a key and is bad); however, the lower the buffer size the more likely you are to have audio under runs, this makes your sound do this weird robotty sound like it was recorded on an Atari2600, make nasty beeps, or cut out entirely. The size you can set your buffer to will vary depending on the hardware you have in your computer, but generally I can get away with 128 and I\u0026rsquo;ll bump it up to 256 when working on large projects if I notice the above issues. You may need to try up to 512 or 1024 though.\nAlright, that pita outa the way, lets actually make some noise.\nThe reason we\u0026rsquo;re starting in VCV rack is it exposes a lot of the raw ideas and fundamentals of how music works behind the scenes, raw frequencies and modulation open to see. In that default patch there we start with a MIDI (Musical Instrument Digital Interface) input which outputs a \u0026lsquo;voltage\u0026rsquo; from the V/oct (Volt per Octave) output, which is fed into an VCO\u0026rsquo;s (Voltage Controlled Oscillator) V/oct input.\nWait. Big words. Stapphh.\nAlright. I\u0026rsquo;ll backup So VCV rack actually emulates real hardware systems called modular synthesizers. VCV emulates the Eurorack standard of modular synths in particular. Skipping some finer details for a moment, the standard defines one nice thing, and that\u0026rsquo;s the idea of 1 Volt per Octave note control. (If you don\u0026rsquo;t know anything about electronics that\u0026rsquo;s fine, but it might help here) In a real eurorack system the voltage running though the wires can range from -10 to +10Volts. Any wire can really be patched into any hole to get surprising results and all the signals are technically interchangeable, but generally in eurorack there are two categories of signals CV or \u0026lsquo;Control Voltage\u0026rsquo; and \u0026lsquo;Audio Rate\u0026rsquo; signals. The most common form of CV is this V/oct signal, where each volt represents a one octave change. A stable 0v (the same as no input) signal is \u0026lsquo;Middle C\u0026rsquo; or C4 where \u0026lsquo;C\u0026rsquo; is the note and \u0026lsquo;4\u0026rsquo; is the octave number. This is only \u0026lsquo;generally\u0026rsquo; the case, but just stick with it for now. When you strike a key on your keyboard VCV is interpreting that keypress as a MIDI event, and converting that MIDI signal to a virtual CV signal. So, if you happen to press the C note on the 4th octave, you\u0026rsquo;ll get\u0026hellip; 0v, no change, but if you were to hit the C note one octave higher (C5) the note should be noticeably higher pitch and the output from the V/oct port would be 1V. In fact because of how our music system works, an octave is exactly a doubling in frequency so while \u0026lsquo;C4\u0026rsquo; is 261.63Hz \u0026lsquo;C5\u0026rsquo; is 523.25Hz). If you hit a C#5 note though the output voltage will be 1.08333V because there are 12 notes per octave (A, A#, B, C, C#, D, D#, E, F, F#, G, G#) and 1/12 is .08333 which is added to the 1V from being up one octave from from middle C (C4)\n This is Stinkbomb\u0026rsquo;s hardware Eurorack. Real Eurorack hardware is incredibly expensive!\n Alright. Fuck that\u0026rsquo;s complicated. So, to boil that into a digestible chunk, you press a higher key, a higher voltage comes out, lower key, lower voltage. Keys above C4 will output a positive voltage, keys below a negative voltage.\nSo we hit a key, voltage comes from V/oct on the MIDI-\u0026gt;CV interface and goes to the Voltage Controlled Oscillator, which, as it\u0026rsquo;s name suggests uses these voltages to control how it oscillates (moves). The V/oct input directly manipulates the frequency, but there\u0026rsquo;s also this big honking frequency knob just begging to be twisted. That knob can be used to make it so 0V corresponds to a different note. For example, if we right click the frequency knob to enter a value directly, and enter \u0026lsquo;440\u0026rsquo; Hz that would make 0V into an \u0026lsquo;A4\u0026rsquo; note (A is a common reference pitch, as it\u0026rsquo;s just multiples of 110Hz so it\u0026rsquo;s easy to remember) Now each key will just be \u0026lsquo;transposed\u0026rsquo; that is they\u0026rsquo;ll all be shifted over a few notes.\nYou can also turn this knob to something out of tune to get things completely out of the classical scale. The fine knob below does the same thing, but gives you fine control (obviously)\nAlright, we\u0026rsquo;ll come back to the VCO later, but let\u0026rsquo;s follow the signal path a bit further. The VCO has a wire coming from the Saw wave output into a VCF or \u0026lsquo;Voltage Controlled Filter\u0026rsquo;.\nFilters are a huge part of making good sounding music as often you\u0026rsquo;ll have a good sound but it\u0026rsquo;ll have too much low or high end and you just want to cut it out. This filter actually has 2 outputs, one for a \u0026lsquo;High Pass Filter\u0026rsquo; (HPF) and one for a \u0026lsquo;Low Pass Filter\u0026rsquo; (LPF) as the names imply, a HPF lets high frequencies though and cuts the low end and a LPF cuts the high end but lets the low though. LPFs are generally used more as usually it\u0026rsquo;s more desirable to cut the harsh highs out of a sound than the humming, thumping lows. This is exactly what has been done in the default patch here. The final basic (filters get really complicated) thing you should know about a filter is how they have have a cut-off frequency. That is the point at which the filter starts cutting the sound. This is adjustable, so say with a Low Pass Filter we could set the frequency really low and only let though the lowest frequency sounds or set in nice and open to just cut out the really hissy stuff. We\u0026rsquo;ll talk about more complex stuff like resonance in a bit.\nThe need for this may seem a bit weird at first, as if we\u0026rsquo;re playing a note at exactly one frequency, say A at 220Hz, then why would we need to filter out anything? Well, most oscillators and real instruments alike will actually have multiple \u0026lsquo;harmonics\u0026rsquo;, that is it will play an A at 220, 440, 880, and so on with decreasing amplitude or even on other frequencies entirely that still have a musical influence on the signal. On the \u0026lsquo;VCO-1\u0026rsquo; Oscillator loaded into the default patch here you can lessen these harmonics by switching the ANLG (Analog) and DIGI (Digital) switch on the right. This is because this oscillator can emulate either an \u0026lsquo;ideal\u0026rsquo; digital oscillator which outputs a clean, sharp signal with less harmonics or an analog signal oscillator which includes a subtle amount of pitch drift and some smoothing of the output wave- of note, usually the analog characteristics, while technically flaws, are desirable.\n The top VCO is outputting an \u0026lsquo;analog\u0026rsquo; emulating signal while the bottom is in digital mode. Look at how the Triangle output shape on the analog mode is smoothed out compared to the digital mode\u0026rsquo;s sharp edges\n You\u0026rsquo;ll also notice there\u0026rsquo;s a third wire running into the filter though- into an input labeled \u0026lsquo;freq\u0026rsquo;. This input modulates the filter\u0026rsquo;s cut off frequency. You wont visually see the knob change but you will hear the filter\u0026rsquo;s cut off change based on the signal applied to this input but only if the \u0026lsquo;Freq CV\u0026rsquo; knob is turned up. The \u0026lsquo;Freq CV\u0026rsquo; knob is what\u0026rsquo;s known as an attenuverter (a portamento of \u0026lsquo;Attenuator\u0026rsquo; and \u0026lsquo;Inverter\u0026rsquo;). This knob, when facing dead center says \u0026lsquo;let nothing though\u0026rsquo; while all the way right lets the full signal (from the freq input) though, and all the way left lets the full signal though but inverts it first. Leaning right but not all the way will \u0026lsquo;Attenuate\u0026rsquo; or weaken the signal first. I think you get the idea.\nSo say we put the big \u0026lsquo;FREQ\u0026rsquo; knob dead center, and give the \u0026lsquo;FREQ\u0026rsquo; input jack wire carrying a very slow sine wave that goes between 0 and 10V, and set the \u0026lsquo;FREQ CV\u0026rsquo; knob all the way right: This will bring the cut off higher and higher from it\u0026rsquo;s starting position, and then bring it back to the starting level. If we instead turn the \u0026lsquo;FREQ CV\u0026rsquo; knob all the way left, it\u0026rsquo;ll bring the cut off frequency lower before turning back around and coming to it\u0026rsquo;s starting position. Putting it at a slight lean right will still do the same as we started with, but will have less of an impact, making the sound much less \u0026lsquo;jumpy\u0026rsquo; and tame. Really, that\u0026rsquo;s what attenuverter\u0026rsquo;s are for, taming an input signal.\nHere, I\u0026rsquo;m showing modulating the filter frequency manually as well as showing what resonance is- it boots the signal right at the cut off frequency\nHere, the input to the cut off frequency is modulated with an \u0026lsquo;LFO\u0026rsquo; or Low Frequency Oscillator, which much like the VCO outputs a simple signal, but in this case the signal is low frequency, usually below human hearing range:\nAlright, that\u0026rsquo;s fine and all, but the cable going input to the \u0026lsquo;FREQ\u0026rsquo; control on the VCF is coming from something called an \u0026lsquo;ADSR\u0026rsquo;\nSo the adventure continues. \u0026lsquo;ADSR\u0026rsquo; stands for \u0026lsquo;Attack, Decay, Sustain, Release\u0026rsquo; and it does exactly that. But before we understand the output of an ADSR we have to look at it\u0026rsquo;s input- \u0026lsquo;Gate\u0026rsquo; and \u0026lsquo;Retrig\u0026rsquo;\n\u0026lsquo;Gates\u0026rsquo;, in modular, are simply a positive (sometimes needing to be 5V or higher) signals that represent that something is happening. Usually, that a key is being held. And that\u0026rsquo;s exactly what\u0026rsquo;s going on here. When you hold a key the \u0026lsquo;Gate\u0026rsquo; output of the MIDI-\u0026gt;CV module is active. When you release it, the output goes off. You can see this by looking at the green indicator light where the gate output is on the MIDI-\u0026gt;CV module when you hold or release a key. \u0026lsquo;Retrig\u0026rsquo; is similar, though it only outputs a short pulse every time you press a key. This is handy because you may press a second key while already holding one key, meaning the gate output should stay on, but the retrig output will have sent a pulse each time you pressed a key (once when you pressed the key your holding, another time when you press a different key while still holding the original key).\nSo, back to the \u0026lsquo;ADSR\u0026rsquo; an ADSR generates a signal that looks like this:\nThat is, voltage will follow this shape over time. The \u0026lsquo;Attack\u0026rsquo; knob sets how long it takes to reach the peak point, the Decay knob set\u0026rsquo;s how long it will take to reach the sustain level, the sustain knob set\u0026rsquo;s at what level the sustain should be held at, and the release knob set\u0026rsquo;s how long the note should take to fade out from the sustain level after the key is released. Take note, the sustain knob controls a level, while the other three control time:\nAlright, so when the ADSR get\u0026rsquo;s a gate signal it\u0026rsquo;ll go though the Attack and Decay stages and wait at the Sustain level until the Gate is released or a Retrig signal is sent telling the ADSR to repeat the Attack and Decay stages.\nSo, this output signal is fed to two places, the first is the frequency knob we saw before. This will result in the frequency cutoff going high then coming down to a reasonable level, then cutting down to just low frequencies as a note is released. The other place the signal goes is into the mixer:\nThe mixer in this demo patch is super simple. It has 4 inputs, with one output. The sliders let you set the level of each input, and the \u0026lsquo;CV\u0026rsquo; input of each slider let\u0026rsquo;s you externally control the slider. Because the ADSR is fed into this input and the ADSR output is at 0V unless you hit a key the mixer actually mutes the signal until a key is pressed and then lets it play, fading out over the release period. The mixer also has one big volume knob ontop to set the master output volume of all 4 channels combined. Essentially the volume follows this shape of the ADSR signal over time. In times like this, the ADSR signal is called the \u0026lsquo;envelope\u0026rsquo; for the sound. Really, the mixer is just a combination of multiple of a simpler component though, the VCA or Voltage Controlled Amplifier. This name is a bit misleading though, as really VCAs are usually used to bring a sounds volume down, like an attenuator. To show the simplest case I\u0026rsquo;ll hook up a LFO to control a VCA\u0026rsquo;s level, in turn changing the level of the signal passing though:\nAlso, above you\u0026rsquo;ll see I used a 3rd party oscillator instead of the VCO-1 you\u0026rsquo;ve seen so far. Pictured is \u0026lsquo;Basal\u0026rsquo; from the \u0026lsquo;Vult-Free\u0026rsquo; collection of modules available on the VCV library page.\nFinally, the output of just the first channel of the mixer is fed into the scope so that when you press a key you can see the signal your generating. To understand this it\u0026rsquo;s easiest to just drag the cable coming out of the VCO\u0026rsquo;s \u0026lsquo;SAW\u0026rsquo; output to the VCO\u0026rsquo;s \u0026lsquo;Sine\u0026rsquo; Output. Now when you press a key instead of seeing a saw wave you should see a sine wave.\nFinally, I want to mention that at least by default this setup is \u0026lsquo;Monophonic\u0026rsquo; (Mono = One , Phonic = Voice) meaning that even if you hit 2 keys at once you\u0026rsquo;ll only hear the note from the last key you pressed. We\u0026rsquo;ll explore Polyphonic (Many Voice) and Paraphonic (Para = beside, or side by side) systems later.\n Now that we have that mess out of the way let\u0026rsquo;s talk shop and drop back into our rack. This time Let\u0026rsquo;s start with a mostly clean slate. Make sure you can still get sound out, then remove every module except the Audio module. Alrighty, now we can get to business.\nLet\u0026rsquo;s make a simple generative track, to start with we\u0026rsquo;ll need some drums. Here\u0026rsquo;s what we\u0026rsquo;ll be setting up:\nSo first, let\u0026rsquo;s break each module down by function. The uGraph module (2nd on left) is a generative trigger sequencer, it generates drum rhythms for us. It has it\u0026rsquo;s own built in clock, but an external clock signal can be provided (turn the clock knob left until it says Ext. then provide a clock input that\u0026rsquo;s multiplied by the rate specified in the clock res box, in this case it wants 4ppqn or peaks per quarter note, so, if you want to a 120 bpm drum line, you\u0026rsquo;ll want to send a clock signal that\u0026rsquo;s multiplied by 4. Some modules will sync on 1ppqn or 24ppqn, etc. So, just be aware that you may need to multiply your clock signal some times.) though here we\u0026rsquo;ll use the internal clock. This module sends out 6 triggers, where the three \u0026lsquo;accent\u0026rsquo; (Acc) triggers are a strict subset of the main trigger outputs, that is there will only be an output on Acc when there is an output on Trig, but not always. uGraph will generate the three trigger sequences such that the left most trigger output \u0026lsquo;fires\u0026rsquo; the least often and the right most the most often. This works well for setting up a common drum machine with kick, snare, and hat sounds so that the hats are frequent, the snare less so, and the kick a steady beat, but not overpowering. Of course, this isn\u0026rsquo;t how you have to use it, and you can always add more trigger output patterns in VCV simply by sending two uGraph modules the same clock. Again, for now one module is fine. Finally, it\u0026rsquo;s notable that this pattern will repeat, but a new pattern can be selected with the Map X and Map Y knobs.\nAlright, so uGraph is generating the drum triggers, think of it like the human swinging the drum sticks, but with only uGraph in there\u0026rsquo;s nothing to hit. so let\u0026rsquo;s add the basics. Grab a small Nysthi Mixers as pictures 2nd to last above and hook it up to an audio module as well. Then, grab the Erica PicoDrums module and place it in. Now, hook up two of the trigger outputs to the picoDrum\u0026rsquo;s TR1 and TR2 trigger inputs, take the PicoDrums output to the mixer. After turning down the mixer module\u0026rsquo;s master out a bit to make sure you don\u0026rsquo;t play too loud of a sound, hit \u0026lsquo;run\u0026rsquo; on the uGraph module. Currently, both of the drum sounds on the PicoDrum are set to the same sample, so you\u0026rsquo;ll want to move the big \u0026lsquo;ctrl\u0026rsquo; knob at the top to select a different sample on drum1, then switch to drum2 with the switch, and pick a good sample for drum two as well. You should now have a good drum pattern started!\nThe problem with the PicoDrum module is that it has some baked in drum sounds that can\u0026rsquo;t be changed (well, okay, the real eurorack version they can be, which actually makes it a good value, but I digress) but the sounds are still samples, that is they\u0026rsquo;re just audio files being trigged to be played back. So, why not use something where we can pick our own sample?\nYou\u0026rsquo;ll need some drum samples to get started, so just to get you started here\u0026rsquo;s a decent sample pack: https://soundpacks.com/free-sound-packs/nyc-drum-kit/\nDownload, extract, etc. that folder and in VCV place the \u0026lsquo;Player\u0026rsquo; module as pictured above. Right click the module, select \u0026lsquo;Load Sample\u0026rsquo;, and use one of the sounds in the folders. You should now be able to trigger the player module and get sound out of it the same as the PicoDrum module. You can mess with some of the controls to get a feel for what you can do with the player Module. If you\u0026rsquo;re having fun with that, you may want to look at the \u0026lsquo;Simpliciter\u0026rsquo; module from Nysthi for an even more advanced sampler (also check the \u0026ldquo;samples\u0026rdquo; section below).\nAll of this is cool and all, but we\u0026rsquo;re just playing back and manipulating sound files so far, so, let\u0026rsquo;s look at the next type of drum: synthesized drum. Synth drums can be made to sound very close to real drums (this is generally called physical modeling, you\u0026rsquo;ll hear the term a lot more for string synth sounds though) but can give sounds that no real drum would be capable of either. In the patch above I have \u0026lsquo;Meta\u0026rsquo; from starling generating a low bass drum sound, but you can generally tweak synth drums into whatever sound you want, albeit some module will be better at different sounds, for example Vult\u0026rsquo;s \u0026lsquo;Trummor\u0026rsquo; modules excel at kick and bass drums. You can also make synth drums from basically anything just by thinking about the sound a drum makes. Generally, a drum is just a sound with a really sharp attack and a pitch that changes at it releases, so, this, while not the best, is a decent drum sound:\nanyway, so now the last relevant part of the above patch worth understanding is the slew is just making it so we get a nice envelope generated by the Acc output, that slew is changing the pitch decay time on the synth drum (Meta) so that on accent outputs the low drum lasts a bit longer and has a slightly different sound. Just look at the signal on a scope in VCV if you don\u0026rsquo;t fully get it.\nA bit of an aside #  Secret Panel HERE √∞≈∏Àú¬∂ https://t.co/i8H7WlWRbO pic.twitter.com/BJOfoxNzCg\n\u0026mdash; J. L. Westover (@MrLovenstein) January 9, 2021  Some people will try to get you to try various substances to be creative, to make better music, etc.\nIf you want to get high or drunk, go for it- but don\u0026rsquo;t let it turn into a creative crutch. You don\u0026rsquo;t need it.\n"}),a.add({id:106,href:'/music/music-hardware/',title:"Music Hardware",section:"MUSIC",content:'Music Hardware #  While you could make all of your music with just computer, you‚Äôll probably want some tools that make your life as a musician easier and let you explore ideas faster. Like I said back in the Audio Effects Chapter, in my experience, making music depends on a really quick brain to input device feedback loop. Being able to turn a physical knob and mash physical keys will often lead to better results if only because you‚Äôre able to try things both faster and by physically interacting with something that you may not have thought of otherwise. It‚Äôs why guitars, MPE keyboards, and Eurorack are so great: they all give you a crazy amount of control and expression that is literally at your finger tips. The brain to input interface there is just so much better.\nSo, while I don\u0026rsquo;t think you should go crazy deep into hardware and spend your life savings, there\u0026rsquo;s some things that just make sense to get, like a good keyboard MIDI controller, some knobs, and at least one realllly expressive instrument like a guitar or MPE controller. Something that really lets you feel what you\u0026rsquo;re playing.\n First things first, I also want to go over the difference between Digital and Analog in music hardware:  Digital: 1010111010010010110100101110101\nAnalog: ‚àø‚àø~‚àø~‚àø‚àø‚àø~‚àø‚àø~‚àø~‚àø‚àø‚àø~‚àø‚àø~‚àø\n var myInterval = setInterval(function() { var da = document.querySelector("body  main  div  article  div:nth-child(5)  div:nth-child(2)  p.dshift").textContent; var daa = da.replace(/10/g, "01").replace(/100/g, "010").replace(/000000/g, "111111").replace(/11111111111111111111111111/g, "10100111111001111111000110").replace(/110/g, "010"); document.querySelector("body  main  div  article  div:nth-child(5)  div:nth-child(2)  p.dshift").textContent = daa; var db = document.querySelector("body  main  div  article  div:nth-child(5)  div:nth-child(2)  p.ashift").textContent; var dbb = db.replace(/‚àø~/g, "~‚àø").replace(/‚àø~~/g, "~‚àø~").replace(/~~~~~~/g, "‚àø‚àø‚àø‚àø‚àø‚àø").replace(/‚àø‚àø‚àø‚àø‚àø‚àø‚àø‚àø‚àø‚àø/g, "‚àø~‚àø~‚àø‚àø‚àø~‚àø‚àø").replace(/‚àø‚àø~/g, "~‚àø~"); document.querySelector("body  main  div  article  div:nth-child(5)  div:nth-child(2)  p.ashift").textContent = dbb; }, 400); //Let it be known that I have absolutely no idea what I\'m doing (I don\'t know js) and that I only wanted a quick and dity solution. It works.    A quick note before you read anything further: you can only hear an analog signal. At the end of the chain, everything needs to be analog, as ultimately sound waves exist not as the 1‚Äôs and 0‚Äôs of binary, but as waves of pressure in the air- which is an analog medium.\nTo start, let‚Äôs look at an all-analog signal path. Here, a guitar string is plucked, the signal is picked up by the guitar‚Äôs pickup (as the metal string causes a magnet to move, generating a weak electrical signal), the signal is amplified (twice), and then the amplified signal is used to move a speaker cone, which in turn moves the air, so you can hear it.\n Note, I‚Äôve drawn a light gray cable along side all the analog signals. This is the ground cable. Audio circuits are no different from any other circuit, and require a full, well, circuit. A circuit is a full loop, with ground. Where the cables come out of the amplifier, I‚Äôve drawn these two wires much more distinctly, with a red wire- meant to visualize the ‚Äòlive‚Äô wire that carries the signal- and gray wire the ground. This is by convention. If you ever have to wire up an amplifier, you‚Äôll probably see one red and one black wire, representing these in turn. In many cases (but definitely not always), things will still work if you get these backwards, but you‚Äôll end up with audio that is out of phase, as your signal is quite literally flipped. In the case of a guitar amp with a single speaker, this probably won‚Äôt matter. But, if you have two speakers (left and right) and only flip one, this is very likely to make things sound awful.  Hopefully that made sense, now let\u0026rsquo;s look at a digital setup. Keep in mind even the most digital of paths needs to end in analog so that there\u0026rsquo;s something for you to hear.\nHere, a digital keyboard is hooked up to a laptop, presumably running some sort of sound-generating software - Maybe a DAW or VCV Rack. Here I\u0026rsquo;ve shown the audio Interface (labeled DAC) as an external box hooked up over USB, but this could also just be internal to the computer. All computers or phones will have an internal audio interface, it\u0026rsquo;s just that most musicians end up attaching their own that offer better features.\nHere, everything on the blue cables is digital, it\u0026rsquo;s only 1\u0026rsquo;s and 0\u0026rsquo;s. The first cable is only carrying information about what note you\u0026rsquo;re playing and knobs you\u0026rsquo;re turning, while the second one (between the laptop and the the DAC) is carrying digital information that represents the audio, but it hasn\u0026rsquo;t yet been turned into an analog signal. That\u0026rsquo;s the job of the DAC. It takes those 1\u0026rsquo;s and 0\u0026rsquo;s and turns it back into an analog signal.\nOften you\u0026rsquo;ll hear the terms Audio Interface, Sound Card, and DAC used interchangeably. They\u0026rsquo;re not all the same thing, but generally it\u0026rsquo;s the part that turns the digital signal into an analog one. If you\u0026rsquo;re plugging a guitar or microphone into your computer, the terms Audio Interface and Sound Card still apply, but in that case you\u0026rsquo;re using an ADC. I\u0026rsquo;ll come back to this in a bit.  If youre confused about how digital 1\u0026rsquo;s and 0\u0026rsquo;s can represent an analog signal in the first place, refer back to samples in Chapter‚Äà2 - Sound Sources. For more information on how Digital to Analog and Analog to Digital conversion works, check out this video from xiph.org.\nSome devices may have almost everything in this chain internally. This is true of a lot of digital instruments, like the Elektron Digitakt pictured here:\nThe Digitakt is a drum machine that uses samples saved internally as .wav files. It\u0026rsquo;s basically just a very specialized computer in a box.\n   Though the really confusing thing to beginners is when the device is digital, but has both analog input and outputs. Just like there\u0026rsquo;s a DAC (Digital to Analog Converter) for analog output you\u0026rsquo;ll often be working with ADCs or Analog to Digital Converters to take your analog input and use it on your computer (or internally, like in a digital guitar pedal)\nFor the most basic possible example, let\u0026rsquo;s look at a bit-crusher and sample rate reducer pedal. These pedals basically just hook a DAC directly into an ADC, then let you purposely mess up the conversion.\nBit crushing, as explained back in the effects chapter, is just purposefully reducing the range of values a sample of digital audio can be. So, while an 8-bit audio point can be any whole number up to\n  \\(2^8 = 256\\)  , a lower-bit sample might only be able to be represented by  \\(2^6 = 64\\)  possible values, which will really start to sound pretty distorted. Similarly, sample rate reduction distorts the audio by intentionally limiting the rate at which new digital samples of the input audio are acquired. As long as samples are gotten at a rate at least twice that of the highest frequency in the input audio, there will be no difference, but as this goes below that, the converter simply doesn\'t get enough data to reproduce the input signal.  This effect is inherently digital. It\u0026rsquo;s really just purposely doing digital to analog conversion poorly. If we want it as a guitar pedal, that means the pedal has to first convert the analog signal to digital, then convert the digital signal back to analog.\nnote, this isn\u0026rsquo;t meant to be a real schematic. It\u0026rsquo;s heavily simplified.    Hopefully that was enough to get you up to speed on the basics of analog vs digital. Unfortunately, while some gear is obvious (A normal acoustic guitar is analog, a MIDI controller is digital) some music gear really blurs the lines, or even twists them outright. The Behringer DeepMind line, for example, is a purely analog synth with digital control\u0026rsquo;s and a big ol\' screen. Meanwhile, the Modor NF-1 is a digital synth that looks and tries to emulate the sound and feel of analog equipment. Plus, there\u0026rsquo;s a ton of synths now that have analog oscillators and filters, but then do DSP (Digital Signal Processing) based effects or the other way around- with digital oscillators and analog filters. What I\u0026rsquo;m trying to say is, it\u0026rsquo;s complicated.\nThere are a lot of \u0026lsquo;Analog Purists\u0026rsquo; out there, who will claim an analog oscillator just sounds better, or that it adds something extra to their sound. To some extent, they\u0026rsquo;re not wrong. But, I think this is also largely because people are comparing often free digital sources and effects to analog ones and, as with most things in life, you often get what you pay for. I\u0026rsquo;d actually argue that in most cases, paid digital tools and hardware is a better value than the analog gear. (1)(2)(3) What I\u0026rsquo;m trying to say is, in most cases, weather or not a tool is analog or digital shouldn\u0026rsquo;t really factor into your choice of what to buy. Your choice should be determined by what sounds good, what is enjoyable to play, and if the device offers all the features you need and want. In very few cases will a device being analog be a \u0026lsquo;feature\u0026rsquo; that matters.(4) Instead, the feature that matters with analog gear is often the hands on feel that usually comes with a device being analog, like all the articulations that a player can get out of a guitar.(5) At the same time, this isn\u0026rsquo;t exclusive to analog instruments anymore, as MPE controllers (I\u0026rsquo;ll get to them later) have made it possible to get a TON of expression out of a digital controller, arguably more than I can out of my guitar- so again, the guitar being analog isn\u0026rsquo;t the feature that mattered. When buying gear, try to dig down and ask yourself why you want a tool - for how it sounds, how it feels to play, etc. - and ask yourself if there\u0026rsquo;s competing products that meet the same needs, then you\u0026rsquo;ll easily avoid the elitism that analog purists bring with them.(6)\nA few more notes:\nI want to point out that there is a valid concern that your ADCs and DACs are of decent quality. Some people are crazy about this and want to spend thousands of dollars on brand name ADCs and DACs, but honestly I\u0026rsquo;ve found that it\u0026rsquo;s more just a matter of \u0026lsquo;is it good enough\u0026rsquo; is really just the bar to hit, as long as it\u0026rsquo;s not causing a ludicrous amount of noise and can capture enough of the dynamic range (difference between playing softly and loud) of your instrument you\u0026rsquo;re good to go. In my experience, USB powered devices tend to have the worst time with noise, as the power going in is so \u0026lsquo;dirty\u0026rsquo; that the DAC/ADC ends up putting this noise into the signal. A lot of equipment will discuss this in regard to the Signal to Noise Ratio (SNR).\nSome people get crazy about sample rate. For a final recording there is absolutely no reason to exceed 24bit/48khz audio. Even that is really overkill. On the other hand, during recording there can be rather significantly audible differences in oversampled (that is 80khz+) audio, as the virtual instruments have more headroom to work with to avoid a side effect of digital audio called aliasing. You can learn more about this in Samplerates: the higher the better, right? from FabFilter on YouTube. \nFinally, I want to briefly mention that as you add more equipment, you\u0026rsquo;re very likely to run into an issue with ground loops. If you plug in a piece of gear and start hearing a hum or significantly more noise, this is likely the problem. Check out 6 simple and cheap ways to fix hum, buzz and ground loop noise from Loopop on YouTube.\n Hopefully that all made sense and you feel a bit less lost about both the differences between analog and digital, and why it is probably one of the most divisive topics in music hardware. Let\u0026rsquo;s move on barreling though all the technical crap so we can get to the fun stuff later on. Let\u0026rsquo;s start with something you\u0026rsquo;re already familiar with, but dive in a little deeper: A normal ol\' audio jack.\nTRS? 3.5mm? ¬º inch? #    Your normal every-day headphones that you\u0026rsquo;d plug into your phone (or did. Thanks Apple (¬¨ÔΩ§¬¨)) use a 3.5mm Tip Ring Sleave cable. If your headphones have an in-line mic, they\u0026rsquo;re probably TRRS. The difference, as this meme shows, is how many \u0026lsquo;rings\u0026rsquo; are on the connector. Normally, for headphones, the Tip would carry the left channel, the Ring the right and the Sleave the common ground for each. If there\u0026rsquo;s an inline mic, the connections usually go Left, Right, Ground, Microphone on the TRRS pins respectively.\nDon\u0026rsquo;t assume all devices will support the TRRS headsets with mics. Some devices will have a dedicated microphone in line, and others will just omit it outright.    But, because nothing can ever be simple, that\u0026rsquo;s not always the case. Enter, balanced audio.\nWhile uncommon for 3.5mm cables like most headphones, on a lot of pro audio gear that uses the much beefier ¬º inch jacks will use a TRS cable to carry a mono signal.\n[TODO] Balanced, XLR,\nTypes of Hardware Controls #  Keys, Buttons, and Switches #  Potentiometres, Sliders, and Encoders #  +Motorized, Wheels\nLEDs and Feedback #  Interfacing #  DIN, TRS-A, TRS-B, USB, USB host adapters, etc.\nclock jitter\n[TODO] Building a MIDI Controller Using Arduino (YouTube, Switch \u0026amp; Lever)\nNote, there\u0026rsquo;s a pretty limited number of MPE capable instruments, thankfully there\u0026rsquo;s stil a decent price range between them. This list is not exhaustive, but I think gives a good sampling:\nSmall:\nArtiphon Orba\nRoli Lightpad Blocks\nHaken Audio ContinuuMini\n Big:\nExpressive e - Osmose (Demo)\nRoli Seaboard (Block, Rise)\nLinnStrument\nHaken Audio Continuum\n  Audio Interfaces #  [TODO, ADAT, preamps, headphone amps, phantom48, Hi-Z, Lo-Z]\n Weird side note:\nSome VOIP software (Discord, Zoom, etc.) may want you to use a Sample rate of 48Khz and a Buffer size of 192. No clue why.\n Headphones/speakers #  [TODO studio headphones V regular]\n[TODO openback v Closed]\n[TODO Planar magnetic]\n[TODO Quadraphonic, Atmos, 5.1, etc]\nEurorack #  Modular Grid an online tool for dreaming about hardware setups (Eurorack, Guitar Pedals, and a few other modular formats)\nCool Hardware #  Blokas Midihub\nNovation LaunchPad X\n launchpad.py - python library for the Novation Launchpad Line r_cycle for Pure Data Library *most Launchpads  T1 Algorithmic Midi Sequencer\nSixtyfour pixels MIDI controlled relay\nSixtyfour pixels \u0026lsquo;Noodlebox\u0026rsquo; sequencer\nSixtyfour pixels \u0026lsquo;Hack-Du-Strum\u0026rsquo;, a page feautring mods of their strummable controller, similar to an omnichord\nSleepy Circuit\u0026rsquo;s \u0026ldquo;Hypno\u0026rdquo; CV live visuals box\nNotes on Hardware NOT to buy #   The Teenage Engineering Pocket Operators are cool, fun, etc. But they\u0026rsquo;re pretty fragile and have some issues. Generally, I don\u0026rsquo;t think they\u0026rsquo;re worth it. Here\u0026rsquo;s Some alternatives (Yes, I know there\u0026rsquo;s a huge price difference- remember, you get what you pay for.)  Analogue Pocket DityWave M8 or, if you\u0026rsquo;re feeling spendy, the OP-1 and OP-Z are options. Each have their own quirks though, so be sure to do your research. Regardless, I really don\u0026rsquo;t recomend the TE PO\u0026rsquo;s   The non-mini Launchkey Series from Novation. They keybeds are absolute shit. I had to mod my Mk2 to make the pads work, and the mod wheel has issues too. It\u0026rsquo;s just\u0026hellip; not good.  Notes on how your hardware will be more expensive than you think #  [TODO] Balanced audio, group loop isolation, impedance matching, isolated power supplies, cables \u0026hellip; so many cables\nDAWless? #  DAW-less just means not using a Digital Audio Workstation to make your music, usually though this means not using a typical computer at all. Here\u0026rsquo;s a good example of a DAWless performance:\n 10 Things You NEED to know before Building a Dawless Synthesizer Setup (YouTube, BoBeats)\nPlus, digital tools won\'t suffer as much from the issues with tuning, latency compensation, the need to worry about a noise floor, etc. Digital aliasing might be a problem, but even that can usually be worked around. To point out my own hypocrisy now, I\'m really into Eurorack, which is an inheritly analog, and stupidly expensive, medium. Making music isn\'t all logic. If you think a certain tool will just work well for you, you shouldn\'t deny its value just because something else may provide the same function. Form matters. Your enjoyment matters. To me, there was inherit value in the joy of working with real patch cables and the physical knobs, even if VCV Rack is the \'better\' tool and doesn\'t cost a full months rent per module. Okay, So, yes. There is some concern about everything in (1) with digital stuff. Latency compensation with digital tools is still a thing. Your midi controler will still have a delay. A digital hardware synth will still send an analog audio signal out, which will have some latency. MIDI clock may not get distributed around your system perfectly, resulting in issues as well. I\'m meaning in general. Like, if you want to record a guitar in and hear any DSP effects you have on the chain in your DAW in real time, you\'ll have to compensate for that full round trip time, which can easily set you off beat a solid amount when recording in. Plus, most analog instrument are not balanced audio, so there will be some noise getting in compared to the complete lack of noise in a software source/effect or the very minimal noise of that from a balanced audio source. If you have no idea what this means, that\'s fine, I\'m about to go over it. This is just to prevent some really early \'um, acktually\'. All that is to say, analog gear is generally a bigger PITA to deal with than digital gear, and often the claims for why to go analog are total shit; however, some of the issues with analog gear are actually just issues with any hardware music tool.  Distortions and anything with feedback is the most obvious counter point, and I\'ll concede on that one. Digital distortion, drive, and feedback based effects are almost universally worse sounding and eat up a ton of digital resources on your computer. String bending, plucking, strumming up or down, palm muting, how hard you pluck, whammy bars, harmonics (a type of playing), slapping the strings, slapping the body, tuning live... The guitar is an extraordinarly hands on instrument, it doesn\'t make just one sound.  If you pick the analog gear because it does offer something better, looks cooler, or it\'s cheaper for some reason there\'s obviously no shame in that. Your decesion was still educated. That\'s what matters. '}),a.add({id:107,href:'/music/music-software/',title:"Music Software",section:"MUSIC",content:"Music Software #  Some tools on this page are not-free. As such, I\u0026rsquo;ve tried to list prices as best I can. Music software usually goes on sale pretty significantly around Black Friday or Christmas, so when I can, I\u0026rsquo;ve tried to list \u0026lsquo;street\u0026rsquo; prices. Regardless, I\u0026rsquo;m not affiliated with any of these projects in any way and I don\u0026rsquo;t make any money from these links- so don\u0026rsquo;t complain to me if the prices are wrong ‚ïÆ(‚îÄ‚ñΩ‚îÄ)‚ï≠ Digital Audio Workstations+ #  A Digital Audio Workstations is software that allows you to record and edit audio, host and play digital instruments, arrange the parts in a time line, and mix the audio together. The most common DAWs you\u0026rsquo;ll see are Ableton Live (Often called just \u0026ldquo;Ableton\u0026rdquo; or \u0026ldquo;Live\u0026rdquo;) and FL Studio, but there are plenty of other options as well, many of which are listed below.\nThe definition of a DAW is a bit fuzzy, as tools like VCV Rack and Audacity- both of which we\u0026rsquo;ve seen previously- have features that make them very DAW like and can be used to make full tracks (assuming you have hardware instruments to record into Audacity)\nBefore you look at this list I want to stress that every DAW has its issues.\nAbleton Live #  Ableton Live isn\u0026rsquo;t very stable (lacks plugin sandboxing), has a mediocre piano roll, makes modulation a bit of a pain. Its main feature is its popularity, as there is a ton of educational content, great hardware support, and a fair amount of Ableton specific plugins. As the name implies, it also works pretty well for live recording, and has the best audio stretching and quantization, meaning even if you play slightly out of time it\u0026rsquo;s easy to fix.\n GOOD\n  Popular Great hardware support Access to Ableton only plugins - Including Max4Live Great audio quantization    BAD\n  Piano Roll sorta sucks Unstable (No plugin sandboxing) M4L devices needed to do many basic things Modulation is often awkward     VCV #  VCV isn\u0026rsquo;t really DAW, so lacks good ways to do automation and complex sequencing, at least without work arounds. For generative music, it\u0026rsquo;s still probably your best bet.\nReaper #  Reaper is incredibly feature full and probably technically the best DAW but it\u0026rsquo;s user interface is pretty bad and requires a lot of menu diving, to the point where in my opinion it\u0026rsquo;s totally unusable. It does offer the ability to view what you\u0026rsquo;ve put into your piano roll as actual sheet music and It\u0026rsquo;s hugely customizable, with multiple user-facing programming options- ReaScript and JSFX. If you\u0026rsquo;re already a highly technical user and don\u0026rsquo;t mind getting your hands dirty with code, need a sheet music view, or want something with incredibly low CPU overhead, Reaper is probably your best choice.\nAudacity #  Audacity, like VCV, isn\u0026rsquo;t a DAW. It\u0026rsquo;s really just an audio editor. It\u0026rsquo;s free and open source, and while the UI isn\u0026rsquo;t great, you\u0026rsquo;ll be hard pressed to find anything better for doing quick edits or recording in a few clips. Full songs could be made in audacity, but it\u0026rsquo;s not made for that.\nReason #  Reason [TODO]\nRenoise #  Renoise is a neat combination of a modern DAW and old school trackers. This means there is no classic piano roll, but instead the notes are entered as text into a vertical display. Usually raw samples of audio are used as instruments, and this lets you do neat things like specify a sound to be played backwards, be rapidly rolled, panned per note, etc. Generally, trackers are associated with a few specific genres- most notably Chiptune and Jungle\n Deflemask #  Deflemask [TODO]\nSunvox #  Sunvox [TODO]\nGarage Band #  Garage Band [TODO]\nProTools #  ProTools [TODO]\nLUNA #  LUNA [TODO]\nOscistudio #  Oscistudio [TODO]\n[TODO] why are none of these good\nNot everything in this list is a true DAW, some are more aptly called overgrown audio editors, but may be good enough for some users     Name \u0026amp; Link Price Description Screenshot / Demo     VCV Rack Free     Reaper      Bitwig-Studio  Bitwig is a lot like Ableton, but has the neat idea of \u0026lsquo;The Grid\u0026rsquo;- basically a little built in modular synth system. It\u0026rsquo;s not like VCV, as it\u0026rsquo;s a bit lower level but it can still be used for Generative Music or doing complex routing, like fading between effects. It also has really easy to use routable modulation, basically letting you drop an LFO, envelope, etc. onto any parameter of a VST. https://www.bitwig.com/overview/   Audacity Free Not a full DAW, but super useful for trimming audio and quick fixes    Renoise      Deflemask      Sunvox Free on desktop, paid on mobile     FL-Studio      Oscistudio      Ableton Live      Reason      GarageBand      Pro Tools      Marabu  \u0026ldquo;Marabu is a free and open-source music tracker built from Soundbox.\u0026rdquo;     NOTE: this list is far from exhaustive. Instead, I\u0026rsquo;ve tried to list the main ones and some that I think are particularly cool.\nDigital Audio Workstations or \u0026lsquo;DAWs\u0026rsquo; come in many flavors, so let\u0026rsquo;s look at the differences between the above in depth [TODO]\nTrackers, vs non liner, vs modular, etc.\n[TODO] \u0026lsquo;Luna Recording System\u0026rsquo;\nHow To Ableton Like a Pro (YouTube)\nLive Coding Tools #     Name \u0026amp; Link Description Screenshot / Demo     SonicPi     ORCŒë  Learn Orca Extra Tools for ORCA:  Cassetter for ORCA Aioi - UDP to complex OSC for ORCA  Pilot - 16 voice synth for ORCA    Noton A minimal logic gates playground, written in ANSI C. Made by the same developers as ORCŒë    Chuck \u0026ldquo;Chuck is a programming language for real-time sound synthesis and music creation. It is open-source and freely available on MacOS X, Windows, and Linux. Chuck presents a unique time-based, a concurrent programming model that\u0026rsquo;s precise and expressive (we call this strongly-timed), dynamic control rates, and the ability to add and modify code on-the-fly. In addition, ChucK supports MIDI, OpenSoundControl, HID device, and multi-channel audio.\u0026rdquo;    Mutateful Requires Ableton Live \u0026ldquo;enables live coding in Ableton Live\u0026rsquo;s session view. Set up transformations that trigger whenever a source clip is changed, including arpeggiation, shuffling, and ratcheting/retriggering.\u0026rdquo;    Pure-Data and Purr Data (a better fork)     Zerobrane Studio and Moonlet     Krill Krill is a livecoding environment inspired from TidalCycles.    TidalCycles     Mosaic     Overtone - Live Code     Tweakable     Siren (Github) Tracker meets livecode    FoxDot Livecoding with Python    Extempore Lang \u0026ldquo;Extempore is a programming language and runtime environment designed to support cyberphysical programming\u0026rdquo;    Bespoke Software modular synth    Music Pattern Generator Music Pattern Generator is an app to create musical rhythms. It sends MIDI data, so it won‚Äôt make any sounds by itself. For that you need to connect it to MIDI soft- or hardware that can handle MIDI data to produce sound.     VSTs and other Plugins #  [TODO] Daws usually have built in instruments and effets I Made A Song Using Only Ableton Stock Plugins (YouTube, Composerily)\nThis is probably where the most bias of any of the lists on this page will show as I obviously can\u0026rsquo;t list every possible VST. Instead, I\u0026rsquo;ll list those that I think are particularly good both in terms of value and function.  VSTs are a really weird standard, for one, unlike most standards that are ratified by a collection of involved interests, VST is the child of a single company - Steinberg.\nGenerally, there are a few things you need to know:\n Some VSTs are distributed as VST2 others as VST3, obviously one is newer than the other. Unfortunately, not all DAWs support VST3 and worse, new applications by new devs have to be VST3 due to Stienberg no longer issuing new licenses. Generally, VST2 will be downloaded as .dll files while vst3 will be .vst3  VST3 does support a few extra features, and tend to perform better Some VST3\u0026rsquo;s can do neat stuff so that if multiple instances are loaded they can communicate together, this is useful for some mastering plugins.   Some VSTs are 64 bit, some are 32 bit. Not all modern DAWS support running 32bit VSTs VSTs can do 1 (or a mix of) three things  act as a virtual instrument (guitar, synth, etc.) act as a virtual effect (delay, reverb, etc.) act as a midi effect (arpeggio, quantizer, etc.)    There are some other, not-VST plugin formats you may encounter, namely LV2 and Apple\u0026rsquo;s Audio Units, as well as the various plugins for particular DAWs, like Reason\u0026rsquo;s \u0026lsquo;Rack Extensions\u0026rsquo; or Ableton Live\u0026rsquo;s M4L (Max For Live) Devices.\nWhile VST3 does have a linux SDK, most plugins aren\u0026rsquo;t released for Linux. You may still be able to make it work using a bridging program like Yabridge.\nYou may also see VSTi or VSTfx, these aren\u0026rsquo;t anything new, \u0026lsquo;i\u0026rsquo; or \u0026lsquo;fx\u0026rsquo; just denote if the plugin is an instrument or effects plugin.\nFree (But might have better paid version) #  Audio Sources #     Name \u0026amp; Link Description Screenshot     Ample Percussion Cloudrum Steel Tongue Drum    Alter Ego Virtual Singer, Text to Speech    Dexed Yamaha DX-7 Emulation    Surge Synthesizer FOSS hybrid synth    Daichi Synth 1 Emulation of Nord Lead 2, but better. You\u0026rsquo;ll probably want the preset pack    Distocore Bazz::Murda Bass Drum maker, looks like it fell right out of 2004.    Kairatune     Lord Of The Springs Physically modeled synthesis with a bunch of Springs    Helm     Vital  Spectral warping wavetable synth (Free and Paid tiers)     Effects #     Name \u0026amp; Link                                           Other #     Name \u0026amp; Link Description Screenshot     Signalizer VST  An amazing VST Oscilliscope, Vectorscope, and general analysis tool                                   Paid (But might have limited free version) #  No prices are listed below because they can fluctuate so much. VSTs and other music software tends to go on sale a lot, and usually quite good sales at that. You probably shouldn\u0026rsquo;t pay full price!  Audio Sources #     Name \u0026amp; Link Description Screenshot     ABL3 Emulation of the classic TB303. You can buy a Behringer hardware clone for not much more, but this is easier to use imho, and Behringer is a horrible company so please don\u0026rsquo;t support them.    Various from SugarBytes I really like Consequence - Chord GroveboxFactory - Mod Matrix PolysynthGuitarist - Guitar Emulation, easy to programDrum Computer - Drum SynthObscurium - I don\u0026rsquo;t even know, but it\u0026rsquo;s cool.Cyclop - Neat Synth, good for bassEgoist - Weird audio stem re-groover?Thesys - MIDI Sequencer     Various from Artuira (Go to Software Instruments) CS-80 V - CS-80 EmulationDX7 V - DX-7 Emulation, better UI than the free \u0026lsquo;Dexed'SEM V - Oberheim Sem EmulationModular V - Moog Modular Emulation (Could just use VCV)Pigments - Artuira\u0026rsquo;s take on a modern digital VST synth it\u0026rsquo;s pretty awesome                         Effects #     Name \u0026amp; Link Description Screenshot                                         Other #     Name \u0026amp; Link Description Screenshot                                         Kontakt Libraries #  Music Apps (Android) #     Name \u0026amp; Link Description Screenshot/Demo     FractalBits     Sunvox     Grainstorm     WaveEditor     Kaossilator     Hexpress     SynprezFM     NodeBeat     OSCSurface     Spectroid      Websites #  Google Drum Machine (Like XO)\nTools dependent on other hardware or software #  Max4Live Devices These devices only work inside of Ableton Live using Max For Live\nlil' pup - \u0026ldquo;Tools for generative music and live performance\u0026rdquo;\nSurvey - \u0026ldquo;Survey acts as a kind of macro control for your project‚Äôs most important parameters. Save collections of settings across multiple devices and tracks for simple recall or to creatively morph between them.\u0026rdquo; $20\nScenery - Convient ambience tool $10\nCartographer - \u0026ldquo;When the Follow feature is engaged, the Loop Brace will always follow the set‚Äôs playhead, meaning you‚Äôre ready to loop whatever you‚Äôre listening to at any given moment without breaking your flow.\u0026rdquo; $5\nSwatches - Easily recolor everything in Ableton Live\nClyphx old, free version \u0026amp; Clyphx Pro - Scripting Language for live, seriously recomend this one. Paid version is $43.33, not sure it supports the latest live or is getting worked on?\nMagenta Studio - AI based MIDI generator for live. Honestly spits out some really good progressions. Can do drums, extent what you\u0026rsquo;ve writen for a melody, and a lot more. Tons of fun.  Various tools from Zuzuki Kentaro - these include some great complex complex modulation tools that are free, along with paid tools ranging from granular synths and reverbs.\nNestup - \u0026ldquo;[\u0026hellip;] approaches rhythm in a completely new way. It embeds Nestup‚Äîa powerful language for expressing complex rhythms‚Äîdirectly into Live.\u0026rdquo;  Szk! Devices - A bunch of crazy devices, including fractal and chaos tools. Some real crazy stuff here\nCtrl-Z\u0026rsquo;s Talk To Machines - weird ASCII‚ÜíBinary‚ÜíMIDI conversion as well as some DNA inspired stuff\n4phgp by Ferenc Vincze - a free \u0026lsquo;Four Playhead Granular Player\u0026rsquo;\n  Monme Norns Devices  I previously maintained a \u0026lsquo;best of\u0026rsquo; list for Norns scripts, but the community has now made a much better resource https://norns.community JSFX and Scripts for Reaper DAW https://github.com/JoepVanlier/JSFX   These \u0026lsquo;plugins\u0026rsquo; only work on Monome\u0026rsquo;s Norns hardware\nSegments Audio Looper\noooooo - 6x digital tape loops (demo below)\n   View this post on Instagram         A post shared by infinitedigits (@infinitedigits) on Aug 29, 2020 at 4:35am PDT\n  euclidigons - euclidian sequencer but not like that‚Ñ¢\n  Audio backends #  [TODO]\nWindows #  ASIO #  Direct Sound #  WSAPI #  Linux #  Seriously check out Making Sense of The Linux Audio Stack on Venam\u0026rsquo;s Blog. It\u0026rsquo;s a rather painfully long read, but if you\u0026rsquo;re trying to do Linux audio it\u0026rsquo;s probably less painful than trying to figure it all out by stumbling though it.  ALSA #  Pulse Audio #  Jack #  A few programs you wouldn\u0026rsquo;t expect to run directly though jack, one of the more annoying is Telegram. To fix Telegram at least, just use alsoft-config and go to Backends-\u0026gt;General, then right click Disabled backends and add JACK.  Pipewire #  Really weird stuff that doesn\u0026rsquo;t fit elsewhere #  https://github.com/oakes/ansiwave\n"}),a.add({id:108,href:'/phil/opphil-old/',title:"OpPhil Old",section:"PHIL",content:"Old Version, needs migrated: #  Because you\u0026rsquo;re now somebody in the know about topics relating to technology and have a deeper understanding about issues that may effect the public, such as The FBI V Apple encryption case, Issues regrading internet speed and infrastructure, or The Government/NSA spying on people. There are plenty of issues that weather you like it or not you\u0026rsquo;re one of the few with enough information to truly understand and inform your peers. A well known digital writes and freedom advocacy group you may consider supporting is the Electronic Frontier Foundation or EFF, as they do some absolutely incredible work making sure we maintain our digital rights both in the role of consumers as well as hackers, tinkerers, security researchers and nerds. You may consider checking out Free press as well, though above all else educating yourself and others about issues to end ignorance and fear when it comes to these issues is more valuable than anything else.\nFurthermore, there\u0026rsquo;s a general view in the technical community that we should help push adoption of superior platforms. This is usually either for a push for decentralized services like Mastodon or Dat, or a push for FOSS (Free and Open Source) software like Linux or LibreOffice.\nMost in the technical community believe that you should have full control over the devices you own. This is a major factor in why so many technical people host their own servers and build a lot of the crazy things they do. As a result you\u0026rsquo;ll hear a lot about rooting or getting superuser or root on various devices as well as Right to Repair.\nMany in the tech community are on the heartbeat of issues surrounding copyright, fair use, and the Digital Millennium Copyright Act or DMCA as without exceptions, a lot of security research would not be legal and it\u0026rsquo;s of direct importance to issues like software piracy and issues surrounding YouTube\u0026rsquo;s automated ContentID [TODO: add links]\nMoving on from that though, there is increasingly a concern about energy consumption and environmental consequences of technology use. Data centers alone are already consuming over 2% of the worlds electricity and that number is set to grow exponentially in the coming years. Because of this having a light, fast, http://motherfuckingwebsite.com/ instead of a bloated, JavaScript heavy page actually matters. http://gauthierroussilhe.com/en/posts/convert-low-tech as well as https://solar.lowtechmagazine.com/2016/05/how-to-go-off-grid-in-your-apartment.html are good sites that go more in depth on this issue. Now, at the same time, I\u0026rsquo;m not going to act all high and mighty, my desktop and monitors use in excess of 300w, but it is still something to be mindful of.\nFinally, I\u0026rsquo;d like to make a few notes about online communities, trolling, hate speech, and the like. Clearly the tech industry leans significantly on the liberal/libertarian side; however, most of us also strongly support your right to say whatever you like even if we don\u0026rsquo;t support it. This is particularly frustrating when it comes to large, non-grouped online communities like Twitter or Tumblr where except by blocking, everyone is in the same public sphere instead of isolated. While the isolation can have negative effects too, like echo chambers where false information and hate breed, the smaller communities are also beneficial as they allow for a better sense of community and for individual moderation policies decided by the users instead of awkward rules like Tumblr\u0026rsquo;s NSFW ban and the chaos that ensued. Clearly the lines between hate speech and trolling and free speech are a problem online, and frankly the internet is young. We haven\u0026rsquo;t really figured out the right way to handle it yet. Should Twitter have the right to remove the Alt-Right or are they to important of a political forum to deny freedom of speech despite being a public company? Is it ethically okay to use services like Tor for privacy when by doing so you\u0026rsquo;re indirectly helping people get away with things like child \u0026hellip; abuse (I don\u0026rsquo;t want this document getting flagged by something, ironically). Or because the tools are going to exist regardless and criminals will always find another way is it okay? The truth is, it\u0026rsquo;s not black and white, and it\u0026rsquo;s well worth your time to sit down and consider what you are personally okay with and what you think, as a society, we need to change and how we might go about doing that. Personally, I think services like Mastodon which offer security and privacy while keeping individual communities free to handle themselves are the best option, but they\u0026rsquo;re also more complicated. Just know that decision you make online can have real world consequences, and that at the end of the day, there\u0026rsquo;s a human on the other side of that screen.\nOther interesting Case Studies #  https://www.nytimes.com/2017/04/30/business/traffic-light-fine.html https://arstechnica.com/tech-policy/2018/08/verizon-throttled-fire-departments-unlimited-data-during-calif-wildfire/\nFinally, a little less NSFW, the Maker and engineering communities also tend to overlap rather heavily with more artistically minded and sub-culture heavy groups, ranging from those obsessed with comics to anime nerds or furries. I really recommend you do at least a little research into various sub cultures and geek culture to better understand some of the people you\u0026rsquo;ll probably interact with. You might just find something new you enjoy while you\u0026rsquo;re at it.\n[TODO, add info about digital sex toys]\nAlso, because this got a bit heavy for a bit, let\u0026rsquo;s touch on Rule 34. We all know it, but where does it come from? 4Chan of course. Here\u0026rsquo;s the full set:\nTODO #  Education, college, prices, highschool homework and personal time, Drugs,\nShould I block ads?\nAlexa without the creep\nRationalWiki\nInteractive Media Bias Chart (Javascript heavy)\nr/TheMotte (Reddit) - Seems like a good place to test ideas,haven\u0026rsquo;t looked into it yet\nsocial networking: re: mastodon, tilde.club/town , webrings, IRC, Telegram, etc.\nmisc todo:\nhttps://www.reddit.com/r/politics/comments/hgt81r/outrage_mounts_over_report_russia_offered/fw6ereb\nhttps://www.reddit.com/r/ThatLookedExpensive/comments/gptu7t/john_connor_doing_his_part_fighting_for_the/frqo31d?utm_source=share\u0026amp;utm_medium=web2x\nhttps://www.reddit.com/r/politics/comments/ff54xc/trump_flatly_admits_hed_leave_americans_stranded/fjwpqub?utm_source=share\u0026amp;utm_medium=web2x\nhttps://www.reddit.com/r/news/comments/eyd0mb/rush_limbaugh_announces_he_has_lung_cancer/fggkmdg?utm_source=share\u0026amp;utm_medium=web2x\nadd critism of tiktok, grubhub, Behringer, etc, and avoiding assholes the \u0026ldquo;A bag of dicks\u0026rdquo; argument\n"}),a.add({id:109,href:'/music/other-resources-music/',title:"Other Resources, Music",section:"MUSIC",content:"Other Resources #  PatchStorage - A community of many active audio \u0026amp; visual programming enthusiasts who share and discuss their projects!\nhttps://learningmusic.ableton.com/\nhttps://codepen.io/teropa/full/bRqYVj/\nSynchronized Swept-Sine: Theory, Application, and Implementation\nAutoEq (Github) - Automatic headphone equalization from frequency responses\nCool People #  https://twitter.com/RichardDevine https://twitter.com/LOOKMUMNOCMPUTR\nhttps://twitter.com/electricdahliia\nhttps://t.me/thePatchBay - some shameless self promo, as this is my chat.  Neurotypique https://www.youtube.com/channel/UC4oBI5piGMznFMZdtEC0FhA\nOmri Cohen, a Rack Master\u0026rsquo;s YouTube Channel\nLoopop RedMeansRecording AdamNeely AndrewHuang Rob Scallon Pipe Organ Video (YouTube), Theorbo Video (YouTube),\nReddit: https://www.reddit.com/r/vcvrack/ , https://www.reddit.com/r/synthesizers/ , https://www.reddit.com/r/synthdiy/ , https://www.reddit.com/r/modular/\nMaking your own music software and hardware #  [TODO] compare VCV to programming, filters, etc\nDSP Resources\nSpectral Audio Signal Processing by JULIUS O. SMITH III at the Center for Computer Research in Music and Acoustics (CCRMA)  The Scientist and Engineer\u0026rsquo;s Guide to Digital Signal Processing By Steven W. Smith, Ph.D.\nAwesome MusicDSP (Github)\nTom Erbe, Design the Erbe Verb (YouTube)\nhttps://zserge.com/posts/etude-in-c/ \u0026amp; https://zserge.com/posts/beep/\nDiospyros - Search-based compiler for high-performance DSP programming\nThink DSP - DSP in Python, Free book\nVult DSP Programming Language  Hardware\nA Transistor-less sound synthesizer (Hackaday, Jenny List, Dr. Cockroach)\nChua oscillator on CRO during inductance sweep\nhttp://www.doepfer.de/DIY/a100_diy.htm\n As a quick note, there are a ton of possible options when choosing what to use as hardware for devloping audio hardware. You can go full analog, work with dedicated DSP hardware, use microcontrollers with full FPUs, use single board computers, use an FPGA (Like on the Rainmaker), or try to get by on a 328P (Arduino Uno). The most important part is making something, don\u0026rsquo;t stress too much about what you use to do it- but don\u0026rsquo;t use something prohibitively expensive or outright garbage (like the 328P) either, unless you know what you\u0026rsquo;re doing. The STM32\u0026rsquo;s with FPU\u0026rsquo;s are probably a good bet.\n Software\nAwesome Audio Visualization (Github)\nKord (Github) - a music theory development framework in python\nTutorial: Programming Modules for VCV Rack - Part 1 (YouTube, Leonardo Laguna Ruiz) (This might be out of date)\nTutorial: Virtual Analog Modeling Basics, the Vult way (YouTube, Leonardo Laguna Ruiz)\nRust For DSP\nLearn Modern C++ by Building an Audio Plugin w/ JUCE Framework (YouTube - freeCodeCamp.org)\nMisc Music Tips and Tricks #  A great way to clean up your mix is to side-chain your time based effects. Check it :) @Ableton #ableton #AbletonLive pic.twitter.com/oXSrXWPlcN\n\u0026mdash; Kermode  ï‚Ä¢·¥•‚Ä¢ î (@Kermode_Music) April 16, 2021  "}),a.add({id:110,href:'/phil/phil-and-the-internet/',title:"Phil and The Internet",section:"PHIL",content:"The fight for the Internet is never ending. At the time of writing, Senate Majority Leader Mitch McConnell tried to tie anti ¬ß230 legislation to the $2000 stimulus checks, and my own Congress Critter, Ben Sasse (R,Nebraska), along with Jeff Merkley (D,Oregon) are trying to push though SISEA - the Stop Internet Sexual Exploitation Act, which on paper sounds like it\u0026rsquo;s doing good to stop the possibility of revenge porn. Unfortunately, they want to do this by requiring that all people in porn expressly give the site written consent with identity verification. This is exceedingly stupid for a variety of reasons:\n This is essentially a restriction on free speech as it makes it illegal for sites to host content that users would very likely want to be able to publish anonymously. It puts established sex workers at risk, as if a site were to get hacked, or rather when a site gets hacked as it\u0026rsquo;s inevitable, that information could be used for a huge variety of horrors. It also seeks to add a 24/7 support line to report content, and limits content in violation to be taken down in under 2 hours. This will be huge burden for legitimate sites, and encourage users to go to much darker corners of the internet where content is freely updated, but where the sites have no incentive to comply with laws that are sensible for protecting minors or other vulnerable people. It super-ultra fucks undocumented sex workers  The fact that they can claim \u0026ldquo;oh lookie it\u0026rsquo;s bipartisan!\u0026rdquo; is really just them trying to sneak a fucking porn ban though. Fuck that.\nPlease call and write your congress critters, and let them know this is some stupid bullshit. Then ask your friends to do so as well.\nYou can use Find My Representative (house.gov) if you need to look up who represents you.\nIf you\u0026rsquo;re outside the US, this will still very likely affect you. Hell, PornHub is a Canadian site, but they\u0026rsquo;ll still likely have to comply, so please still spread the message.\n Politics and The Internet #   The important laws you need to understand: #  CDA (no pronz) \u0026amp; ¬ß230 #  Hazbin Hotel Pilot (Viziepop, YouTube)   The Communications Decency Act of 1996 (CDA) was the United States Congress\u0026rsquo;s first notable attempt to regulate pornographic material on the Internet. In the 1997 landmark case Reno v. ACLU, the United States Supreme Court struck the act\u0026rsquo;s anti-indecency provisions.\n Communications Decency Act (Wikipedia)   Alright, so it was some failed law that tried to ban porn? Well, yeah, BUT it did pass and was only later, in the afforementioned Reno v ACLU case, struck down - and there, only the anti-indecency provisions. This left one very, very inportant little bit, Section 230, that today the entire internet relies on, The 26 words that created the internet:\n No provider or user of an interactive computer service shall be treated as the publisher or speaker of any information provided by another information content provider\n In human language, this means Section 230 is what protects Facebook from being liable when some dipshit posts a pirated movie to Facebook, makes a terrorist threat, or just spreads libel. Similarly, it gives the platforms moderation privileges, that is if some nazi joins your group chat, you can give him the boot.\nThe big problem right now is weather or not fact checking, where a little box shows up under a tweet or YouTube video to say something like \u0026ldquo;Science knows Climate Change is man made and a big fucking problem\u0026rdquo; or \u0026ldquo;Biden won the election, stop being such a little bitch\u0026rdquo; is allowed, or if it makes the site a publisher, there by taking away their ¬ß230 protections.\nHere, this video covers everything I could say a lot better than I can easily write here, so here\u0026rsquo;s the two things I\u0026rsquo;d say are pretty much required reading, Section 230 is Good Actually (EFF.org) and this video from DEF CON:\n DMCA (attempting to fix 230, poorly) #  Alright, so 230 made sites not liable at all (ish) but this actually isn\u0026rsquo;t great either, as what is someone supposed to do if they get their copyrighted work posted online? No reasonable person (or business) can afford to sue literally every time someone posts their shit, so, the DMCA - the Digital Millennium Copyright Act- was born, to steal from Wikipeda:\n It criminalizes production and dissemination of technology, devices, or services intended to circumvent measures that control access to copyrighted works (commonly known as digital rights management or DRM). It also criminalizes the act of circumventing an access control, whether or not there is actual infringement of copyright itself.\n But this has a whole host of issues. I\u0026rsquo;m going to redirect this to This page from the EFF though, as I think that does a much better job of explaining the issues, and then you might want to read This list of Criticisms of the DMCA on the Wikipedia page for the DMCA.\nMore recently, the DMCA takedown of YouTube-dl, a program that lets users download videos from YouTube among many, many other video sites, was a big issue that riled up the technical world, and for which it seems most people think was a flagrant misuse of the DMCA against a tool, not a specific instance of infringing content. Extra stupid when you realize the computer itself could also be argued to be the tool enabling infringement.\nThe abuse of automated, algorithmic takedowns for the sake of keeping up with the DMCA has also resulted in cops playing music to prevent videos from being on social media (VICE).\nExceptions #  Alright, so the DMCA is dumpster fire burning with a raging satanic hell blaze which only emits darkness, but thankfully the sentient darkness that represents the American people has carved away a few crumbs that we can use to sustain ourselves with in these dire times. The list below are things for which you can safely outright ignore the DMCA and break into things as you please. I\u0026rsquo;ll go over my favorites, but here\u0026rsquo;s the list in full on Wikipedia.\n Ebooks can be stripped for the sake of using a text-to-speech system Snippets of Movie/Video DRM can be stripped for the purposes of criticism/review, education, and accessibility While not directly stated, an exception for \u0026lsquo;Jailbreaking\u0026rsquo; and \u0026lsquo;Rooting\u0026rsquo; Iphones and Androids was made, so that\u0026rsquo;s allowed. Forcing 3D printers to use 3rd party filament \u0026ldquo;Computer programs, where the circumvention is undertaken on a lawfully acquired device or machine on which the computer program operates solely for the purpose of good-faith security research and does not violate any applicable law\u0026rdquo; In general, if you\u0026rsquo;re doing it so you can repair the device, you\u0026rsquo;re all clear as well.  FOSTA/SESTA (Breaking 230) #  FOSTA and SESTA (Wikipedia), the \u0026lsquo;Fight Online Sex Trafficking Act\u0026rsquo; and \u0026lsquo;Stop Enabling Sex Traffickers Act\u0026rsquo; are both massive failures. Their original goal is more or less in the name, but even the U.S. Department of Justice said it was a bad idea. Again, I\u0026rsquo;m going to hand this off to better sources. The first link there, to the wikipedia article, has a large section on the criticism of the bills. I strongly encourage you read it, and this article from the EFF does a good job of going into its problems too.\nThese are the bills that caused Craigslist to remove their \u0026lsquo;personals\u0026rsquo; section.\nSOPA \u0026amp; PIPA (Trying to break everything) #  SOPA, or the Stop Online Piracy Act (Wikipedia) from ~2012 was a big deal at the time. Google, Facebook, Twitter, Amazon, eBay, Tumblr, Mozilla (Firefox), Mojang (Minecraft), Wikipedia, and more were all active in letting users know this bill was bad news. It was effective, but it was one hell of a fight. PIPA (Wikipedia), the \u0026lsquo;PROTECT IP Act\u0026rsquo; was just the senate version of the bill, but it is still worth reading up on it quickly, especially the \u0026lsquo;Reception\u0026rsquo; section of the linked Wikipedia article.\nFor a slightly dramatized, dubstep recap: (skip to 2:28)\n COPPA \u0026amp; CIPA (Breaking things\u0026hellip; For the children!) #  COPA (Wikipedia), the Child Online Protection Act, passed in \u0026lsquo;98 and seeks to keep minors online safe, mostly this just resulting in the \u0026lsquo;Are you 18?\u0026rsquo; checks that surely no minor has ever lied to bypass.\nOh, what\u0026rsquo;s that, that\u0026rsquo;s COPA with one \u0026lsquo;P\u0026rsquo;, my bad, here\u0026rsquo;s COPPA (Wikipedia), Child Online PRIVACY Protection Act. which if you read up on you\u0026rsquo;ll see has been a mess for free speech, hurts small business, fails to protect kids anyway, and only seeks to create an artificial (and broken) \u0026lsquo;safe space\u0026rsquo; online for kids, which is especially dumb as it ignores the most obvious problem: no kid wants to be treated like a kid. Moreover, why the fuck should kids get privacy protection until 13 and then ope, just like that fuck em\u0026rsquo; we\u0026rsquo;ll collect all their information and sell it to advertisers, what magical thing happens at 14 that makes collecting and selling your data okay?\nCIPA (Wikipedia), the Children\u0026rsquo;s Internet Protection Act, is a free speech fuck you to all children as it requires web filtering. The ACLU and ALA both challenged CIPA, arguing that the filtering it would necessitate at public libraries would limit free speech, and they won\u0026hellip;. and then lost on appeal, with the stipulation that on request a librarian unblock content for an adult. Of course, this is still a major fuck you to kids. It\u0026rsquo;s more or less normalized school web filters that are far to overzealous, as anybody that went to high school since the 2010\u0026rsquo;s can tell you. Hell, my public school even had sites blocked for \u0026lsquo;Alternative Beliefs\u0026rsquo;.\nLook, I\u0026rsquo;m not against protecting kids online, no 8 year old should be exposed to 2 girls and a cup. I know for a fact that some kids get fucked up seeing this shit to early. My mom\u0026rsquo;s a family law attorney, and while obviously case specifics are kept quiet, general ideas like \u0026lsquo;saw a kid got addicted to porn because the dad showed it to him\u0026rsquo; are things I\u0026rsquo;ve heard. It\u0026rsquo;s awful. I get it. But you can\u0026rsquo;t stop a shitty parent with legislation no matter how hard you try.\nAlright, here\u0026rsquo;s my rant: Kids need to be able to look things up and be trusted. I know it\u0026rsquo;s rough, nobody want\u0026rsquo;s a 12 year old looking up porn, but maybe the parents should actually have that talk and explain that stuff, answering any and all questions, rather than making the kid have to look it up in the first place. Sex education (in the US at least) is largely abstinence only and primarily serves to just make teens feel like shit about their bodies and choices. But, even beyond that, kids in general need to be able to fuck up gracefully. I get it, the internet always remembers, so we don\u0026rsquo;t want them exchanging nudes or writing about some illegal thing they did. Sure. But on the other hand cutting them off from \u0026lsquo;real\u0026rsquo; social media create a divide that tells them they can\u0026rsquo;t even be trusted to make the most basic of responsible decisions, which destroys self confidence and independence. It keeps kids from looking into alternative religions and values, it keeps kids from having access to resources to cope with potential abuse they may be going though. The only reality in which this shit makes any sense is when parents understand to help them bypass it when ready, those parents exclusively have their kids best interests in mind, and those interests aren\u0026rsquo;t in any way clouded by personal values instead of what is actually best for the kid.Kids should be given full access and punished (with adequate calm explanation of why it was wrong) for accessing things they\u0026rsquo;ve been told not to, not be restricted form accessing those things in the first place. This still has privacy problems (re: kid trying to lookup information about abusive parents) but it\u0026rsquo;s a start.  This is only made extra stupid when you consider that the only possible filter that will work to completely eliminate the \u0026lsquo;bad\u0026rsquo; sources is a allow-sites list, as otherwise it will be a game of endless wack-a-mole, yet this allowed sites list could never come close to encompassing the wider network of amazing information from smaller sites (like this one) thus depriving kids of resources.TLDR: Parents need to be parents, not blindly trust content filters. GDPR (They tried) #  Note, unlike the rest of the items in this list, the GDPR is NOT legislation from the United States, instead it\u0026rsquo;s applicable to all EU residents US websites when they don\u0026#39;t want to comply to the GDPR:\n\u0026quot;Sorry, we want to track you, but because of EU\u0026#39;s GDPR, we can\u0026#39;t, so f* off, we won\u0026#39;t show you our website\u0026#39;s content.\u0026quot; pic.twitter.com/70LuYcYotH\n\u0026mdash; Samantaz (@SamantazFox) December 20, 2020  EARN IT (Breaking things more) #  All About Section 230, The EARN IT Act and What They Mean for Free Speech and Privacy\nPatriot Act \u0026amp; FISA (Watching you) #  CFAA (Hack The Planet?) #  Net Neutrality (and the buying of the FCC) #  HIPAA (attempting to unfuck healthcare a wee bit) #  https://www.mnot.net/blog/2020/08/28/for_the_users RFC8890\nEARN IT #  https://medium.com/tech-thoughts-by-thegreatonion/how-the-earn-it-bill-undermines-americans-rights-online-8894d17cc427\nProtecting general computation #  Encryption and illegal numbers #   https://en.wikipedia.org/wiki/Illegal_number\nHDCP master key release (Wikipedia)  [TODO, + background on what HDCP is]\nhttp://www.catb.org/~esr/hdcp-master.txt\nhttp://libraryofbabel.info\nhttps://www.wikiwand.com/en/Texas_Instruments_signing_key_controversy\nhttps://science.slashdot.org/story/20/05/25/0136238/texas-instruments-makes-it-harder-to-run-programs-on-its-calculators\nDo you own your hardware? software? #  Format shifting #  Data and Privacy #     COMMENTS on \u0026ldquo;Facebook criticizes Apple‚Äôs iOS privacy changes with full-page newspaper ads\u0026rdquo; on Hacker News\nTerms of Service and EULAs #  Terms of Service Didn\u0026rsquo;t Read\nStalkerware #  Creeping As A Service\nAI #  Sufficently Advaced Technology and Justice (Hackaday, Elliot Williams)\nGoogle Amp #  Google AMP Can go to Hell (Polemic Digital)\nSocial Media #  Facebook deliberately made people sad. This ought to be the final straw (The Guardian) (2014)\nCensorship #  Parler V Mastadon V Twitter\nFederation #  Fediverse.party\n  "}),a.add({id:111,href:'/phil/phil-other/',title:"Phil Other",section:"PHIL",content:"Thank you #  If you\u0026rsquo;ve made it this far I just want to say thank you. We need more people to really consider how ethics, politics, and copyright shape the world around us with technology and art as we design it and proceed with it. DeepFakes, Automated driving, and even more mass online censorship are issues we\u0026rsquo;re only going to face more with time and it\u0026rsquo;s people like you who are going to help make sure we take the best path we can. So, from the bottom of my heart, thank you.\nPolitical or social commentary ramblings from hackers solarpunks and engineers #  The Great Asshole Fallacy\nAmeyama\u0026rsquo;s Values Update\nHow to Dropout\nA Sick Giant\nMetaphors We Believe By\nHope In Every Box (YouTube)\nAnd Then We\u0026rsquo;ll be okay (YouTube)\nThe Guy I Almost Was (Comic)\nA New Digital Manifesto\nSmall Technology Foundation\nFive Geek Social Fallacies\nA message from your university\u0026rsquo;s VP for magical thinking\nPosts I found interesting but haven\u0026rsquo;t found a place for yet: #   XKCD Free Speech https://xkcd.com/1357/ List of Trump Quotes https://www.reddit.com/r/politics/comments/ff54xc/trump_flatly_admits_hed_leave_americans_stranded/fjwpqub/ List of Rush Limbaugh Quotes https://www.reddit.com/r/news/comments/eyd0mb/rush_limbaugh_announces_he_has_lung_cancer/fggkmdg/ Harry Potter Removed Book https://www.independent.co.uk/news/world/americas/harry-potter-banned-school-library-nashville-tennessee-exorcist-a9087676.html?utm_source=reddit.com Why Parents shouldn\u0026rsquo;t be allowed to take their kids out of sex-ed https://www.reddit.com/r/onguardforthee/comments/cw3z9m/why_parents_shouldnt_be_allowed_to_take_their/ey85x0l/ Medical Bills https://www.reddit.com/r/bestof/comments/d4mvep/umerkaaba_is_told_to_threaten_to_file_for/ Digital Rights and Textbooks https://www.reddit.com/r/assholedesign/comments/fg5th7/my_200_textbook_wont_let_me_copy_paste_more_then/ Censorship of history https://www.commondreams.org/news/2020/01/18/government-cant-airbrush-history-national-archives-denounced-blurring-out-anti-trump TikTok https://www.technowize.com/a-look-back-at-tiktok-controversies-and-biggest-foul-ups/ End Software Patents http://endsoftpatents.org https://www.collaborativefund.com/blog/five-lessons-from-history/  "}),a.add({id:112,href:'/phil/phil-misc/',title:"Phil, Misc",section:"PHIL",content:"Animal Rights (Industrial Scale Slaughter) #  Organ donation #  Tech can\u0026rsquo;t solve all your problems #  Human problems need human solutions\nGuns #                  "}),a.add({id:113,href:'/phil/religion/',title:"Religion",section:"PHIL",content:"Religion #  [TODO] The engineering community is strangely divided, the \u0026lsquo;old guard\u0026rsquo; is actually relatively conservative and professional, but as time has moved forward it\u0026rsquo;s quite the opposite. Unsurprisingly, this correlates with religion as well. The main way this plays into politics is a general hard stance for the separation of church and state. This is in part due to a past of religiously motivated legislation negatively impacting copyright law, but also just generally an understood ideal that is beneficial to democracy. Furthermore, it would probably be worth your time to look into basics of most world religions, as engineering is increasingly a global field where you will have no choice but to work with people from diverse backgrounds across the globe.\n[TODO] Taxing it\nxkcd #505 "}),a.add({id:114,href:'/music/sequencing-and-midi/',title:"Sequencing and MIDI",section:"MUSIC",content:"Sequencing \u0026amp; Midi #  This chapter only goes over the basics of MIDI. Because MIDI is so important to music production I\u0026rsquo;ll dive much deeper into the details of MIDI in Chapter 6¬Ω - MIDI in Detail Sequencing #  The definition of a sequence is pretty obvious, but don\u0026rsquo;t be misled by the name- a \u0026ldquo;sequence\u0026rdquo; is not always just a list of notes to be played one after the other. Sometimes there\u0026rsquo;s overlap, gaps (rests), bends from one note to another (legato) and almost always information about how hard a note is pressed and how long it should be held for are saved. Probably the most common way of entering a sequence is using a piano roll\nPiano Rolls #  Piano rolls get their name from player pianos, as they had actual rolls of paper with holes cut in them that represented the notes to be played. The gaps allowed for little pins of metal to push though and make contact, completing a circuit and driving electronics to hit the note, making it play on a real piano.\nClearly, we don\u0026rsquo;t want to be taking a hole punch to paper to make our music- we want to use a computer! But, despite how much everything has changed\u0026hellip;\n  Image by Draconichiaro, CC BY-SA 4.0, From¬†Wikipedia\n  The idea is still pretty much the same:\nTimeline #  [TODO]\nBreaking The Loop (Patches.zone)\nrandom, sample/hold, probability, piano rolls, trackers, AI based, euclidian, trigger/gate/len, humanization\nCreating Melodies [Music Guides from Ableton]\nMelody Guide [edmprod.com]\nWays to turn tiny ideas into bigger tracks (YouTube, Andrew Huang)\nSong structure ABAB, ABBA, ABAC, etc.\nbpm changes, key changes, hooks, drops, \u0026lsquo;flavor\u0026rsquo; with added samples\nMIDI effects #  Arp, velocity, pitch bend, mod, sustain, generative, legatto\nMultitracking #  Multitracking Synthesizers for Fun and Profit (YouTube, RedMeansRecording)\n"}),a.add({id:115,href:'/phil/sex/',title:"Sex",section:"PHIL",content:"Sex #  In an ideal world human kind would be driven forward by more than the initiate desire to reproduce and bone. But, we don\u0026rsquo;t live in an ideal world and people like to have fun and feel good. (consensual) Sex is fun and feels good- so it should not be looked down on. Flirting, hooking up, being horny: They\u0026rsquo;re all natural and good. Unfortunately, today it seems Everyone is Beautiful and No One is Horny \nConsent #  Look, I don\u0026rsquo;t think you\u0026rsquo;re an idiot. I assume you know \u0026ldquo;don\u0026rsquo;t rŒ±pe people\u0026rdquo;. I also assume you\u0026rsquo;ve had the normal no-is-no, not-a-yes-is-still-a-no and probably already seen Tea and Consent.\nI also understand it\u0026rsquo;s not always that simplistic. Some people are into consensual-non-consent. Sometimes, the non-consented act may be unintentional.\nMaybe you couldn\u0026rsquo;t tell you were getting close. Maybe it was dark and something slipped. Maybe you didn\u0026rsquo;t realize the other person felt pressured.\nConsent, above all else, is about communication. If you\u0026rsquo;re worried the other person is feeling uncomfortable- ask!\nIf you\u0026rsquo;re worried the other person can\u0026rsquo;t consent at the moment- don\u0026rsquo;t be a douche.\nBy far I think the biggest thing not everyone realizes, especially teenagers in places with abstinence only sex ed, is that your body\u0026rsquo;s response isn\u0026rsquo;t consent. Getting wet or hard is. not. consent.\nhere\u0026rsquo;s a TED talk on that point if you need it. [TODO] Coersion by econominc and social pressure\nSex Work and Porn #   Visa and Mastercard are Trying to Dictate What You Can Watch on Pornhub (EFF)\nThe Internet is for Porn - post is mostly about OnlyFans (The Margins)\nPorn Addiction? #  Pro-Choice Vs Pro-Life #    I am so tired of this abortion debate and hearing people treat it like a political issue instead of a deeply-personal, medical decision that men and women have to decide under horrible, tragic, heart-breaking circumstances. My husband and my son have long assumed that I\u0026rsquo;m pro-choice. I\u0026rsquo;ve never corrected them, but I\u0026rsquo;m not exactly. My mother, co-workers and some of my friends have assumed I\u0026rsquo;m pro-life. I\u0026rsquo;m actually not pro-life either. I am simply pro-reasonable.\nI\u0026rsquo;m a child custody attorney, who is now also seeing the tragedy of the Juvenile Court system on a regular basis too. I\u0026rsquo;m seeing what happens to the kids the parents don\u0026rsquo;t want, and yes, there are many who are not wanted by either parent. I represent men and women who are forced to pay child support and do not get to see their children, or rarely see their children. I was also a young girl faced with an unexpected pregnancy more then once, and carrying a baby that I couldn\u0026rsquo;t financially support.\nSo, here are a few of the societal/legal facts leading to abortion, and preventing all these babies from going to adoptive families: All methods of birth control have failure rates. Teenagers, and especially those raised in conservative households, do not have easy access to birth control. Expecting teenagers not to have sex is not practical. The State can make either or both parents pay child support even if they don\u0026rsquo;t have custody or parenting time with their children. Parenting time/custody are not legally connected to a parent\u0026rsquo;s obligation to pay child support. You can\u0026rsquo;t just agree to give up your parental rights to get out of paying child support. The only way to do that is with an adoption or step-parent adoption. Nebraska\u0026rsquo;s Safehaven law only protects the parents from criminal prosecution for neglect and abandonment, not from paying child support. Both parents have to agree to an adoption. There is a birth father registry list in Nebraska that allows fathers to register to claim a baby born to the woman whose name he provides (and if he does this a woman giving up her baby for adoption could find herself paying him child support). State aid isn\u0026rsquo;t as easy to come by as most people think and most of us would not want to live on it. Rape, incest, and pregnancy in girls under fifteen still happen. Babies die in utero, and sometimes must be removed from the womb. Sometimes a mother cannot carry a baby to term without endangering her life.\nIf you really, truly want to reduce the abortion rates, then here\u0026rsquo;s what it\u0026rsquo;s going to take: First, end the abstinence-only sex ed in schools. Give teenagers real facts. Make birth control free and readily available to EVERYONE. Allow both parents (and either parent) to give up their legal rights AND avoid paying child support (but make it a final decision). If only one parent gives up the rights, provide adequate State support to make up for the loss of parental support from the other. (This would mean that one parent would have less incentive to try to force the other parent to have an abortion.) If both parents give up their rights, make the adoption process easier and less expensive. If parents choose to keep the baby, instead of having an abortion (which they otherwise would have had because they couldn\u0026rsquo;t afford the baby), help them financially and provide them with daycare so they can work. Allow regular medical doctors to perform abortions without stigma for those pregnant women who have been victims of rape or incest, who are under fifteen, who are at risk of dying if they carry the baby to term, or who have already lost the baby in utero. Keep the protesters away from the women and the doctors.\nUnless we\u0026rsquo;re willing to do this as a society, and put our money where our mouths are, then we don\u0026rsquo;t get to decide what men and women facing this very personal, very tragic decision choose. If we do want to stop abortion, then put the ugly aborted-fetus posters down and go financially support a teenage mother, go lobby to provide birth control to teenagers, or go ask your own teenage son or daughter if he or she needs birth control. Do something useful, and be reasonable.\n Frankly, I think that sums it up pretty well, and truth be told I don\u0026rsquo;t think I really have a right to say more than that.\nBirth Control #  [TODO] womens right to get a historectomy\nHaving Kids #  [TODO] birth rates\nGender, LGBT, \u0026amp; the term Queer #   The \u0026lsquo;Hacking\u0026rsquo; community in particular is usually very clear on sexual liberation/freedoms and given that technically minded people tend to have statistically significantly higher amounts of LGBTQIA+ people, it\u0026rsquo;s relevant to mention. I don\u0026rsquo;t want to go in depth or be your source of sex education, but I do think skipping over this would be doing the community some injustice. As such I\u0026rsquo;d also like to link to some videos providing sexual education, The truth about unwanted arousal | Emily Nagoski , YouTube\n Img credit, Kokofox @ https://kokoscript.com/\n TypeError: no implicit conversion of Gender into Boolean Source What do all the letters in LGBTQIA+ mean? #  TODO + flags\n Other Resources #  \nohjoysextoy.com As a Furry myself I\u0026rsquo;m obligated to reccomend https://www.ohjoysextoy.com/furry/\nby LadySnakeBite on FurAffinity I also reccomend: A Handy Guide To Internal Shots (VERY NSFW) by her, which is a rant on art feautring cervix penetration.\n"}),a.add({id:116,href:'/music/sound-sources/',title:"Sound Sources",section:"MUSIC",content:"Methods of making noise #  Samples #   a snippet of a .wav file open in audacity\n A sample is exactly as the name implies- a \u0026lsquo;sample\u0026rsquo; of audio. Sample is a pretty broad term though, so usually some more terms are applied to help categorize them. The easiest to explain is what is usually meant by sample: a small audio file that contains one sound, like one drum hit or one piano key press. These can either be samples made or collected for the sole purpose of use in later music (like hitting record, playing one drum hit, then stopping, to create a small drum sample) or a sample lifted (with often dubious legality) from another recording. It\u0026rsquo;s worth noting that fair use is really not something you can rely on here, but it\u0026rsquo;s also pretty common. #notlegaladvice\nThe next kind of sample worth looking at is a loop. These are longer and are usually, well, loopable. If you play them on repeat they typically sound continuous. Often these will be of drums or guitar. The term \u0026lsquo;loop\u0026rsquo; is often used broadly for audio snippets of this length though, so not all loops loop. Usually when using a loop it\u0026rsquo;s best to do some mangling, swapping some beats or putting on destructive effects to transform it in some way. This prevents your audio from just sounding like layered tracks from another artist mashed together and is a good way to put creativity into what you make.\nAnother term you might hear are stems. Stems are just separate recordings of each part of a song - say the vocals as one audio file and the drums as another, these would make up the stems.\nSamples are also, sort of ironically, made of samples. But these words mean two different things in that sentence. The sample of sound is made up digitally of a bunch of different points in a wave, usually captured ~44 thousand times a second- whatever the sampling rate is (commonly 44.1, 48, or 96 (1)). This is what gives us the image above, where the originally pretty smooth looking wave, when zoomed in, we can see is made of these discrete points.\nThis is particularly relevant to making music for multiple reasons:\n When change the speed/pitch by a non integer value, we have to \u0026lsquo;interpolate\u0026rsquo; extra points into this. When we slow down or make a sample lower pitch there\u0026rsquo;s only so much data to use, at really low pitches the wave will start to sound sort of low-fi When chopping a sample to start playback at any point, we want to chop at a 0-crossing to avoid a sharp transition (which equates to high pitch sound)  The Nyquist-Shannon Sampling Therom (Wikipedia) , put very basically, just says your sampling rate needs to be twice as high as the highest frequency in your source to be reproduced exactly. Because human hearing ranges roughly from 20 to 20khz, sampling at 40khz or above should be sufficient. Unfortunately, there's more too it than that, especially as generating waves in a virtual synth can benefit in sound quality for various reason from 'oversampling' - running above 44.1 or 48khz. Unfortunately, the higher the sampling rate the more work the computer has to do.     Zoomed in view of the snipped, showing the individual points in the sample\n    Bitwig Studio\u0026rsquo;s Sampler. Here pitch tracking is enabled, making it so the sample can be played sped up or slowed down to pitch chromatically along the keyboard. Bitwig\u0026rsquo;s Sampler is pretty similar to many other samplers in other DAWs like Ableton Live or modules like Simpliciter In VCV rack\n Here, we\u0026rsquo;re looking at the sampler device in in Bitwig Studio, though most of this should be similar in other software. Starting with the obvious, the sample wave form in the middle. Here I have loaded a sample which has multiple drum sound in it, but I\u0026rsquo;ve zoomed in on one sample and placed these yellow flags to denote the start an end points. Bitwig\u0026rsquo;s sampler, like many others, will try to snap these points to aforementioned zero crossings. You\u0026rsquo;ll also see next to the file name that the keyboard icon is blue and says 100% and next to that the root is set to C3. This means that if I play the C3 key on my keyboard it will play the sample as is, but if I play a different key it will slow playback down or speed playback up to match the pitch to the key I\u0026rsquo;m playing. The root being C3 is because, say I hit and recorded the A4 key on my piano- it\u0026rsquo;s nice to be able to correct for the pitch of the sample in the keyboard tracking.\nStill in the same section of the window but below the first yellow flag that denotes the start, you\u0026rsquo;ll see two smaller yellow flag icons that have a time specified. These are the times in the sample where the start and end flags are placed. Left of that you\u0026rsquo;ll also see an arrow with an R over it, that\u0026rsquo;s the button to tell it you want to play the sample in reverse. To the right, there\u0026rsquo;s some loop options. Right now it\u0026rsquo;s in \u0026lsquo;Single Shot\u0026rsquo; mode. If the button to trigger the sample is held for longer than the length of the sample, it will still only play once. The other two options are a forward repeat, the equivilent of leaving a song on loop, and a \u0026lsquo;ping-pong\u0026rsquo; loop, where the slice will play forwards then-backwards then forwards then \u0026hellip;. as long as the gate is held.\nI also want to mention the freeze ability in this sampler- the snowflake below the end-time indicator. When enabled sample playback has to be done manually - and new controls to do so become available. Think of it like a record that you have to spin yourself. This can lead to some really cool sounds.\nFinally, you\u0026rsquo;ll see below that snowflake is a RAM indicator. When lit, the sample is stored in RAM, not on disk. In general, this is probably what you want. It might be helpful to do otherwise though if you\u0026rsquo;re either low on memory or you\u0026rsquo;re trying to load some absolutely massive samples.\n[TODO] Multisamples\n \u0026lsquo;Simpliciter\u0026rsquo; module in VCV rack, a sampler with transient detection, Sound On Sound (SOS) looping, and variable speed (pitch) playback\n Unlike the bitwig sampler, this sampler, \u0026lsquo;Simpliciter\u0026rsquo; in VCV Rack can take in live input to layer sounds or record the inital sample. In general you should see a lot of the same controls I talked about above exposed in this UI. There are some extra neat ones here though, including the ability to detect peaks as is enabled in the lower left in this screenshot. With this and a longer sample file with multiple drums you can just select the drum sample you want on each play-trigger.\nThis video from Omri Cohen goes pretty in depth:\n Field Recordings, Tape Loops, and other sampling goodness #  [TODO]\nhttps://soundslikenoise.org\n Basic Oscillators #  Generally there are a few kinds of oscillators you should know about, but first, what\u0026rsquo;s an oscillator?\nWell, very simply, it\u0026rsquo;s a thing that oscillates- moves in a repeating pattern. Generally there are three ways you\u0026rsquo;ll hear Oscillators refereed to as being VCO, DCO, or LFO. You may also see Oscillators in general refereed to with the abbreviation osc. Unfortunately, that can be confusing because OSC can also mean Open Sound Control, something I\u0026rsquo;ll get into in the Sequencing and MIDI chapter in a bit.\nA VCO is a Voltage Controlled Oscillator. Back in VCV you saw these being emulated where each volt of constant input applied made the oscillator oscillates at twice the speed, one octave higher. In real life, VCOs tend to be a bit unstable and have minor pitch drift. While this may sound like a negative, it\u0026rsquo;s generally seen as a feature, as stacked, slightly out of tune oscillators sound really good. In fact, VCV Rack\u0026rsquo;s basic VCO, \u0026lsquo;VCO-1\u0026rsquo;, emulates this behavior by default.\nA DCO is a Digitally Controlled Oscillator. These (usually) exhibit no pitch drift and are far easier to tune.\nNote that some hardware may go from a digital input to a VCO internally, or take a voltage pitch signal as input but just sample it to use a DCO internally.\nan LFO is a Low Frequency Oscillator, they can still be either digital or analog (DCO or VCO), but they typically have a max frequency of around a hundred hertz and are meant to be used to control other things, not make sound to hear directly.\nSome oscillators, weather digital or analog, cover enough range to be either a \u0026lsquo;normal\u0026rsquo; oscillator used for sounds you\u0026rsquo;re intended to hear or an LFO, so there\u0026rsquo;s not always a clear distinction.\nAnalog? Digital?\nAvoiding the complex explanation of what actually makes an oscilator analog or digital, here\u0026rsquo;s what you need to know:\nno, really it\u0026rsquo;s a matter of a few things:\n Analog systems have some natural pitch drift and non-linearity (distortion), this makes them sound \u0026lsquo;warmer\u0026rsquo; Most analog designs can handle audio-rate modulation by default, you\u0026rsquo;re not fighting a limited sample rate If you record at very high bit depth / rate or direct to analog media (tape), it\u0026rsquo;s relevent to not have the computational overhead on the sources, so analog oscilators help with that. Analog is low latency: a DSP based source/effect will incurr latency due to the neccitity of a sample buffer. technically you can somewhat avoid this with dedicated DSP/FGPA hardware, but even then there\u0026rsquo;s some.  This also means analog systems are great for feedback patching   Digital (DSP) oscilators can get complexity and polyphony for cheaper, so they\u0026rsquo;re good for really complex timbres, for example with wavetables, which I\u0026rsquo;ll cover in a bit  So, which is better? Neither! If you want to go all analog or all digital, that\u0026rsquo;s cool, but both have their strengths and weaknesses.\n Of note, you\u0026rsquo;ll often hear people call non voltage controlled oscillators VCO\u0026rsquo;s anyway. ‚ïÆ(‚îÄ‚ñΩ‚îÄ)‚ï≠\nOscillators usually have very simple wave shapes as outputs. Typically, you\u0026rsquo;ll see Sine ‚àø , Triangle  å , Square ‚éç , and Saw waves as outputs. You may see other, more exotic wave forms though.\nOften, the square wave output has PWM or \u0026lsquo;Pulse Width Modulation\u0026rsquo; control:\nVarying the pulse width over time sounds really good, to give it a shot try setting this up in VCV:\nHere I\u0026rsquo;ve set the LFO to be bi-polar with the switch on the left, and VCO-1\u0026rsquo;s PWM CV knob has been turned up to make the input do something.  Some oscillators will also have Sync, either Hard or Soft. Sync, in general, makes the waveform reset once it gets an input from another oscillator. This means you\u0026rsquo;ll need two oscillators to do sync.\n Oscillator sync is a feature in some synthesizers with two or more VCOs, DCOs, or \u0026ldquo;virtual\u0026rdquo; oscillators. As one oscillator finishes a cycle, it resets the period of another oscillator, forcing the latter to have the same base frequency.\n[For Hard Sync] If the [following oscillator] is tuned to a lower frequency than the [controlling oscillator] it will be forced to repeat before it completes an entire cycle, and if it is tuned to a higher frequency it will be forced to repeat partway through a second or third cycle.\n[\u0026hellip;] There are several other kinds of sync which may also be called Soft Sync.\nReversing Sync\nThis form of oscillator sync is less common. This form is very similar to Hard Sync, with one small difference. In Reversing Soft Sync, rather than resetting to zero, the wave is inverted; that is, its direction is reversed. Reversing Soft Sync is more associated with analog triangle core oscillators than analog sawtooth core oscillators.\nThreshold or Weak Sync\nSeveral kinds of Soft Sync use comparison thresholds:\n Hard Sync which is disabled when the frequency or amplitude of the slave crosses a user-defined threshold. Hard Sync which is disabled when the frequency of the [following oscillator] extends too high above or too far below the frequency of the [leading oscillator]. Hard Sync which is disabled when the frequency of the [following oscillator] is lower than the frequency of the [leading oscillator].  Soft Sync may accurately refer to any of these, depending on the synthesizer or manufacturer in question.\nPhase Advance \u0026lsquo;Sync\u0026rsquo;\nThe phase of the slave is advanced by some amount when the [leading] oscillator level crosses some threshold. Used for audio synthesis, this may give an audible effect similar to Soft Sync.\nReset Inhibit Sync\nWhen the [leading] oscillator crosses some threshold, the normal reset of the [following oscillator] is disabled: it will stick at its final level, positive or negative. When the [leader] crosses back over some threshold, the [following oscillator] is reset.\nOverlap Sync\nIn this method, the current wave completes but a new waveform is generated at the sync pulse. The tail of the old wave and the new wave are output summed if they overlap.\n https://en.wikipedia.org/wiki/Oscillator_sync I\u0026rsquo;d also like to briefly mention oscillator cores. Especially in VCOs, knowing what the \u0026lsquo;core\u0026rsquo; of an oscillator is can make a difference. The core is simply the waveform from which the other waveform are derived. Generally, there are three kinds you\u0026rsquo;ll see (though others are possible): Triangle, Saw, and Trapezoid core. To get an idea of what a core is, lets look at the saw.\nYou can think of making a saw wave as just progressively counting higher with time. So, at t=0, we start at 0, at t=1 we go to 1, etc. until at, let\u0026rsquo;s say t=10, we reset back to 0, and count back up to 10. If we assume this process is continuous, that is we could look at any decimal, like at t=1.12 the wave is at 1.12, we\u0026rsquo;ve generated a sawtooth wave. This is our core. Now, we can say whenever that \u0026lsquo;core\u0026rsquo; wave is less than 5, output 0 on the square output. If it\u0026rsquo;s greater than 5, output 10. If the blue wave is that core oscilator, the pink wave is the result (ignore the awkward spikes at the transition points)\nThe core used will often change the features of the oscillator. Generally, saw core oscillators are the cheapest and most common but also the least capable. Triangle and trapezoid cores often offer extra features, such as outputs other than the common sine, tri, saw, square.\nFinally, I\u0026rsquo;d like to bring up harmonics.\nThe really dumb version: If the wave has quick transitions (cliffs, ridges, etc) it\u0026rsquo;s going to be more harmonically rich, and therefore have more \u0026lsquo;sonic content\u0026rsquo; above the base frequency. For example, say you play a 440hz sine wave. It will have no harmonics, it will be a pure, 440hz tone. But, if you play a 440hz square wave? That\u0026rsquo;ll have a ton of harmonics, actually, by definition, it will have odd harmonics. If you care about the mathy stuff you can read An Interactive Introduction to Fourier Transforms by Jez Swanson. But, the relevant bit for for musical stuff is that these harmonics, the phase relationship between them, and how they change over time is what makes a sound sound like that sound. It\u0026rsquo;s what makes a piano sound like a piano, etc.\nAnyway, knowing what these harmonics add to a sound make a big difference. Often with synths, you\u0026rsquo;ll find you have separate control or outputs of the even and odd harmonics. This is sort of what you expect.\nFor example, say we have a 100hz \u0026lsquo;base\u0026rsquo; sound. Then the even harmonics would be 200, 400, 600, 800, etc. Odd harmonics will be at 300, 500, 700, etc. Note that humans can only hear up to 20,000 hertz anyway, so, technically it\u0026rsquo;s impossible for you to hear a true square wave (Well, technically a true square wave would have infinite energy, so it\u0026rsquo;s impossible for more than one reason).\nI\u0026rsquo;ll spare you going any deeper into terminology like the difference between harmonics and overtones, but, and here\u0026rsquo;s the important parts:\n Even harmonics have the perfect octaves and 5th, while odd harmonics have 3rds- which turns into dominant seventh chords If you add in a lower harmonic (say you have a sub-octave pedal on your guitar) your brain will (usually) perceive the note as being the lowest frequency in that harmonic series available Distortion is literally just adding harmonics to the sound, clipping a sine wave (a form of distortion) is a really easy way to see this   Additive and Subtractive Synthesis #   [TODO] making a basic subtractive synth voice in VCV\n Wavetables #   Note, that not all wavetable synths have the linear FM (discussed in the next section), Phase mod / distortion, and wavefolding that pigments has, though many do.\nI really recommend using Blamsoft\u0026rsquo;s XFX-Wave for VCV rack to try out Wavetable synthesis. Also in VCV, Tiny Tricks Wave is a neat way to experiment with recording your own tables- just hook up three signals and press \u0026lsquo;capture\u0026rsquo;.\nYou may also hear about XFer Serum, it\u0026rsquo;s the sort of EDM/Dubstep standard synth, and is a powerhouse for wavetables. It\u0026rsquo;s incredibly popular, so there\u0026rsquo;s a ton of great wavetable packs for it too (I particularly like the Coda pack). Because Serum is so popular, it\u0026rsquo;s wavetable format is supported by most other wavetable synths as well, so if you\u0026rsquo;re jonesn' for more wavetables, looking up free packs for serum can be a good place to start.\nSerum is pretty expensive though, so you may want to check out VITAL (which TBH I think is a bit better anyway)\nThere are of course, many, many other Wavetable synths out there, but I can\u0026rsquo;t mention all of them. If you do want to check out more though, I recommend looking into Phase Plant (VST), Argon8 (Standalone Synth), Piston Honda MK‚Ö¢ (Eurorack), Plaits \u0026amp; Braids (Eurorack or VCV), Cursus Iteritas (Eurorack or Reason), and the Hydrasynth (Desktop).\nThe Spherical Wavetable Navigator from 4MS is too cool to not link a video too as well:\n FM Synthesis #   Source (Likely originally from the Yahmaha DX7 Manual)\n Frequency Modulation or FM, is just the simply when you let the output of one oscillator modulate the frequency of another oscillator. Usually this is done in simple ratios and, ideals, uses linear, through zero modulation.\nFirst, Let\u0026rsquo;s start with linear vs exponential FM. It\u0026rsquo;s worth noting that most pitch tracking is exponential since our music system itself is inherently exponential (each octave is a doubling, that is the frequency between C5 and C4 is twice the frequency between C3 and C4). This causes a problem though, if we modulate with exponential FM, say with a sine wave that is +/- 1V (2Vpp) and we start with an A4 at 440hz, then we\u0026rsquo;ll swing up to 880hz and down to 220hz. Fine right? Not so much. If this modulation is meant to simply give us a more harmonically interesting A as we mix in different octaves that won\u0026rsquo;t be the effect, as now we\u0026rsquo;re (to oversimplify) at 880hz half the time and 220hz half the time, and if we average those,   \\(\\frac{880\u0026#43;220}{2}\\)  , then we don\u0026rsquo;t still get the original A 440hz but rather we get 550Hz, so, we\u0026rsquo;ve detuned. Linear FM won\u0026rsquo;t be able to follow the V/Oct standard (though some may use the Hz/V standard) but will keep you in tune as you modulate. This, however, begins to pose a more interesting problem. Imagine you want to modulate a 100hz signal by +/- 200hz. Clearly, that would mean going as high as 300hz, but what happens when we get past the first half of that negative signal and hit 0hz? Well, this is where having a Though Zero FM (TZFM) capability comes in handy, as this issue is solved sonically by actually inverting the phase of the signal when crossing the 0Hz point. While this may seem an odd solution, it does produce sounds that line up with what our ears expect.\nExponential FM and V/Oct, assuming the same scaling, are the same thing though so sometimes you can actually view it more as a second V/Oct input. For example, you could use the Exp FM input to specify the note, and then the normal V/Oct input to change the octave. Of note however, this may not always work as the Exp FM input may be AC coupled, meaning that DC values, like note data, will not be able to get through and instead you\u0026rsquo;ll just hear a \u0026ldquo;ping\u0026rdquo; as the pitch is modulated at the cutoff of the AC coupling filter, in these cases the Exp FM input will have a minimum frequency that the input signal can oscillate at to perform properly.\nWhen talking about Linear FM, I mentioned that simple ratios are best. This isn\u0026rsquo;t entirely true, but they will produce the least complicated harmonics, and while complicated harmonics are awesome it\u0026rsquo;s also really easy to make something that sounds awful.\nBecasue FM synthesis is a pretty complicated topic to wrap your head around, I recommend giving these three videos a watch:\n   Granular Synthesis #  There are many, many granular synths and effects, but, I\u0026rsquo;d like to start with a video review from Loopop of the Tasty Chips GR-1, as I think the hardware does a good job of showing what\u0026rsquo;s going on and Loopop does a great job explaining as well:\n This video from Red Means Recording goes over a ton of VSTS that do this well.\n Finally, I want to mention Arbhar, Morphagene, and Clouds- but rather than try to poorly explain the three I\u0026rsquo;m going to link videos again. Note that \u0026lsquo;Simpliciter\u0026rsquo;, the sampler I mentioned earlier is pretty similar to Morphagene and that Clouds is available in VCV rack.\n  "}),a.add({id:117,href:'/music/theory/',title:"Theory",section:"MUSIC",content:"First, this: #   Theory #  I\u0026rsquo;m going to be honest. I can\u0026rsquo;t read music and I don\u0026rsquo;t know scales. Why, then, would I in any way think I\u0026rsquo;m qualified to write anything about music? Well, let me stop you right there, I\u0026rsquo;m not. I make music for fun. However, I like to think that people enjoy my music and I enjoy listening to it myself as I make it, and though my experience I\u0026rsquo;ve picked up a little here and there to make sure things don\u0026rsquo;t sound awful. Furthermore, my background is primarily technically and there\u0026rsquo;s actually an insane amount of overlap with the incredibly technical and music. Fundamentally music is just doing math with frequencies after all.\nOur ears are weird. They\u0026rsquo;re incredibly good at math. We hear things logarithmically, that\u0026rsquo;s why 10watts of speaker output power is only about twice as loud as 1watt and we can tell if two notes are even slightly off a perfect ratio even if we\u0026rsquo;re not thinking about it. (If you hear one tone at 220Hz and another at 441Hz, only 1hz off of correct, you\u0026rsquo;ll probably be able to tell)\nOut ears also like integer divisions of musical ratios- I\u0026rsquo;m sure you\u0026rsquo;ve heard the term \u0026lsquo;perfect fifth\u0026rsquo;. And though our lives our ears get accustomed to hearing and feeling things associated with chord progressions. Even someone whose never written music or tried to learn anything about music theory can pick up on how a chord with more complex ratios creates tension that begs to be resolved to something simper (Think the Duuun-uh of the Jaw\u0026rsquo;s theme).\nOn the other hand perfection is boring, our ears and minds beg for stimulation, for surprise, for shock. Drums make complex sounds, that, while tuned, aren\u0026rsquo;t playing a constant note and we want our music to have sufficient progression, not just repeat the same sequence endlessly. A gnarly drop in some Dubstep or the cannon fire in the 1812 Overture both serve functionally a similar purpose.\nIn the chromatic scale there are many other, more \u0026lsquo;refined\u0026rsquo; scales like Minor, Major, Pentatonic, etc. These scales may be transposed to be centered around any note (or any frequency, since notes are just agreed upon frequencies and the ratios between them)\nAnd honestly? That\u0026rsquo;s about all you need to know. Basically music is math and math makes music.\nOh, and the circle of fifths is a thing [TODO]\n[TODO] Just V equal Temperament here is confusing\n[TODO] Music Theory and White Supremacy (YouTube, Adam Neely)\n[TODO] Waitbutwhy.com \u0026ndash; Sound\n[TODO] Nanotone Synth\nCircle of 5ths Explained\nhttp://huygens-fokker.org/scala/downloads.html#scales\nSong Structure #  Repition #  ABAB ABBA ABAC \u0026hellip; #  Call and Response #  Solos #  Contrast #  Heavy drops v dainty sections\nOctave changes #  making instruments swap roles\nKey Changes #  Further Reading #  An Introduction to Math Rock (YouTube, Alfo Media)\nThe Largest Chord - sUpEr UlTrA hYpEr MeGa MeTa LyDiAn (YouTube, Leon Waves)\n(*My) Procedurally Generated Music is Awful (Cube Drone)\nLilyPond: programming beautiful musical scores (YouTube, 36C3)\n3/2 and 4/3 pic.twitter.com/k56BTwYUL8\n\u0026mdash; man fish (@mannfishh) March 4, 2021 "}),a.add({id:118,href:'/design/ui/',title:"UI",section:"DESIGN",content:"UI and UX #  Principals of UI, A Thread (zensaiyuki@mastodon.social)\nGallery of Fantasy UI design from Movies and TV shows\nResponsiveness #   Source\n Power Users #  User power, not power users: htop and its design philosophy\nTypography #  Practical Typography Textbook\nDatalegeya Font\nWebsite Design #  Learn CSS by Google Developers\nButalist Web Design, by David Copeland\nmotherfuckingwebsite.com, bettermotherfuckingwebsite.com, thebestmotherfuckingwebsite.website\nScrollbar Blindness (Sven Kadak\u0026rsquo;s Blog)\nGithub Dark Mode is too Dark. (Karen ying\u0026rsquo;s blog)\nFigma\nhttps://muzzleapp.com\nDark Patterns #  IF YOU PROGRAM A \u0026quot;NO\u0026quot; BUTTON TO SAY \u0026quot;MAYBE LATER\u0026quot; YOU HAVE FAILED AT BOTH INTERFACE DESIGN AND BASIC CONSENT\n\u0026mdash; Heather ‚¨¢ Flowers (@HTHRFLWRS) January 20, 2021  Logos #  Alright, nerds\nI filed a FOIA appeal and won the infamous NROL-39 surveillance satellite logo as a PDF.https://t.co/GypoZPnwsu\nThis ain\u0026#39;t a scanned powerpoint. This is a resizable vector. You know what you must do. Unleash the swag. pic.twitter.com/WZJXeBdHPi\n\u0026mdash; Ben Welsh (@palewire) October 8, 2019 "}),a.add({id:119,href:'/music/video/',title:"Video",section:"MUSIC",content:"Video \u0026amp; Streaming #  [TODO, basically the entire page]\nCameras #  If you\u0026rsquo;re like most people, the best camera you own is probably you\u0026rsquo;re phone camera.\nLighting #  I found hanging up some of those string light LED edison bulbs (like you\u0026rsquo;d see at a wedding) on the ceiling works well as an alternative to a softbox. It\u0026rsquo;s so many point lights that it adds up to a similar effect- albeit with the downside that you can\u0026rsquo;t move them around.  Recording #  Streaming #  If you\u0026rsquo;re following along with the rest of OpGuides and have joined me in using Arch Linux and you happen to be using an AMD GPU, you\u0026rsquo;ll need to tweak some settings in OBS\nSettings‚ÜíOutput‚ÜíStreaming‚Üíset \u0026lsquo;Encoder\u0026rsquo; to \u0026lsquo;FFMPEG VAAPI\u0026rsquo;, then to make that work and not just throw errors, you\u0026rsquo;ll need the libva and libva-mesa-driver. You\u0026rsquo;ll probably want Settings‚ÜíOutput‚ÜíRecording set to \u0026lsquo;Standard\u0026rsquo;, the encoder to be \u0026lsquo;use Stream Encoder\u0026rsquo; and keep the format as mkv.\nThese settings aren\u0026rsquo;t necessarily the best for quality, but they should prevent eating your CPU from being overloaded\n Visualization Software/Tools #     Name \u0026amp; Link Description Screenshot/Demo     music_visualizer (Github) Shader viewer / music visualizer for Windows and Linux Too many variations to easily show, look at the github repo.   Soundshader (Github) Uses fancy \u0026lsquo;AutoCorrelation\u0026rsquo; - info on the github page https://soundshader.github.io   Metagroove (Itch.io)     Signalizer VST Listed above in Free VSTs, but it\u0026rsquo;s so good I\u0026rsquo;m listing it here again. An amazing VST Oscilliscope, Vectorscope, and general analysis tool, looks very good too. Has full screen modes.     Note that most of the fancy music animations you see on YouTube are probably made in Adobe After Effects, with the exception of some that are done in programs like TouchDesigner or other node-based programming environments. You can read more about these in Design Chapter 6 - Generative Tools\nSome people also use hardware such as the Sleepy Circuits \u0026lsquo;Hypno\u0026rsquo; or Critter \u0026amp; Guitari \u0026lsquo;Eyesy\u0026rsquo; - though both of these platforms are really just running a Raspberry Pi (a lil' computer) under the hood.\nOn very rare occasion you may also see some outright analog video synthesis, but this is generally very, very expensive. Just search YouTube for \u0026lsquo;Analog Video Synthesizer\u0026rsquo;.\nI also recomend making your visuals in weirder ways. Here are some videos with visuals I really like:\n Max Cooper - Aleph 2 (Official Video by Martin Krzywinski)  Other people talking about their setups #   EposVox is a great YouTube channel for learning about streaming stuff\n"}),a.add({id:120,href:'/phil/voting/',title:"Voting",section:"PHIL",content:"Elections \u0026amp; Voting #  I\u0026rsquo;m a \u0026lsquo;murican, so this will be US centric, that said, the arguments here could likely be applied universally Issue 1: FPTP Voting Sucks #  lower standards of removal, ranked, transparency Budget voting\n  Issue 2: Voters are really, really stupid #  voting based on if they like the person, how he/she looks, single issue voting\nIssue 3: Two is the unfriendliest number #  Issue 4: Gerrymandering and Fraud and Astroturfing #     [TODO] Comment on Citizen\u0026rsquo;s United\nIssue 5: Turnout #  Issue 6: Disenfranchisement #  Statehood #  In 1959, fourteen years after the end of World War ‚Ö°, both Alaska and Hawaii become states. Today, Hawaii has a population of 1.4 million and Alaska under a million. Puerto Rico has more people living there than Hawaii and Alaska combined. Washington D.C. has a higher population than Wyoming (~700k in DC to ~600k in WY ). Yet, these people don\u0026rsquo;t get representation in Congress.\nWhen the soldiers we worship as minor gods were fighting World War ‚Ö°, they did so thinking of a 48-star flag. Now, as that generation is nearly burred we\u0026rsquo;ve convinced ourselves that 50 is some God-given number, ingrained into our country\u0026rsquo;s identity. It\u0026rsquo;s not.\nWhen I see our 50-stared flag, underneath the fabric and the dye, I see a country that has brutally conquered and slaughtered native people to claim the land for those stars. But I also see a country that has a past hardly different from any other at the time, a country that has and will continue to make mistakes, and a country where the core ideal of here people - even if it\u0026rsquo;s has been diluted, corrupted, and twisted - is one of Freedom. The USA is not a good country. Hell, we kind of suck. We have the largest prision population in the world, our education system forces teens into life long debt, our life expectancy is shit- probably in part because our healthcare is shit, and we waste enough money on military to make your head spin. But that\u0026rsquo;s below the surface.\nRight on the surface of the flag I see those 50 stars as representing our failure to hold to the concept of democracy: That every person should have a vote.\nWe need to add a few stars.\nThere is a good argument that Puerto Rico should be given independence, but I\u0026rsquo;m not sure that would actually be great for the people there now either.  And sure, you can make the argument that this would just be a quick grab for left-wing votes, but two things to consider here:\n Are you saying that people should be disenfranchised because they always have been? Both Trump and Baby Bush lost the popular vote, only getting in because of the electoral college, which massively favors small, republican states, to the point where a voter in Wyoming is worth almost 3 times more than a vote in California. If you like this system is it because it\u0026rsquo;s actually just, or because it gets Republicans elected?   Felony #   Online Voting #   Having just gone though the 2020 election, with what seem to be mass unfounded allegations of voter fraud, do you think electronic voting, potentially over the internet, should have been used?\nNo.\nWhat\u0026rsquo;s the failure mode for a hacked election? You can\u0026rsquo;t just roll back a political career advancement.\nThe threat model for elections is incompatible with the BYOB mental model of consumer electronics (which is what people imply when they talk about electronic voting).\nPaper ballots. You need an audit trail that technology cannot tamper with.\n Soatok Dreamseeker Interview "})})()